var searchIndex = JSON.parse('{\
"anstream":{"doc":"<strong>Auto-adapting <code>stdout</code> / <code>stderr</code> streams</strong>","t":"NNNDCENDALLLLLLLLLLLLLLOOLLLLLLLLLLLLLLLLLLLLLLLLOOOFFALLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIIQKK","n":["Always","AlwaysAnsi","Auto","AutoStream","Buffer","ColorChoice","Never","StripStream","adapter","always","always_ansi","auto","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","choice","clone","clone_into","current_choice","default","eprint","eprintln","eq","flush","flush","fmt","fmt","fmt","from","from","from","global","into","into","into","into_inner","into_inner","is_terminal","is_terminal","lock","lock","lock","lock","never","new","new","panic","print","println","stderr","stdout","stream","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write","write_all","write_all","write_fmt","write_fmt","write_global","write_vectored","write_vectored","StripBytes","StripBytesIter","StripStr","StripStrIter","StrippedBytes","StrippedStr","WinconBytes","WinconBytesIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","extend","extract_next","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","new","new","new","new","next","next","next","next","next","strip_bytes","strip_next","strip_next","strip_str","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","AsLockedWrite","IsTerminal","RawStream","Write","as_locked_write","is_terminal"],"q":[[0,"anstream"],[74,"anstream::adapter"],[199,"anstream::stream"],[205,"std::io::error"],[206,"core::fmt"],[207,"core::fmt"],[208,"core::fmt"],[209,"std::io::stdio"],[210,"core::fmt"],[211,"alloc::vec"],[212,"core::option"],[213,"alloc::string"]],"d":["","","","<code>std::io::Write</code> that adapts ANSI escape codes to the …","","Selection for overriding color output Selection for …","","Only pass printable data to the inner <code>Write</code>","Gracefully degrade styled output","Force color, no matter what the inner <code>Write</code> supports.","Force ANSI escape codes to be passed through as-is, no …","Auto-adapt for the stream’s capabilities","","","","","","","Report the desired choice for the given stream","","","Prefer <code>AutoStream::choice</code>","","Prints to <code>stderr</code>.","Prints to <code>stderr</code>, with a newline.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the current <code>ColorChoice</code> state","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the wrapped <code>RawStream</code>","Get the wrapped <code>RawStream</code>","","","Get exclusive access to the <code>AutoStream</code>","Get exclusive access to the <code>AutoStream</code>","Get exclusive access to the <code>StripStream</code>","Get exclusive access to the <code>StripStream</code>","Only pass printable data to the inner <code>Write</code>.","Runtime control over styling behavior","Only pass printable data to the inner <code>Write</code>","Panics the current thread.","Prints to <code>stdout</code>.","Prints to <code>stdout</code>, with a newline.","Create an ANSI escape code compatible stderr","Create an ANSI escape code compatible stdout","Higher-level traits to describe writeable streams","","","","","","","","","","","","","","","","","Override the detected <code>ColorChoice</code>","","","Incrementally strip non-contiguous data","See <code>StripBytes</code>","Incrementally strip non-contiguous data","See <code>StripStr</code>","See <code>strip_bytes</code>","See <code>strip_str</code>","Incrementally convert to wincon calls for non-contiguous …","See <code>WinconBytes</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Strip the next slice of bytes","Strip the next segment of data","","<strong>Note:</strong> this does <em>not</em> exhaust the <code>Iterator</code>","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Create a <code>Vec</code> of the printable content","Report the bytes has been exhausted","Initial state","See <code>strip_bytes</code>","Initial state","Initial state","","","","","","Strip ANSI escapes from bytes, returning the printable …","Strip the next segment of data","Strip the next segment of data","Strip ANSI escapes from a <code>&amp;str</code>, returning the printable …","","","","","","Create a <code>String</code> of the printable content","","","","","","","","","","","","","","","","","","","","","","","","","","","","Required functionality for underlying <code>std::io::Write</code> for …","","",""],"i":[3,3,3,0,0,0,3,0,0,1,1,1,3,1,8,3,1,8,1,3,3,1,3,0,0,3,1,8,3,1,8,3,1,8,3,3,1,8,1,8,1,8,1,1,8,8,1,1,8,0,0,0,0,0,0,3,3,1,8,3,1,8,3,1,8,1,8,1,8,1,8,3,1,8,0,0,0,0,0,0,0,0,24,25,29,26,27,30,28,31,24,25,29,26,27,30,28,31,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,29,26,27,30,28,31,26,28,24,24,25,29,26,27,30,28,31,24,25,29,26,27,30,28,31,24,25,29,26,27,30,28,31,24,29,26,30,31,26,26,25,26,27,28,24,29,26,30,31,0,25,27,0,24,25,26,27,28,24,24,24,25,29,26,27,30,28,31,24,25,29,26,27,30,28,31,24,25,29,26,27,30,28,31,0,0,0,7,7,36],"f":[0,0,0,0,0,0,0,0,0,[-1,[[1,[-1]]],2],[-1,[[1,[-1]]],2],[-1,[[1,[-1]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,3,2],[3,3],[[-1,-2],4,[],[]],[[[1,[-1]]],3,2],[[],3],0,0,[[3,3],5],[[[1,[-1]]],[[6,[4]]],[2,7]],[[[8,[-1]]],[[6,[4]]],[2,7]],[[3,9],[[11,[4,10]]]],[[[1,[-1]],9],12,[13,2]],[[[8,[-1]],9],12,[2,13]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],-1,2],[[[8,[-1]]],-1,2],[[[1,[-1]]],5,2],[[[8,[-1]]],5,2],[[[1,[14]]],[[1,[15]]]],[[[1,[16]]],[[1,[17]]]],[[[8,[16]]],[[8,[17]]]],[[[8,[14]]],[[8,[15]]]],[-1,[[1,[-1]]],2],[[-1,3],[[1,[-1]]],2],[-1,[[8,[-1]]],2],0,0,0,[[],[[1,[14]]]],[[],[[1,[16]]]],0,[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[[1,[-1]],[20,[19]]],[[6,[21]]],[2,7]],[[[8,[-1]],[20,[19]]],[[6,[21]]],[2,7]],[[[1,[-1]],[20,[19]]],[[6,[4]]],[2,7]],[[[8,[-1]],[20,[19]]],[[6,[4]]],[2,7]],[[[1,[-1]],22],[[6,[4]]],[2,7]],[[[8,[-1]],22],[[6,[4]]],[2,7]],[3,4],[[[1,[-1]],[20,[23]]],[[6,[21]]],[2,7]],[[[8,[-1]],[20,[23]]],[[6,[21]]],[2,7]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,24],[25,25],[26,26],[27,27],[28,28],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[],24],[[],25],[[],26],[[],27],[[],28],[[24,24],5],[[25,25],5],[[29,29],5],[[26,26],5],[[27,27],5],[[30,30],5],[[28,28],5],[[31,31],5],[[26,[20,[19]]],4],[[28,[20,[19]]],31],[[24,9],12],[[24,9],12],[[25,9],12],[[29,9],12],[[26,9],12],[[27,9],12],[[30,9],12],[[28,9],12],[[31,9],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,[[32,[19]]]],[26,5],[[],25],[[[20,[19]]],26],[[],27],[[],28],[24,33],[29,33],[26,33],[30,33],[31,33],[[[20,[19]]],26],[[25,34],29],[[27,[20,[19]]],30],[34,24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,35],[-1,35,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,0,0,0,[-1,[],[]],[-1,5,[]]],"c":[],"p":[[3,"AutoStream",0],[8,"RawStream",199],[4,"ColorChoice",0],[15,"tuple"],[15,"bool"],[6,"Result",205],[8,"AsLockedWrite",199],[3,"StripStream",0],[3,"Formatter",206],[3,"Error",206],[4,"Result",207],[6,"Result",206],[8,"Debug",206],[3,"Stderr",208],[3,"StderrLock",208],[3,"Stdout",208],[3,"StdoutLock",208],[3,"TypeId",209],[15,"u8"],[15,"slice"],[15,"usize"],[3,"Arguments",206],[3,"IoSlice",210],[3,"StrippedStr",74],[3,"StripStr",74],[3,"StrippedBytes",74],[3,"StripBytes",74],[3,"WinconBytes",74],[3,"StripStrIter",74],[3,"StripBytesIter",74],[3,"WinconBytesIter",74],[3,"Vec",211],[4,"Option",212],[15,"str"],[3,"String",213],[8,"IsTerminal",199]],"b":[[42,"impl-AutoStream%3CStderr%3E"],[43,"impl-AutoStream%3CStdout%3E"],[44,"impl-StripStream%3CStdout%3E"],[45,"impl-StripStream%3CStderr%3E"],[123,"impl-Debug-for-StrippedStr%3C\'s%3E"],[124,"impl-Display-for-StrippedStr%3C\'s%3E"]]},\
"anstyle":{"doc":"ANSI Text Styling","t":"NNDESSNNNNNNNNNNSENSSSSDDNSSSNNDNDSDSNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Ansi","Ansi256","Ansi256Color","AnsiColor","BLINK","BOLD","Black","Blue","BrightBlack","BrightBlue","BrightCyan","BrightGreen","BrightMagenta","BrightRed","BrightWhite","BrightYellow","CURLY_UNDERLINE","Color","Cyan","DASHED_UNDERLINE","DIMMED","DOTTED_UNDERLINE","DOUBLE_UNDERLINE","EffectIter","Effects","Green","HIDDEN","INVERT","ITALIC","Magenta","Red","Reset","Rgb","RgbColor","STRIKETHROUGH","Style","UNDERLINE","White","Yellow","b","bg_color","bitor","bitor","bitor_assign","bitor_assign","blink","bold","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bright","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","contains","default","default","default","dimmed","effects","eq","eq","eq","eq","eq","eq","eq","eq","eq","fg_color","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ansi","g","get_bg_color","get_effects","get_fg_color","get_underline_color","hash","hash","hash","hash","hash","hash","hash","hidden","index","insert","into","into","into","into","into","into","into","into","into_ansi","into_iter","invert","is_bright","is_plain","is_plain","italic","iter","new","new","next","on","on","on","on","on_default","on_default","on_default","on_default","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","remove","render","render","render","render_bg","render_bg","render_bg","render_bg","render_fg","render_fg","render_fg","render_fg","render_reset","set","strikethrough","sub","sub","sub_assign","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline","underline_color","write_reset_to","write_to"],"q":[[0,"anstyle"],[235,"core::option"],[236,"core::cmp"],[237,"core::fmt"],[238,"core::fmt"],[239,"core::convert"],[240,"core::fmt"],[241,"core::clone"],[242,"core::result"],[243,"core::any"],[244,"std::io"],[245,"std::io::error"]],"d":["","","256 (8-bit) color support","Available 4-bit ANSI color palette codes","","","Black: #0 (foreground code <code>30</code>, background code <code>40</code>).","Blue: #4 (foreground code <code>34</code>, background code <code>44</code>).","Bright black: #0 (foreground code <code>90</code>, background code <code>100</code>).","Bright blue: #4 (foreground code <code>94</code>, background code <code>104</code>).","Bright cyan: #6 (foreground code <code>96</code>, background code <code>106</code>).","Bright green: #2 (foreground code <code>92</code>, background code <code>102</code>).","Bright magenta: #5 (foreground code <code>95</code>, background code <code>105</code>…","Bright red: #1 (foreground code <code>91</code>, background code <code>101</code>).","Bright white: #7 (foreground code <code>97</code>, background code <code>107</code>).","Bright yellow: #3 (foreground code <code>93</code>, background code <code>103</code>…","","Any ANSI color code scheme","Cyan: #6 (foreground code <code>36</code>, background code <code>46</code>).","","","","","","A set of text effects","Green: #2 (foreground code <code>32</code>, background code <code>42</code>).","","Swap foreground and background colors; inconsistent …","Not widely supported. Sometimes treated as inverse or blink","Magenta: #5 (foreground code <code>35</code>, background code <code>45</code>).","Red: #1 (foreground code <code>31</code>, background code <code>41</code>).","Reset terminal formatting","","24-bit ANSI RGB color codes","Characters legible but marked as if for deletion. Not …","ANSI Text styling","Style extensions exist for Kitty, VTE, mintty and iTerm2.","White: #7 (foreground code <code>37</code>, background code <code>47</code>).","Yellow: #3 (foreground code <code>33</code>, background code <code>43</code>).","","Set background color","","","","","Apply <code>blink</code> effect","Apply <code>bold</code> effect","","","","","","","","","","","","","","","","","Change the color to/from bright","Reset all effects in-place","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all of the effects in <code>other</code> are contained …","","","","Apply <code>dimmed</code> effect","Set text effects","","","","","","","","","","Set foreground color","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Apply <code>hidden</code> effect","","Inserts the specified effects in-place.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Apply <code>invert</code> effect","Report whether the color is bright","Check if no effects are enabled","Check if no effects are enabled","Apply <code>italic</code> effect","Iterate over enabled effects","No effects enabled","No effects enabled","","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","","","","","","","","","Removes the specified effects in-place.","Render the ANSI code","Render the ANSI code","Render the ANSI code","Render the ANSI code for a background color","Render the ANSI code for a background color","Render the ANSI code for a background color","Render the ANSI code for a background color","Render the ANSI code for a foreground color","Render the ANSI code for a foreground color","Render the ANSI code for a foreground color","Render the ANSI code for a foreground color","Renders the relevant <code>Reset</code> code","Enable or disable the specified effects depending on the …","Apply <code>strikethrough</code> effect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply <code>underline</code> effect","Set underline color","Write the relevant <code>Reset</code> code","Write the ANSI code"],"i":[4,4,0,0,6,6,8,8,8,8,8,8,8,8,8,8,6,0,8,6,6,6,6,0,0,8,6,6,6,8,8,0,4,0,6,0,6,8,8,1,3,6,3,6,3,3,3,4,8,10,1,6,11,12,3,4,8,10,1,6,11,12,3,8,6,4,8,10,1,6,11,12,3,4,8,10,1,6,11,12,3,4,8,10,1,6,12,3,6,6,12,3,3,3,4,8,10,1,6,11,12,3,3,3,4,8,10,1,6,11,12,3,4,4,4,4,4,4,8,10,10,10,1,1,6,11,12,3,3,10,1,3,3,3,3,4,8,10,1,6,12,3,3,10,6,4,8,10,1,6,11,12,3,10,11,3,8,6,3,3,6,6,3,11,4,8,10,1,4,8,10,1,4,8,10,1,6,12,3,1,6,6,12,3,4,8,10,1,4,8,10,1,3,6,3,6,3,6,3,4,8,10,1,6,11,12,3,4,8,10,1,6,11,12,3,4,8,10,1,6,11,12,3,4,8,10,1,6,11,12,3,3,3,3,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,[5,[4]]],3],[[6,6],6],[[3,6],3],[[6,6],7],[[3,6],7],[3,3],[3,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[8,9],8],[6,6],[4,4],[8,8],[10,10],[1,1],[6,6],[11,11],[12,12],[3,3],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[4,4],13],[[8,8],13],[[10,10],13],[[1,1],13],[[6,6],13],[[12,12],13],[[3,3],13],[[6,6],9],[[],6],[[],12],[[],3],[3,3],[[3,6],3],[[4,4],9],[[8,8],9],[[10,10],9],[[1,1],9],[[6,6],9],[[11,11],9],[[12,12],9],[[3,3],9],[[3,6],9],[[3,[5,[4]]],3],[[4,14],15],[[8,14],15],[[10,14],15],[[1,14],15],[[6,14],15],[[11,14],15],[[12,14],15],[[3,14],15],[8,4],[[[7,[2,2,2]]],4],[1,4],[10,4],[-1,-1,[]],[2,4],[-1,-1,[]],[-1,-1,[]],[8,10],[2,10],[-1,-1,[]],[[[7,[2,2,2]]],1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,3],[8,10],[1,2],[3,[[5,[4]]]],[3,6],[3,[[5,[4]]]],[3,[[5,[4]]]],[[4,-1],7,16],[[8,-1],7,16],[[10,-1],7,16],[[1,-1],7,16],[[6,-1],7,16],[[12,-1],7,16],[[3,-1],7,16],[3,3],[10,2],[[6,6],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,[[5,[8]]]],[-1,-2,[],[]],[3,3],[8,9],[6,9],[3,9],[3,3],[6,11],[[],6],[[],3],[11,5],[[4,-1],3,[[17,[4]]]],[[8,-1],3,[[17,[4]]]],[[10,-1],3,[[17,[4]]]],[[1,-1],3,[[17,[4]]]],[4,3],[8,3],[10,3],[1,3],[[4,4],[[5,[13]]]],[[8,8],[[5,[13]]]],[[10,10],[[5,[13]]]],[[1,1],[[5,[13]]]],[[6,6],[[5,[13]]]],[[12,12],[[5,[13]]]],[[3,3],[[5,[13]]]],[1,2],[[6,6],6],[6,[[0,[18,19,20]]]],[12,[[0,[18,19,20]]]],[3,[[0,[18,19,20]]]],[4,[[0,[18,19,20]]]],[8,[[0,[18,19,20]]]],[10,[[0,[18,19,20]]]],[1,[[0,[18,19,20]]]],[4,[[0,[18,19,20]]]],[8,[[0,[18,19,20]]]],[10,[[0,[18,19,20]]]],[1,[[0,[18,19,20]]]],[3,[[0,[18,19,20]]]],[[6,6,9],6],[3,3],[[6,6],6],[[3,6],3],[[6,6],7],[[3,6],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[3,3],[[3,[5,[4]]],3],[[3,23],[[24,[7]]]],[[3,23],[[24,[7]]]]],"c":[],"p":[[3,"RgbColor",0],[15,"u8"],[3,"Style",0],[4,"Color",0],[4,"Option",235],[3,"Effects",0],[15,"tuple"],[4,"AnsiColor",0],[15,"bool"],[3,"Ansi256Color",0],[3,"EffectIter",0],[3,"Reset",0],[4,"Ordering",236],[3,"Formatter",237],[6,"Result",237],[8,"Hasher",238],[8,"Into",239],[8,"Display",237],[8,"Copy",240],[8,"Clone",241],[4,"Result",242],[3,"TypeId",243],[8,"Write",244],[6,"Result",245]],"b":[[101,"impl-PartialEq-for-Style"],[102,"impl-PartialEq%3CEffects%3E-for-Style"],[112,"impl-From%3CAnsiColor%3E-for-Color"],[113,"impl-From%3C(u8,+u8,+u8)%3E-for-Color"],[114,"impl-From%3CRgbColor%3E-for-Color"],[115,"impl-From%3CAnsi256Color%3E-for-Color"],[117,"impl-From%3Cu8%3E-for-Color"],[120,"impl-From%3CAnsiColor%3E-for-Ansi256Color"],[121,"impl-From%3Cu8%3E-for-Ansi256Color"]]},\
"anstyle_parse":{"doc":"Parser for implementing virtual terminal emulators","t":"DIGDDDIDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNLLLLLLLLLLLLLLLLLLFLLLLLLLLLL","n":["AsciiParser","CharAccumulator","DefaultCharAccumulator","Params","ParamsIter","Parser","Perform","Utf8Parser","add","add","add","advance","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","csi_dispatch","default","default","default","default","eq","eq","eq","eq","esc_dispatch","execute","fmt","fmt","fmt","fmt","from","from","from","from","from","hook","into","into","into","into","into","into_iter","into_iter","is_empty","iter","len","new","next","osc_dispatch","print","put","size_hint","state","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unhook","Action","Anywhere","BeginUtf8","Clear","Collect","CsiDispatch","CsiEntry","CsiIgnore","CsiIntermediate","CsiParam","DcsEntry","DcsIgnore","DcsIntermediate","DcsParam","DcsPassthrough","EscDispatch","Escape","EscapeIntermediate","Execute","Ground","Hook","Ignore","Nop","OscEnd","OscPut","OscStart","OscString","Param","Print","Put","SosPmApcString","State","Unhook","Utf8","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","eq","eq","fmt","fmt","from","from","into","into","state_change","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"anstyle_parse"],[88,"anstyle_parse::state"],[151,"core::option"],[152,"core::clone"],[153,"core::default"],[154,"core::cmp"],[155,"core::fmt"],[156,"core::fmt"],[157,"core::any"]],"d":["Only allow parsing 7-bit ASCII","Build a <code>char</code> out of bytes","","","Immutable subparameter iterator.","Parser for raw <em>VTE</em> protocol which delegates actions to a …","Performs actions requested by the <code>Parser</code>","Allow parsing UTF-8","Build a <code>char</code> out of bytes","","","Advance the parser state","","","","","","","","","","","","","","","","","","","A final character has arrived for a CSI sequence","","","","","","","","","The final character of an escape sequence has arrived.","Execute a C0 or C1 control function.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Invoked when a final character arrives in first part of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if there are no parameters present.","Returns an iterator over all parameters and subparameters.","Returns the number of parameters.","Create a new Parser","","Dispatch an operating system command.","Draw a character to the screen and update states.","Pass bytes as part of a device control string to the …","","","","","","","","","","","","","","","","","","","","","","Called when a device control string is terminated.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transition to next <code>State</code>","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,8,4,5,6,19,10,6,4,5,19,10,6,4,5,10,6,4,5,10,6,4,5,9,10,6,4,5,10,6,4,5,9,9,10,6,4,5,19,10,6,4,5,9,19,10,6,4,5,19,10,10,10,10,6,19,9,9,9,19,0,10,6,4,5,19,10,6,4,5,19,10,6,4,5,19,10,6,4,5,9,0,23,24,24,24,24,23,23,23,23,23,23,23,23,23,24,23,23,24,23,24,24,24,24,24,24,23,24,24,24,23,0,24,23,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,0,23,24,23,23,24,24,23,24,23,24],"f":[0,0,0,0,0,0,0,0,[[-1,1],[[3,[2]]],[]],[[4,1],[[3,[2]]]],[[5,1],[[3,[2]]]],[[[6,[-1]],-2,1],7,8,9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,10],[[[6,[-1]]],[[6,[-1]]],11],[4,4],[5,5],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,10,[12,[1]],13,1],7,[]],[[],10],[[],[[6,[-1]]],14],[[],4],[[],5],[[10,10],13],[[[6,[-1]],[6,[-1]]],13,15],[[4,4],13],[[5,5],13],[[-1,[12,[1]],13,1],7,[]],[[-1,1],7,[]],[[10,16],17],[[[6,[-1]],16],17,18],[[4,16],17],[[5,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,10,[12,[1]],13,1],7,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10],[10,13],[10,19],[10,20],[[],6],[19,3],[[-1,[12,[[12,[1]]]],13],7,[]],[[-1,2],7,[]],[[-1,1],7,[]],[19,[[7,[20,[3,[20]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,7,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,23],[24,24],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[],23],[[],24],[[23,23],13],[[24,24],13],[[23,16],17],[[24,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,1],[[7,[23,24]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[1,[[21,[23]]]],[1,[[21,[24]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]]],"c":[],"p":[[15,"u8"],[15,"char"],[4,"Option",151],[3,"AsciiParser",0],[3,"Utf8Parser",0],[3,"Parser",0],[15,"tuple"],[8,"CharAccumulator",0],[8,"Perform",0],[3,"Params",0],[8,"Clone",152],[15,"slice"],[15,"bool"],[8,"Default",153],[8,"PartialEq",154],[3,"Formatter",155],[6,"Result",155],[8,"Debug",155],[3,"ParamsIter",0],[15,"usize"],[4,"Result",156],[3,"TypeId",157],[4,"State",88],[4,"Action",88]],"b":[]},\
"anstyle_query":{"doc":"","t":"FFFFFFFAF","n":["clicolor","clicolor_force","is_ci","no_color","term_supports_ansi_color","term_supports_color","truecolor","windows","enable_ansi_colors"],"q":[[0,"anstyle_query"],[8,"anstyle_query::windows"],[9,"core::option"]],"d":["Check CLICOLOR status","Check CLICOLOR_FORCE status","Report whether this is running in CI","Check NO_COLOR status","Check <code>TERM</code> for ANSI color support","Check <code>TERM</code> for color support","Check COLORTERM for truecolor support","",""],"i":[0,0,0,0,0,0,0,0,0],"f":[[[],[[2,[1]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[],[[2,[1]]]]],"c":[],"p":[[15,"bool"],[4,"Option",9]],"b":[]},\
"arrayref":{"doc":"This package contains just four macros, which enable the …","t":"OOOO","n":["array_mut_ref","array_ref","array_refs","mut_array_refs"],"q":[[0,"arrayref"]],"d":["You can use <code>array_mut_ref</code> to generate a mutable array …","You can use <code>array_ref</code> to generate an array reference to a …","You can use <code>array_refs</code> to generate a series of array …","You can use <code>mut_array_refs</code> to generate a series of mutable …"],"i":[0,0,0,0],"f":[0,0,0,0],"c":[],"p":[],"b":[]},\
"arrayvec":{"doc":"<strong>arrayvec</strong> provides the types <code>ArrayVec</code> and <code>ArrayString</code>:  …","t":"DDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ArrayString","ArrayVec","CapacityError","Drain","IntoIter","as_mut","as_mut_ptr","as_mut_slice","as_mut_str","as_ptr","as_ref","as_ref","as_slice","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","clear","clear","clone","clone","clone","clone","clone_from","clone_from","cmp","cmp","cmp","default","default","deref","deref","deref_mut","deref_mut","drain","drop","drop","drop","element","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_byte_string","from_iter","from_str","ge","ge","ge","gt","gt","gt","hash","hash","insert","into","into","into","into","into","into_inner","into_inner_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","is_full","is_full","le","le","le","len","len","lt","lt","lt","new","new","new","new_const","new_const","next","next","next_back","next_back","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","pop","pop_at","push","push","push_str","push_unchecked","remaining_capacity","remaining_capacity","remove","remove","retain","set_len","set_len","simplify","size_hint","size_hint","swap_pop","swap_remove","take","truncate","truncate","try_extend_from_slice","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_push","try_push","try_push_str","type_id","type_id","type_id","type_id","type_id","write_char","write_str","zero_filled"],"q":[[0,"arrayvec"],[168,"core::clone"],[169,"core::cmp"],[170,"core::cmp"],[171,"core::cmp"],[172,"core::fmt"],[173,"core::fmt"],[174,"core::str::error"],[175,"core::cmp"],[176,"core::hash"],[177,"core::ops::function"],[178,"core::marker"],[179,"core::fmt"]],"d":["A string with a fixed capacity.","A vector with a fixed capacity.","Error value indicating insufficient capacity","A draining iterator for <code>ArrayVec</code>.","By-value iterator for <code>ArrayVec</code>.","","Return a raw mutable pointer to the vector’s buffer.","Return a mutable slice containing all elements of the …","Return a mutable string slice of the whole <code>ArrayString</code>.","Return a raw pointer to the vector’s buffer.","","","Return a slice containing all elements of the vector.","Return a string slice of the whole <code>ArrayString</code>.","","","","","","","","","","","","","","","Return the capacity of the <code>ArrayVec</code>.","Return the capacity of the <code>ArrayString</code>.","Remove all elements in the vector.","Make the string empty.","","","","","","","","","","Return an empty array","Return an empty <code>ArrayString</code>","","","","","Create a draining iterator that removes the specified …","","","","Extract the overflowing element","","","","","","Extend the <code>ArrayVec</code> with an iterator.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a <code>str</code>.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a byte string literal.","Create an <code>ArrayVec</code> from an iterator.","","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the inner fixed size array, if it is full to its …","Return the inner fixed size array.","","","","","","Returns whether the <code>ArrayVec</code> is empty.","Returns whether the string is empty.","Return true if the <code>ArrayVec</code> is completely filled to its …","Return if the <code>ArrayString</code> is completely filled.","","","","Return the number of elements in the <code>ArrayVec</code>.","Return the length of the string.","","","","Create a new empty <code>ArrayVec</code>.","Create a new empty <code>ArrayString</code>.","Create a new <code>CapacityError</code> from <code>element</code>.","Create a new empty <code>ArrayVec</code> (const fn).","Create a new empty <code>ArrayString</code> (const fn).","","","","","","","","","Remove the last element in the vector and return it.","Removes the last character from the string and returns it.","Remove the element at <code>index</code> and shift down the following …","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push <code>element</code> to the end of the vector without checking the …","Returns the capacity left in the <code>ArrayVec</code>.","Returns the capacity left in the <code>ArrayString</code>.","Remove the element at <code>index</code> and shift down the following …","Removes a <code>char</code> from this <code>ArrayString</code> at a byte position …","Retains only the elements specified by the predicate.","Set the vector’s length without dropping or moving out …","Set the strings’s length.","Convert into a <code>CapacityError</code> that does not carry an …","","","Remove the element at <code>index</code> and swap the last element into …","Remove the element at <code>index</code> and swap the last element into …","Returns the ArrayVec, replacing the original with a new …","Shortens the vector, keeping the first <code>len</code> elements and …","Shortens this <code>ArrayString</code> to the specified length.","Copy all elements from the slice and append to the <code>ArrayVec</code>…","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","","","","","","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","","","","","","","","Create a new <code>ArrayString</code> value fully filled with ASCII …"],"i":[0,0,0,0,0,1,1,1,3,1,1,3,1,3,1,1,8,12,3,3,9,1,1,8,12,3,3,9,1,3,1,3,1,8,3,9,1,3,1,3,9,1,3,1,3,1,3,1,1,8,12,9,1,1,3,3,9,1,1,8,3,3,9,9,1,1,8,12,3,3,9,3,1,3,1,3,3,1,3,3,1,3,1,1,8,12,3,9,1,1,1,1,1,8,12,1,3,1,3,1,3,3,1,3,1,3,3,1,3,9,1,3,8,12,8,12,1,3,3,9,1,3,1,1,3,3,1,1,3,1,3,1,1,3,9,8,12,1,1,1,1,3,1,1,1,8,12,3,3,3,9,1,1,8,12,3,9,1,3,3,1,8,12,3,9,3,3,3],"f":[0,0,0,0,0,[[[1,[-1]]],[[2,[-1]]],[]],[[[1,[-1]]],[],[]],[[[1,[-1]]],[[2,[-1]]],[]],[3,4],[[[1,[-1]]],[],[]],[[[1,[-1]]],[[2,[-1]]],[]],[3,4],[[[1,[-1]]],[[2,[-1]]],[]],[3,4],[[[1,[-1]]],[[2,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,4],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[2,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,4],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],5,[]],[3,5],[[[1,[-1]]],6,[]],[3,6],[[[1,[-1]]],[[1,[-1]]],7],[[[8,[-1]]],[[8,[-1]]],7],[3,3],[[[9,[-1]]],[[9,[-1]]],7],[[[1,[-1]],[1,[-1]]],6,7],[[3,3],6],[[[1,[-1]],[1,[-1]]],10,11],[[3,3],10],[[[9,[-1]],[9,[-1]]],10,11],[[],[[1,[-1]]],[]],[[],3],[[[1,[-1]]],[],[]],[3,4],[[[1,[-1]]],[],[]],[3,4],[[[1,[-1]],-2],[[12,[-1]]],[],[[13,[5]]]],[[[1,[-1]]],6,[]],[[[8,[-1]]],6,[]],[[[12,[-1]]],6,[]],[[[9,[-1]]],-1,[]],[[[1,[-1]],[1,[-1]]],14,15],[[[1,[-1]],[2,[-1]]],14,15],[[3,3],14],[[3,4],14],[[[9,[-1]],[9,[-1]]],14,15],[[[1,[-1]],-2],6,[],16],[[[1,[-1]],17],18,19],[[[8,[-1]],17],18,19],[[3,17],18],[[3,17],18],[[[9,[-1]],17],18,[]],[[[9,[-1]],17],18,[]],[[[20,[-1]]],[[1,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,[[21,[3,[9,[4]]]]]],[-1,-1,[]],[[[20,[22]]],[[21,[3,23]]]],[-1,[[1,[-2]]],16,[]],[4,[[21,[3]]]],[[[1,[-1]],[1,[-1]]],14,24],[[3,3],14],[[3,4],14],[[[1,[-1]],[1,[-1]]],14,24],[[3,3],14],[[3,4],14],[[[1,[-1]],-2],6,25,26],[[3,-1],6,26],[[[1,[-1]],5,-1],6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[21,[[20,[-1]],[1,[-1]]]]],[]],[[[1,[-1]]],[[20,[-1]]],[]],[[[1,[-1]]],[[8,[-1]]],[]],[[[1,[-1]]],[],[]],[[[1,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],14,[]],[3,14],[[[1,[-1]]],14,[]],[3,14],[[[1,[-1]],[1,[-1]]],14,24],[[3,3],14],[[3,4],14],[[[1,[-1]]],5,[]],[3,5],[[[1,[-1]],[1,[-1]]],14,24],[[3,3],14],[[3,4],14],[[],[[1,[-1]]],[]],[[],3],[-1,[[9,[-1]]],[]],[[],[[1,[-1]]],[]],[[],3],[[[8,[-1]]],27,[]],[[[12,[-1]]],27,[]],[[[8,[-1]]],27,[]],[[[12,[-1]]],27,[]],[[[1,[-1]],[1,[-1]]],[[27,[10]]],24],[[3,4],[[27,[10]]]],[[3,3],[[27,[10]]]],[[[9,[-1]],[9,[-1]]],[[27,[10]]],24],[[[1,[-1]]],[[27,[-1]]],[]],[3,[[27,[28]]]],[[[1,[-1]],5],[[27,[-1]]],[]],[[[1,[-1]],-1],6,[]],[[3,28],6],[[3,4],6],[[[1,[-1]],-1],6,[]],[[[1,[-1]]],5,[]],[3,5],[[[1,[-1]],5],-1,[]],[[3,5],28],[[[1,[-1]],-2],6,[],29],[[[1,[-1]],5],6,[]],[[3,5],6],[[[9,[-1]]],9,[]],[[[8,[-1]]],[[6,[5,[27,[5]]]]],[]],[[[12,[-1]]],[[6,[5,[27,[5]]]]],[]],[[[1,[-1]],5],[[27,[-1]]],[]],[[[1,[-1]],5],-1,[]],[[[1,[-1]]],[[1,[-1]]],[]],[[[1,[-1]],5],6,[]],[[3,5],6],[[[1,[-1]],[2,[-1]]],[[21,[6,9]]],30],[-1,[[21,[-2]]],[],[]],[[[2,[-1]]],[[21,[[1,[-1]]]]],7],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[4,[[21,[3]]]],[31,[[21,[3]]]],[-1,[[21,[-2]]],[],[]],[[[1,[-1]],5,-1],[[21,[6,[9,[-1]]]]],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[[[1,[-1]],-1],[[21,[6,[9,[-1]]]]],[]],[[3,28],[[21,[6,[9,[28]]]]]],[[3,4],[[21,[6,[9,[4]]]]]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[[3,28],18],[[3,4],18],[[],3]],"c":[],"p":[[3,"ArrayVec",0],[15,"slice"],[3,"ArrayString",0],[15,"str"],[15,"usize"],[15,"tuple"],[8,"Clone",168],[3,"IntoIter",0],[3,"CapacityError",0],[4,"Ordering",169],[8,"Ord",169],[3,"Drain",0],[8,"RangeBounds",170],[15,"bool"],[8,"PartialEq",169],[8,"IntoIterator",171],[3,"Formatter",172],[6,"Result",172],[8,"Debug",172],[15,"array"],[4,"Result",173],[15,"u8"],[3,"Utf8Error",174],[8,"PartialOrd",169],[8,"Hash",175],[8,"Hasher",175],[4,"Option",176],[15,"char"],[8,"FnMut",177],[8,"Copy",178],[3,"Arguments",172],[3,"TypeId",179]],"b":[[52,"impl-PartialEq-for-ArrayVec%3CT,+CAP%3E"],[53,"impl-PartialEq%3C%5BT%5D%3E-for-ArrayVec%3CT,+CAP%3E"],[54,"impl-PartialEq-for-ArrayString%3CCAP%3E"],[55,"impl-PartialEq%3Cstr%3E-for-ArrayString%3CCAP%3E"],[60,"impl-Debug-for-ArrayString%3CCAP%3E"],[61,"impl-Display-for-ArrayString%3CCAP%3E"],[62,"impl-Display-for-CapacityError%3CT%3E"],[63,"impl-Debug-for-CapacityError%3CT%3E"],[75,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[76,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[78,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[79,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[90,"impl-IntoIterator-for-ArrayVec%3CT,+CAP%3E"],[91,"impl-IntoIterator-for-%26ArrayVec%3CT,+CAP%3E"],[92,"impl-IntoIterator-for-%26mut+ArrayVec%3CT,+CAP%3E"],[100,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[101,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[105,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[106,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[117,"impl-PartialOrd%3Cstr%3E-for-ArrayString%3CCAP%3E"],[118,"impl-PartialOrd-for-ArrayString%3CCAP%3E"],[148,"impl-TryFrom%3C%26str%3E-for-ArrayString%3CCAP%3E"],[149,"impl-TryFrom%3CArguments%3C\'a%3E%3E-for-ArrayString%3CCAP%3E"]]},\
"bit_field":{"doc":"Provides the abstraction of a bit field, which allows for …","t":"SIIKKKKKKKKK","n":["BIT_LENGTH","BitArray","BitField","bit_length","get_bit","get_bit","get_bits","get_bits","set_bit","set_bit","set_bits","set_bits"],"q":[[0,"bit_field"],[12,"core::ops::range"]],"d":["The number of bits in this bit field.","","A generic trait which provides methods for extracting and …","Returns the length, eg number of bits, in this bit array.","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the range of bits specified by <code>range</code>; note that …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","Sets the range of bits defined by the range <code>range</code> to the …"],"i":[5,0,0,6,5,6,5,6,5,6,5,6],"f":[0,0,0,[-1,1,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,-2],-1,[],[[3,[1]]]],[[-1,-2],-3,[],[[3,[1]]],[]],[[-1,1,2],-1,[]],[[-1,1,2],4,[]],[[-1,-2,-1],-1,[],[[3,[1]]]],[[-1,-2,-3],4,[],[[3,[1]]],[]]],"c":[],"p":[[15,"usize"],[15,"bool"],[8,"RangeBounds",12],[15,"tuple"],[8,"BitField",0],[8,"BitArray",0]],"b":[]},\
"bitflags":{"doc":"Generate types for C-style flags with ergonomic APIs.","t":"SCIQSSDILLOKLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLALLLLLLALLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLDIILLLLLLFLLLKFLLLK","n":["ALL","BitFlags","Bits","Bits","EMPTY","FLAGS","Flag","Flags","all","all","bitflags","bits","borrow","borrow_mut","complement","complement","contains","contains","difference","difference","empty","empty","from","from_bits","from_bits","from_bits_retain","from_bits_truncate","from_bits_truncate","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","is_all","is_all","is_empty","is_empty","is_named","is_unnamed","iter","iter","iter","iter_names","iter_names","name","new","parser","remove","remove","set","set","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_into","type_id","union","union","value","Iter","IterNames","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_iter","into_iter","next","next","remaining","try_from","try_from","try_into","try_into","type_id","type_id","ParseError","ParseHex","WriteHex","borrow","borrow_mut","empty_flag","fmt","fmt","from","from_str","into","invalid_hex_flag","invalid_named_flag","parse_hex","to_writer","try_from","try_into","type_id","write_hex"],"q":[[0,"bitflags"],[65,"bitflags::iter"],[86,"bitflags::parser"],[105,"core::marker"],[106,"core::option"],[107,"core::result"],[108,"core::any"],[109,"core::fmt"],[110,"core::fmt"]],"d":["A value with all bits set.","","A bits type that can be used as storage for a flags type.","The underlying bits type.","A value with all bits unset.","The set of defined flags.","A defined flags value that may be named or unnamed.","A set of defined flags using a bits type as storage.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Generate a flags type.","Get the underlying bits value.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether the flag is named.","Whether the flag is unnamed.","Yield the bits of a source flags value in a set of …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Get the name of this flag.","Define a flag.","Parsing flags from text.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the flags value of this flag.","An iterator over flags values.","An iterator over flags values.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get a flags value of any remaining bits that haven’t …","","","","","","","An error encountered while parsing flags from text.","Parse a value from a hex string.","Encode a value as a hex string.","","","A hex or named flag wasn’t found between separators.","","","Returns the argument unchanged.","Parse a flags value from text.","Calls <code>U::from(self)</code>.","An invalid hex flag was encountered.","A named flag that doesn’t correspond to any on the flags …","Parse the value from hex.","Write a flags value as text.","","","","Write the value as hex."],"i":[18,0,0,11,18,11,0,0,11,11,0,11,6,6,11,11,11,11,11,11,11,11,6,11,11,11,11,11,11,11,11,11,11,11,11,11,6,11,11,11,11,6,6,0,11,11,11,11,6,6,0,11,11,11,11,11,11,11,11,6,6,6,11,11,6,0,0,7,8,7,8,7,8,7,8,7,8,7,8,8,7,8,7,8,7,8,0,0,0,12,12,12,12,12,12,0,12,12,12,19,0,12,12,12,20],"f":[0,0,0,0,0,0,0,0,[[],-1,[]],[[],-1,[]],0,[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[[-1,-1],1,2],[[-1,-1],1,2],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[],-1,[]],[[],-1,[]],[-1,-1,[]],[[],[[3,[-1]]],[]],[[],[[3,[-1]]],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[4,[[3,[-1]]],[]],[4,[[3,[-1]]],[]],[[-1,-1],5,2],[[-1,-1],5,2],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],1,2],[[-1,-1],1,2],[-1,-2,[],[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[[6,[-1]]],1,[]],[[[6,[-1]]],1,[]],0,[-1,[[7,[-1]]],[]],[-1,[[7,[-1]]],[]],[-1,[[8,[-1]]],[]],[-1,[[8,[-1]]],[]],[[[6,[-1]]],4,[]],[[4,-1],[[6,[-1]]],[]],0,[[-1,-1],5,2],[[-1,-1],5,2],[[-1,-1,1],5,2],[[-1,-1,1],5,2],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],5,2],[[-1,-1],5,2],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[[6,[-1]]],-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[7,[-1]]],3,11],[[[8,[-1]]],3,11],[[[8,[-1]]],-1,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],12],[[12,13],14],[[12,13],14],[-1,-1,[]],[4,[[9,[-1,12]]],11],[-1,-2,[],[]],[-1,12,15],[-1,12,15],[4,[[9,[-1,12]]],2],[[-1,-2],[[9,[5,16]]],11,17],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[-1,-2],14,[],17]],"c":[],"p":[[15,"bool"],[8,"Sized",105],[4,"Option",106],[15,"str"],[15,"tuple"],[3,"Flag",0],[3,"Iter",65],[3,"IterNames",65],[4,"Result",107],[3,"TypeId",108],[8,"Flags",0],[3,"ParseError",86],[3,"Formatter",109],[6,"Result",109],[8,"Display",109],[3,"Error",109],[8,"Write",109],[8,"Bits",0],[8,"ParseHex",86],[8,"WriteHex",86]],"b":[[92,"impl-Display-for-ParseError"],[93,"impl-Debug-for-ParseError"]]},\
"blake3":{"doc":"The official Rust implementation of the BLAKE3 …","t":"DDDRRDLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLFLLLLLFLLLLLLLLLLLLLLLLLLLL","n":["Hash","Hasher","HexError","KEY_LEN","OUT_LEN","OutputReader","as_bytes","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","count","default","derive_key","eq","eq","eq","fill","finalize","finalize_xof","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_hex","from_str","hash","hash","into","into","into","into","keyed_hash","new","new_derive_key","new_keyed","position","reset","set_position","to_hex","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update"],"q":[[0,"blake3"],[69,"core::fmt"],[70,"core::fmt"],[71,"core::convert"],[72,"core::hash"],[73,"arrayvec::array_string"],[74,"core::any"]],"d":["An output of the default size, 32 bytes, which provides …","An incremental hash state that can accept any number of …","The error type for <code>Hash::from_hex</code>.","The number of bytes in a key, 32.","The number of bytes in a <code>Hash</code>, 32.","An incremental reader for extended output, returned by …","The raw bytes of the <code>Hash</code>. Note that byte arrays don’t …","","","","","","","","","","","","","Return the total number of bytes hashed so far.","","The key derivation function.","","","","Fill a buffer with output bytes and advance the position …","Finalize the hash state and return the <code>Hash</code> of the input.","Finalize the hash state and return an <code>OutputReader</code>, which …","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>Hash</code> from its raw bytes representation.","Decode a <code>Hash</code> from hexadecimal. Both uppercase and …","","The default hash function.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The keyed hash function.","Construct a new <code>Hasher</code> for the regular hash function.","Construct a new <code>Hasher</code> for the key derivation function. See","Construct a new <code>Hasher</code> for the keyed hash function. See …","Return the current read position in the output stream. …","Reset the <code>Hasher</code> to its initial state.","Seek to a new read position in the output stream. This is …","Encode a <code>Hash</code> in lowercase hexadecimal.","","","","","","","","","","","","","Add input bytes to the hash state. You can call this any …"],"i":[0,0,0,0,0,0,1,1,4,5,6,1,4,5,6,1,4,5,6,5,5,0,1,1,1,6,5,5,1,1,4,4,5,6,1,1,4,5,6,1,1,1,0,1,1,4,5,6,0,5,5,5,6,5,6,1,1,4,5,6,1,4,5,6,1,4,5,6,5],"f":[0,0,0,0,0,0,[1,[[3,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[4,4],[5,5],[6,6],[5,7],[[],5],[[8,[9,[2]]],[[3,[2]]]],[[1,1],10],[[1,[3,[2]]],10],[[1,[9,[2]]],10],[[6,[9,[2]]],11],[5,1],[5,6],[[1,12],13],[[1,12],13],[[4,12],13],[[4,12],13],[[5,12],13],[[6,12],13],[-1,-1,[]],[[[3,[2]]],1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[3,[2]]],1],[-1,[[14,[1,4]]],[[15,[[9,[2]]]]]],[8,[[14,[1]]]],[[[9,[2]]],1],[[1,-1],11,16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[2]],[9,[2]]],1],[[],5],[8,5],[[[3,[2]]],5],[6,7],[5,5],[[6,7],11],[1,17],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[5,[9,[2]]],5]],"c":[],"p":[[3,"Hash",0],[15,"u8"],[15,"array"],[3,"HexError",0],[3,"Hasher",0],[3,"OutputReader",0],[15,"u64"],[15,"str"],[15,"slice"],[15,"bool"],[15,"tuple"],[3,"Formatter",69],[6,"Result",69],[4,"Result",70],[8,"AsRef",71],[8,"Hasher",72],[3,"ArrayString",73],[3,"TypeId",74]],"b":[[22,"impl-PartialEq-for-Hash"],[23,"impl-PartialEq%3C%5Bu8;+OUT_LEN%5D%3E-for-Hash"],[24,"impl-PartialEq%3C%5Bu8%5D%3E-for-Hash"],[28,"impl-Debug-for-Hash"],[29,"impl-Display-for-Hash"],[30,"impl-Display-for-HexError"],[31,"impl-Debug-for-HexError"]]},\
"bytemuck":{"doc":"This crate gives small utilities for casting between plain …","t":"NIYYYCYIYQSSIYNIYEINNIYIYILLFFFFFFFALLLLLFFLLLLLLOOLLLLLLLLLLFFFFFFFFLFFLFLLLLLLLLLLLLLQIENNLLFFFFFLLLLLLFFLLKFFFFFFLFFLFL","n":["AlignmentMismatch","AnyBitPattern","AnyBitPattern","ByteEq","ByteHash","CheckedBitPattern","CheckedBitPattern","Contiguous","Contiguous","Int","MAX_VALUE","MIN_VALUE","NoUninit","NoUninit","OutputSliceWouldHaveSlop","Pod","Pod","PodCastError","PodInOption","SizeMismatch","TargetAlignmentGreaterAndInputNotAligned","TransparentWrapper","TransparentWrapper","Zeroable","Zeroable","ZeroableInOption","borrow","borrow_mut","bytes_of","bytes_of_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","checked","clone","eq","fmt","fmt","from","from_bytes","from_bytes_mut","from_integer","from_integer","hash","into","into_integer","into_integer","offset_of","offset_of","peel","peel","peel_mut","peel_mut","peel_ref","peel_ref","peel_slice","peel_slice","peel_slice_mut","peel_slice_mut","pod_align_to","pod_align_to_mut","pod_read_unaligned","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id","wrap","wrap","wrap_mut","wrap_mut","wrap_ref","wrap_ref","wrap_slice","wrap_slice","wrap_slice_mut","wrap_slice_mut","zeroed","zeroed","Bits","CheckedBitPattern","CheckedCastError","InvalidBitPattern","PodCastError","borrow","borrow_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","clone","eq","fmt","fmt","from","from","from_bytes","from_bytes_mut","hash","into","is_valid_bit_pattern","pod_read_unaligned","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id"],"q":[[0,"bytemuck"],[87,"bytemuck::checked"],[122,"core::fmt"],[123,"core::fmt"],[124,"core::hash"],[125,"core::marker"],[126,"core::result"],[127,"core::any"]],"d":["For this type of cast the alignments must be exactly the …","Marker trait for “plain old data” types that are valid …","Derive the <code>AnyBitPattern</code> trait for a struct","Derive the <code>PartialEq</code> and <code>Eq</code> trait for a type","Derive the <code>Hash</code> trait for a type","","Derive the <code>CheckedBitPattern</code> trait for a struct or enum.","A trait indicating that:","Derive the <code>Contiguous</code> trait for an enum","The primitive integer type with an identical …","The upper <em>inclusive</em> bound for valid instances of this type.","The lower <em>inclusive</em> bound for valid instances of this type.","Marker trait for “plain old data” types with no uninit …","Derive the <code>NoUninit</code> trait for a struct or enum","If the element size changes then the output slice changes …","Marker trait for “plain old data”.","Derive the <code>Pod</code> trait for a struct","The things that can go wrong when casting between <code>Pod</code> data …","Trait for types which are Pod when wrapped in Option.","When casting a slice you can’t convert between ZST …","You tried to cast a slice to an element type with a higher …","A trait which indicates that a type is a …","Derive the <code>TransparentWrapper</code> trait for a struct","Trait for types that can be safely created with <code>zeroed</code>.","Derive the <code>Zeroable</code> trait for a struct","Trait for types which are Zeroable when wrapped in Option.","","","Re-interprets <code>&amp;T</code> as <code>&amp;[u8]</code>.","Re-interprets <code>&amp;mut T</code> as <code>&amp;mut [u8]</code>.","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","Checked versions of the casting functions exposed in crate …","","","","","Returns the argument unchanged.","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","If <code>value</code> is within the range for valid instances of this …","If <code>value</code> is within the range for valid instances of this …","","Calls <code>U::from(self)</code>.","Perform the conversion from <code>C</code> into the underlying integral …","Perform the conversion from <code>C</code> into the underlying integral …","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …","Convert the wrapper type into the inner type.","Convert the wrapper type into the inner type.","Convert a mutable reference to the wrapper type into a …","Convert a mutable reference to the wrapper type into a …","Convert a reference to the wrapper type into a reference …","Convert a reference to the wrapper type into a reference …","Convert a slice to the wrapped type into a slice to the …","Convert a slice to the wrapped type into a slice to the …","Convert a mutable slice to the wrapped type into a mutable …","Convert a mutable slice to the wrapped type into a mutable …","As <code>align_to</code>, but safe because of the <code>Pod</code> bound.","As <code>align_to_mut</code>, but safe because of the <code>Pod</code> bound.","Reads the slice into a <code>T</code> value.","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.","","Convert the inner type into the wrapper type.","Convert the inner type into the wrapper type.","Convert a mutable reference to the inner type into a …","Convert a mutable reference to the inner type into a …","Convert a reference to the inner type into a reference to …","Convert a reference to the inner type into a reference to …","Convert a slice to the inner type into a slice to the …","Convert a slice to the inner type into a slice to the …","Convert a mutable slice to the inner type into a mutable …","Convert a mutable slice to the inner type into a mutable …","Calls <code>zeroed</code>.","Calls <code>zeroed</code>.","<code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> …","A marker trait that allows types that have some invalid …","The things that can go wrong when casting between …","When casting to a <code>CheckedBitPattern</code> type, it is possible …","An error occurred during a true-<code>Pod</code> cast","","","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","","","","","","Returns the argument unchanged.","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Calls <code>U::from(self)</code>.","If this function returns true, then it must be valid to …","Reads the slice into a <code>T</code> value.","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.",""],"i":[5,0,0,0,0,0,0,0,0,17,17,17,0,0,5,0,0,0,0,5,5,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,17,17,5,5,17,17,0,0,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,5,0,0,5,0,5,18,18,18,18,18,18,18,18,18,18,19,19,15,0,0,16,16,16,16,0,0,0,0,0,16,16,16,16,16,16,0,0,16,16,15,0,0,0,0,0,0,16,0,0,16,0,16],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[2,[1]]],3],[-1,[[2,[1]]],[3,4]],[-1,-2,3,4],[-1,-2,[3,4],[3,4]],[-1,-2,3,4],[[[2,[-1]]],[[2,[-2]]],3,4],[[[2,[-1]]],[[2,[-2]]],[3,4],[3,4]],0,[5,5],[[5,5],6],[[5,7],8],[[5,7],8],[-1,-1,[]],[[[2,[1]]],-1,4],[[[2,[1]]],-1,[3,4]],[[],[[9,[-1]]],[]],[[],[[9,[-1]]],[]],[[5,-1],10,11],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],0,0,[-1,-2,12,12],[-1,-2,12,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[-1]]],[[2,[-2]]],12,12],[[[2,[-1]]],[[2,[-2]]],12,12],[[[2,[-1]]],[[2,[-2]]],12,12],[[[2,[-1]]],[[2,[-2]]],12,12],[[[2,[-1]]],[[10,[[2,[-1]],[2,[-2]],[2,[-1]]]]],3,4],[[[2,[-1]]],[[10,[[2,[-1]],[2,[-2]],[2,[-1]]]]],[3,4],[3,4]],[[[2,[1]]],-1,4],[-1,[[13,[-2,5]]],3,4],[-1,[[13,[-2,5]]],[3,4],[3,4]],[-1,[[13,[-2,5]]],3,4],[[[2,[-1]]],[[13,[[2,[-2]],5]]],3,4],[[[2,[-1]]],[[13,[[2,[-2]],5]]],[3,4],[3,4]],[-1,[[13,[-2]]],[],[]],[[[2,[1]]],[[13,[-1,5]]],4],[[[2,[1]]],[[13,[-1,5]]],[3,4]],[-1,[[13,[-2]]],[],[]],[[[2,[1]]],[[13,[-1,5]]],4],[-1,14,[]],[-1,-2,12,12],[-1,-2,12,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[-1]]],[[2,[-2]]],12,12],[[[2,[-1]]],[[2,[-2]]],12,12],[[[2,[-1]]],[[2,[-2]]],12,12],[[[2,[-1]]],[[2,[-2]]],12,12],[[],-1,[]],[[],-1,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,3,15],[-1,-2,[3,4],[3,15]],[-1,-2,3,15],[[[2,[-1]]],[[2,[-2]]],3,15],[[[2,[-1]]],[[2,[-2]]],[3,4],[3,15]],[16,16],[[16,16],6],[[16,7],8],[[16,7],8],[5,16],[-1,-1,[]],[[[2,[1]]],-1,15],[[[2,[1]]],-1,[3,15]],[[16,-1],10,11],[-1,-2,[],[]],[[],6],[[[2,[1]]],-1,15],[-1,[[13,[-2,16]]],3,15],[-1,[[13,[-2,16]]],[3,4],[15,3]],[-1,[[13,[-2,16]]],3,15],[[[2,[-1]]],[[13,[[2,[-2]],16]]],3,15],[[[2,[-1]]],[[13,[[2,[-2]],16]]],[3,4],[15,3]],[-1,[[13,[-2]]],[],[]],[[[2,[1]]],[[13,[-1,16]]],15],[[[2,[1]]],[[13,[-1,16]]],[15,3]],[-1,[[13,[-2]]],[],[]],[[[2,[1]]],[[13,[-1,16]]],15],[-1,14,[]]],"c":[],"p":[[15,"u8"],[15,"slice"],[8,"NoUninit",0],[8,"AnyBitPattern",0],[4,"PodCastError",0],[15,"bool"],[3,"Formatter",122],[6,"Result",122],[4,"Option",123],[15,"tuple"],[8,"Hasher",124],[8,"Sized",125],[4,"Result",126],[3,"TypeId",127],[8,"CheckedBitPattern",87],[4,"CheckedCastError",87],[8,"Contiguous",0],[8,"TransparentWrapper",0],[8,"Zeroable",0]],"b":[[38,"impl-Debug-for-PodCastError"],[39,"impl-Display-for-PodCastError"],[101,"impl-Debug-for-CheckedCastError"],[102,"impl-Display-for-CheckedCastError"]]},\
"bytemuck_derive":{"doc":"Derive macros for bytemuck traits.","t":"YYYYYYYYY","n":["AnyBitPattern","ByteEq","ByteHash","CheckedBitPattern","Contiguous","NoUninit","Pod","TransparentWrapper","Zeroable"],"q":[[0,"bytemuck_derive"]],"d":["Derive the <code>AnyBitPattern</code> trait for a struct","Derive the <code>PartialEq</code> and <code>Eq</code> trait for a type","Derive the <code>Hash</code> trait for a type","Derive the <code>CheckedBitPattern</code> trait for a struct or enum.","Derive the <code>Contiguous</code> trait for an enum","Derive the <code>NoUninit</code> trait for a struct or enum","Derive the <code>Pod</code> trait for a struct","Derive the <code>TransparentWrapper</code> trait for a struct","Derive the <code>Zeroable</code> trait for a struct"],"i":[0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0],"c":[],"p":[],"b":[]},\
"cargo_run":{"doc":"","t":"DLLLLLLMFLLLLLFFMLLLLL","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","cpus","find_makefile","from","from_arg_matches","from_arg_matches_mut","group_id","into","main","mem","mem","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut"],"q":[[0,"cargo_run"],[22,"clap_builder::builder::command"],[23,"clap_builder::parser::matches::arg_matches"],[24,"clap_builder"],[25,"core::result"],[26,"clap_builder::util::id"],[27,"core::option"],[28,"alloc::string"],[29,"core::any"]],"d":["","","","","","","","number of SMP CPUs","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","amount of physical memory","","","","",""],"i":[0,4,4,4,4,4,4,4,0,4,4,4,4,4,0,0,4,4,4,4,4,4],"f":[0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[[],2],[-1,-1,[]],[3,[[6,[4,5]]]],[3,[[6,[4,5]]]],[[],[[8,[7]]]],[-1,-2,[],[]],[[],2],[9,[[6,[10,10]]]],0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,11,[]],[[4,3],[[6,[2,5]]]],[[4,3],[[6,[2,5]]]]],"c":[],"p":[[3,"Command",22],[15,"tuple"],[3,"ArgMatches",23],[3,"Args",0],[6,"Error",24],[4,"Result",25],[3,"Id",26],[4,"Option",27],[15,"str"],[3,"String",28],[3,"TypeId",29]],"b":[]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":"O","n":["cfg_if"],"q":[[0,"cfg_if"]],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"c":[],"p":[],"b":[]},\
"chrono":{"doc":"Chrono: Date and Time for Rust","t":"NNNDDICNDNNIQNCNCNNNCCRRSSRRSSNNNNNEDCCCCNNNCDDCDCDENENNINNCINNCNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLKLLLLLLKLLKLLKLLLALLLLLKLLLLLLLLLLLLLLLLLLLLLALLKLLKLLLLLLLLLLLLLLLAKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLKLLKLKLKLLKLLKLKLLKLLKLLLKLLKLLLLLLLNNDNNENNNNNNDDNNNNNENNNNNNNNNNNNNNENNNNNNEDEGDNNNNNNNCNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMMMMLMMMLLLMMFFMLLLLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMDLLLLLLLLLLLLLLDDSSRRSSSRRDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDENIQNIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCCCCCCCCCC","n":["April","August","AutoSi","Date","DateTime","Datelike","Days","December","Duration","DurationExceedsLimit","DurationExceedsTimestamp","DurationRound","Err","February","FixedOffset","Fri","IsoWeek","January","July","June","Local","LocalResult","MAX_DATE","MAX_DATETIME","MAX_UTC","MAX_UTC","MIN_DATE","MIN_DATETIME","MIN_UTC","MIN_UTC","March","May","Micros","Millis","Mon","Month","Months","NaiveDate","NaiveDateTime","NaiveTime","NaiveWeek","Nanos","November","October","Offset","OutOfRange","OutOfRangeError","ParseError","ParseMonthError","ParseResult","ParseWeekdayError","RoundingError","Sat","SecondsFormat","Secs","September","SubsecRound","Sun","Thu","TimeZone","Timelike","TimestampExceedsLimit","Tue","Utc","Wed","Weekday","add","add","add","add","add","add","add_assign","add_assign","and_hms","and_hms_micro","and_hms_micro_opt","and_hms_milli","and_hms_milli_opt","and_hms_nano","and_hms_nano_opt","and_hms_opt","and_time","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_add_days","checked_add_months","checked_add_signed","checked_add_signed","checked_sub","checked_sub_days","checked_sub_months","checked_sub_signed","checked_sub_signed","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","date","date_naive","day","day","day","day0","day0","day0","days","default","default","default","description","description","div","duration_round","duration_round","duration_trunc","duration_trunc","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fixed_offset","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format_with_items","format_with_items","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i64","from_i64","from_local","from_std","from_str","from_str","from_str","from_str","from_str","from_u32","from_u64","from_u64","from_utc","from_utc","hash","hash","hash","hash","hash","hash","hash","hash","hour","hour","hour12","hour12","hours","into","into","into","into","into","into","into","into","into","into","into","into","is_zero","iso_week","iso_week","iso_week","max_value","microseconds","milliseconds","min_value","minute","minute","minutes","month","month","month","month0","month0","month0","mul","naive","naive_local","naive_local","naive_utc","naive_utc","name","nanosecond","nanosecond","nanoseconds","neg","new","num_days","num_days_from_ce","num_days_from_ce","num_days_from_monday","num_days_from_sunday","num_hours","num_microseconds","num_milliseconds","num_minutes","num_nanoseconds","num_seconds","num_seconds_from_midnight","num_seconds_from_midnight","num_weeks","number_from_monday","number_from_month","number_from_sunday","offset","offset","offset","ordinal","ordinal","ordinal","ordinal0","ordinal0","ordinal0","parse_and_remainder","parse_from_rfc2822","parse_from_rfc3339","parse_from_str","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pred","pred","pred","pred_opt","prelude","round_subsecs","round_subsecs","second","second","seconds","signed_duration_since","signed_duration_since","span","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","succ","succ","succ","succ_opt","time","timestamp","timestamp_micros","timestamp_millis","timestamp_nanos","timestamp_subsec_micros","timestamp_subsec_millis","timestamp_subsec_nanos","timezone","timezone","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rfc2822","to_rfc3339","to_rfc3339_opts","to_std","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","trunc_subsecs","trunc_subsecs","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weekday","weekday","weeks","with_day","with_day","with_day","with_day0","with_day0","with_day0","with_hour","with_hour","with_minute","with_minute","with_month","with_month","with_month","with_month0","with_month0","with_month0","with_nanosecond","with_nanosecond","with_ordinal","with_ordinal","with_ordinal","with_ordinal0","with_ordinal0","with_ordinal0","with_second","with_second","with_timezone","with_timezone","with_year","with_year","with_year","year","year","year","year_ce","year_ce","years_since","years_since","zero","BadFormat","Day","DelayedFormat","Err","Error","Fixed","Fixed","Hour","Hour12","Impossible","Internal","Internal","InternalFixed","InternalNumeric","Invalid","IsoWeek","IsoYear","IsoYearDiv100","IsoYearMod100","Item","Literal","LongMonthName","LongWeekdayName","LowerAmPm","Minute","Month","Nanosecond","Nanosecond","Nanosecond3","Nanosecond6","Nanosecond9","None","NotEnough","NumDaysFromSun","Numeric","Numeric","Ok","Ordinal","OutOfRange","OwnedLiteral","OwnedSpace","Pad","ParseError","ParseErrorKind","ParseResult","Parsed","RFC2822","RFC3339","Second","ShortMonthName","ShortWeekdayName","Space","Space","StrftimeItems","Timestamp","TimezoneName","TimezoneOffset","TimezoneOffsetColon","TimezoneOffsetColonZ","TimezoneOffsetDoubleColon","TimezoneOffsetTripleColon","TimezoneOffsetZ","TooLong","TooShort","UpperAmPm","WeekFromMon","WeekFromSun","WeekdayFromMon","Year","YearDiv100","YearMod100","Zero","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","day","default","description","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format_item","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hour_div_12","hour_mod_12","into","into","into","into","into","into","into","into","into","into","isoweek","isoyear","isoyear_div_100","isoyear_mod_100","kind","minute","month","nanosecond","new","new","new_with_offset","offset","ordinal","parse","parse_and_remainder","second","set_ampm","set_day","set_hour","set_hour12","set_isoweek","set_isoyear","set_isoyear_div_100","set_isoyear_mod_100","set_minute","set_month","set_nanosecond","set_offset","set_ordinal","set_second","set_timestamp","set_week_from_mon","set_week_from_sun","set_weekday","set_year","set_year_div_100","set_year_mod_100","strftime","timestamp","to_datetime","to_datetime_with_timezone","to_fixed_offset","to_naive_date","to_naive_datetime_with_offset","to_naive_time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","week_from_mon","week_from_sun","weekday","year","year_div_100","year_mod_100","StrftimeItems","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","new","next","to_owned","try_from","try_into","type_id","Days","IsoWeek","MAX","MAX","MAX_DATE","MAX_DATETIME","MIN","MIN","MIN","MIN_DATE","MIN_DATETIME","NaiveDate","NaiveDateTime","NaiveTime","NaiveWeek","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","and_hms","and_hms_micro","and_hms_micro_opt","and_hms_milli","and_hms_milli_opt","and_hms_nano","and_hms_nano_opt","and_hms_opt","and_local_timezone","and_time","and_utc","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add_days","checked_add_days","checked_add_months","checked_add_months","checked_add_signed","checked_add_signed","checked_sub_days","checked_sub_days","checked_sub_months","checked_sub_months","checked_sub_signed","checked_sub_signed","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","date","day","day","day0","day0","days","default","default","default","duration_round","duration_trunc","eq","eq","eq","eq","eq","first_day","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format_with_items","format_with_items","format_with_items","from","from","from","from","from","from","from","from_hms","from_hms_micro","from_hms_micro_opt","from_hms_milli","from_hms_milli_opt","from_hms_nano","from_hms_nano_opt","from_hms_opt","from_isoywd","from_isoywd_opt","from_num_days_from_ce","from_num_days_from_ce_opt","from_num_seconds_from_midnight","from_num_seconds_from_midnight_opt","from_str","from_str","from_str","from_timestamp","from_timestamp_micros","from_timestamp_millis","from_timestamp_opt","from_weekday_of_month","from_weekday_of_month_opt","from_ymd","from_ymd_opt","from_yo","from_yo_opt","hash","hash","hash","hash","hash","hour","hour","into","into","into","into","into","into","iso_week","iso_week","iter_days","iter_weeks","last_day","minute","minute","month","month","month0","month0","nanosecond","nanosecond","new","new","num_seconds_from_midnight","ordinal","ordinal","ordinal0","ordinal0","overflowing_add_signed","overflowing_sub_signed","parse_and_remainder","parse_and_remainder","parse_and_remainder","parse_from_str","parse_from_str","parse_from_str","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pred","pred_opt","round_subsecs","round_subsecs","second","second","signed_duration_since","signed_duration_since","signed_duration_since","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","succ","succ_opt","time","timestamp","timestamp_micros","timestamp_millis","timestamp_nanos","timestamp_subsec_micros","timestamp_subsec_millis","timestamp_subsec_nanos","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","trunc_subsecs","trunc_subsecs","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","week","week","week0","weekday","weekday","with_day","with_day","with_day0","with_day0","with_hour","with_hour","with_minute","with_minute","with_month","with_month","with_month0","with_month0","with_nanosecond","with_nanosecond","with_ordinal","with_ordinal","with_ordinal0","with_ordinal0","with_second","with_second","with_year","with_year","year","year","year","years_since","Ambiguous","FixedOffset","Local","LocalResult","None","Offset","Offset","Single","TimeZone","Utc","and_hms_micro_opt","and_hms_milli_opt","and_hms_nano_opt","and_hms_opt","and_time","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","datetime_from_str","earliest","east","east_opt","eq","eq","eq","fix","fix","fix","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_local_date","from_local_datetime","from_offset","from_offset","from_offset","from_offset","from_utc_date","from_utc_datetime","hash","hash","hash","into","into","into","into","isoywd","isoywd_opt","latest","local_minus_utc","map","now","now","offset_from_local_date","offset_from_local_date","offset_from_local_date","offset_from_local_date","offset_from_local_datetime","offset_from_local_datetime","offset_from_local_datetime","offset_from_local_datetime","offset_from_utc_date","offset_from_utc_date","offset_from_utc_date","offset_from_utc_date","offset_from_utc_datetime","offset_from_utc_datetime","offset_from_utc_datetime","offset_from_utc_datetime","single","timestamp","timestamp_millis","timestamp_millis_opt","timestamp_nanos","timestamp_opt","to_owned","to_owned","to_owned","to_owned","to_string","to_string","today","today","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrap","utc_minus_local","west","west_opt","with_ymd_and_hms","ymd","ymd_opt","yo","yo_opt","Date","DateTime","Datelike","FixedOffset","Local","Month","NaiveDate","NaiveDateTime","NaiveTime","Offset","SecondsFormat","SubsecRound","TimeZone","Timelike","Utc","Weekday"],"q":[[0,"chrono"],[468,"chrono::format"],[727,"chrono::format::strftime"],[742,"chrono::naive"],[1023,"chrono::offset"],[1147,"chrono::prelude"],[1163,"core::option"],[1164,"core::clone"],[1165,"core::cmp"],[1166,"core::result"],[1167,"core::fmt"],[1168,"core::fmt"],[1169,"std::time"],[1170,"core::time"],[1171,"core::hash"],[1172,"core::ops::function"],[1173,"alloc::string"],[1174,"core::any"],[1175,"core::fmt"],[1176,"core::cmp"]],"d":["April","August","Automatically select one of <code>Secs</code>, <code>Millis</code>, <code>Micros</code>, or <code>Nanos</code> …","ISO 8601 calendar date with time zone.","ISO 8601 combined date and time with time zone.","The common set of methods for date component.","","December","ISO 8601 time duration with nanosecond precision. This …","Error when <code>Duration.num_nanoseconds</code> exceeds the limit.","Error when the Duration exceeds the Duration from or until …","Extension trait for rounding or truncating a DateTime by a …","Error that can occur in rounding or truncating","February","","Friday.","","January","July","June","","","The maximum possible <code>Date</code>.","The maximum possible <code>DateTime&lt;Utc&gt;</code>.","The maximum possible <code>Date</code>.","The maximum possible <code>DateTime&lt;Utc&gt;</code>.","The minimum possible <code>Date</code>.","The minimum possible <code>DateTime&lt;Utc&gt;</code>.","The minimum possible <code>Date</code>.","The minimum possible <code>DateTime&lt;Utc&gt;</code>.","March","May","Use fixed 6 subsecond digits. This corresponds to …","Use fixed 3 subsecond digits. This corresponds to …","Monday.","The month of the year.","A duration in calendar months","","","","","Use fixed 9 subsecond digits. This corresponds to …","November","October","","Out of range error type used in various converting APIs","Represents error when converting <code>Duration</code> to/from a …","","An error resulting from reading <code>&lt;Month&gt;</code> value with <code>FromStr</code>.","","An error resulting from reading <code>Weekday</code> value with <code>FromStr</code>.","An error from rounding by <code>Duration</code>","Saturday.","Specific formatting options for seconds. This may be …","Format whole seconds only, with no decimal point nor …","September","Extension trait for subsecond rounding or truncation to a …","Sunday.","Thursday.","","The common set of methods for time component.","Error when <code>DateTime.timestamp_nanos</code> exceeds the limit.","Tuesday.","","Wednesday.","The day of week.","","","","","","","","","Makes a new <code>DateTime</code> from the current date, hour, minute …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute …","Makes a new <code>DateTime</code> from the current date and given …","","","","","","","","","","","","","","","","","","","","","","","","","Add two durations, returning <code>None</code> if overflow occurred.","Add a duration in <code>Days</code> to the date part of the <code>DateTime</code>","Adds given <code>Months</code> to the current date and time.","Adds given <code>Duration</code> to the current date.","Adds given <code>Duration</code> to the current date and time.","Subtract two durations, returning <code>None</code> if overflow …","Subtract a duration in <code>Days</code> from the date part of the …","Subtracts given <code>Months</code> from the current date and time.","Subtracts given <code>Duration</code> from the current date.","Subtracts given <code>Duration</code> from the current date and time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves a date component","Retrieves the Date without an associated timezone","Returns the day of month starting from 1.","","","Returns the day of month starting from 0.","","","Makes a new <code>Duration</code> with given number of days. Equivalent …","","","","","","","Return a copy rounded by Duration.","","Return a copy truncated by Duration.","","","","","","","","","","","","","","Fix the offset from UTC to its current value, dropping the …","","","","","","","","","","","","","","","","","","","","","Formatting (and parsing) utilities for date and time.","Formats the date with the specified format string. See the …","Formats the combined date and time per the specified …","Formats the date with the specified formatting items.","Formats the combined date and time with the specified …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert this <code>DateTime&lt;FixedOffset&gt;</code> instance into a …","Convert this <code>DateTime&lt;Local&gt;</code> instance into a <code>DateTime&lt;Utc&gt;</code> …","Convert this <code>DateTime&lt;Local&gt;</code> instance into a …","Convert this <code>DateTime&lt;Utc&gt;</code> instance into a <code>DateTime&lt;Local&gt;</code> …","","","Convert this <code>DateTime&lt;FixedOffset&gt;</code> instance into a …","Convert this <code>DateTime&lt;Utc&gt;</code> instance into a …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Makes a new <code>DateTime</code> with given <strong>local</strong> datetime and offset …","Creates a <code>time::Duration</code> object from <code>std::time::Duration</code>","","","","","","","","Returns an <code>Option&lt;Month&gt;</code> from a i64, assuming a 1-index, …","Makes a new <code>Date</code> with given <em>UTC</em> date and offset. The local …","Makes a new <code>DateTime</code> with given <em>UTC</em> datetime and offset. …","","","","","","","","","Returns the hour number from 0 to 23.","","Returns the hour number from 1 to 12 with a boolean flag, …","Returns the hour number from 1 to 12 with a boolean flag, …","Makes a new <code>Duration</code> with given number of hours. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the duration equals <code>Duration::zero()</code>.","Returns the ISO week.","","","The maximum possible <code>Duration</code>: <code>i64::MAX</code> milliseconds.","Makes a new <code>Duration</code> with given number of microseconds.","Makes a new <code>Duration</code> with given number of milliseconds.","The minimum possible <code>Duration</code>: <code>i64::MIN</code> milliseconds.","Returns the minute number from 0 to 59.","","Makes a new <code>Duration</code> with given number of minutes. …","Returns the month number starting from 1.","","","Returns the month number starting from 0.","","","","Date and time types unconcerned with timezones.","Returns a view to the naive local date.","Returns a view to the naive local datetime.","Returns a view to the naive UTC date.","Returns a view to the naive UTC datetime.","Get the name of the month","Returns the number of nanoseconds since the whole non-leap …","","Makes a new <code>Duration</code> with given number of nanoseconds.","","Construct a new <code>Months</code> from a number of months","Returns the total number of whole days in the duration.","Counts the days in the proleptic Gregorian calendar, with …","Counts the days in the proleptic Gregorian calendar, with …","Returns a day-of-week number starting from Monday = 0.","Returns a day-of-week number starting from Sunday = 0.","Returns the total number of whole hours in the duration.","Returns the total number of whole microseconds in the …","Returns the total number of whole milliseconds in the …","Returns the total number of whole minutes in the duration.","Returns the total number of whole nanoseconds in the …","Returns the total number of whole seconds in the duration.","Returns the number of non-leap seconds past the last …","Returns the number of non-leap seconds past the last …","Returns the total number of whole weeks in the duration.","Returns a day-of-week number starting from Monday = 1. …","Returns a month-of-year number starting from January = 1.","Returns a day-of-week number starting from Sunday = 1.","The time zone, which calculates offsets from the local …","Retrieves an associated offset from UTC.","Retrieves an associated offset from UTC.","Returns the day of year starting from 1.","","","Returns the day of year starting from 0.","","","Parses a string from a user-specified format into a …","Parses an RFC 2822 date-and-time string into a …","Parses an RFC 3339 date-and-time string into a …","Parses a string from a user-specified format into a …","","","Compare two DateTimes based on their true time, ignoring …","","","Makes a new <code>Date</code> for the prior date.","The previous day in the week.","The previous month.","Makes a new <code>Date</code> for the prior date.","A convenience module appropriate for glob imports (…","Return a copy rounded to the specified number of subsecond …","","Returns the second number from 0 to 59.","","Makes a new <code>Duration</code> with given number of seconds. Panics …","Subtracts another <code>Date</code> from the current date. Returns a …","Subtracts another <code>DateTime</code> from the current date and time. …","Runs a closure, returning the duration of time it took to …","","","","","","","","","","","Makes a new <code>Date</code> for the next date.","The next day in the week.","The next month.","Makes a new <code>Date</code> for the next date.","Retrieves a time component. Unlike <code>date</code>, this is not …","Returns the number of non-leap seconds since January 1, …","Returns the number of non-leap-microseconds since January …","Returns the number of non-leap-milliseconds since January …","Returns the number of non-leap-nanoseconds since January …","Returns the number of microseconds since the last second …","Returns the number of milliseconds since the last second …","Returns the number of nanoseconds since the last second …","Retrieves an associated time zone.","Retrieves an associated time zone.","","","","","","","","","","","","","Returns an RFC 2822 date and time string such as …","Returns an RFC 3339 and ISO 8601 date and time string such …","Return an RFC 3339 and ISO 8601 date and time string with …","Creates a <code>std::time::Duration</code> object from <code>time::Duration</code>","","","","","","","","","Return a copy truncated to the specified number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the day of week.","","","Makes a new <code>Duration</code> with given number of weeks. …","Makes a new value with the day of month (starting from 1) …","","","Makes a new value with the day of month (starting from 0) …","","","Makes a new value with the hour number changed.","","Makes a new value with the minute number changed.","","Makes a new value with the month number (starting from 1) …","","","Makes a new value with the month number (starting from 0) …","","","Makes a new value with nanoseconds since the whole …","","Makes a new value with the day of year (starting from 1) …","","","Makes a new value with the day of year (starting from 0) …","","","Makes a new value with the second number changed.","","Changes the associated time zone. This does not change the …","Changes the associated time zone. The returned <code>DateTime</code> …","Makes a new value with the year number changed.","","","Returns the year number in the calendar date.","","","Returns the absolute year number starting from 1 with a …","Returns the absolute year number starting from 1 with a …","Returns the number of whole years from the given <code>base</code> …","Retrieve the elapsed years from now to the given <code>DateTime</code>.","A duration where the stored seconds and nanoseconds are …","There was an error on the formatting string, or there were …","Day of the month (FW=PW=2).","A <em>temporary</em> object which can be used as an argument to …","Contains the error value","Issues a formatting error. Used to signal an invalid …","Fixed-format item types.","Fixed-format item.","Hour number in the 24-hour clocks (FW=PW=2).","Hour number in the 12-hour clocks (FW=PW=2).","There is no possible date and time value with given set of …","Internal uses only.","Internal uses only.","An opaque type representing fixed-format item types for …","An opaque type representing numeric item types for …","The input string has some invalid character sequence for …","Week number in the ISO week date (FW=PW=2).","Year in the ISO week date (FW=4, PW=∞). May accept years …","Year in the ISO week date, divided by 100 (FW=PW=2). …","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be …","A single formatting item. This is used for both formatting …","A literally printed and parsed text.","Full month names.","Full day of the week names.","AM/PM.","The number of minutes since the last whole hour (FW=PW=2).","Month (FW=PW=2).","The number of nanoseconds since the last whole second …","An optional dot plus one or more digits for left-aligned …","Same as <code>Nanosecond</code> but the accuracy is fixed to 3.","Same as <code>Nanosecond</code> but the accuracy is fixed to 6.","Same as <code>Nanosecond</code> but the accuracy is fixed to 9.","No padding.","Given set of fields is not enough to make a requested date …","Day of the week, where Sunday = 0 and Saturday = 6 …","Numeric item types. They have associated formatting width …","Numeric item. Can be optionally padded to the maximal …","Contains the success value","Day of the year (FW=PW=3).","Given field is out of permitted range.","Same as <code>Literal</code> but with the string owned by the item.","Same as <code>Space</code> but with the string owned by the item.","Padding characters for numeric items.","An error from the <code>parse</code> function.","The category of parse error","Same as <code>Result&lt;T, ParseError&gt;</code>.","Parsed parts of date and time. There are two classes of …","RFC 2822 date and time syntax. Commonly used for email and …","RFC 3339 &amp; ISO 8601 date and time syntax.","The number of seconds since the last whole minute …","Abbreviated month names.","Abbreviated day of the week names.","Space padding.","Whitespace. Prints literally but reads zero or more …","","The number of non-leap seconds since the midnight UTC on …","Timezone name.","Same as <code>TimezoneOffsetColon</code> but prints no colon. Parsing …","Offset from the local time to UTC (<code>+09:00</code> or <code>-04:00</code> or …","Offset from the local time to UTC (<code>+09:00</code> or <code>-04:00</code> or <code>Z</code>).","Offset from the local time to UTC with seconds (<code>+09:00:00</code> …","Offset from the local time to UTC without minutes (<code>+09</code> or …","Same as <code>TimezoneOffsetColonZ</code> but prints no colon. Parsing …","All formatting items have been read but there is a …","The input string has been prematurely ended.","AM/PM.","Week number, where the week 1 starts at the first Monday …","Week number, where the week 1 starts at the first Sunday …","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).","Full Gregorian year (FW=4, PW=∞). May accept years …","Gregorian year divided by 100 (century number; FW=PW=2). …","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","Zero (<code>0</code>) padding.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Day of the month (1–28, 1–29, 1–30 or 1–31 …","","","","","","","","","","","","","","","","","","","","","","","","Tries to format given arguments with given formatting …","Formats single formatting item","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Hour number divided by 12 (0–1). 0 indicates AM and 1 …","Hour number modulo 12 (0–11).","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","ISO week number (1–52 or 1–53 depending on the year).","Year in the ISO week date.","Year in the ISO week date, divided by 100. Implies that …","Year in the ISO week date, modulo 100. Implies that the …","The category of parse error","Minute number (0–59).","Month (1–12).","The number of nanoseconds since the whole second (0–…","Returns the initial value of parsed parts.","Makes a new <code>DelayedFormat</code> value out of local date and time.","Makes a new <code>DelayedFormat</code> value out of local date and time …","Offset from the local time to UTC, in seconds.","Day of the year (1–365 or 1–366 depending on the year).","Tries to parse given string into <code>parsed</code> with given …","Tries to parse given string into <code>parsed</code> with given …","Second number (0–60, accounting for leap seconds).","Tries to set the <code>hour_div_12</code> field from given value. (<code>false</code>…","Tries to set the <code>day</code> field from given value.","Tries to set both <code>hour_div_12</code> and <code>hour_mod_12</code> fields from …","Tries to set the <code>hour_mod_12</code> field from given hour number …","Tries to set the <code>isoweek</code> field from given value.","Tries to set the <code>isoyear</code> field from given value.","Tries to set the <code>isoyear_div_100</code> field from given value.","Tries to set the <code>isoyear_mod_100</code> field from given value.","Tries to set the <code>minute</code> field from given value.","Tries to set the <code>month</code> field from given value.","Tries to set the <code>nanosecond</code> field from given value.","Tries to set the <code>offset</code> field from given value.","Tries to set the <code>ordinal</code> field from given value.","Tries to set the <code>second</code> field from given value.","Tries to set the <code>timestamp</code> field from given value.","Tries to set the <code>week_from_mon</code> field from given value.","Tries to set the <code>week_from_sun</code> field from given value.","Tries to set the <code>weekday</code> field from given value.","Tries to set the <code>year</code> field from given value.","Tries to set the <code>year_div_100</code> field from given value.","Tries to set the <code>year_mod_100</code> field from given value.","<code>strftime</code>/<code>strptime</code>-inspired date and time formatting syntax.","The number of non-leap seconds since the midnight UTC on …","Returns a parsed timezone-aware date and time out of given …","Returns a parsed timezone-aware date and time out of given …","Returns a parsed fixed time zone offset out of given …","Returns a parsed naive date out of given fields.","Returns a parsed naive date and time out of given fields, …","Returns a parsed naive time out of given fields.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Week number, where the week 1 starts at the first Monday …","Week number, where the week 1 starts at the first Sunday …","Day of the week.","Year.","Year divided by 100. Implies that the year is &gt;= 1 BCE …","Year modulo 100. Implies that the year is &gt;= 1 BCE when …","Parsing iterator for <code>strftime</code>-like format strings.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Creates a new parsing iterator from the <code>strftime</code>-like …","","","","","","A duration in calendar days.","ISO 8601 week.","The maximum possible <code>NaiveDate</code> (December 31, 262143 CE).","The maximum possible <code>NaiveDateTime</code>.","The maximum possible <code>NaiveDate</code> (December 31, 262143 CE).","The maximum possible <code>NaiveDateTime</code>.","The minimum possible <code>NaiveDate</code> (January 1, 262145 BCE).","The minimum possible <code>NaiveDateTime</code>.","The earliest possible <code>NaiveTime</code>","The minimum possible <code>NaiveDate</code> (January 1, 262145 BCE).","The minimum possible <code>NaiveDateTime</code>.","ISO 8601 calendar date without timezone. Allows for every …","ISO 8601 combined date and time without timezone.","ISO 8601 time without timezone. Allows for the nanosecond …","A week represented by a <code>NaiveDate</code> and a <code>Weekday</code> which is …","","","An addition of months to <code>NaiveDate</code> clamped to valid days …","","An addition of months to <code>NaiveDateTime</code> clamped to valid …","","","","","","","","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Converts the <code>NaiveDateTime</code> into the timezone-aware …","Makes a new <code>NaiveDateTime</code> from the current date and given …","Converts the <code>NaiveDateTime</code> into the timezone-aware …","","","","","","","","","","","","","Add a duration in <code>Days</code> to the date","Add a duration in <code>Days</code> to the date part of the …","Add a duration in <code>Months</code> to the date","Adds given <code>Months</code> to the current date and time.","Adds the <code>days</code> part of given <code>Duration</code> to the current date.","Adds given <code>Duration</code> to the current date and time.","Subtract a duration in <code>Days</code> from the date","Subtract a duration in <code>Days</code> from the date part of the …","Subtract a duration in <code>Months</code> from the date","Subtracts given <code>Months</code> from the current date and time.","Subtracts the <code>days</code> part of given <code>Duration</code> from the current …","Subtracts given <code>Duration</code> from the current date and time.","","","","","","","","","","","","","","","Retrieves a date component.","Returns the day of month starting from 1.","Returns the day of month starting from 1.","Returns the day of month starting from 0.","Returns the day of month starting from 0.","Returns a <code>RangeInclusive&lt;T&gt;</code> representing the whole week …","","","","","","","","","","","Returns a date representing the first day of the week.","","","","","","","","","","Formats the date with the specified format string. See the …","Formats the combined date and time with the specified …","Formats the time with the specified format string. See the …","Formats the date with the specified formatting items. …","Formats the combined date and time with the specified …","Formats the time with the specified formatting items. …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Makes a new <code>NaiveTime</code> from hour, minute and second.","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute, second and …","Makes a new <code>NaiveTime</code> from hour, minute and second.","Makes a new <code>NaiveDate</code> from the ISO week date (year, week …","Makes a new <code>NaiveDate</code> from the ISO week date (year, week …","Makes a new <code>NaiveDate</code> from a day’s number in the …","Makes a new <code>NaiveDate</code> from a day’s number in the …","Makes a new <code>NaiveTime</code> from the number of seconds since …","Makes a new <code>NaiveTime</code> from the number of seconds since …","","","","Makes a new <code>NaiveDateTime</code> corresponding to a UTC date and …","Creates a new NaiveDateTime from microseconds since the …","Creates a new NaiveDateTime from milliseconds since the …","Makes a new <code>NaiveDateTime</code> corresponding to a UTC date and …","Makes a new <code>NaiveDate</code> by counting the number of …","Makes a new <code>NaiveDate</code> by counting the number of …","Makes a new <code>NaiveDate</code> from the calendar date (year, month …","Makes a new <code>NaiveDate</code> from the calendar date (year, month …","Makes a new <code>NaiveDate</code> from the ordinal date (year and day …","Makes a new <code>NaiveDate</code> from the ordinal date (year and day …","","","","","","Returns the hour number from 0 to 23.","Returns the hour number from 0 to 23.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns an iterator that steps by days across all …","Returns an iterator that steps by weeks across all …","Returns a date representing the last day of the week.","Returns the minute number from 0 to 59.","Returns the minute number from 0 to 59.","Returns the month number starting from 1.","Returns the month number starting from 1.","Returns the month number starting from 0.","Returns the month number starting from 0.","Returns the number of nanoseconds since the whole non-leap …","Returns the number of nanoseconds since the whole non-leap …","Construct a new <code>Days</code> from a number of days","Makes a new <code>NaiveDateTime</code> from date and time components. …","Returns the number of non-leap seconds past the last …","Returns the day of year starting from 1.","Returns the day of year starting from 1.","Returns the day of year starting from 0.","Returns the day of year starting from 0.","Adds given <code>Duration</code> to the current time, and also returns …","Subtracts given <code>Duration</code> from the current time, and also …","Parses a string from a user-specified format into a new …","Parses a string with the specified format string and …","Parses a string from a user-specified format into a new …","Parses a string with the specified format string and …","Parses a string with the specified format string and …","Parses a string with the specified format string and …","","","","","","Makes a new <code>NaiveDate</code> for the previous calendar date.","Makes a new <code>NaiveDate</code> for the previous calendar date.","","","Returns the second number from 0 to 59.","Returns the second number from 0 to 59.","Subtracts another <code>NaiveDate</code> from the current date. Returns …","Subtracts another <code>NaiveDateTime</code> from the current date and …","Subtracts another <code>NaiveTime</code> from the current time. Returns …","","","A subtraction of Months from <code>NaiveDate</code> clamped to valid …","","","","","","","","","","","","","Makes a new <code>NaiveDate</code> for the next calendar date.","Makes a new <code>NaiveDate</code> for the next calendar date.","Retrieves a time component.","Returns the number of non-leap seconds since the midnight …","Returns the number of non-leap <em>microseconds</em> since midnight …","Returns the number of non-leap <em>milliseconds</em> since midnight …","Returns the number of non-leap <em>nanoseconds</em> since midnight …","Returns the number of microseconds since the last whole …","Returns the number of milliseconds since the last whole …","Returns the number of nanoseconds since the last whole …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>NaiveWeek</code> that the date belongs to, starting …","Returns the ISO week number starting from 1.","Returns the ISO week number starting from 0.","Returns the day of week.","Returns the day of week.","Makes a new <code>NaiveDate</code> with the day of month (starting from …","Makes a new <code>NaiveDateTime</code> with the day of month (starting …","Makes a new <code>NaiveDate</code> with the day of month (starting from …","Makes a new <code>NaiveDateTime</code> with the day of month (starting …","Makes a new <code>NaiveDateTime</code> with the hour number changed.","Makes a new <code>NaiveTime</code> with the hour number changed.","Makes a new <code>NaiveDateTime</code> with the minute number changed.","Makes a new <code>NaiveTime</code> with the minute number changed.","Makes a new <code>NaiveDate</code> with the month number (starting from …","Makes a new <code>NaiveDateTime</code> with the month number (starting …","Makes a new <code>NaiveDate</code> with the month number (starting from …","Makes a new <code>NaiveDateTime</code> with the month number (starting …","Makes a new <code>NaiveDateTime</code> with nanoseconds since the whole …","Makes a new <code>NaiveTime</code> with nanoseconds since the whole …","Makes a new <code>NaiveDate</code> with the day of year (starting from …","Makes a new <code>NaiveDateTime</code> with the day of year (starting …","Makes a new <code>NaiveDate</code> with the day of year (starting from …","Makes a new <code>NaiveDateTime</code> with the day of year (starting …","Makes a new <code>NaiveDateTime</code> with the second number changed.","Makes a new <code>NaiveTime</code> with the second number changed.","Makes a new <code>NaiveDate</code> with the year number changed.","Makes a new <code>NaiveDateTime</code> with the year number changed.","Returns the year number in the calendar date.","Returns the year number in the calendar date.","Returns the year number for this ISO week.","Returns the number of whole years from the given <code>base</code> …","Given local time representation has multiple results and …","The time zone with fixed offset, from UTC-23:59:59 to …","The local timescale. This is implemented via the standard …","The conversion result from the local time to the …","Given local time representation is invalid. This can occur …","The offset from the local time to UTC.","An associated offset type. This type is used to store the …","Given local time representation has a single unique result.","The time zone.","The UTC time zone. This is the most efficient time zone …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute, …","Makes a new <code>DateTime</code> from the current date, hour, minute …","Makes a new <code>DateTime</code> from the current date and given …","","","","","","","","","","","","","","","","","Parses a string with the specified format string and …","Returns <code>Some</code> for the earliest possible conversion result, …","Makes a new <code>FixedOffset</code> for the Eastern Hemisphere with …","Makes a new <code>FixedOffset</code> for the Eastern Hemisphere with …","","","","Returns the fixed offset from UTC to the local time stored.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts the local <code>NaiveDate</code> to the timezone-aware <code>Date</code> if …","Converts the local <code>NaiveDateTime</code> to the timezone-aware …","Reconstructs the time zone from the offset.","","","","Converts the UTC <code>NaiveDate</code> to the local time. The UTC is …","Converts the UTC <code>NaiveDateTime</code> to the local time. The UTC …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Makes a new <code>Date</code> from ISO week date (year and week …","Makes a new <code>Date</code> from ISO week date (year and week …","Returns <code>Some</code> for the latest possible conversion result, or …","Returns the number of seconds to add to convert from UTC …","Maps a <code>LocalResult&lt;T&gt;</code> into <code>LocalResult&lt;U&gt;</code> with given …","Returns a <code>DateTime</code> which corresponds to the current date …","Returns a <code>DateTime</code> which corresponds to the current date …","Creates the offset(s) for given local <code>NaiveDate</code> if …","","","","Creates the offset(s) for given local <code>NaiveDateTime</code> if …","","","","Creates the offset for given UTC <code>NaiveDate</code>. This cannot …","","","","Creates the offset for given UTC <code>NaiveDateTime</code>. This …","","","","Returns <code>Some</code> only when the conversion result is unique, or …","Makes a new <code>DateTime</code> from the number of non-leap seconds …","Makes a new <code>DateTime</code> from the number of non-leap …","Makes a new <code>DateTime</code> from the number of non-leap …","Makes a new <code>DateTime</code> from the number of non-leap …","Makes a new <code>DateTime</code> from the number of non-leap seconds …","","","","","","","Returns a <code>Date</code> which corresponds to the current date.","Returns a <code>Date</code> which corresponds to the current date.","","","","","","","","","","","","","Returns the single unique conversion result, or panics …","Returns the number of seconds to add to convert from the …","Makes a new <code>FixedOffset</code> for the Western Hemisphere with …","Makes a new <code>FixedOffset</code> for the Western Hemisphere with …","Make a new <code>DateTime</code> from year, month, day, time components …","Makes a new <code>Date</code> from year, month, day and the current …","Makes a new <code>Date</code> from year, month, day and the current …","Makes a new <code>Date</code> from year, day of year (DOY or “ordinal…","Makes a new <code>Date</code> from year, day of year (DOY or “ordinal…","","","","","","","","","","","","","","","",""],"i":[18,18,14,0,0,0,0,18,0,15,15,0,66,18,0,16,0,18,18,18,0,0,0,0,2,4,0,0,2,4,18,18,14,14,16,0,0,0,0,0,0,14,18,18,0,0,0,0,0,0,0,0,16,0,14,18,0,16,16,0,0,15,16,0,16,0,1,2,4,4,4,4,2,4,2,2,2,2,2,2,2,2,2,1,12,2,14,4,15,16,17,18,5,19,20,1,12,2,14,4,15,16,17,18,5,19,20,1,4,4,2,4,1,4,4,2,4,1,12,2,14,4,15,16,17,18,5,19,20,1,12,2,14,4,15,16,17,18,5,19,20,1,2,4,4,4,67,2,4,67,2,4,1,4,4,4,12,15,1,66,4,66,4,1,12,2,14,4,15,16,17,18,5,19,20,4,1,1,12,12,2,2,14,4,4,15,15,16,16,17,17,18,5,19,20,20,0,2,4,2,4,1,12,2,14,4,4,4,4,4,4,4,4,4,15,16,17,18,5,19,20,16,18,4,1,4,4,4,16,18,18,16,18,2,4,1,2,14,4,16,18,5,20,68,4,68,68,1,1,12,2,14,4,15,16,17,18,5,19,20,1,67,2,4,1,1,1,1,68,4,1,67,2,4,67,2,4,1,0,2,4,2,4,18,68,4,1,1,5,1,67,67,16,16,1,1,1,1,1,1,68,68,1,16,18,16,0,2,4,67,2,4,67,2,4,4,4,4,4,1,2,4,18,5,2,16,18,2,0,69,4,68,4,1,2,4,1,1,2,2,4,4,4,4,4,2,4,2,16,18,2,4,4,4,4,4,4,4,4,2,4,1,12,2,14,4,15,16,17,18,5,19,20,4,4,4,1,1,12,2,4,15,16,17,20,69,4,1,12,2,14,4,15,16,16,17,18,18,5,19,20,1,12,2,14,4,15,16,17,18,5,19,20,1,12,2,14,4,15,16,17,18,5,19,20,67,2,4,1,67,2,4,67,2,4,68,4,68,4,67,2,4,67,2,4,68,4,67,2,4,67,2,4,68,4,2,4,67,2,4,67,2,4,67,67,2,4,1,55,49,0,39,53,0,53,49,49,55,49,51,0,0,55,49,49,49,49,0,53,51,51,51,49,49,49,51,51,51,51,48,55,49,0,53,39,49,55,53,53,0,0,0,0,0,51,51,49,51,51,48,53,0,49,51,51,51,51,51,51,51,55,55,51,49,49,49,49,49,49,48,48,49,50,51,52,53,54,55,56,34,48,49,50,51,52,53,54,55,56,34,48,49,50,51,52,53,54,55,56,48,49,50,51,52,53,54,55,56,56,56,54,48,49,50,51,52,53,54,55,56,48,49,50,51,52,53,54,54,55,56,34,34,0,0,48,49,50,51,52,53,54,55,56,34,48,49,50,51,52,53,54,55,56,56,56,48,49,50,51,52,53,54,55,56,34,56,56,56,56,54,56,56,56,56,34,34,56,56,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,56,56,56,56,56,56,56,48,49,50,51,52,53,54,55,56,54,34,48,49,50,51,52,53,54,55,56,34,48,49,50,51,52,53,54,55,56,34,48,49,50,51,52,53,54,55,56,34,56,56,56,56,56,56,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,22,37,0,0,22,37,11,0,0,0,0,0,0,22,22,22,37,37,37,37,11,11,22,37,11,22,22,22,22,22,22,22,22,37,22,37,61,6,22,37,42,11,61,6,22,37,42,11,22,37,22,37,22,37,22,37,22,37,22,37,6,22,37,42,11,6,22,37,42,11,22,37,42,11,37,22,37,22,37,61,22,37,11,37,37,6,22,37,42,11,61,61,6,22,22,37,37,42,11,11,22,37,11,22,37,11,61,6,22,22,37,42,11,11,11,11,11,11,11,11,11,22,22,22,22,11,11,22,37,11,37,37,37,37,22,22,22,22,22,22,6,22,37,42,11,37,11,61,6,22,37,42,11,22,37,22,22,61,37,11,22,37,22,37,37,11,6,37,11,22,37,22,37,11,11,22,37,11,22,37,11,6,22,37,42,11,22,22,37,11,37,11,22,37,11,22,22,22,22,37,37,37,37,37,11,11,11,22,37,11,22,22,37,37,37,37,37,37,37,37,6,22,37,42,11,22,37,11,37,11,61,6,22,37,42,11,61,6,22,37,42,11,61,6,22,37,42,11,22,42,42,22,37,22,37,22,37,37,11,37,11,22,37,22,37,37,11,22,37,22,37,37,11,22,37,22,37,42,22,60,0,0,0,60,0,3,60,0,0,60,60,60,60,60,7,24,25,60,7,24,25,60,7,24,25,60,7,24,25,60,3,60,7,7,7,25,60,58,7,25,7,7,24,25,25,60,7,24,25,60,3,3,3,7,24,25,3,3,7,25,60,7,24,25,60,3,3,60,7,60,24,25,3,7,24,25,3,7,24,25,3,7,24,25,3,7,24,25,60,3,3,3,3,3,7,24,25,60,7,25,24,25,7,24,25,60,7,24,25,60,7,24,25,60,60,7,7,7,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[[2,[-1]],1],[[2,[-1]]],3],[[[4,[-1]],5],[],3],[[[4,[-1]],1],[[4,[-1]]],3],[[[4,[-1]],6],[],3],[[[4,[-1]],7],[[4,[-1]]],3],[[[2,[-1]],1],8,3],[[[4,[-1]],1],8,3],[[[2,[-1]],9,9,9],[[4,[-1]]],3],[[[2,[-1]],9,9,9,9],[[4,[-1]]],3],[[[2,[-1]],9,9,9,9],[[10,[[4,[-1]]]]],3],[[[2,[-1]],9,9,9,9],[[4,[-1]]],3],[[[2,[-1]],9,9,9,9],[[10,[[4,[-1]]]]],3],[[[2,[-1]],9,9,9,9],[[4,[-1]]],3],[[[2,[-1]],9,9,9,9],[[10,[[4,[-1]]]]],3],[[[2,[-1]],9,9,9],[[10,[[4,[-1]]]]],3],[[[2,[-1]],11],[[10,[[4,[-1]]]]],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],[[10,[1]]]],[[[4,[-1]],6],[[10,[[4,[-1]]]]],3],[[[4,[-1]],5],[[10,[[4,[-1]]]]],3],[[[2,[-1]],1],[[10,[[2,[-1]]]]],3],[[[4,[-1]],1],[[10,[[4,[-1]]]]],3],[[1,1],[[10,[1]]]],[[[4,[-1]],6],[[10,[[4,[-1]]]]],3],[[[4,[-1]],5],[[10,[[4,[-1]]]]],3],[[[2,[-1]],1],[[10,[[2,[-1]]]]],3],[[[4,[-1]],1],[[10,[[4,[-1]]]]],3],[1,1],[12,12],[[[2,[-1]]],[[2,[-1]]],[13,3]],[14,14],[[[4,[-1]]],[[4,[-1]]],[13,3]],[15,15],[16,16],[17,17],[18,18],[5,5],[19,19],[20,20],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[1,1],21],[[[2,[-1]],[2,[-1]]],21,3],[[[4,[-1]],[4,[-1]]],21,3],[[[4,[-1]]],[[2,[-1]]],3],[[[4,[-1]]],22,3],[-1,9,[]],[[[2,[-1]]],9,3],[[[4,[-1]]],9,3],[-1,9,[]],[[[2,[-1]]],9,3],[[[4,[-1]]],9,3],[23,1],[[],[[4,[24]]]],[[],[[4,[25]]]],[[],[[4,[7]]]],[12,26],[15,26],[[1,27],1],[[-1,1],[[28,[-1]]],[]],[[[4,[-1]],1],[[28,[[4,[-1]]]]],3],[[-1,1],[[28,[-1]]],[]],[[[4,[-1]],1],[[28,[[4,[-1]]]]],3],[[1,1],29],[[12,12],29],[[[2,[-1]],[2,[-2]]],29,3,3],[[14,14],29],[[[4,[-1]],[4,[-2]]],29,3,3],[[15,15],29],[[16,16],29],[[17,17],29],[[18,18],29],[[5,5],29],[[19,19],29],[[20,20],29],[[[4,[-1]]],[[4,[7]]],3],[[1,30],[[28,[8,31]]]],[[1,30],[[28,[8,31]]]],[[12,30],[[28,[8,31]]]],[[12,30],[[28,[8,31]]]],[[[2,[-1]],30],32,3],[[[2,[-1]],30],32,3],[[14,30],32],[[[4,[-1]],30],32,3],[[[4,[-1]],30],32,3],[[15,30],32],[[15,30],32],[[16,30],32],[[16,30],32],[[17,30],32],[[17,30],32],[[18,30],32],[[5,30],32],[[19,30],32],[[20,30],32],[[20,30],32],0,[[[2,[-1]],26],[[34,[33]]],3],[[[4,[-1]],26],[[34,[33]]],3],[[[2,[-1]],-2],[[34,[-2]]],3,[35,13]],[[[4,[-1]],-2],[[34,[-2]]],3,[35,13]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[4,[7]]],[[4,[24]]]],[[[4,[24]]],[[4,[25]]]],[[[4,[24]]],[[4,[7]]]],[[[4,[25]]],[[4,[24]]]],[36,[[4,[24]]]],[36,[[4,[25]]]],[[[4,[7]]],[[4,[25]]]],[[[4,[25]]],[[4,[7]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[23,[[10,[16]]]],[23,[[10,[18]]]],[37,[[4,[-1]]],3],[38,[[28,[1,12]]]],[26,[[39,[[4,[7]]]]]],[26,[[39,[[4,[24]]]]]],[26,[[39,[[4,[25]]]]]],[26,[[28,[16]]]],[26,[[28,[18]]]],[9,[[10,[18]]]],[40,[[10,[16]]]],[40,[[10,[18]]]],[22,[[2,[-1]]],3],[37,[[4,[-1]]],3],[[1,-1],8,41],[[[2,[-1]],-2],8,3,41],[[14,-1],8,41],[[[4,[-1]],-2],8,3,41],[[16,-1],8,41],[[18,-1],8,41],[[5,-1],8,41],[[20,-1],8,41],[-1,9,[]],[[[4,[-1]]],9,3],[-1,[[8,[29,9]]],[]],[-1,[[8,[29,9]]],[]],[23,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,29],[-1,42,[]],[[[2,[-1]]],42,3],[[[4,[-1]]],42,3],[[],1],[23,1],[23,1],[[],1],[-1,9,[]],[[[4,[-1]]],9,3],[23,1],[-1,9,[]],[[[2,[-1]]],9,3],[[[4,[-1]]],9,3],[-1,9,[]],[[[2,[-1]]],9,3],[[[4,[-1]]],9,3],[[1,27],1],0,[[[2,[-1]]],22,3],[[[4,[-1]]],37,3],[[[2,[-1]]],22,3],[[[4,[-1]]],37,3],[18,26],[-1,9,[]],[[[4,[-1]]],9,3],[23,1],[1,1],[9,5],[1,23],[-1,27,[]],[-1,27,[]],[16,9],[16,9],[1,23],[1,[[10,[23]]]],[1,23],[1,23],[1,[[10,[23]]]],[1,23],[-1,9,[]],[-1,9,[]],[1,23],[16,9],[18,9],[16,9],0,[[[2,[-1]]],[],3],[[[4,[-1]]],[],3],[-1,9,[]],[[[2,[-1]]],9,3],[[[4,[-1]]],9,3],[-1,9,[]],[[[2,[-1]]],9,3],[[[4,[-1]]],9,3],[[26,26],[[39,[[8,[[4,[7]],26]]]]]],[26,[[39,[[4,[7]]]]]],[26,[[39,[[4,[7]]]]]],[[26,26],[[39,[[4,[7]]]]]],[[1,1],[[10,[21]]]],[[[2,[-1]],[2,[-1]]],[[10,[21]]],3],[[[4,[-1]],[4,[-2]]],[[10,[21]]],3,3],[[18,18],[[10,[21]]]],[[5,5],[[10,[21]]]],[[[2,[-1]]],[[2,[-1]]],3],[16,16],[18,18],[[[2,[-1]]],[[10,[[2,[-1]]]]],3],0,[[-1,43],-1,[]],[[-1,43],-2,[],[]],[-1,9,[]],[[[4,[-1]]],9,3],[23,1],[[[2,[-1]],[2,[-2]]],1,3,3],[[[4,[-1]],[4,[-2]]],1,3,3],[-1,1,44],[[1,1],1],[[[2,[-1]],[2,[-1]]],1,3],[[[2,[-1]],1],[[2,[-1]]],3],[[[4,[-1]],1],[[4,[-1]]],3],[[[4,[-1]],6],[],3],[[[4,[-1]],7],[[4,[-1]]],3],[[[4,[-1]],[4,[-1]]],1,3],[[[4,[-1]],5],[],3],[[[2,[-1]],1],8,3],[[[4,[-1]],1],8,3],[[[2,[-1]]],[[2,[-1]]],3],[16,16],[18,18],[[[2,[-1]]],[[10,[[2,[-1]]]]],3],[[[4,[-1]]],11,3],[[[4,[-1]]],23,3],[[[4,[-1]]],23,3],[[[4,[-1]]],23,3],[[[4,[-1]]],23,3],[[[4,[-1]]],9,3],[[[4,[-1]]],9,3],[[[4,[-1]]],9,3],[[[2,[-1]]],-1,3],[[[4,[-1]]],-1,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[4,[-1]]],45,3],[[[4,[-1]]],45,3],[[[4,[-1]],14,29],45,3],[1,[[28,[38,12]]]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[[-1,43],-1,[]],[[-1,43],-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[46,[[28,[16]]]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[46,[[28,[18]]]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,16,[]],[[[2,[-1]]],16,3],[[[4,[-1]]],16,3],[23,1],[[-1,9],[[10,[-1]]],[]],[[[2,[-1]],9],[[10,[[2,[-1]]]]],3],[[[4,[-1]],9],[[10,[[4,[-1]]]]],3],[[-1,9],[[10,[-1]]],[]],[[[2,[-1]],9],[[10,[[2,[-1]]]]],3],[[[4,[-1]],9],[[10,[[4,[-1]]]]],3],[[-1,9],[[10,[-1]]],[]],[[[4,[-1]],9],[[10,[[4,[-1]]]]],3],[[-1,9],[[10,[-1]]],[]],[[[4,[-1]],9],[[10,[[4,[-1]]]]],3],[[-1,9],[[10,[-1]]],[]],[[[2,[-1]],9],[[10,[[2,[-1]]]]],3],[[[4,[-1]],9],[[10,[[4,[-1]]]]],3],[[-1,9],[[10,[-1]]],[]],[[[2,[-1]],9],[[10,[[2,[-1]]]]],3],[[[4,[-1]],9],[[10,[[4,[-1]]]]],3],[[-1,9],[[10,[-1]]],[]],[[[4,[-1]],9],[[10,[[4,[-1]]]]],3],[[-1,9],[[10,[-1]]],[]],[[[2,[-1]],9],[[10,[[2,[-1]]]]],3],[[[4,[-1]],9],[[10,[[4,[-1]]]]],3],[[-1,9],[[10,[-1]]],[]],[[[2,[-1]],9],[[10,[[2,[-1]]]]],3],[[[4,[-1]],9],[[10,[[4,[-1]]]]],3],[[-1,9],[[10,[-1]]],[]],[[[4,[-1]],9],[[10,[[4,[-1]]]]],3],[[[2,[-1]],-2],[[2,[-2]]],3,3],[[[4,[-1]],-2],[[4,[-2]]],3,3],[[-1,27],[[10,[-1]]],[]],[[[2,[-1]],27],[[10,[[2,[-1]]]]],3],[[[4,[-1]],27],[[10,[[4,[-1]]]]],3],[-1,27,[]],[[[2,[-1]]],27,3],[[[4,[-1]]],27,3],[-1,[[8,[29,9]]],[]],[-1,[[8,[29,9]]],[]],[[[2,[-1]],[2,[-1]]],[[10,[9]]],3],[[[4,[-1]],[4,[-1]]],[[10,[9]]],3],[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],0,[[],56],[54,26],[[48,48],29],[[49,49],29],[[50,50],29],[[51,51],29],[[52,52],29],[[53,53],29],[[54,54],29],[[55,55],29],[[56,56],29],[[48,30],32],[[49,30],32],[[50,30],32],[[51,30],32],[[52,30],32],[[53,30],32],[[54,30],32],[[54,30],32],[[55,30],32],[[56,30],32],[[[34,[-1]],30],32,[35,13]],[[[34,[-1]],30],32,57],[[30,[10,[22]],[10,[11]],[10,[[8,[45,7]]]],-1],32,[35,13]],[[30,[10,[22]],[10,[11]],[10,[[8,[45,7]]]],53],32],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[48,-1],8,41],[[49,-1],8,41],[[50,-1],8,41],[[51,-1],8,41],[[52,-1],8,41],[[53,-1],8,41],[[54,-1],8,41],[[55,-1],8,41],[[56,-1],8,41],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[54,55],0,0,0,[[],56],[[[10,[22]],[10,[11]],-1],[[34,[-1]]],[35,13]],[[[10,[22]],[10,[11]],-1,-2],[[34,[-2]]],[58,59],[35,13]],0,0,[[56,26,-1],[[39,[8]]],35],[[56,26,-1],[[39,[26]]],35],0,[[56,29],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,16],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],[[56,23],[[39,[8]]]],0,0,[56,[[39,[[4,[7]]]]]],[[56,-1],[[39,[[4,[-1]]]]],3],[56,[[39,[7]]]],[56,[[39,[22]]]],[[56,27],[[39,[37]]]],[56,[[39,[11]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,45,[]],[-1,45,[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[33,33],[[-1,-2],8,[],[]],[[33,30],32],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,33],[33,[[10,[53]]]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,47,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[22,6]],[[22,1],22],[[22,5]],[[37,6]],[[37,5]],[[37,1],37],[[37,7],37],[[11,1],11],[[11,7],11],[[22,1],8],[[37,1],8],[[11,1],8],[[22,9,9,9],37],[[22,9,9,9,9],37],[[22,9,9,9,9],[[10,[37]]]],[[22,9,9,9,9],37],[[22,9,9,9,9],[[10,[37]]]],[[22,9,9,9,9],37],[[22,9,9,9,9],[[10,[37]]]],[[22,9,9,9],[[10,[37]]]],[[37,-1],[[60,[[4,[-1]]]]],3],[[22,11],37],[37,[[4,[25]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[22,6],[[10,[22]]]],[[37,6],[[10,[37]]]],[[22,5],[[10,[22]]]],[[37,5],[[10,[37]]]],[[22,1],[[10,[22]]]],[[37,1],[[10,[37]]]],[[22,6],[[10,[22]]]],[[37,6],[[10,[37]]]],[[22,5],[[10,[22]]]],[[37,5],[[10,[37]]]],[[22,1],[[10,[22]]]],[[37,1],[[10,[37]]]],[6,6],[22,22],[37,37],[42,42],[11,11],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[22,22],21],[[37,37],21],[[42,42],21],[[11,11],21],[37,22],[22,9],[37,9],[22,9],[37,9],[61,[[62,[22]]]],[[],22],[[],37],[[],11],[[37,1],[[28,[37]]]],[[37,1],[[28,[37]]]],[[6,6],29],[[22,22],29],[[37,37],29],[[42,42],29],[[11,11],29],[61,22],[[61,30],32],[[6,30],32],[[22,30],32],[[22,30],32],[[37,30],32],[[37,30],32],[[42,30],32],[[11,30],32],[[11,30],32],[[22,26],[[34,[33]]]],[[37,26],[[34,[33]]]],[[11,26],[[34,[33]]]],[[22,-1],[[34,[-1]]],[35,13]],[[37,-1],[[34,[-1]]],[35,13]],[[11,-1],[[34,[-1]]],[35,13]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[37,22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[9,9,9],11],[[9,9,9,9],11],[[9,9,9,9],[[10,[11]]]],[[9,9,9,9],11],[[9,9,9,9],[[10,[11]]]],[[9,9,9,9],11],[[9,9,9,9],[[10,[11]]]],[[9,9,9],[[10,[11]]]],[[27,9,16],22],[[27,9,16],[[10,[22]]]],[27,22],[27,[[10,[22]]]],[[9,9],11],[[9,9],[[10,[11]]]],[26,[[39,[22]]]],[26,[[39,[37]]]],[26,[[39,[11]]]],[[23,9],37],[23,[[10,[37]]]],[23,[[10,[37]]]],[[23,9],[[10,[37]]]],[[27,9,16,46],22],[[27,9,16,46],[[10,[22]]]],[[27,9,9],22],[[27,9,9],[[10,[22]]]],[[27,9],22],[[27,9],[[10,[22]]]],[[6,-1],8,41],[[22,-1],8,41],[[37,-1],8,41],[[42,-1],8,41],[[11,-1],8,41],[37,9],[11,9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[22,42],[37,42],0,0,[61,22],[37,9],[11,9],[22,9],[37,9],[22,9],[37,9],[37,9],[11,9],[40,6],[[22,11],37],[11,9],[22,9],[37,9],[22,9],[37,9],[[11,1],[[8,[11,23]]]],[[11,1],[[8,[11,23]]]],[[26,26],[[39,[[8,[22,26]]]]]],[[26,26],[[39,[[8,[37,26]]]]]],[[26,26],[[39,[[8,[11,26]]]]]],[[26,26],[[39,[22]]]],[[26,26],[[39,[37]]]],[[26,26],[[39,[11]]]],[[6,6],[[10,[21]]]],[[22,22],[[10,[21]]]],[[37,37],[[10,[21]]]],[[42,42],[[10,[21]]]],[[11,11],[[10,[21]]]],[22,22],[22,[[10,[22]]]],[[-1,43],-2,[],[]],[[-1,43],-2,[],[]],[37,9],[11,9],[[22,22],1],[[37,37],1],[[11,11],1],[[22,1],22],[[22,6]],[[22,5]],[[22,22],1],[[37,6]],[[37,5]],[[37,37],1],[[37,7],37],[[37,1],37],[[11,1],11],[[11,7],11],[[11,11],1],[[22,1],8],[[37,1],8],[[11,1],8],[22,22],[22,[[10,[22]]]],[37,11],[37,23],[37,23],[37,23],[37,23],[37,9],[37,9],[37,9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[[-1,43],-2,[],[]],[[-1,43],-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[22,16],61],[42,9],[42,9],[22,16],[37,16],[[22,9],[[10,[22]]]],[[37,9],[[10,[37]]]],[[22,9],[[10,[22]]]],[[37,9],[[10,[37]]]],[[37,9],[[10,[37]]]],[[11,9],[[10,[11]]]],[[37,9],[[10,[37]]]],[[11,9],[[10,[11]]]],[[22,9],[[10,[22]]]],[[37,9],[[10,[37]]]],[[22,9],[[10,[22]]]],[[37,9],[[10,[37]]]],[[37,9],[[10,[37]]]],[[11,9],[[10,[11]]]],[[22,9],[[10,[22]]]],[[37,9],[[10,[37]]]],[[22,9],[[10,[22]]]],[[37,9],[[10,[37]]]],[[37,9],[[10,[37]]]],[[11,9],[[10,[11]]]],[[22,27],[[10,[22]]]],[[37,27],[[10,[37]]]],[22,27],[37,27],[42,27],[[22,22],[[10,[9]]]],0,0,0,0,0,0,0,0,0,0,[[[60,[[2,[-1]]]],9,9,9,9],[[60,[[4,[-1]]]]],3],[[[60,[[2,[-1]]]],9,9,9,9],[[60,[[4,[-1]]]]],3],[[[60,[[2,[-1]]]],9,9,9,9],[[60,[[4,[-1]]]]],3],[[[60,[[2,[-1]]]],9,9,9],[[60,[[4,[-1]]]]],3],[[[60,[[2,[-1]]]],11],[[60,[[4,[-1]]]]],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,7],[24,24],[25,25],[[[60,[-1]]],[[60,[-1]]],13],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,26,26],[[39,[[4,[-1]]]]],[]],[[[60,[-1]]],[[10,[-1]]],[]],[27,7],[27,[[10,[7]]]],[[7,7],29],[[25,25],29],[[[60,[-1]],[60,[-1]]],29,63],[-1,7,[]],[7,7],[25,7],[[7,30],32],[[7,30],32],[[24,30],32],[[25,30],32],[[25,30],32],[[[60,[-1]],30],32,57],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,22],[[60,[[2,[-1]]]]],[]],[[-1,37],[[60,[[4,[-1]]]]],[]],[[],-1,[]],[7,7],[7,24],[25,25],[[-1,22],[[2,[-1]]],[]],[[-1,37],[[4,[-1]]],[]],[[7,-1],8,41],[[25,-1],8,41],[[[60,[-1]],-2],8,64,41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,27,9,16],[[2,[-1]]],[]],[[-1,27,9,16],[[60,[[2,[-1]]]]],[]],[[[60,[-1]]],[[10,[-1]]],[]],[7,27],[[[60,[-1]],-2],[[60,[-3]]],[],65,[]],[[],[[4,[24]]]],[[],[[4,[25]]]],[[-1,22],60,[]],[[7,22],[[60,[7]]]],[[24,22],[[60,[7]]]],[[25,22],[[60,[25]]]],[[-1,37],60,[]],[[7,37],[[60,[7]]]],[[24,37],[[60,[7]]]],[[25,37],[[60,[25]]]],[[-1,22],[],[]],[[7,22],7],[[24,22],7],[[25,22],25],[[-1,37],[],[]],[[7,37],7],[[24,37],7],[[25,37],25],[[[60,[-1]]],[[10,[-1]]],[]],[[-1,23,9],[[4,[-1]]],[]],[[-1,23],[[4,[-1]]],[]],[[-1,23],[[60,[[4,[-1]]]]],[]],[[-1,23],[[4,[-1]]],[]],[[-1,23,9],[[60,[[4,[-1]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,45,[]],[-1,45,[]],[[],[[2,[24]]]],[[],[[2,[25]]]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[[60,[-1]]],-1,57],[7,27],[27,7],[27,[[10,[7]]]],[[-1,27,9,9,9,9,9],[[60,[[4,[-1]]]]],[]],[[-1,27,9,9],[[2,[-1]]],[]],[[-1,27,9,9],[[60,[[2,[-1]]]]],[]],[[-1,27,9],[[2,[-1]]],[]],[[-1,27,9],[[60,[[2,[-1]]]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[3,22,23,26,27,74,75,77,79,144,324,347,746,747,751,752,769,770,772,774,857,858,860,862,865,867,869,874,878,880,882,930,954,1056,1074,1080,1089,1090,1113,1114,1124,1125,1140,1143,1144,1145,1146],"p":[[3,"Duration",0],[3,"Date",0],[8,"TimeZone",1023],[3,"DateTime",0],[3,"Months",0],[3,"Days",742],[3,"FixedOffset",1023],[15,"tuple"],[15,"u32"],[4,"Option",1163],[3,"NaiveTime",742],[3,"OutOfRangeError",0],[8,"Clone",1164],[4,"SecondsFormat",0],[4,"RoundingError",0],[4,"Weekday",0],[3,"ParseWeekdayError",0],[4,"Month",0],[3,"ParseMonthError",0],[3,"OutOfRange",0],[4,"Ordering",1165],[3,"NaiveDate",742],[15,"i64"],[3,"Local",1023],[3,"Utc",1023],[15,"str"],[15,"i32"],[4,"Result",1166],[15,"bool"],[3,"Formatter",1167],[3,"Error",1167],[6,"Result",1167],[3,"StrftimeItems",727],[3,"DelayedFormat",468],[8,"Iterator",1168],[3,"SystemTime",1169],[3,"NaiveDateTime",742],[3,"Duration",1170],[6,"ParseResult",468],[15,"u64"],[8,"Hasher",1171],[3,"IsoWeek",742],[15,"u16"],[8,"FnOnce",1172],[3,"String",1173],[15,"u8"],[3,"TypeId",1174],[4,"Pad",468],[4,"Numeric",468],[3,"InternalNumeric",468],[4,"Fixed",468],[3,"InternalFixed",468],[4,"Item",468],[3,"ParseError",468],[4,"ParseErrorKind",468],[3,"Parsed",468],[8,"Debug",1167],[8,"Offset",1023],[8,"Display",1167],[4,"LocalResult",1023],[3,"NaiveWeek",742],[3,"RangeInclusive",1175],[8,"PartialEq",1165],[8,"Hash",1171],[8,"FnMut",1172],[8,"DurationRound",0],[8,"Datelike",0],[8,"Timelike",0],[8,"SubsecRound",0]],"b":[[68,"impl-Add%3CMonths%3E-for-DateTime%3CTz%3E"],[69,"impl-Add%3CDuration%3E-for-DateTime%3CTz%3E"],[70,"impl-Add%3CDays%3E-for-DateTime%3CTz%3E"],[71,"impl-Add%3CFixedOffset%3E-for-DateTime%3CTz%3E"],[153,"impl-Default-for-DateTime%3CLocal%3E"],[154,"impl-Default-for-DateTime%3CUtc%3E"],[155,"impl-Default-for-DateTime%3CFixedOffset%3E"],[176,"impl-Display-for-Duration"],[177,"impl-Debug-for-Duration"],[178,"impl-Display-for-OutOfRangeError"],[179,"impl-Debug-for-OutOfRangeError"],[180,"impl-Debug-for-Date%3CTz%3E"],[181,"impl-Display-for-Date%3CTz%3E"],[183,"impl-Debug-for-DateTime%3CTz%3E"],[184,"impl-Display-for-DateTime%3CTz%3E"],[185,"impl-Display-for-RoundingError"],[186,"impl-Debug-for-RoundingError"],[187,"impl-Debug-for-Weekday"],[188,"impl-Display-for-Weekday"],[189,"impl-Display-for-ParseWeekdayError"],[190,"impl-Debug-for-ParseWeekdayError"],[194,"impl-Debug-for-OutOfRange"],[195,"impl-Display-for-OutOfRange"],[205,"impl-From%3CDateTime%3CFixedOffset%3E%3E-for-DateTime%3CLocal%3E"],[206,"impl-From%3CDateTime%3CLocal%3E%3E-for-DateTime%3CUtc%3E"],[207,"impl-From%3CDateTime%3CLocal%3E%3E-for-DateTime%3CFixedOffset%3E"],[208,"impl-From%3CDateTime%3CUtc%3E%3E-for-DateTime%3CLocal%3E"],[209,"impl-From%3CSystemTime%3E-for-DateTime%3CLocal%3E"],[210,"impl-From%3CSystemTime%3E-for-DateTime%3CUtc%3E"],[211,"impl-From%3CDateTime%3CFixedOffset%3E%3E-for-DateTime%3CUtc%3E"],[212,"impl-From%3CDateTime%3CUtc%3E%3E-for-DateTime%3CFixedOffset%3E"],[225,"impl-FromStr-for-DateTime%3CFixedOffset%3E"],[226,"impl-FromStr-for-DateTime%3CLocal%3E"],[227,"impl-FromStr-for-DateTime%3CUtc%3E"],[338,"impl-Sub-for-Date%3CTz%3E"],[339,"impl-Sub%3CDuration%3E-for-Date%3CTz%3E"],[340,"impl-Sub%3CDuration%3E-for-DateTime%3CTz%3E"],[341,"impl-Sub%3CDays%3E-for-DateTime%3CTz%3E"],[342,"impl-Sub%3CFixedOffset%3E-for-DateTime%3CTz%3E"],[343,"impl-Sub-for-DateTime%3CTz%3E"],[344,"impl-Sub%3CMonths%3E-for-DateTime%3CTz%3E"],[596,"impl-Display-for-ParseError"],[597,"impl-Debug-for-ParseError"],[600,"impl-Display-for-DelayedFormat%3CI%3E"],[601,"impl-Debug-for-DelayedFormat%3CI%3E"],[757,"impl-Add%3CDays%3E-for-NaiveDate"],[758,"impl-Add%3CDuration%3E-for-NaiveDate"],[759,"impl-Add%3CMonths%3E-for-NaiveDate"],[760,"impl-Add%3CDays%3E-for-NaiveDateTime"],[761,"impl-Add%3CMonths%3E-for-NaiveDateTime"],[762,"impl-Add%3CDuration%3E-for-NaiveDateTime"],[763,"impl-Add%3CFixedOffset%3E-for-NaiveDateTime"],[764,"impl-Add%3CDuration%3E-for-NaiveTime"],[765,"impl-Add%3CFixedOffset%3E-for-NaiveTime"],[837,"impl-Debug-for-NaiveDate"],[838,"impl-Display-for-NaiveDate"],[839,"impl-Display-for-NaiveDateTime"],[840,"impl-Debug-for-NaiveDateTime"],[842,"impl-Display-for-NaiveTime"],[843,"impl-Debug-for-NaiveTime"],[939,"impl-Sub%3CDuration%3E-for-NaiveDate"],[940,"impl-Sub%3CDays%3E-for-NaiveDate"],[941,"impl-Sub%3CMonths%3E-for-NaiveDate"],[942,"impl-Sub-for-NaiveDate"],[943,"impl-Sub%3CDays%3E-for-NaiveDateTime"],[944,"impl-Sub%3CMonths%3E-for-NaiveDateTime"],[945,"impl-Sub-for-NaiveDateTime"],[946,"impl-Sub%3CFixedOffset%3E-for-NaiveDateTime"],[947,"impl-Sub%3CDuration%3E-for-NaiveDateTime"],[948,"impl-Sub%3CDuration%3E-for-NaiveTime"],[949,"impl-Sub%3CFixedOffset%3E-for-NaiveTime"],[950,"impl-Sub-for-NaiveTime"],[1064,"impl-Display-for-FixedOffset"],[1065,"impl-Debug-for-FixedOffset"],[1067,"impl-Display-for-Utc"],[1068,"impl-Debug-for-Utc"]]},\
"clap":{"doc":"<strong>Command Line Argument Parser for Rust</strong>","t":"NNNDEDDINEDINNNNNNGNNINNNNDNNINNNINNNIENLLLLLLLLLLLLLLOLLLLLLLLKKKKLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLKOKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLOLLKLLLLLLLLLLLLNNDEDEDDDNNNNNSNDNNDNNNNNINDDDDNQDDDDDNESNNNDDDDDINDNNNQEDIDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLNNDESSNNNNNNNNNNSENSSSSDDNSSSNNDNDSDDSNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNEENDNNNNDIENNNNNNNNNDNNNNNNNNGDNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNNNDDEDNEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["Always","AnyPath","Append","Arg","ArgAction","ArgGroup","ArgMatches","Args","Auto","ColorChoice","Command","CommandFactory","CommandName","CommandString","CommandWithArguments","Count","DirPath","EmailAddress","Error","ExecutablePath","FilePath","FromArgMatches","Help","HelpLong","HelpShort","Hostname","Id","Never","Other","Parser","Set","SetFalse","SetTrue","Subcommand","Unknown","Url","Username","ValueEnum","ValueHint","Version","about","action","after_help","after_long_help","alias","alias","aliases","aliases","allow_external_subcommands","allow_hyphen_values","allow_missing_positional","allow_negative_numbers","arg","arg","arg","arg_required_else_help","args","args","args_conflicts_with_subcommands","args_override_self","args_present","as_ref","as_str","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","author","before_help","before_long_help","bin_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","color","command","command","command_for_update","conflicts_with","conflicts_with","conflicts_with_all","conflicts_with_all","contains_id","debug_assert","default","default","default","default","default","default","default","default_missing_value","default_missing_value_os","default_missing_values","default_missing_values_os","default_value","default_value_if","default_value_ifs","default_values","defer","disable_colored_help","disable_help_flag","disable_help_subcommand","disable_version_flag","display_name","display_order","display_order","dont_delimit_trailing_values","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","error","exclusive","external_subcommand_value_parser","find_subcommand","find_subcommand_mut","flatten_help","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_str","from_str","from_str","get_about","get_action","get_after_help","get_after_long_help","get_all_aliases","get_all_aliases","get_all_long_flag_aliases","get_all_short_aliases","get_all_short_flag_aliases","get_arg_conflicts_with","get_args","get_arguments","get_author","get_before_help","get_before_long_help","get_bin_name","get_color","get_count","get_default_values","get_display_name","get_external_subcommand_value_parser","get_flag","get_groups","get_help","get_help_heading","get_id","get_id","get_index","get_long","get_long_about","get_long_and_visible_aliases","get_long_flag","get_long_help","get_long_version","get_many","get_matches","get_matches_from","get_matches_mut","get_name","get_next_help_heading","get_num_args","get_occurrences","get_one","get_opts","get_positionals","get_possible_values","get_raw","get_raw_occurrences","get_short","get_short_and_visible_aliases","get_short_flag","get_styles","get_subcommand_help_heading","get_subcommand_value_name","get_subcommands","get_subcommands_mut","get_value_delimiter","get_value_hint","get_value_names","get_value_parser","get_value_terminator","get_version","get_visible_aliases","get_visible_aliases","get_visible_long_flag_aliases","get_visible_short_aliases","get_visible_short_flag_aliases","global","group","group","group_id","groups","groups","has_subcommand","has_subcommands","hash","hash","help","help_expected","help_heading","help_template","hide","hide","hide_default_value","hide_long_help","hide_possible_values","hide_possible_values","hide_short_help","id","id","ids","ignore_case","ignore_errors","index","index","index_of","indices_of","infer_long_args","infer_subcommands","into","into","into","into","into","into","into","into","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","is_allow_external_subcommands_set","is_allow_hyphen_values_set","is_allow_missing_positional_set","is_allow_negative_numbers_set","is_arg_required_else_help_set","is_args_conflicts_with_subcommands_set","is_disable_colored_help_set","is_disable_help_flag_set","is_disable_help_subcommand_set","is_disable_version_flag_set","is_dont_delimit_trailing_values_set","is_exclusive_set","is_flatten_help_set","is_global_set","is_hide_default_value_set","is_hide_long_help_set","is_hide_possible_values_set","is_hide_set","is_hide_set","is_hide_short_help_set","is_ignore_case_set","is_last_set","is_multicall_set","is_multiple","is_next_line_help_set","is_next_line_help_set","is_no_binary_name_set","is_positional","is_propagate_version_set","is_require_equals_set","is_required_set","is_required_set","is_subcommand_negates_reqs_set","is_subcommand_precedence_over_arg_set","is_subcommand_required_set","is_trailing_var_arg_set","last","long","long_about","long_flag","long_flag_alias","long_flag_aliases","long_help","long_version","max_term_width","multicall","multiple","mut_arg","mut_args","mut_subcommand","name","new","new","new","next_display_order","next_help_heading","next_line_help","next_line_help","no_binary_name","num_args","override_help","override_usage","overrides_with","overrides_with_all","parse","parse_from","parser","partial_cmp","partial_cmp","possible_values","print_help","print_long_help","propagate_version","raw","remove_many","remove_occurrences","remove_one","remove_subcommand","render_help","render_long_help","render_long_version","render_usage","render_version","require_equals","required","required","required_if_eq","required_if_eq_all","required_if_eq_any","required_unless_present","required_unless_present_all","required_unless_present_any","requires","requires","requires_all","requires_if","requires_ifs","set_bin_name","short","short_alias","short_aliases","short_flag","short_flag_alias","short_flag_aliases","styles","subcommand","subcommand","subcommand_help_heading","subcommand_matches","subcommand_name","subcommand_negates_reqs","subcommand_precedence_over_arg","subcommand_required","subcommand_value_name","subcommands","takes_values","term_width","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_possible_value","to_possible_value","to_string","to_string","to_string","to_string","trailing_var_arg","try_contains_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get_many","try_get_matches","try_get_matches_from","try_get_matches_from_mut","try_get_occurrences","try_get_one","try_get_raw","try_get_raw_occurrences","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse_from","try_remove_many","try_remove_occurrences","try_remove_one","try_update_from","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from","update_from_arg_matches","update_from_arg_matches_mut","value_delimiter","value_hint","value_name","value_names","value_parser","value_parser","value_source","value_terminator","value_variants","value_variants","version","visible_alias","visible_alias","visible_aliases","visible_aliases","visible_long_flag_alias","visible_long_flag_aliases","visible_short_alias","visible_short_aliases","visible_short_flag_alias","visible_short_flag_aliases","AnyPath","Append","Arg","ArgAction","ArgGroup","ArgPredicate","BoolValueParser","BoolishValueParser","Command","CommandName","CommandString","CommandWithArguments","Count","DirPath","EMPTY","EmailAddress","EnumValueParser","Equals","ExecutablePath","FalseyValueParser","FilePath","Help","HelpLong","HelpShort","Hostname","IntoResettable","IsPresent","MapValueParser","NonEmptyStringValueParser","OsStr","OsStringValueParser","Other","Parser","PathBufValueParser","PossibleValue","PossibleValuesParser","RangedI64ValueParser","RangedU64ValueParser","Reset","Resettable","SINGLE","Set","SetFalse","SetTrue","Str","StringValueParser","StyledStr","Styles","TryMapValueParser","TypedValueParser","Unknown","UnknownArgumentValueParser","Url","Username","Value","Value","ValueHint","ValueParser","ValueParserFactory","ValueRange","Version","alias","aliases","and_suggest","ansi","as_os_str","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","end_bound","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_error","get_header","get_help","get_invalid","get_literal","get_name","get_name_and_aliases","get_placeholder","get_usage","get_valid","hash","hash","hash","hash","header","help","hide","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","invalid","is_hide_set","literal","map","matches","max_values","min_values","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","os_string","parse","parse","parse","parse","parse","parse","parse_","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref_","parse_ref_","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path_buf","placeholder","plain","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","range","range","start_bound","string","styled","styling","suggest","suggest_arg","takes_values","to_os_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","usage","valid","value_parser","write_char","write_str","Ansi","Ansi256","Ansi256Color","AnsiColor","BLINK","BOLD","Black","Blue","BrightBlack","BrightBlue","BrightCyan","BrightGreen","BrightMagenta","BrightRed","BrightWhite","BrightYellow","CURLY_UNDERLINE","Color","Cyan","DASHED_UNDERLINE","DIMMED","DOTTED_UNDERLINE","DOUBLE_UNDERLINE","EffectIter","Effects","Green","HIDDEN","INVERT","ITALIC","Magenta","Red","Reset","Rgb","RgbColor","STRIKETHROUGH","Style","Styles","UNDERLINE","White","Yellow","b","bg_color","bitor","bitor","bitor_assign","bitor_assign","blink","bold","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bright","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","contains","default","default","default","dimmed","effects","eq","eq","eq","eq","eq","eq","eq","eq","eq","fg_color","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ansi","g","get_bg_color","get_effects","get_fg_color","get_underline_color","hash","hash","hash","hash","hash","hash","hash","hidden","index","insert","into","into","into","into","into","into","into","into","into_ansi","into_iter","invert","is_bright","is_plain","is_plain","italic","iter","new","new","next","on","on","on","on","on_default","on_default","on_default","on_default","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","remove","render","render","render","render_bg","render_bg","render_bg","render_bg","render_fg","render_fg","render_fg","render_fg","render_reset","set","strikethrough","sub","sub","sub_assign","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline","underline_color","write_reset_to","write_to","ActualNumValues","ArgumentConflict","Bool","ContextKind","ContextValue","Custom","DefaultFormatter","DisplayHelp","DisplayHelpOnMissingArgumentOrSubcommand","DisplayVersion","Err","Error","ErrorFormatter","ErrorKind","ExpectedNumValues","Format","InvalidArg","InvalidSubcommand","InvalidSubcommand","InvalidUtf8","InvalidValue","InvalidValue","Io","KindFormatter","MinValues","MissingRequiredArgument","MissingSubcommand","NoEquals","None","Number","Ok","PriorArg","Result","RichFormatter","String","Strings","StyledStr","StyledStrs","Suggested","SuggestedArg","SuggestedCommand","SuggestedSubcommand","SuggestedValue","TooFewValues","TooManyValues","TrailingArg","UnknownArgument","Usage","ValidSubcommand","ValidValue","ValueValidation","WrongNumberOfValues","apply","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","context","eq","eq","eq","exit","exit_code","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format_error","format_error","format_error","from","from","from","from","from","from","from","from","get","hash","hash","insert","into","into","into","into","into","into","kind","new","print","raw","render","source","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","use_stderr","with_cmd","ArgMatches","CommandLine","DefaultValue","Downcast","EnvVariable","IdsRef","Indices","MatchesError","RawValues","UnknownArgument","ValueSource","Values","ValuesRef","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","default","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","partial_cmp","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","actual","expected"],"q":[[0,"clap"],[499,"clap::builder"],[1038,"clap::builder::styling"],[1274,"clap::error"],[1416,"clap::parser"],[1535,"clap::parser::MatchesError"],[1537,"core::iter::traits::collect"],[1538,"core::convert"],[1539,"alloc::string"],[1540,"core::cmp"],[1541,"core::fmt"],[1542,"core::option"],[1543,"std::ffi::os_str"],[1544,"core::convert"],[1545,"alloc::vec"],[1546,"core::iter::traits::iterator"],[1547,"core::any"],[1548,"core::clone"],[1549,"core::marker"],[1550,"core::marker"],[1551,"clap_builder::parser::matches::arg_matches"],[1552,"core::ops::function"],[1553,"core::ops::function"],[1554,"clap_builder::parser::matches::arg_matches"],[1555,"core::convert"],[1556,"std::ffi::os_str"],[1557,"clap_builder::util::any_value"],[1558,"core::marker"],[1559,"core::error"]],"d":["Enables colored output regardless of whether or not the …","Any existing path.","When encountered, store the associated value(s) in …","The abstract representation of a command line argument. …","Behavior of arguments when they are encountered while …","Family of related arguments.","Container for parse results.","Parse a set of arguments into a user-defined container.","Enables colored output only when the output is going to a …","Represents the color preferences for program output","Build a command-line interface.","Create a <code>Command</code> relevant for a user-defined container.","Name of a command, without arguments. May be relative to …","A single string containing a command and its arguments.","Capture the remaining arguments as a command name and …","When encountered, increment a <code>u8</code> counter","Path to a directory.","Email address.","Command Line Argument Parser Error","Path to an executable file.","Path to a file.","Converts an instance of <code>ArgMatches</code> to a user-defined …","When encountered, display <code>Command::print_help</code>","When encountered, display <code>Command::print_long_help</code>","When encountered, display <code>Command::print_help</code>","Host name of a computer. Shells usually parse <code>/etc/hosts</code> …","<code>Arg</code> or <code>ArgGroup</code> identifier","Disables colored output no matter if the output is going …","None of the hints below apply. Disables shell completion …","Parse command-line arguments into <code>Self</code>.","When encountered, store the associated value(s) in …","When encountered, act as if <code>&quot;false&quot;</code> was encountered on the …","When encountered, act as if <code>&quot;true&quot;</code> was encountered on the …","Parse a sub-command into a user-defined enum.","Default value if hint is not specified. Follows shell …","Complete web address.","Name of a local operating system user.","Parse arguments into enums.","Provide shell with hint on how to complete an argument.","When encountered, display <code>Command::version</code>","Sets the program’s description for the short help (<code>-h</code>).","Specify how to react to an argument when parsing it.","Free-form help text for after auto-generated short help (<code>-h</code>…","Free-form help text for after auto-generated long help (…","Add an alias, which functions as a hidden long flag.","Sets a hidden alias to this subcommand.","Add aliases, which function as hidden long flags.","Sets multiple hidden aliases to this subcommand.","Assume unexpected positional arguments are a <code>subcommand</code>.","Allows values which start with a leading hyphen (<code>-</code>)","Allows one to implement two styles of CLIs where …","Allows negative numbers to pass as values.","Adds an argument to this group by name","Adds an argument to the list of valid possibilities.","Create an <code>Arg</code> from a usage string.","Exit gracefully if no arguments are present (e.g. <code>$ myprog</code>…","Adds multiple arguments to this group by name","Adds multiple arguments to the list of valid possibilities.","Specifies that use of an argument prevents the use of …","Replace prior occurrences of arguments rather than error","Check if any args were present on the command line","","Get the raw string of the <code>Id</code>","Append to <code>Command</code> so it can instantiate <code>Self</code>.","Append to <code>Command</code> so it can update <code>self</code>.","Append to <code>Command</code> so it can instantiate <code>Self</code>.","Append to <code>Command</code> so it can update <code>self</code>.","Sets the author(s) for the help message.","Free-form help text for before auto-generated short help (…","Free-form help text for before auto-generated long help (…","Overrides the runtime-determined name of the binary for …","","","","","","","","","","","","","","","","","","Prepare for introspecting on all included <code>Command</code>s","Define <code>Command</code> line arguments","","","","","","","","","","","","","","","","","","","Sets when to color output.","Build a <code>Command</code> that can instantiate <code>Self</code>.","Requires <code>cargo</code> feature flag to be enabled.","Build a <code>Command</code> that can update <code>self</code>.","This argument is mutually exclusive with the specified …","Specify an argument or group that must <strong>not</strong> be present when …","This argument is mutually exclusive with the specified …","Specify arguments or groups that must <strong>not</strong> be present when …","Check if values are present for the argument or group id","Catch problems earlier in the development cycle.","","","","","","","","Value for the argument when the flag is present but no …","Value for the argument when the flag is present but no …","Value for the argument when the flag is present but no …","Value for the argument when the flag is present but no …","Value for the argument when not present.","Specifies the value of the argument if <code>arg</code> has been used …","Specifies multiple values and conditions in the same …","Value for the argument when not present.","Delay initialization for parts of the <code>Command</code>","Disables colorized help messages.","Disables <code>-h</code> and <code>--help</code> flag.","Disables the <code>help</code> <code>subcommand</code>.","Disables <code>-V</code> and <code>--version</code> flag.","Overrides the runtime-determined display name of the …","Allows custom ordering of args within the help message.","Set the placement of this subcommand within the help.","Disables the automatic delimiting of values after <code>--</code> or …","","","","","","","","","","","Error reporting","Custom error message for post-parsing validation","This argument must be passed alone; it conflicts with all …","Specifies how to parse external subcommand arguments.","Find subcommand such that its name or one of aliases …","Find subcommand such that its name or one of aliases …","Flatten subcommand help into the current command’s help","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Instantiate <code>Self</code> from <code>ArgMatches</code>, parsing the arguments as …","Instantiate <code>Self</code> from <code>ArgMatches</code>, parsing the arguments as …","Parse an argument into <code>Self</code>.","","","Get the help message specified via <code>Command::about</code>.","Behavior when parsing the argument","Returns the help heading for listing subcommands.","Returns the help heading for listing subcommands.","Get <em>all</em> aliases for this argument, if any, both visible …","Iterate through the set of <em>all</em> the aliases for this …","Iterate through the set of <em>all</em> the long aliases for this …","Get <em>all</em> short aliases for this argument, if any, both …","Iterate through the set of <em>all</em> the short aliases for this …","Get a list of all arguments the given argument conflicts …","Getters for all args. It will return a vector of <code>Id</code>","Iterate through the set of arguments.","Get the authors of the cmd.","Returns the help heading for listing subcommands.","Returns the help heading for listing subcommands.","Get the name of the binary.","Should we color the output?","Gets the value of a specific <code>ArgAction::Count</code> flag","Get the default values specified for this argument, if any","Get the name of the binary.","Configured parser for values passed to an external …","Gets the value of a specific <code>ArgAction::SetTrue</code> or …","Iterate through the set of groups.","Get the help specified for this argument, if any","Get the help heading specified for this argument, if any","Get the name of the argument","Get the name of the group","Get the index of this argument, if any","Get the long option name for this argument, if any","Get the help message specified via <code>Command::long_about</code>.","Get the long option name and its visible aliases, if any","Get the long flag of the subcommand.","Get the long help specified for this argument, if any","Get the long version of the cmd.","Iterate over values of a specific option or positional …","Parse <code>env::args_os</code>, exiting on failure.","Parse the specified arguments, exiting on failure.","Parse <code>env::args_os</code>, exiting on failure.","Get the name of the cmd.","Get the custom section heading specified via …","Get the number of values for this argument.","Iterate over the values passed to each occurrence of an …","Gets the value of a specific option or positional argument.","Iterate through the <em>options</em>.","Iterate through the <em>positionals</em> arguments.","Get the names of possible values for this argument. Only …","Iterate over the original argument values.","Iterate over the original values for each occurrence of an …","Get the short option name for this argument, if any","Get the short option name and its visible aliases, if any","Get the short flag of the subcommand.","Return the current <code>Styles</code> for the <code>Command</code>","Returns the help heading for listing subcommands.","Returns the subcommand value name.","Iterate through the set of subcommands, getting a …","Iterate through the set of subcommands, getting a mutable …","Get the delimiter between multiple values","Get the value hint of this argument","Get the names of values for this argument.","Configured parser for argument values","Get the value terminator for this argument. The …","Get the version of the cmd.","Get visible aliases for this argument, if any","Iterate through the <em>visible</em> aliases for this subcommand.","Iterate through the <em>visible</em> long aliases for this …","Get visible short aliases for this argument, if any","Iterate through the <em>visible</em> short aliases for this …","Specifies that an argument can be matched to all child …","The name of the <code>ArgGroup</code> the argument belongs to.","Adds an <code>ArgGroup</code> to the application.","Report the <code>ArgGroup::id</code> for this set of arguments","The names of <code>ArgGroup</code>’s the argument belongs to.","Adds multiple <code>ArgGroup</code>s to the <code>Command</code> at once.","Test whether <code>Self</code> can parse a specific subcommand","Returns <code>true</code> if this <code>Command</code> has subcommands.","","","Sets the description of the argument for short help (<code>-h</code>).","Panic if help descriptions are omitted.","Override the current help section.","Sets the help template to be used, overriding the default …","Do not display the argument in help message.","Specifies that this <code>subcommand</code> should be hidden from help …","Do not display the default value of the argument in the …","Hides an argument from long help (<code>--help</code>).","Do not display the possible values in the help message.","Tells <code>clap</code> <em>not</em> to print possible values when displaying …","Hides an argument from short help (<code>-h</code>).","Set the identifier used for referencing this argument in …","Sets the group name.","Iterate over <code>Arg</code> and <code>ArgGroup</code> <code>Id</code>s via <code>ArgMatches::ids</code>.","Match values against <code>PossibleValuesParser</code> without matching …","Try not to fail on parse errors, like missing option …","Specifies the index of a positional argument <strong>starting at</strong> 1.","","The first index of that an argument showed up.","All indices an argument appeared at when parsing.","Allow partial matches of long arguments or their aliases.","Allow partial matches of subcommand names and their aliases…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Report whether <code>Command::allow_external_subcommands</code> is set","Report whether <code>Arg::allow_hyphen_values</code> is set","Report whether <code>Command::allow_missing_positional</code> is set","Report whether <code>Arg::allow_negative_numbers</code> is set","Report whether <code>Command::arg_required_else_help</code> is set","Report whether <code>Command::args_conflicts_with_subcommands</code> is …","Report whether <code>Command::disable_colored_help</code> is set","Report whether <code>Command::disable_help_flag</code> is set","Report whether <code>Command::disable_help_subcommand</code> is set","Report whether <code>Command::disable_version_flag</code> is set","Report whether <code>Command::dont_delimit_trailing_values</code> is set","Reports whether <code>Arg::exclusive</code> is set","Get the custom section heading specified via …","Report whether <code>Arg::global</code> is set","Report whether <code>Arg::hide_default_value</code> is set","Report whether <code>Arg::hide_long_help</code> is set","Report whether <code>Arg::hide_possible_values</code> is set","Report whether <code>Arg::hide</code> is set","Report whether <code>Command::hide</code> is set","Report whether <code>Arg::hide_short_help</code> is set","Reports whether <code>Arg::ignore_case</code> is set","Reports whether <code>Arg::last</code> is set","Report whether <code>Command::multicall</code> is set","Return true if the group allows more than one of the …","Report whether <code>Arg::next_line_help</code> is set","Report whether <code>Command::next_line_help</code> is set","Report whether <code>Command::no_binary_name</code> is set","Checks whether this argument is a positional or not.","Report whether <code>Command::propagate_version</code> is set","Report whether <code>Arg::require_equals</code> is set","Reports whether <code>Arg::required</code> is set","Reports whether <code>ArgGroup::required</code> is set","Report whether <code>Command::subcommand_negates_reqs</code> is set","Report whether <code>Command::subcommand_precedence_over_arg</code> is …","Report whether <code>Command::subcommand_required</code> is set","Report whether <code>Arg::trailing_var_arg</code> is set","This arg is the last, or final, positional argument (i.e. …","Sets the long version of the argument without the …","Sets the program’s description for the long help (<code>--help</code>…","Sets the long version of the subcommand flag without the …","Add an alias, which functions as a “hidden” long flag …","Add aliases, which function as “hidden” long flag …","Sets the description of the argument for long help (<code>--help</code>…","Sets the version for the long version (<code>--version</code>) and help …","Limit the line length for wrapping help when using the …","Multiple-personality program dispatched on the binary name …","Allows more than one of the <code>Arg</code>s in this group to be used. …","Allows one to mutate an <code>Arg</code> after it’s been added to a …","Allows one to mutate all <code>Arg</code>s after they’ve been added …","Allows one to mutate a <code>Command</code> after it’s been added as …","(Re)Sets the program’s name.","Create a new <code>Arg</code> with a unique name.","Create a <code>ArgGroup</code> using a unique name.","Creates a new instance of an <code>Command</code>.","Change the starting value for assigning future display …","Set the default section heading for future args.","Render the help on the line after the argument.","Places the help string for all arguments and subcommands …","Specifies that the parser should not assume the first …","Specifies the number of arguments parsed per occurrence","Overrides the <code>clap</code> generated help message (both <code>-h</code> and …","Overrides the <code>clap</code> generated usage string for help and …","Sets an overridable argument.","Sets multiple mutually overridable arguments by name.","Parse from <code>std::env::args_os()</code>, exit on error","Parse from iterator, exit on error","<code>Command</code> line argument parser","","","Report all <code>possible_values</code>","Prints the short help message (<code>-h</code>) to <code>io::stdout()</code>.","Prints the long help message (<code>--help</code>) to <code>io::stdout()</code>.","Specifies to use the version of the current command for …","Consume all following arguments.","Return values of a specific option or positional argument.","Return values for each occurrence of an option.","Returns the value of a specific option or positional …","Return the name and <code>ArgMatches</code> of the current subcommand.","Render the short help message (<code>-h</code>) to a <code>StyledStr</code>","Render the long help message (<code>--help</code>) to a <code>StyledStr</code>.","Version message rendered as if the user ran <code>--version</code>.","Usage statement","Version message rendered as if the user ran <code>-V</code>.","Requires that options use the <code>--option=val</code> syntax","Specifies that the argument must be present.","Require an argument from the group to be present when …","This argument is required only if the specified <code>arg</code> is …","Specify this argument is required based on multiple …","Specify this argument is required based on multiple …","Set this arg as required as long as the specified argument …","Sets this arg as required unless <em>all</em> of the specified …","Sets this arg as required unless <em>any</em> of the specified …","Sets an argument that is required when this one is present","Specify an argument or group that must be present when …","Specify arguments or groups that must be present when this …","Require another argument if this arg matches the …","Allows multiple conditional requirements.","Set binary name. Uses <code>&amp;mut self</code> instead of <code>self</code>.","Sets the short version of the argument without the …","Add an alias, which functions as a hidden short flag.","Add aliases, which functions as a hidden short flag.","Sets the short version of the subcommand flag without the …","Add an alias, which functions as  “hidden” short flag …","Add aliases, which function as “hidden” short flag …","Sets the <code>Styles</code> for terminal output","Adds a subcommand to the list of valid possibilities.","The name and <code>ArgMatches</code> of the current subcommand.","Sets the help heading used for subcommands when printing …","The <code>ArgMatches</code> for the current subcommand.","The name of the current subcommand.","Allows <code>subcommands</code> to override all requirements of the …","Prevent subcommands from being consumed as an arguments …","If no <code>subcommand</code> is present at runtime, error and exit …","Sets the value name used for subcommands when printing …","Adds multiple subcommands to the list of valid …","Returns whether this action accepts values on the …","Sets the terminal width at which to wrap help messages.","","","","","","","","","The canonical argument value.","","","","","","This is a “VarArg” and everything that follows should …","Non-panicking version of <code>ArgMatches::contains_id</code>","","","","","","","","","Non-panicking version of <code>ArgMatches::get_many</code>","Parse <code>env::args_os</code>, returning a <code>clap::Result</code> on failure.","Parse the specified arguments, returning a <code>clap::Result</code> on …","Parse the specified arguments, returning a <code>clap::Result</code> on …","Non-panicking version of <code>ArgMatches::get_occurrences</code>","Non-panicking version of <code>ArgMatches::get_one</code>","Non-panicking version of <code>ArgMatches::get_raw</code>","Non-panicking version of <code>ArgMatches::get_raw_occurrences</code>","","","","","","","","","Parse from <code>std::env::args_os()</code>, return Err on error.","Parse from iterator, return Err on error.","Non-panicking version of <code>ArgMatches::remove_many</code>","Non-panicking version of <code>ArgMatches::remove_occurrences</code>","Non-panicking version of <code>ArgMatches::remove_one</code>","Update from iterator, return Err on error.","","","","","","","","","Update from iterator, exit on error","Assign values from <code>ArgMatches</code> to <code>self</code>.","Assign values from <code>ArgMatches</code> to <code>self</code>.","Allow grouping of multiple values via a delimiter.","Provide the shell a hint about how to complete this …","Placeholder for the argument’s value in the help message …","Placeholders for the argument’s values in the help …","Specify the typed behavior of the argument.","Select a <code>ValueParser</code> implementation from the intended type","Report where argument value came from","Sentinel to <strong>stop</strong> parsing multiple values of a given …","All possible argument values, in display order.","","Sets the version for the short version (<code>-V</code>) and help …","Add an alias, which functions as a visible long flag.","Sets a visible alias to this subcommand.","Add aliases, which function as visible long flags.","Sets multiple visible aliases to this subcommand.","Add an alias, which functions as a “visible” long flag …","Add aliases, which function as <em>visible</em> long flag …","Add an alias, which functions as a visible short flag.","Add aliases, which function as visible short flags.","Add an alias, which functions as  “visible” short flag …","Add aliases, which function as <em>visible</em> short flag …","Any existing path.","When encountered, store the associated value(s) in …","The abstract representation of a command line argument. …","Behavior of arguments when they are encountered while …","Family of related arguments.","Operations to perform on argument values","Implementation for <code>ValueParser::bool</code>","Parse bool-like string values, everything else is <code>true</code>","Build a command-line interface.","Name of a command, without arguments. May be relative to …","A single string containing a command and its arguments.","Capture the remaining arguments as a command name and …","When encountered, increment a <code>u8</code> counter","Path to a directory.","Nor argument values, or a flag","Email address.","Parse an <code>ValueEnum</code> value.","Does the argument match the specified value?","Path to an executable file.","Parse false-like string values, everything else is <code>true</code>","Path to a file.","When encountered, display <code>Command::print_help</code>","When encountered, display <code>Command::print_long_help</code>","When encountered, display <code>Command::print_help</code>","Host name of a computer. Shells usually parse <code>/etc/hosts</code> …","Convert to the intended resettable type","Is the argument present?","Adapt a <code>TypedValueParser</code> from one value to another","Parse non-empty string values","A UTF-8-encoded fixed string","Implementation for <code>ValueParser::os_string</code>","None of the hints below apply. Disables shell completion …","Generated parser, usually <code>ValueParser</code>.","Implementation for <code>ValueParser::path_buf</code>","A possible value of an argument.","Verify the value is from an enumerated set of <code>PossibleValue</code>…","Parse number that fall within a range of values","Parse number that fall within a range of values","Reset builder value","Clearable builder value","A single argument value, the most common case for options","When encountered, store the associated value(s) in …","When encountered, act as if <code>&quot;false&quot;</code> was encountered on the …","When encountered, act as if <code>&quot;true&quot;</code> was encountered on the …","A UTF-8-encoded fixed string","Implementation for <code>ValueParser::string</code>","Terminal-styling container","Terminal styling definitions","Adapt a <code>TypedValueParser</code> from one value to another","Parse/validate argument values","Default value if hint is not specified. Follows shell …","When encountered, report ErrorKind::UnknownArgument","Complete web address.","Name of a local operating system user.","Overwrite builder value","Argument’s value type","Provide shell with hint on how to complete an argument.","Parse/validate argument values","Register a type with value_parser!","Values per occurrence for an argument","When encountered, display <code>Command::version</code>","Sets a <em>hidden</em> alias for this argument value.","Sets multiple <em>hidden</em> aliases for this argument value.","Extend the suggestions","Display using ANSI Escape Code styling","Get the raw string as an <code>std::ffi::OsStr</code>","","","","","","","Get the raw string of the <code>Str</code>","<code>bool</code> parser for argument values","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error heading","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Error heading","General Heading style, e.g. <code>help_heading</code>","Get the help specified for this argument, if any","Highlight invalid usage","Literal command-line syntax, e.g. <code>--help</code>","Get the name of the argument value","Returns all valid values of the argument value.","Descriptions within command-line syntax, e.g. <code>value_name</code>","Usage heading","Highlight suggested usage","","","","","General Heading style, e.g. <code>help_heading</code>","Sets the help description of the value.","Hides this value from help and shell completions.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert to the intended resettable type","","","","","","","","","","","","","","","","","","","","","","","","Highlight invalid usage","Report if <code>PossibleValue::hide</code> is set","Literal command-line syntax, e.g. <code>--help</code>","Adapt a <code>TypedValueParser</code> from one value to another","Tests if the value is valid for this argument value","Most number of values the argument accepts","Fewest number of values the argument accepts","Custom parser for argument values","Create a <code>PossibleValue</code> with its name.","Create a range","Create an empty buffer","Implementation for <code>ValueParser::string</code>","Implementation for <code>ValueParser::os_string</code>","Implementation for <code>ValueParser::path_buf</code>","Parse an <code>ValueEnum</code>","Verify the value is from an enumerated set of <code>PossibleValue</code>…","Select full range of <code>i64</code>","Select full range of <code>u64</code>","Implementation for <code>ValueParser::bool</code>","Parse false-like string values, everything else is <code>true</code>","Parse bool-like string values, everything else is <code>true</code>","Parse non-empty string values","<code>OsString</code> parser for argument values","Parse the argument value","","","","","","Parse the argument value","Parse the argument value","","","","","","","","","","","","","","","Parse the argument value","","","","","","<code>PathBuf</code> parser for argument values","Descriptions within command-line syntax, e.g. <code>value_name</code>","No terminal styling","Reflect on enumerated value properties","Reflect on enumerated value properties","","","","","","","","Narrow the supported range","Narrow the supported range","","<code>String</code> parser for argument values","Default terminal styling","Terminal <code>Styles</code> for help and error output","Provide a general suggestion","Suggest an alternative argument","Report whether the argument takes any values (ie is a flag)","Get the raw string as an <code>OsString</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adapt a <code>TypedValueParser</code> from one value to another","","Describes the content of <code>AnyValue</code>","","","","","","","","","","","","","","","","","","","","","","","Usage heading","Highlight suggested usage","Create the specified <code>Self::Parser</code>","","","","","256 (8-bit) color support","Available 4-bit ANSI color palette codes","","","Black: #0 (foreground code <code>30</code>, background code <code>40</code>).","Blue: #4 (foreground code <code>34</code>, background code <code>44</code>).","Bright black: #0 (foreground code <code>90</code>, background code <code>100</code>).","Bright blue: #4 (foreground code <code>94</code>, background code <code>104</code>).","Bright cyan: #6 (foreground code <code>96</code>, background code <code>106</code>).","Bright green: #2 (foreground code <code>92</code>, background code <code>102</code>).","Bright magenta: #5 (foreground code <code>95</code>, background code <code>105</code>…","Bright red: #1 (foreground code <code>91</code>, background code <code>101</code>).","Bright white: #7 (foreground code <code>97</code>, background code <code>107</code>).","Bright yellow: #3 (foreground code <code>93</code>, background code <code>103</code>…","","Any ANSI color code scheme","Cyan: #6 (foreground code <code>36</code>, background code <code>46</code>).","","","","","","A set of text effects","Green: #2 (foreground code <code>32</code>, background code <code>42</code>).","","Swap foreground and background colors; inconsistent …","Not widely supported. Sometimes treated as inverse or blink","Magenta: #5 (foreground code <code>35</code>, background code <code>45</code>).","Red: #1 (foreground code <code>31</code>, background code <code>41</code>).","Reset terminal formatting","","24-bit ANSI RGB color codes","Characters legible but marked as if for deletion. Not …","ANSI Text styling","Terminal styling definitions","Style extensions exist for Kitty, VTE, mintty and iTerm2.","White: #7 (foreground code <code>37</code>, background code <code>47</code>).","Yellow: #3 (foreground code <code>33</code>, background code <code>43</code>).","","Set background color","","","","","Apply <code>blink</code> effect","Apply <code>bold</code> effect","","","","","","","","","","","","","","","","","Change the color to/from bright","Reset all effects in-place","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all of the effects in <code>other</code> are contained …","","","","Apply <code>dimmed</code> effect","Set text effects","","","","","","","","","","Set foreground color","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Apply <code>hidden</code> effect","","Inserts the specified effects in-place.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Apply <code>invert</code> effect","Report whether the color is bright","Check if no effects are enabled","Check if no effects are enabled","Apply <code>italic</code> effect","Iterate over enabled effects","No effects enabled","No effects enabled","","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","","","","","","","","","Removes the specified effects in-place.","Render the ANSI code","Render the ANSI code","Render the ANSI code","Render the ANSI code for a background color","Render the ANSI code for a background color","Render the ANSI code for a background color","Render the ANSI code for a background color","Render the ANSI code for a foreground color","Render the ANSI code for a foreground color","Render the ANSI code for a foreground color","Render the ANSI code for a foreground color","Renders the relevant <code>Reset</code> code","Enable or disable the specified effects depending on the …","Apply <code>strikethrough</code> effect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply <code>underline</code> effect","Set underline color","Write the relevant <code>Reset</code> code","Write the ANSI code","Number of values present","Occurs when the user provides two values which conflict …","A single value","Semantics for a piece of error information","A piece of error information","An opaque message to the user","Richly formatted error context","Not a true “error” as it means <code>--help</code> or similar was …","Occurs when either an argument or a <code>Subcommand</code> is …","Not a true “error” as it means <code>--version</code> or similar …","Contains the error value","Command Line Argument Parser Error","Defines how to format an error for displaying to the user","Command line argument parser kind of error","Number of allowed values","Represents a Format error (which is a part of <code>Display</code>). …","The cause of the error","The cause of the error","Occurs when the user provides an unrecognized <code>Subcommand</code> …","Occurs when the user provides a value containing invalid …","Rejected values","Occurs when an <code>Arg</code> has a set of possible values, and the …","Represents an I/O error. Can occur when writing to <code>stderr</code> …","Report <code>ErrorKind</code>","Minimum number of allowed values","Occurs when the user does not provide one or more required …","Occurs when a subcommand is required (as defined by …","Occurs when the user doesn’t use equals for an option …","<code>ContextKind</code> is self-sufficient, no additional information …","A single value","Contains the success value","Existing arguments","Short hand for <code>Result</code> type","Richly formatted error context","A single value","Many values","A single value","many value","Potential fix for the user","Potential fix for the user","Potential fix for the user","Potential fix for the user","Potential fix for the user","Occurs when the user provides fewer values for an argument …","Occurs when a user provides more values for an argument …","Trailing argument","Occurs when a user provides a flag, option, argument or …","A usage string","Accepted subcommands","Accepted values","Occurs when the user provides a value for an argument with …","Occurs when the user provides a different number of values …","Apply an alternative formatter to the error","End-user description of the error case, where relevant","End-user description of the error case, where relevant","","","","","","","","","","","","","","","","","","","Additional information to further qualify the error","","","","Prints the error and exits.","Returns the exit code that <code>.exit</code> will exit the process …","","","","","","","","","Format the existing message with the Command’s context","Stylize the error for the terminal","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Lookup a piece of context","","","Insert a piece of context","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Type of error for programmatic processing","Create an error with a pre-defined message","Prints formatted and colored error to <code>stdout</code> or <code>stderr</code> …","Create an unformatted error","Render the error message to a <code>StyledStr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Should the message be written to <code>stdout</code> or not?","Apply <code>Command</code>’s formatting to the error","Container for parse results.","Value was passed in on the command-line","Value came <code>Arg::default_value</code>","Failed to downcast <code>AnyValue</code> to the specified type","Value came [<code>Arg::env</code>][crate::Arg::env]","Iterate over <code>Arg</code> and <code>ArgGroup</code> <code>Id</code>s via <code>ArgMatches::ids</code>.","Iterate over indices for where an argument appeared when …","Violation of <code>ArgMatches</code> assumptions","Iterate over raw argument values via <code>ArgMatches::get_raw</code>.","Argument not defined in <code>Command</code>","Origin of the argument’s value","Iterate over multiple values for an argument via …","Iterate over multiple values for an argument via …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type for value stored in <code>ArgMatches</code>","The target type to downcast to"],"i":[17,16,5,0,0,0,0,0,17,0,0,0,16,16,16,5,16,16,0,16,16,0,5,5,5,16,0,17,16,0,5,5,5,0,16,16,16,0,0,5,1,4,1,1,4,1,4,1,1,4,1,4,9,1,0,1,9,1,1,1,12,10,10,115,115,116,116,1,1,1,1,5,4,9,1,16,12,10,10,17,5,4,9,1,16,12,10,17,1,0,5,4,9,1,16,12,10,17,5,4,9,1,16,12,10,17,4,10,1,117,0,117,4,9,4,9,12,1,4,9,1,16,12,10,17,4,4,4,4,4,4,4,4,1,1,1,1,1,1,4,1,1,4,9,16,12,10,10,10,10,10,17,0,1,4,1,1,1,1,5,4,4,9,1,1,16,12,10,10,17,17,5,4,4,9,9,1,1,16,12,10,10,10,10,10,10,17,118,118,66,16,17,1,4,1,1,4,1,1,4,1,1,9,1,1,1,1,1,1,12,4,1,1,12,1,4,4,4,9,4,4,1,4,1,4,1,12,1,1,1,1,1,4,12,12,1,1,4,12,12,4,4,1,1,1,1,1,1,4,4,4,4,4,1,4,1,1,4,1,4,4,1,115,4,1,116,1,16,10,4,1,4,1,4,1,4,4,4,1,4,4,9,12,4,1,4,1,12,12,1,1,5,4,9,1,16,12,10,17,5,16,10,10,10,1,4,1,4,1,1,1,1,1,1,1,4,1,4,4,4,4,4,1,4,4,4,1,9,4,1,1,4,1,4,4,9,1,1,1,4,4,4,1,1,1,1,4,1,1,1,9,1,1,1,1,4,9,1,1,1,4,1,1,4,1,1,4,4,119,119,0,4,10,17,1,1,1,4,12,12,12,12,1,1,1,1,1,4,4,9,4,4,4,4,4,4,4,9,9,4,4,1,4,4,4,1,1,1,1,1,12,1,12,12,1,1,1,1,1,5,1,5,4,9,1,16,12,10,17,66,17,4,1,10,17,4,12,5,4,9,1,16,12,10,17,12,1,1,1,12,12,12,12,5,4,9,1,16,12,10,17,119,119,12,12,12,119,5,4,9,1,16,12,10,17,119,118,118,4,4,4,4,4,0,12,4,66,17,1,4,1,4,1,1,1,4,4,1,1,16,5,0,0,0,0,0,0,0,16,16,16,5,16,42,16,0,20,16,0,16,5,5,5,16,0,20,0,0,0,0,16,120,0,0,0,0,0,51,0,42,5,5,5,0,0,0,0,0,0,16,0,16,16,51,87,0,0,0,0,5,44,44,60,2,19,19,19,6,6,6,6,6,25,25,20,19,19,44,42,51,6,6,2,62,63,64,65,67,68,71,73,74,75,76,77,78,60,47,25,20,19,44,42,51,6,2,62,63,64,65,67,68,71,73,74,75,76,77,78,60,47,25,20,19,44,42,51,6,2,62,63,64,65,67,68,71,73,74,75,76,77,78,60,47,25,20,19,44,42,51,6,2,62,63,64,65,67,68,71,73,74,75,76,77,78,60,47,19,51,6,2,19,44,42,6,2,2,62,63,64,65,68,71,73,74,75,76,47,47,19,6,42,20,19,19,19,19,19,19,44,42,51,6,6,6,6,6,6,6,2,47,25,20,19,44,42,42,51,6,6,2,2,62,63,64,65,67,68,71,73,74,75,76,77,78,60,47,25,25,25,25,25,25,25,25,25,25,20,20,19,19,19,19,19,19,19,19,44,44,42,42,42,42,42,42,42,42,51,51,51,51,6,6,6,6,6,2,2,2,2,2,62,63,64,65,67,67,68,68,71,71,73,74,75,76,77,78,60,47,47,47,44,47,47,44,44,47,47,47,19,42,51,6,47,44,44,25,20,19,44,42,51,6,2,62,63,64,65,67,68,71,73,74,75,76,77,78,60,47,3,25,19,42,51,6,6,6,6,2,62,63,64,65,67,68,71,73,74,75,76,77,78,60,47,44,47,87,44,42,42,25,44,42,2,62,63,64,65,67,68,71,73,74,75,76,25,87,62,63,64,67,77,87,87,62,63,64,65,67,68,71,73,74,75,76,77,78,60,87,60,19,51,6,2,25,47,47,25,87,65,67,73,74,75,77,78,68,71,42,25,47,0,60,60,42,19,25,20,19,44,42,51,6,2,62,63,64,65,67,68,71,73,74,75,76,77,78,60,47,42,6,2,25,20,19,44,42,51,6,2,62,63,64,65,67,68,71,73,74,75,76,77,78,60,47,25,20,19,44,42,51,6,2,62,63,64,65,67,68,71,73,74,75,76,77,78,60,47,87,25,25,20,19,44,42,51,6,2,62,63,64,65,67,68,71,73,74,75,76,77,78,60,47,47,47,120,2,2,101,101,0,0,102,102,103,103,103,103,103,103,103,103,103,103,102,0,103,102,102,102,102,0,0,103,102,102,102,103,103,0,101,0,102,0,0,102,103,103,100,83,102,83,102,83,83,83,101,103,104,100,102,105,106,83,101,103,104,100,102,105,106,83,103,102,101,103,104,100,102,105,106,83,101,103,104,100,102,105,106,83,101,103,104,100,102,106,83,102,102,106,83,83,83,101,103,104,100,102,105,106,83,83,83,101,103,104,100,102,105,106,83,101,101,101,101,101,101,103,104,104,104,100,100,102,105,106,83,83,104,100,83,83,83,83,101,103,104,100,102,106,83,83,104,102,101,103,104,100,102,105,106,83,104,105,83,103,102,83,83,102,102,83,105,101,103,104,100,101,103,104,100,101,103,104,100,102,106,83,100,102,102,106,83,101,103,104,100,101,103,104,100,83,102,83,102,83,102,83,101,103,104,100,102,105,106,83,101,103,104,100,102,105,106,83,101,103,104,100,102,105,106,83,101,103,104,100,102,105,106,83,83,83,83,83,110,22,111,0,0,110,0,22,22,22,121,0,0,0,110,22,110,110,22,22,110,22,22,0,110,22,22,22,111,111,121,110,0,0,111,111,111,111,110,110,110,110,110,22,22,110,22,110,110,110,22,22,23,110,22,113,122,23,110,111,22,113,122,23,110,111,22,110,111,22,110,111,22,23,110,111,22,23,23,23,23,110,110,111,111,22,22,23,109,113,122,113,122,23,23,23,110,111,22,23,110,22,23,113,122,23,110,111,22,23,23,23,23,23,23,110,111,22,23,110,111,22,113,122,23,110,111,22,113,122,23,110,111,22,113,122,23,110,111,22,23,23,0,59,59,57,59,0,0,0,0,57,0,0,0,57,49,55,37,45,50,59,57,49,55,37,45,50,59,57,49,55,37,45,50,59,57,49,55,37,45,50,59,59,55,37,45,50,59,57,57,49,55,37,45,50,59,57,49,55,37,45,50,59,57,49,55,37,45,50,59,49,55,37,45,50,49,55,37,45,50,49,55,37,45,50,59,49,55,37,45,50,57,49,55,37,45,50,59,57,57,49,55,37,45,50,59,57,49,55,37,45,50,59,57,49,55,37,45,50,59,123,123],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,-1],1,[[3,[2]]]],[[4,-1],4,[[3,[5]]]],[[1,-1],1,[[3,[2]]]],[[1,-1],1,[[3,[2]]]],[[4,-1],4,[[3,[6]]]],[[1,-1],1,[[3,[6]]]],[[4,-1],4,7],[[1,-1],1,7],[[1,8],1],[[4,8],4],[[1,8],1],[[4,8],4],[[9,-1],9,[[3,[10]]]],[[1,-1],1,[[11,[4]]]],0,[[1,8],1],[[9,-1],9,7],[[1,-1],1,7],[[1,8],1],[[1,8],1],[12,8],[10,13],[10,13],[1,1],[1,1],[1,1],[1,1],[[1,-1],1,[[3,[6]]]],[[1,-1],1,[[3,[2]]]],[[1,-1],1,[[3,[2]]]],[[1,-1],1,[[3,[14]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,15],0,[5,5],[4,4],[9,9],[1,1],[16,16],[12,12],[10,10],[17,17],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[4,4],18],[[10,10],18],[[1,17],1],[[],1],0,[[],1],[[4,-1],4,[[3,[10]]]],[[9,-1],9,[[3,[10]]]],[[4,-1],4,7],[[9,-1],9,7],[[12,13],8],[1,15],[[],4],[[],9],[[],1],[[],16],[[],12],[[],10],[[],17],[[4,-1],4,[[3,[19]]]],[[4,-1],4,[[11,[19]]]],[[4,-1],4,7],[[4,-1],4,7],[[4,-1],4,[[3,[19]]]],[[4,-1,-2,-3],4,[[11,[10]]],[[11,[20]]],[[3,[19]]]],[[4,-1],4,7],[[4,-1],4,7],[1,1],[[1,8],1],[[1,8],1],[[1,8],1],[[1,8],1],[[1,-1],1,[[3,[14]]]],[[4,-1],4,[[3,[21]]]],[[1,-1],1,[[3,[21]]]],[[1,8],1],[[4,4],8],[[9,9],8],[[16,16],8],[[12,12],8],[[10,6],8],[[10,14],8],[[10,13],8],[[10,13],8],[[10,10],8],[[17,17],8],0,[[1,22,-1],23,24],[[4,8],4],[[1,-1],1,[[3,[25]]]],[[1,-1],[[26,[1]]],[[28,[27]]]],[[1,-1],[[26,[1]]],[[28,[27]]]],[[1,8],1],[[5,29],[[31,[15,30]]]],[[4,29],[[31,[15,30]]]],[[4,29],[[31,[15,30]]]],[[9,29],[[31,[15,30]]]],[[1,29],[[31,[15,30]]]],[[1,29],[[31,[15,30]]]],[[16,29],[[31,[15,30]]]],[[12,29],[[31,[15,30]]]],[[10,29],[[31,[15,30]]]],[[10,29],[[31,[15,30]]]],[[17,29],[[31,[15,30]]]],[[17,29],[[31,[15,30]]]],[-1,-1,[]],[4,4],[-1,-1,[]],[-1,-1,[]],[9,9],[-1,-1,[]],[1,1],[-1,-1,[]],[-1,-1,[]],[13,10],[10,10],[6,10],[13,10],[-1,-1,[]],[6,10],[-1,-1,[]],[12,[[31,[-1,23]]],[]],[12,[[31,[-1,23]]],[]],[[13,8],[[31,[-1,14]]],[]],[13,[[31,[16]]]],[13,[[31,[17]]]],[1,[[26,[2]]]],[4,5],[1,[[26,[2]]]],[1,[[26,[2]]]],[4,[[26,[[32,[13]]]]]],[1,[[0,[33]]]],[1,[[0,[33]]]],[4,[[26,[[32,[34]]]]]],[1,[[0,[33]]]],[[1,4],[[32,[4]]]],[9,[[0,[33]]]],[1,[[0,[33]]]],[1,[[26,[13]]]],[1,[[26,[2]]]],[1,[[26,[2]]]],[1,[[26,[13]]]],[1,17],[[12,13],35],[4,[[36,[19]]]],[1,[[26,[13]]]],[1,[[26,[25]]]],[[12,13],8],[1,[[0,[33]]]],[4,[[26,[2]]]],[4,[[26,[13]]]],[4,10],[9,10],[4,[[26,[21]]]],[4,[[26,[13]]]],[1,[[26,[2]]]],[4,[[26,[[32,[13]]]]]],[1,[[26,[13]]]],[4,[[26,[2]]]],[1,[[26,[13]]]],[[12,13],[[26,[[37,[-1]]]]],[38,39,40,41]],[1,12],[[1,-1],12,7],[1,12],[1,13],[1,[[26,[13]]]],[4,[[26,[42]]]],[[12,13],[[26,[[43,[-1]]]]],[38,39,40,41]],[[12,13],[[26,[-1]]],[38,39,40,41]],[1,[[0,[33]]]],[1,[[0,[33]]]],[4,[[32,[44]]]],[[12,13],[[26,[45]]]],[[12,13],[[26,[46]]]],[4,[[26,[34]]]],[4,[[26,[[32,[34]]]]]],[1,[[26,[34]]]],[1,47],[1,[[26,[13]]]],[1,[[26,[13]]]],[1,[[0,[33]]]],[1,[[0,[33]]]],[4,[[26,[34]]]],[4,16],[4,[[26,[[36,[6]]]]]],[4,25],[4,[[26,[6]]]],[1,[[26,[13]]]],[4,[[26,[[32,[13]]]]]],[1,[[0,[33]]]],[1,[[0,[33]]]],[4,[[26,[[32,[34]]]]]],[1,[[0,[33]]]],[[4,8],4],[[4,-1],4,[[3,[10]]]],[[1,-1],1,[[11,[9]]]],[[],[[26,[10]]]],[[4,-1],4,7],[[1,-1],1,7],[13,8],[1,8],[[16,-1],15,48],[[10,-1],15,48],[[4,-1],4,[[3,[2]]]],[[1,8],1],[[4,-1],4,[[3,[6]]]],[[1,-1],1,[[3,[2]]]],[[4,8],4],[[1,8],1],[[4,8],4],[[4,8],4],[[4,8],4],[[1,8],1],[[4,8],4],[[4,-1],4,[[11,[10]]]],[[9,-1],9,[[11,[10]]]],[12,49],[[4,8],4],[[1,8],1],[[4,-1],4,[[3,[21]]]],[[1,10]],[[12,13],[[26,[21]]]],[[12,13],[[26,[50]]]],[[1,8],1],[[1,8],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,[[51,[5]]]],[16,[[51,[16]]]],[-1,[[51,[6]]],[]],[-1,[[51,[14]]],[]],[-1,[[51,[10]]],[]],[1,8],[4,8],[1,8],[4,8],[1,8],[1,8],[1,8],[1,8],[1,8],[1,8],[1,8],[4,8],[1,8],[4,8],[4,8],[4,8],[4,8],[4,8],[1,8],[4,8],[4,8],[4,8],[1,8],[9,8],[4,8],[1,8],[1,8],[4,8],[1,8],[4,8],[4,8],[9,8],[1,8],[1,8],[1,8],[4,8],[[4,8],4],[[4,-1],4,[[3,[6]]]],[[1,-1],1,[[3,[2]]]],[[1,-1],1,[[11,[6]]]],[[1,-1],1,[[3,[6]]]],[[1,-1],1,7],[[4,-1],4,[[3,[2]]]],[[1,-1],1,[[3,[6]]]],[[1,21],1],[[1,8],1],[[9,8],9],[[1,-1,-2],1,[[28,[13]]],52],[[1,-1],1,53],[[1,-1,-2],1,[[28,[13]]],52],[[1,-1],1,[[11,[6]]]],[-1,4,[[11,[10]]]],[-1,9,[[11,[10]]]],[-1,1,[[11,[6]]]],[[1,-1],1,[[3,[21]]]],[[1,-1],1,[[3,[6]]]],[[4,8],4],[[1,8],1],[[1,8],1],[[4,-1],4,[[3,[42]]]],[[1,-1],1,[[3,[2]]]],[[1,-1],1,[[3,[2]]]],[[4,-1],4,[[3,[10]]]],[[4,-1],4,7],[[],-1,[]],[-1,-2,7,[]],0,[[4,4],[[26,[18]]]],[[10,10],[[26,[18]]]],[[],[[0,[33]]]],[1,[[31,[15,54]]]],[1,[[31,[15,54]]]],[[1,8],1],[[4,8],4],[[12,13],[[26,[[55,[-1]]]]],[38,39,40,41]],[[12,13],[[26,[[56,[-1]]]]],[38,39,40,41]],[[12,13],[[26,[-1]]],[38,39,40,41]],[12,[[26,[[15,[14,12]]]]]],[1,2],[1,2],[1,14],[1,2],[1,14],[[4,8],4],[[4,8],4],[[9,8],9],[[4,-1,-2],4,[[11,[10]]],[[11,[19]]]],[[4,-1],4,7],[[4,-1],4,7],[[4,-1],4,[[3,[10]]]],[[4,-1],4,7],[[4,-1],4,7],[[4,-1],4,[[3,[10]]]],[[9,-1],9,[[3,[10]]]],[[9,-1],9,7],[[4,-1,-2],4,[[11,[20]]],[[11,[10]]]],[[4,-1],4,7],[[1,-1],15,[[11,[14]]]],[[4,-1],4,[[3,[34]]]],[[4,-1],4,[[3,[34]]]],[[4,-1],4,7],[[1,-1],1,[[3,[34]]]],[[1,-1],1,[[3,[34]]]],[[1,-1],1,7],[[1,47],1],[[1,-1],1,[[11,[1]]]],[12,[[26,[[15,[13,12]]]]]],[[1,-1],1,[[3,[6]]]],[[12,13],[[26,[12]]]],[12,[[26,[13]]]],[[1,8],1],[[1,8],1],[[1,8],1],[[1,-1],1,[[3,[6]]]],[[1,-1],1,7],[5,8],[[1,21],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[44]]],[]],[17,[[26,[44]]]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[[4,8],4],[[12,13],[[31,[8,57]]]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[[12,13],[[31,[[26,[[37,[-1]]]],57]]],[38,39,40,41]],[1,[[31,[12,23]]]],[[1,-1],[[31,[12,23]]],7],[[1,-1],[[31,[12,23]]],7],[[12,13],[[31,[[26,[[43,[-1]]]],57]]],[38,39,40,41]],[[12,13],[[31,[[26,[-1]],57]]],[38,39,40,41]],[[12,13],[[31,[[26,[45]],57]]]],[[12,13],[[31,[[26,[46]],57]]]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[[],[[31,[-1,23]]],[]],[-1,[[31,[-2,23]]],7,[]],[[12,13],[[31,[[26,[[55,[-1]]]],57]]],[38,39,40,41]],[[12,13],[[31,[[26,[[56,[-1]]]],57]]],[38,39,40,41]],[[12,13],[[31,[[26,[-1]],57]]],[38,39,40,41]],[[-1,-2],[[31,[15,23]]],[],7],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[[-1,-2],15,[],7],[[-1,12],[[31,[15,23]]],[]],[[-1,12],[[31,[15,23]]],[]],[[4,-1],4,[[3,[34]]]],[[4,-1],4,[[3,[16]]]],[[4,-1],4,[[3,[6]]]],[[4,-1],4,7],[[4,-1],4,[[3,[25]]]],0,[[12,13],[[26,[59]]]],[[4,-1],4,[[3,[6]]]],[[],[[36,[-1]]],[]],[[],[[36,[17]]]],[[1,-1],1,[[3,[6]]]],[[4,-1],4,[[3,[6]]]],[[1,-1],1,[[3,[6]]]],[[4,-1],4,7],[[1,-1],1,7],[[1,-1],1,[[3,[6]]]],[[1,-1],1,7],[[4,-1],4,[[3,[34]]]],[[4,-1],4,7],[[1,-1],1,[[3,[34]]]],[[1,-1],1,7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[44,-1],44,[[3,[6]]]],[[44,-1],44,7],[[60,-1],60,[[11,[2]]]],[2,[[0,[24]]]],[19,27],[19,27],[19,61],[6,[[36,[35]]]],[6,13],[6,27],[6,61],[6,13],[[],25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,25],[20,20],[19,19],[44,44],[42,42],[[[51,[-1]]],[[51,[-1]]],39],[6,6],[2,2],[62,62],[63,63],[64,64],[[[65,[-1]]],[[65,[-1]]],[39,66,39,40,41]],[67,67],[[[68,[-1]]],[[68,[-1]]],[39,[70,[69]],39,40,41]],[[[71,[-1]]],[[71,[-1]]],[39,[70,[72]]]],[73,73],[74,74],[75,75],[76,76],[[[77,[-1,-2]]],[[77,[-1,-2]]],39,39],[[[78,[-1,-2]]],[[78,[-1,-2]]],39,39],[60,60],[47,47],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[19,19],18],[[[51,[-1]],[51,[-1]]],18,79],[[6,6],18],[[2,2],18],[[],19],[[],44],[[],42],[[],6],[[],2],[[],2],[[],62],[[],63],[[],64],[[],[[65,[-1]]],[66,39,40,41]],[[],[[68,[-1]]],[[70,[69]],39,40,41]],[[],[[71,[-1]]],[[70,[72]]]],[[],73],[[],74],[[],75],[[],76],[[],47],[[],47],[19,27],[6,13],[42,[[80,[21]]]],[[20,20],8],[[19,19],8],[[19,13],8],[[19,27],8],[[19,14],8],[[19,13],8],[[19,81],8],[[44,44],8],[[42,42],8],[[[51,[-1]],[51,[-1]]],8,82],[[6,14],8],[[6,10],8],[[6,13],8],[[6,27],8],[[6,6],8],[[6,13],8],[[6,27],8],[[2,2],8],[[47,83],47],[[25,29],[[31,[15,30]]]],[[20,29],[[31,[15,30]]]],[[19,29],[[31,[15,30]]]],[[44,29],[[31,[15,30]]]],[[42,29],[[31,[15,30]]]],[[42,29],[[31,[15,30]]]],[[[51,[-1]],29],[[31,[15,30]]],84],[[6,29],[[31,[15,30]]]],[[6,29],[[31,[15,30]]]],[[2,29],[[31,[15,30]]]],[[2,29],[[31,[15,30]]]],[[62,29],[[31,[15,30]]]],[[63,29],[[31,[15,30]]]],[[64,29],[[31,[15,30]]]],[[[65,[-1]],29],[[31,[15,30]]],[84,66,39,40,41]],[[67,29],[[31,[15,30]]]],[[[68,[-1]],29],[[31,[15,30]]],[84,[70,[69]],39,40,41]],[[[71,[-1]],29],[[31,[15,30]]],[84,[70,[72]]]],[[73,29],[[31,[15,30]]]],[[74,29],[[31,[15,30]]]],[[75,29],[[31,[15,30]]]],[[76,29],[[31,[15,30]]]],[[[77,[-1,-2]],29],[[31,[15,30]]],84,84],[[[78,[-1,-2]],29],[[31,[15,30]]],84,84],[[60,29],[[31,[15,30]]]],[[47,29],[[31,[15,30]]]],[[[85,[69]]],25],[[[86,[69]]],25],[-1,25,[87,40,41]],[[[88,[69]]],25],[[[89,[69]]],25],[[[90,[69]]],25],[[[32,[-1]]],25,[[11,[44]]]],[-1,-1,[]],[91,25],[[[92,[-1]]],25,[[11,[44]]]],[-1,20,[[11,[19]]]],[-1,-1,[]],[13,19],[27,19],[6,19],[-1,-1,[]],[27,19],[6,19],[19,19],[13,19],[-1,44,[[11,[6]]]],[-1,-1,[]],[91,42],[[[85,[21]]],42],[21,42],[[[88,[21]]],42],[-1,-1,[]],[[[86,[21]]],42],[[[89,[21]]],42],[[[90,[21]]],42],[93,-1,[]],[-1,[[51,[-1]]],[]],[-1,-1,[]],[[[26,[-1]]],[[51,[-1]]],[]],[6,6],[13,6],[-1,-1,[]],[13,6],[10,6],[13,2],[-1,-1,[]],[14,2],[13,2],[14,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,67,7],[-1,[[68,[-2]]],[[94,[69]]],[[70,[69]],39,40,41]],[-1,-1,[]],[-1,[[71,[-2]]],[[94,[72]]],[[70,[72]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[47,83],[47,83],[44,[[26,[2]]]],[47,83],[47,83],[44,13],[44,[[0,[33]]]],[47,83],[47,83],[47,83],[[19,-1],15,48],[[42,-1],15,48],[[[51,[-1]],-2],15,95,48],[[6,-1],15,48],[[47,83],47],[[44,-1],44,[[3,[2]]]],[[44,8],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[51,[-2]]],[],[]],[-1,[[51,[25]]],[]],[-1,[[51,[19]]],[]],[-1,[[51,[42]]],[]],[[[51,[-1]]],[[51,[-1]]],[]],[-1,[[51,[14]]],[]],[-1,[[51,[10]]],[]],[-1,[[51,[19]]],[]],[-1,[[51,[6]]],[]],[-1,[[51,[2]]],[]],[-1,[[51,[25]]],[]],[-1,[[51,[25]]],[]],[-1,[[51,[25]]],[]],[-1,[[51,[25]]],[]],[-1,[[51,[25]]],[]],[-1,[[51,[25]]],[]],[-1,[[51,[25]]],[]],[-1,[[51,[25]]],[]],[-1,[[51,[25]]],[]],[-1,[[51,[25]]],[]],[-1,[[51,[25]]],[]],[-1,[[51,[25]]],[]],[-1,[[51,[25]]],[]],[-1,[[51,[25]]],[]],[[47,83],47],[44,8],[[47,83],47],[[-1,-2],[[77,[-1,-2]]],[],[96,39]],[[44,13,8],8],[42,21],[42,21],[-1,25,87],[-1,44,[[11,[6]]]],[-1,42,[[11,[42]]]],[[],2],[[],62],[[],63],[[],64],[[],[[65,[-1]]],[66,39,40,41]],[-1,67,[[11,[67]]]],[[],[[68,[-1]]],[[70,[69]],39,40,41]],[[],[[71,[-1]]],[[70,[72]]]],[[],73],[[],74],[[],75],[[],76],[[],25],[[-1,1,[26,[4]],81],[[31,[23]]],[]],[[62,1,[26,[4]],81],[[31,[23]]]],[[63,1,[26,[4]],81],[[31,[23]]]],[[64,1,[26,[4]],81],[[31,[23]]]],[[67,1,[26,[4]],81],[[31,[14,23]]]],[[[77,[-1,-2]],1,[26,[4]],81],[[31,[23]]],87,[96,39,40,41]],[[-1,1,[26,[4]],81,59],[[31,[23]]],[]],[[-1,1,[26,[4]],27],[[31,[23]]],[]],[[62,1,[26,[4]],27],[[31,[23]]]],[[63,1,[26,[4]],27],[[31,[23]]]],[[64,1,[26,[4]],27],[[31,[23]]]],[[[65,[-1]],1,[26,[4]],27],[[31,[23]]],[66,39,40,41]],[[67,1,[26,[4]],27],[[31,[23]]]],[[[68,[-1]],1,[26,[4]],27],[[31,[23]]],[[70,[69]],39,40,41]],[[[71,[-1]],1,[26,[4]],27],[[31,[23]]],[[70,[72]],39,40,41]],[[73,1,[26,[4]],27],[[31,[23]]]],[[74,1,[26,[4]],27],[[31,[23]]]],[[75,1,[26,[4]],27],[[31,[23]]]],[[76,1,[26,[4]],27],[[31,[23]]]],[[[77,[-1,-2]],1,[26,[4]],27],[[31,[23]]],87,[96,39,40,41]],[[[78,[-1,-2]],1,[26,[4]],27],[[31,[23]]],87,[96,39,40,41]],[[60,1,[26,[4]],27],[[31,[23]]]],[[-1,1,[26,[4]],27,59],[[31,[23]]],[]],[[60,1,[26,[4]],27,59],[[31,[23]]]],[[19,19],[[26,[18]]]],[[[51,[-1]],[51,[-1]]],[[26,[18]]],97],[[6,6],[[26,[18]]]],[[2,2],[[26,[18]]]],[[],25],[[47,83],47],[[],47],[25,[[26,[[98,[33]]]]]],[-1,[[26,[[98,[33]]]]],[]],[[[65,[-1]]],[[26,[[98,[33]]]]],[66,39,40,41]],[67,[[26,[[98,[33]]]]]],[73,[[26,[[98,[33]]]]]],[74,[[26,[[98,[33]]]]]],[75,[[26,[[98,[33]]]]]],[[[77,[-1,-2]]],[[26,[[98,[33]]]]],87,[96,39,40,41]],[[[78,[-1,-2]]],[[26,[[98,[33]]]]],87,[96,39,40,41]],[[[68,[-1]],-2],[[68,[-1]]],[[70,[69]],39,40,41],[[94,[69]]]],[[[71,[-1]],-2],[[71,[-1]]],[[70,[72]]],[[94,[72]]]],[42,[[80,[21]]]],[[],25],[[],47],0,[-1,60,[[11,[2]]]],[-1,60,[[11,[6]]]],[42,8],[19,81],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[[-1,-2],[[78,[-1,-2]]],[],[96,39,40,41]],[-1,58,[]],[25,99],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[[47,83],47],[[47,83],47],[[]],[[2,34],[[31,[15,30]]]],[[2,13],[[31,[15,30]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[100,35],[[83,[26,[101]]],83],[[102,102],102],[[83,102],83],[[102,102],15],[[83,102],15],[83,83],[83,83],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[103,8],103],[102,102],[101,101],[103,103],[104,104],[100,100],[102,102],[105,105],[106,106],[83,83],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[101,101],18],[[103,103],18],[[104,104],18],[[100,100],18],[[102,102],18],[[106,106],18],[[83,83],18],[[102,102],8],[[],102],[[],106],[[],83],[83,83],[[83,102],83],[[101,101],8],[[103,103],8],[[104,104],8],[[100,100],8],[[102,102],8],[[105,105],8],[[106,106],8],[[83,83],8],[[83,102],8],[[83,[26,[101]]],83],[[101,29],[[31,[15,30]]]],[[103,29],[[31,[15,30]]]],[[104,29],[[31,[15,30]]]],[[100,29],[[31,[15,30]]]],[[102,29],[[31,[15,30]]]],[[105,29],[[31,[15,30]]]],[[106,29],[[31,[15,30]]]],[[83,29],[[31,[15,30]]]],[104,101],[100,101],[-1,-1,[]],[103,101],[35,101],[[[15,[35,35,35]]],101],[-1,-1,[]],[-1,-1,[]],[103,104],[35,104],[-1,-1,[]],[[[15,[35,35,35]]],100],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[102,83],[103,104],[100,35],[83,[[26,[101]]]],[83,102],[83,[[26,[101]]]],[83,[[26,[101]]]],[[101,-1],15,48],[[103,-1],15,48],[[104,-1],15,48],[[100,-1],15,48],[[102,-1],15,48],[[106,-1],15,48],[[83,-1],15,48],[83,83],[104,35],[[102,102],102],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[104,[[26,[103]]]],[-1,-2,[],[]],[83,83],[103,8],[102,8],[83,8],[83,83],[102,105],[[],102],[[],83],[105,26],[[101,-1],83,[[11,[101]]]],[[103,-1],83,[[11,[101]]]],[[104,-1],83,[[11,[101]]]],[[100,-1],83,[[11,[101]]]],[101,83],[103,83],[104,83],[100,83],[[101,101],[[26,[18]]]],[[103,103],[[26,[18]]]],[[104,104],[[26,[18]]]],[[100,100],[[26,[18]]]],[[102,102],[[26,[18]]]],[[106,106],[[26,[18]]]],[[83,83],[[26,[18]]]],[100,35],[[102,102],102],[102,[[0,[24,107,39]]]],[106,[[0,[24,107,39]]]],[83,[[0,[24,107,39]]]],[101,[[0,[24,107,39]]]],[103,[[0,[24,107,39]]]],[104,[[0,[24,107,39]]]],[100,[[0,[24,107,39]]]],[101,[[0,[24,107,39]]]],[103,[[0,[24,107,39]]]],[104,[[0,[24,107,39]]]],[100,[[0,[24,107,39]]]],[83,[[0,[24,107,39]]]],[[102,102,8],102],[83,83],[[102,102],102],[[83,102],83],[[102,102],15],[[83,102],15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[83,83],[[83,[26,[101]]],83],[[83,108],[[31,[15,54]]]],[[83,108],[[31,[15,54]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[23,[-1]]],[[23,[-2]]],109,109],[110,[[26,[13]]]],[22,[[26,[13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[110,110],[111,111],[22,22],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[[23,[-1]]],[[0,[33]]],109],[[110,110],8],[[111,111],8],[[22,22],8],[[[23,[-1]]],93,109],[[[23,[-1]]],112,109],[[[23,[-1]],29],[[31,[15,30]]],109],[[[23,[-1]],29],[[31,[15,30]]],109],[[110,29],[[31,[15,30]]]],[[110,29],[[31,[15,30]]]],[[111,29],[[31,[15,30]]]],[[111,29],[[31,[15,30]]]],[[22,29],[[31,[15,30]]]],[[22,29],[[31,[15,30]]]],[[[23,[-1]],1],[[23,[-1]]],109],[[[23,[-1]]],2,[]],[[[23,[113]]],2],[23,2],[-1,-1,[]],[-1,-1,[]],[54,[[23,[-1]]],109],[30,[[23,[-1]]],109],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[23,[-1]],110],[[26,[111]]],109],[[110,-1],15,48],[[22,-1],15,48],[[[23,[-1]],110,111],[[26,[111]]],109],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[23,[-1]]],22,109],[22,[[23,[-1]]],109],[[[23,[-1]]],[[31,[15,54]]],109],[[22,-1],[[23,[-2]]],24,109],[[[23,[-1]]],2,109],[[[23,[-1]]],[[26,[114]]],109],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[[[23,[-1]]],8,109],[[[23,[-1]],1],[[23,[-1]]],109],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,57],[49,49],[[[55,[-1]]],[[55,[-1]]],39],[[[37,[-1]]],[[37,[-1]]],39],[45,45],[50,50],[59,59],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[59,59],18],[[],[[55,[-1]]],[]],[[],[[37,[-1]]],[]],[[],45],[[],50],[[59,59],8],[[57,29],[[31,[15,30]]]],[[57,29],[[31,[15,30]]]],[[49,29],[[31,[15,30]]]],[[[55,[-1]],29],[[31,[15,30]]],84],[[[37,[-1]],29],[[31,[15,30]]],84],[[45,29],[[31,[15,30]]]],[[50,29],[[31,[15,30]]]],[[59,29],[[31,[15,30]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[49,[[26,[10]]]],[[[55,[-1]]],26,[]],[[[37,[-1]]],26,[]],[45,[[26,[27]]]],[50,[[26,[21]]]],[49,[[26,[10]]]],[[[55,[-1]]],26,[]],[[[37,[-1]]],26,[]],[45,[[26,[27]]]],[50,[[26,[21]]]],[[59,59],[[26,[18]]]],[49,[[15,[21,[26,[21]]]]]],[[[55,[-1]]],[[15,[21,[26,[21]]]]],[]],[[[37,[-1]]],[[15,[21,[26,[21]]]]],[]],[45,[[15,[21,[26,[21]]]]]],[50,[[15,[21,[26,[21]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],0,0],"c":[],"p":[[3,"Command",0],[3,"StyledStr",499],[8,"IntoResettable",499],[3,"Arg",0],[4,"ArgAction",0],[3,"Str",499],[8,"IntoIterator",1537],[15,"bool"],[3,"ArgGroup",0],[3,"Id",0],[8,"Into",1538],[3,"ArgMatches",0],[15,"str"],[3,"String",1539],[15,"tuple"],[4,"ValueHint",0],[4,"ColorChoice",0],[4,"Ordering",1540],[3,"OsStr",499],[4,"ArgPredicate",499],[15,"usize"],[4,"ErrorKind",1274],[3,"Error",1274],[8,"Display",1541],[3,"ValueParser",499],[4,"Option",1542],[3,"OsStr",1543],[8,"AsRef",1538],[3,"Formatter",1541],[3,"Error",1541],[4,"Result",1544],[3,"Vec",1545],[8,"Iterator",1546],[15,"char"],[15,"u8"],[15,"slice"],[3,"ValuesRef",1416],[8,"Any",1547],[8,"Clone",1548],[8,"Send",1549],[8,"Sync",1549],[3,"ValueRange",499],[3,"OccurrencesRef",1550],[3,"PossibleValue",499],[3,"RawValues",1416],[3,"RawOccurrences",1550],[3,"Styles",499],[8,"Hasher",1551],[3,"IdsRef",1416],[3,"Indices",1416],[4,"Resettable",499],[8,"FnOnce",1552],[8,"FnMut",1552],[3,"Error",1553],[3,"Values",1416],[3,"Occurrences",1550],[4,"MatchesError",1416],[3,"TypeId",1547],[4,"ValueSource",1416],[3,"UnknownArgumentValueParser",499],[3,"Path",1554],[3,"StringValueParser",499],[3,"OsStringValueParser",499],[3,"PathBufValueParser",499],[3,"EnumValueParser",499],[8,"ValueEnum",0],[3,"PossibleValuesParser",499],[3,"RangedI64ValueParser",499],[15,"i64"],[8,"TryFrom",1538],[3,"RangedU64ValueParser",499],[15,"u64"],[3,"BoolValueParser",499],[3,"FalseyValueParser",499],[3,"BoolishValueParser",499],[3,"NonEmptyStringValueParser",499],[3,"MapValueParser",499],[3,"TryMapValueParser",499],[8,"Ord",1540],[4,"Bound",1555],[3,"OsString",1543],[8,"PartialEq",1540],[3,"Style",1038],[8,"Debug",1541],[3,"RangeTo",1555],[3,"Range",1555],[8,"TypedValueParser",499],[3,"RangeInclusive",1555],[3,"RangeFrom",1555],[3,"RangeToInclusive",1555],[3,"RangeFull",1555],[15,"array"],[15,"never"],[8,"RangeBounds",1555],[8,"Hash",1551],[8,"Fn",1552],[8,"PartialOrd",1540],[3,"Box",1556],[3,"AnyValueId",1557],[3,"RgbColor",1038],[4,"Color",1038],[3,"Effects",1038],[4,"AnsiColor",1038],[3,"Ansi256Color",1038],[3,"EffectIter",1038],[3,"Reset",1038],[8,"Copy",1549],[8,"Write",1558],[8,"ErrorFormatter",1274],[4,"ContextKind",1274],[4,"ContextValue",1274],[15,"i32"],[3,"KindFormatter",1274],[8,"Error",1559],[8,"Args",0],[8,"Subcommand",0],[8,"CommandFactory",0],[8,"FromArgMatches",0],[8,"Parser",0],[8,"ValueParserFactory",499],[6,"Result",1274],[3,"DefaultFormatter",1274],[13,"Downcast",1535]],"b":[[146,"impl-PartialEq%3CStr%3E-for-Id"],[147,"impl-PartialEq%3CString%3E-for-Id"],[148,"impl-PartialEq%3C%26str%3E-for-Id"],[149,"impl-PartialEq%3Cstr%3E-for-Id"],[150,"impl-PartialEq-for-Id"],[160,"impl-Display-for-Arg"],[161,"impl-Debug-for-Arg"],[163,"impl-Debug-for-Command"],[164,"impl-Display-for-Command"],[167,"impl-Debug-for-Id"],[168,"impl-Display-for-Id"],[169,"impl-Debug-for-ColorChoice"],[170,"impl-Display-for-ColorChoice"],[180,"impl-From%3C%26%26str%3E-for-Id"],[181,"impl-From%3C%26Id%3E-for-Id"],[182,"impl-From%3C%26Str%3E-for-Id"],[183,"impl-From%3C%26str%3E-for-Id"],[185,"impl-From%3CStr%3E-for-Id"],[565,"impl-AsRef%3COsStr%3E-for-OsStr"],[566,"impl-AsRef%3CPath%3E-for-OsStr"],[567,"impl-AsRef%3C%5Bu8%5D%3E-for-Str"],[568,"impl-AsRef%3Cstr%3E-for-Str"],[569,"impl-AsRef%3COsStr%3E-for-Str"],[570,"impl-AsRef%3CPath%3E-for-Str"],[675,"impl-Default-for-StyledStr"],[676,"impl-Default-for-%26StyledStr"],[687,"impl-Default-for-%26Styles"],[688,"impl-Default-for-Styles"],[693,"impl-PartialEq-for-OsStr"],[694,"impl-PartialEq%3C%26str%3E-for-OsStr"],[695,"impl-PartialEq%3C%26OsStr%3E-for-OsStr"],[696,"impl-PartialEq%3CString%3E-for-OsStr"],[697,"impl-PartialEq%3Cstr%3E-for-OsStr"],[698,"impl-PartialEq%3COsString%3E-for-OsStr"],[702,"impl-PartialEq%3CString%3E-for-Str"],[703,"impl-PartialEq%3CId%3E-for-Str"],[704,"impl-PartialEq%3Cstr%3E-for-Str"],[705,"impl-PartialEq%3C%26OsStr%3E-for-Str"],[706,"impl-PartialEq-for-Str"],[707,"impl-PartialEq%3C%26str%3E-for-Str"],[708,"impl-PartialEq%3COsStr%3E-for-Str"],[715,"impl-Debug-for-ValueRange"],[716,"impl-Display-for-ValueRange"],[718,"impl-Debug-for-Str"],[719,"impl-Display-for-Str"],[720,"impl-Debug-for-StyledStr"],[721,"impl-Display-for-StyledStr"],[737,"impl-From%3CRangeTo%3Ci64%3E%3E-for-ValueParser"],[738,"impl-From%3CRange%3Ci64%3E%3E-for-ValueParser"],[739,"impl-From%3CP%3E-for-ValueParser"],[740,"impl-From%3CRangeInclusive%3Ci64%3E%3E-for-ValueParser"],[741,"impl-From%3CRangeFrom%3Ci64%3E%3E-for-ValueParser"],[742,"impl-From%3CRangeToInclusive%3Ci64%3E%3E-for-ValueParser"],[743,"impl-From%3CVec%3CP%3E%3E-for-ValueParser"],[745,"impl-From%3CRangeFull%3E-for-ValueParser"],[746,"impl-From%3C%5BP;+C%5D%3E-for-ValueParser"],[749,"impl-From%3C%26str%3E-for-OsStr"],[750,"impl-From%3C%26%26OsStr%3E-for-OsStr"],[751,"impl-From%3CStr%3E-for-OsStr"],[753,"impl-From%3C%26OsStr%3E-for-OsStr"],[754,"impl-From%3C%26Str%3E-for-OsStr"],[755,"impl-From%3C%26OsStr%3E-for-OsStr"],[756,"impl-From%3C%26%26str%3E-for-OsStr"],[759,"impl-From%3CRangeFull%3E-for-ValueRange"],[760,"impl-From%3CRangeTo%3Cusize%3E%3E-for-ValueRange"],[761,"impl-From%3Cusize%3E-for-ValueRange"],[762,"impl-From%3CRangeInclusive%3Cusize%3E%3E-for-ValueRange"],[764,"impl-From%3CRange%3Cusize%3E%3E-for-ValueRange"],[765,"impl-From%3CRangeFrom%3Cusize%3E%3E-for-ValueRange"],[766,"impl-From%3CRangeToInclusive%3Cusize%3E%3E-for-ValueRange"],[768,"impl-From%3CT%3E-for-Resettable%3CT%3E"],[770,"impl-From%3COption%3CT%3E%3E-for-Resettable%3CT%3E"],[771,"impl-From%3C%26Str%3E-for-Str"],[772,"impl-From%3C%26str%3E-for-Str"],[774,"impl-From%3C%26%26str%3E-for-Str"],[775,"impl-From%3CId%3E-for-Str"],[776,"impl-From%3C%26%26str%3E-for-StyledStr"],[778,"impl-From%3C%26String%3E-for-StyledStr"],[779,"impl-From%3C%26str%3E-for-StyledStr"],[780,"impl-From%3CString%3E-for-StyledStr"],[1140,"impl-PartialEq-for-Style"],[1141,"impl-PartialEq%3CEffects%3E-for-Style"],[1151,"impl-From%3CAnsi256Color%3E-for-Color"],[1152,"impl-From%3CRgbColor%3E-for-Color"],[1154,"impl-From%3CAnsiColor%3E-for-Color"],[1155,"impl-From%3Cu8%3E-for-Color"],[1156,"impl-From%3C(u8,+u8,+u8)%3E-for-Color"],[1159,"impl-From%3CAnsiColor%3E-for-Ansi256Color"],[1160,"impl-From%3Cu8%3E-for-Ansi256Color"],[1353,"impl-Display-for-Error%3CF%3E"],[1354,"impl-Debug-for-Error%3CF%3E"],[1355,"impl-Display-for-ContextKind"],[1356,"impl-Debug-for-ContextKind"],[1357,"impl-Display-for-ContextValue"],[1358,"impl-Debug-for-ContextValue"],[1359,"impl-Display-for-ErrorKind"],[1360,"impl-Debug-for-ErrorKind"],[1367,"impl-From%3CError%3E-for-Error%3CF%3E"],[1368,"impl-From%3CError%3E-for-Error%3CF%3E"],[1463,"impl-Display-for-MatchesError"],[1464,"impl-Debug-for-MatchesError"]]},\
"clap_builder":{"doc":"clap_builder","t":"NCCCCINECIGIDNIIICOLLKKKKLLLLLALLLLLKOKLLLLLLLLALLLLLLLLLLLKLLLLLLLKLLLLLLLLLLALLLLKLLLLLLLLLLLLLLLLLKLLOKLNNDEDEDDDNNNNNSNDNNDNNNNNINDDDDNQDDDDDNESNNNDDDCDINDNNNQEDIDNCCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLNNDESSNNNNNNNNNNSENSSSSDDNSSSNNDNDSDDSNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNEENCNNNNDIENNNNNNNNNDNNNNNNNNGDNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNNNDDEDNEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["Always","Arg","ArgAction","ArgGroup","ArgMatches","Args","Auto","ColorChoice","Command","CommandFactory","Error","FromArgMatches","Id","Never","Parser","Subcommand","ValueEnum","ValueHint","arg","as_ref","as_str","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone","clone_into","clone_into","cmp","command","command","command_for_update","default","default","eq","eq","eq","eq","eq","eq","error","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_str","from_str","from_str","group_id","group_id","has_subcommand","hash","into","into","into_resettable","into_resettable","into_resettable","parse","parse","parse_from","parse_from","parser","partial_cmp","possible_values","to_owned","to_owned","to_possible_value","to_possible_value","to_string","to_string","try_from","try_from","try_into","try_into","try_parse","try_parse","try_parse_from","try_parse_from","try_update_from","try_update_from","type_id","type_id","update_from","update_from","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","value_parser","value_variants","value_variants","AnyPath","Append","Arg","ArgAction","ArgGroup","ArgPredicate","BoolValueParser","BoolishValueParser","Command","CommandName","CommandString","CommandWithArguments","Count","DirPath","EMPTY","EmailAddress","EnumValueParser","Equals","ExecutablePath","FalseyValueParser","FilePath","Help","HelpLong","HelpShort","Hostname","IntoResettable","IsPresent","MapValueParser","NonEmptyStringValueParser","OsStr","OsStringValueParser","Other","Parser","PathBufValueParser","PossibleValue","PossibleValuesParser","RangedI64ValueParser","RangedU64ValueParser","Reset","Resettable","SINGLE","Set","SetFalse","SetTrue","Str","StringValueParser","StyledStr","Styles","TryMapValueParser","TypedValueParser","Unknown","UnknownArgumentValueParser","Url","Username","Value","Value","ValueHint","ValueParser","ValueParserFactory","ValueRange","Version","_AnonymousValueParser","_AutoValueParser","about","action","after_help","after_long_help","alias","alias","alias","aliases","aliases","aliases","allow_external_subcommands","allow_hyphen_values","allow_missing_positional","allow_negative_numbers","and_suggest","ansi","arg","arg","arg_required_else_help","args","args","args_conflicts_with_subcommands","args_override_self","as_os_str","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","author","before_help","before_long_help","bin_name","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","color","conflicts_with","conflicts_with","conflicts_with_all","conflicts_with_all","debug_assert","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_missing_value","default_missing_value_os","default_missing_values","default_missing_values_os","default_value","default_value_if","default_value_ifs","default_values","defer","deref","deref","disable_colored_help","disable_help_flag","disable_help_subcommand","disable_version_flag","display_name","display_order","display_order","dont_delimit_trailing_values","end_bound","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","exclusive","external_subcommand_value_parser","find_subcommand","find_subcommand_mut","flatten_help","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","get_about","get_action","get_after_help","get_after_long_help","get_all_aliases","get_all_aliases","get_all_long_flag_aliases","get_all_short_aliases","get_all_short_flag_aliases","get_arg_conflicts_with","get_args","get_arguments","get_author","get_before_help","get_before_long_help","get_bin_name","get_color","get_default_values","get_display_name","get_external_subcommand_value_parser","get_groups","get_help","get_help","get_help_heading","get_id","get_id","get_index","get_long","get_long_about","get_long_and_visible_aliases","get_long_flag","get_long_help","get_long_version","get_matches","get_matches_from","get_matches_mut","get_name","get_name","get_name_and_aliases","get_next_help_heading","get_num_args","get_opts","get_positionals","get_possible_values","get_short","get_short_and_visible_aliases","get_short_flag","get_styles","get_subcommand_help_heading","get_subcommand_value_name","get_subcommands","get_subcommands_mut","get_value_delimiter","get_value_hint","get_value_names","get_value_parser","get_value_terminator","get_version","get_visible_aliases","get_visible_aliases","get_visible_long_flag_aliases","get_visible_short_aliases","get_visible_short_flag_aliases","global","group","group","groups","groups","has_subcommands","hash","hash","hash","hash","hash","help","help","help_expected","help_heading","help_template","hide","hide","hide","hide_default_value","hide_long_help","hide_possible_values","hide_possible_values","hide_short_help","id","id","ignore_case","ignore_errors","index","index","infer_long_args","infer_subcommands","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","into_resettable","is_allow_external_subcommands_set","is_allow_hyphen_values_set","is_allow_missing_positional_set","is_allow_negative_numbers_set","is_arg_required_else_help_set","is_args_conflicts_with_subcommands_set","is_disable_colored_help_set","is_disable_help_flag_set","is_disable_help_subcommand_set","is_disable_version_flag_set","is_dont_delimit_trailing_values_set","is_exclusive_set","is_flatten_help_set","is_global_set","is_hide_default_value_set","is_hide_long_help_set","is_hide_possible_values_set","is_hide_set","is_hide_set","is_hide_set","is_hide_short_help_set","is_ignore_case_set","is_last_set","is_multicall_set","is_multiple","is_next_line_help_set","is_next_line_help_set","is_no_binary_name_set","is_positional","is_propagate_version_set","is_require_equals_set","is_required_set","is_required_set","is_subcommand_negates_reqs_set","is_subcommand_precedence_over_arg_set","is_subcommand_required_set","is_trailing_var_arg_set","last","long","long_about","long_flag","long_flag_alias","long_flag_aliases","long_help","long_version","map","map","matches","max_term_width","max_values","min_values","multicall","multiple","mut_arg","mut_args","mut_subcommand","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next_display_order","next_help_heading","next_line_help","next_line_help","no_binary_name","num_args","os_string","override_help","override_usage","overrides_with","overrides_with_all","parse","parse","parse","parse","parse","parse","parse","parse_","parse_","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref","parse_ref_","parse_ref_","parse_ref_","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path_buf","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","possible_values","print_help","print_long_help","propagate_version","range","range","raw","render_help","render_long_help","render_long_version","render_usage","render_version","require_equals","required","required","required_if_eq","required_if_eq_all","required_if_eq_any","required_unless_present","required_unless_present_all","required_unless_present_any","requires","requires","requires_all","requires_if","requires_ifs","set_bin_name","short","short_alias","short_aliases","short_flag","short_flag_alias","short_flag_aliases","start_bound","string","styles","styling","subcommand","subcommand_help_heading","subcommand_negates_reqs","subcommand_precedence_over_arg","subcommand_required","subcommand_value_name","subcommands","suggest","suggest_arg","takes_values","takes_values","term_width","to_os_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","trailing_var_arg","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get_matches","try_get_matches_from","try_get_matches_from_mut","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map","try_map","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_delimiter","value_hint","value_name","value_names","value_parser","value_parser","value_terminator","version","visible_alias","visible_alias","visible_aliases","visible_aliases","visible_long_flag_alias","visible_long_flag_aliases","visible_short_alias","visible_short_aliases","visible_short_flag_alias","visible_short_flag_aliases","write_char","write_str","Ansi","Ansi256","Ansi256Color","AnsiColor","BLINK","BOLD","Black","Blue","BrightBlack","BrightBlue","BrightCyan","BrightGreen","BrightMagenta","BrightRed","BrightWhite","BrightYellow","CURLY_UNDERLINE","Color","Cyan","DASHED_UNDERLINE","DIMMED","DOTTED_UNDERLINE","DOUBLE_UNDERLINE","EffectIter","Effects","Green","HIDDEN","INVERT","ITALIC","Magenta","Red","Reset","Rgb","RgbColor","STRIKETHROUGH","Style","Styles","UNDERLINE","White","Yellow","b","bg_color","bitor","bitor","bitor_assign","bitor_assign","blink","bold","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bright","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","contains","default","default","default","default","default","dimmed","effects","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","fg_color","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ansi","g","get_bg_color","get_effects","get_error","get_fg_color","get_header","get_invalid","get_literal","get_placeholder","get_underline_color","get_usage","get_valid","hash","hash","hash","hash","hash","hash","hash","header","hidden","index","insert","into","into","into","into","into","into","into","into","into","into_ansi","into_iter","invalid","invert","is_bright","is_plain","is_plain","italic","iter","literal","new","new","next","on","on","on","on","on_default","on_default","on_default","on_default","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","placeholder","plain","r","remove","render","render","render","render_bg","render_bg","render_bg","render_bg","render_fg","render_fg","render_fg","render_fg","render_reset","set","strikethrough","styled","sub","sub","sub_assign","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline","underline_color","usage","valid","write_reset_to","write_to","ActualNumValues","ArgumentConflict","Bool","ContextKind","ContextValue","Custom","DefaultFormatter","DisplayHelp","DisplayHelpOnMissingArgumentOrSubcommand","DisplayVersion","Err","Error","ErrorFormatter","ErrorKind","ExpectedNumValues","Format","InvalidArg","InvalidSubcommand","InvalidSubcommand","InvalidUtf8","InvalidValue","InvalidValue","Io","KindFormatter","MinValues","MissingRequiredArgument","MissingSubcommand","NoEquals","None","Number","Ok","PriorArg","Result","RichFormatter","String","Strings","StyledStr","StyledStrs","Suggested","SuggestedArg","SuggestedCommand","SuggestedSubcommand","SuggestedValue","TooFewValues","TooManyValues","TrailingArg","UnknownArgument","Usage","ValidSubcommand","ValidValue","ValueValidation","WrongNumberOfValues","apply","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","context","eq","eq","eq","exit","exit_code","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format_error","format_error","format_error","from","from","from","from","from","from","from","from","get","hash","hash","insert","into","into","into","into","into","into","kind","new","print","raw","render","source","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","use_stderr","with_cmd","ArgMatches","CommandLine","DefaultValue","Downcast","EnvVariable","IdsRef","Indices","MatchesError","RawValues","UnknownArgument","ValueSource","Values","ValuesRef","args_present","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","contains_id","default","default","default","default","default","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_count","get_flag","get_many","get_occurrences","get_one","get_raw","get_raw_occurrences","ids","index_of","indices_of","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","partial_cmp","remove_many","remove_occurrences","remove_one","remove_subcommand","size_hint","size_hint","size_hint","size_hint","size_hint","subcommand","subcommand_matches","subcommand_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_contains_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get_many","try_get_occurrences","try_get_one","try_get_raw","try_get_raw_occurrences","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_remove_many","try_remove_occurrences","try_remove_one","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_source","actual","expected"],"q":[[0,"clap_builder"],[107,"clap_builder::builder"],[963,"clap_builder::builder::styling"],[1228,"clap_builder::error"],[1370,"clap_builder::parser"],[1531,"clap_builder::parser::MatchesError"],[1533,"core::cmp"],[1534,"alloc::string"],[1535,"core::fmt"],[1536,"core::fmt"],[1537,"core::option"],[1538,"core::hash"],[1539,"core::iter::traits::collect"],[1540,"core::iter::traits::iterator"],[1541,"core::any"],[1542,"core::convert"],[1543,"core::fmt"],[1544,"std::path"],[1545,"core::clone"],[1546,"core::marker"],[1547,"core::marker"],[1548,"std::ffi::os_str"],[1549,"core::ops::range"],[1550,"core::ops::function"],[1551,"std::io::error"],[1552,"core::marker"],[1553,"std::io::error"],[1554,"core::any"]],"d":["Enables colored output regardless of whether or not the …","","","","","Parse a set of arguments into a user-defined container.","Enables colored output only when the output is going to a …","Represents the color preferences for program output","","Create a <code>Command</code> relevant for a user-defined container.","Command Line Argument Parser Error","Converts an instance of <code>ArgMatches</code> to a user-defined …","<code>Arg</code> or <code>ArgGroup</code> identifier","Disables colored output no matter if the output is going …","Parse command-line arguments into <code>Self</code>.","Parse a sub-command into a user-defined enum.","Parse arguments into enums.","","Create an <code>Arg</code> from a usage string.","","Get the raw string of the <code>Id</code>","Append to <code>Command</code> so it can instantiate <code>Self</code>.","Append to <code>Command</code> so it can update <code>self</code>.","Append to <code>Command</code> so it can instantiate <code>Self</code>.","Append to <code>Command</code> so it can update <code>self</code>.","","","","","","Define <code>Command</code> line arguments","","","","","","Build a <code>Command</code> that can instantiate <code>Self</code>.","Requires <code>cargo</code> feature flag to be enabled.","Build a <code>Command</code> that can update <code>self</code>.","","","","","","","","","Error reporting","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Instantiate <code>Self</code> from <code>ArgMatches</code>, parsing the arguments as …","Instantiate <code>Self</code> from <code>ArgMatches</code>, parsing the arguments as …","Instantiate <code>Self</code> from <code>ArgMatches</code>, parsing the arguments as …","Parse an argument into <code>Self</code>.","Parse an argument into <code>Self</code>.","","Report the <code>ArgGroup::id</code> for this set of arguments","Report the <code>ArgGroup::id</code> for this set of arguments","Test whether <code>Self</code> can parse a specific subcommand","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Parse from <code>std::env::args_os()</code>, exit on error","Parse from <code>std::env::args_os()</code>, exit on error","Parse from iterator, exit on error","Parse from iterator, exit on error","<code>Command</code> line argument parser","","Report all <code>possible_values</code>","","","The canonical argument value.","","","","","","","","Parse from <code>std::env::args_os()</code>, return Err on error.","Parse from <code>std::env::args_os()</code>, return Err on error.","Parse from iterator, return Err on error.","Parse from iterator, return Err on error.","Update from iterator, return Err on error.","Update from iterator, return Err on error.","","","Update from iterator, exit on error","Update from iterator, exit on error","Assign values from <code>ArgMatches</code> to <code>self</code>.","Assign values from <code>ArgMatches</code> to <code>self</code>.","Assign values from <code>ArgMatches</code> to <code>self</code>.","Select a <code>ValueParser</code> implementation from the intended type","All possible argument values, in display order.","","Any existing path.","When encountered, store the associated value(s) in …","The abstract representation of a command line argument. …","Behavior of arguments when they are encountered while …","Family of related arguments.","Operations to perform on argument values","Implementation for <code>ValueParser::bool</code>","Parse bool-like string values, everything else is <code>true</code>","Build a command-line interface.","Name of a command, without arguments. May be relative to …","A single string containing a command and its arguments.","Capture the remaining arguments as a command name and …","When encountered, increment a <code>u8</code> counter","Path to a directory.","Nor argument values, or a flag","Email address.","Parse an <code>ValueEnum</code> value.","Does the argument match the specified value?","Path to an executable file.","Parse false-like string values, everything else is <code>true</code>","Path to a file.","When encountered, display <code>Command::print_help</code>","When encountered, display <code>Command::print_long_help</code>","When encountered, display <code>Command::print_help</code>","Host name of a computer. Shells usually parse <code>/etc/hosts</code> …","Convert to the intended resettable type","Is the argument present?","Adapt a <code>TypedValueParser</code> from one value to another","Parse non-empty string values","A UTF-8-encoded fixed string","Implementation for <code>ValueParser::os_string</code>","None of the hints below apply. Disables shell completion …","Generated parser, usually <code>ValueParser</code>.","Implementation for <code>ValueParser::path_buf</code>","A possible value of an argument.","Verify the value is from an enumerated set of <code>PossibleValue</code>…","Parse number that fall within a range of values","Parse number that fall within a range of values","Reset builder value","Clearable builder value","A single argument value, the most common case for options","When encountered, store the associated value(s) in …","When encountered, act as if <code>&quot;false&quot;</code> was encountered on the …","When encountered, act as if <code>&quot;true&quot;</code> was encountered on the …","A UTF-8-encoded fixed string","Implementation for <code>ValueParser::string</code>","Terminal-styling container","","Adapt a <code>TypedValueParser</code> from one value to another","Parse/validate argument values","Default value if hint is not specified. Follows shell …","When encountered, report ErrorKind::UnknownArgument","Complete web address.","Name of a local operating system user.","Overwrite builder value","Argument’s value type","Provide shell with hint on how to complete an argument.","Parse/validate argument values","Register a type with value_parser!","Values per occurrence for an argument","When encountered, display <code>Command::version</code>","","","Sets the program’s description for the short help (<code>-h</code>).","Specify how to react to an argument when parsing it.","Free-form help text for after auto-generated short help (<code>-h</code>…","Free-form help text for after auto-generated long help (…","Add an alias, which functions as a hidden long flag.","Sets a hidden alias to this subcommand.","Sets a <em>hidden</em> alias for this argument value.","Add aliases, which function as hidden long flags.","Sets multiple hidden aliases to this subcommand.","Sets multiple <em>hidden</em> aliases for this argument value.","Assume unexpected positional arguments are a <code>subcommand</code>.","Allows values which start with a leading hyphen (<code>-</code>)","Allows one to implement two styles of CLIs where …","Allows negative numbers to pass as values.","Extend the suggestions","Display using ANSI Escape Code styling","Adds an argument to this group by name","Adds an argument to the list of valid possibilities.","Exit gracefully if no arguments are present (e.g. <code>$ myprog</code>…","Adds multiple arguments to this group by name","Adds multiple arguments to the list of valid possibilities.","Specifies that use of an argument prevents the use of …","Replace prior occurrences of arguments rather than error","Get the raw string as an <code>std::ffi::OsStr</code>","","","","","","","Get the raw string of the <code>Str</code>","Sets the author(s) for the help message.","Free-form help text for before auto-generated short help (…","Free-form help text for before auto-generated long help (…","Overrides the runtime-determined name of the binary for …","<code>bool</code> parser for argument values","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prepare for introspecting on all included <code>Command</code>s","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets when to color output.","This argument is mutually exclusive with the specified …","Specify an argument or group that must <strong>not</strong> be present when …","This argument is mutually exclusive with the specified …","Specify arguments or groups that must <strong>not</strong> be present when …","Catch problems earlier in the development cycle.","","","","","","","","","","","","","","","","","","","","","Value for the argument when the flag is present but no …","Value for the argument when the flag is present but no …","Value for the argument when the flag is present but no …","Value for the argument when the flag is present but no …","Value for the argument when not present.","Specifies the value of the argument if <code>arg</code> has been used …","Specifies multiple values and conditions in the same …","Value for the argument when not present.","Delay initialization for parts of the <code>Command</code>","","","Disables colorized help messages.","Disables <code>-h</code> and <code>--help</code> flag.","Disables the <code>help</code> <code>subcommand</code>.","Disables <code>-V</code> and <code>--version</code> flag.","Overrides the runtime-determined display name of the …","Allows custom ordering of args within the help message.","Set the placement of this subcommand within the help.","Disables the automatic delimiting of values after <code>--</code> or …","","","","","","","","","","","","","","","","","","","","","","","Custom error message for post-parsing validation","This argument must be passed alone; it conflicts with all …","Specifies how to parse external subcommand arguments.","Find subcommand such that its name or one of aliases …","Find subcommand such that its name or one of aliases …","Flatten subcommand help into the current command’s help","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get the help message specified via <code>Command::about</code>.","Behavior when parsing the argument","Returns the help heading for listing subcommands.","Returns the help heading for listing subcommands.","Get <em>all</em> aliases for this argument, if any, both visible …","Iterate through the set of <em>all</em> the aliases for this …","Iterate through the set of <em>all</em> the long aliases for this …","Get <em>all</em> short aliases for this argument, if any, both …","Iterate through the set of <em>all</em> the short aliases for this …","Get a list of all arguments the given argument conflicts …","Getters for all args. It will return a vector of <code>Id</code>","Iterate through the set of arguments.","Get the authors of the cmd.","Returns the help heading for listing subcommands.","Returns the help heading for listing subcommands.","Get the name of the binary.","Should we color the output?","Get the default values specified for this argument, if any","Get the name of the binary.","Configured parser for values passed to an external …","Iterate through the set of groups.","Get the help specified for this argument, if any","Get the help specified for this argument, if any","Get the help heading specified for this argument, if any","Get the name of the argument","Get the name of the group","Get the index of this argument, if any","Get the long option name for this argument, if any","Get the help message specified via <code>Command::long_about</code>.","Get the long option name and its visible aliases, if any","Get the long flag of the subcommand.","Get the long help specified for this argument, if any","Get the long version of the cmd.","Parse <code>env::args_os</code>, exiting on failure.","Parse the specified arguments, exiting on failure.","Parse <code>env::args_os</code>, exiting on failure.","Get the name of the cmd.","Get the name of the argument value","Returns all valid values of the argument value.","Get the custom section heading specified via …","Get the number of values for this argument.","Iterate through the <em>options</em>.","Iterate through the <em>positionals</em> arguments.","Get the names of possible values for this argument. Only …","Get the short option name for this argument, if any","Get the short option name and its visible aliases, if any","Get the short flag of the subcommand.","Return the current <code>Styles</code> for the <code>Command</code>","Returns the help heading for listing subcommands.","Returns the subcommand value name.","Iterate through the set of subcommands, getting a …","Iterate through the set of subcommands, getting a mutable …","Get the delimiter between multiple values","Get the value hint of this argument","Get the names of values for this argument.","Configured parser for argument values","Get the value terminator for this argument. The …","Get the version of the cmd.","Get visible aliases for this argument, if any","Iterate through the <em>visible</em> aliases for this subcommand.","Iterate through the <em>visible</em> long aliases for this …","Get visible short aliases for this argument, if any","Iterate through the <em>visible</em> short aliases for this …","Specifies that an argument can be matched to all child …","The name of the <code>ArgGroup</code> the argument belongs to.","Adds an <code>ArgGroup</code> to the application.","The names of <code>ArgGroup</code>’s the argument belongs to.","Adds multiple <code>ArgGroup</code>s to the <code>Command</code> at once.","Returns <code>true</code> if this <code>Command</code> has subcommands.","","","","","","Sets the description of the argument for short help (<code>-h</code>).","Sets the help description of the value.","Panic if help descriptions are omitted.","Override the current help section.","Sets the help template to be used, overriding the default …","Do not display the argument in help message.","Specifies that this <code>subcommand</code> should be hidden from help …","Hides this value from help and shell completions.","Do not display the default value of the argument in the …","Hides an argument from long help (<code>--help</code>).","Do not display the possible values in the help message.","Tells <code>clap</code> <em>not</em> to print possible values when displaying …","Hides an argument from short help (<code>-h</code>).","Set the identifier used for referencing this argument in …","Sets the group name.","Match values against <code>PossibleValuesParser</code> without matching …","Try not to fail on parse errors, like missing option …","Specifies the index of a positional argument <strong>starting at</strong> 1.","","Allow partial matches of long arguments or their aliases.","Allow partial matches of subcommand names and their aliases…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert to the intended resettable type","","","","","","","","","","","","","","","","","","","","","","","","","","Report whether <code>Command::allow_external_subcommands</code> is set","Report whether <code>Arg::allow_hyphen_values</code> is set","Report whether <code>Command::allow_missing_positional</code> is set","Report whether <code>Arg::allow_negative_numbers</code> is set","Report whether <code>Command::arg_required_else_help</code> is set","Report whether <code>Command::args_conflicts_with_subcommands</code> is …","Report whether <code>Command::disable_colored_help</code> is set","Report whether <code>Command::disable_help_flag</code> is set","Report whether <code>Command::disable_help_subcommand</code> is set","Report whether <code>Command::disable_version_flag</code> is set","Report whether <code>Command::dont_delimit_trailing_values</code> is set","Reports whether <code>Arg::exclusive</code> is set","Get the custom section heading specified via …","Report whether <code>Arg::global</code> is set","Report whether <code>Arg::hide_default_value</code> is set","Report whether <code>Arg::hide_long_help</code> is set","Report whether <code>Arg::hide_possible_values</code> is set","Report whether <code>Arg::hide</code> is set","Report whether <code>Command::hide</code> is set","Report if <code>PossibleValue::hide</code> is set","Report whether <code>Arg::hide_short_help</code> is set","Reports whether <code>Arg::ignore_case</code> is set","Reports whether <code>Arg::last</code> is set","Report whether <code>Command::multicall</code> is set","Return true if the group allows more than one of the …","Report whether <code>Arg::next_line_help</code> is set","Report whether <code>Command::next_line_help</code> is set","Report whether <code>Command::no_binary_name</code> is set","Checks whether this argument is a positional or not.","Report whether <code>Command::propagate_version</code> is set","Report whether <code>Arg::require_equals</code> is set","Reports whether <code>Arg::required</code> is set","Reports whether <code>ArgGroup::required</code> is set","Report whether <code>Command::subcommand_negates_reqs</code> is set","Report whether <code>Command::subcommand_precedence_over_arg</code> is …","Report whether <code>Command::subcommand_required</code> is set","Report whether <code>Arg::trailing_var_arg</code> is set","This arg is the last, or final, positional argument (i.e. …","Sets the long version of the argument without the …","Sets the program’s description for the long help (<code>--help</code>…","Sets the long version of the subcommand flag without the …","Add an alias, which functions as a “hidden” long flag …","Add aliases, which function as “hidden” long flag …","Sets the description of the argument for long help (<code>--help</code>…","Sets the version for the long version (<code>--version</code>) and help …","Adapt a <code>TypedValueParser</code> from one value to another","Adapt a <code>TypedValueParser</code> from one value to another","Tests if the value is valid for this argument value","Limit the line length for wrapping help when using the …","Most number of values the argument accepts","Fewest number of values the argument accepts","Multiple-personality program dispatched on the binary name …","Allows more than one of the <code>Arg</code>s in this group to be used. …","Allows one to mutate an <code>Arg</code> after it’s been added to a …","Allows one to mutate all <code>Arg</code>s after they’ve been added …","Allows one to mutate a <code>Command</code> after it’s been added as …","(Re)Sets the program’s name.","Custom parser for argument values","Create a new <code>Arg</code> with a unique name.","Create a <code>ArgGroup</code> using a unique name.","Creates a new instance of an <code>Command</code>.","Create a <code>PossibleValue</code> with its name.","Create a range","Create an empty buffer","Implementation for <code>ValueParser::string</code>","Implementation for <code>ValueParser::os_string</code>","Implementation for <code>ValueParser::path_buf</code>","Parse an <code>ValueEnum</code>","Verify the value is from an enumerated set of <code>PossibleValue</code>…","Select full range of <code>i64</code>","Select full range of <code>u64</code>","Implementation for <code>ValueParser::bool</code>","Parse false-like string values, everything else is <code>true</code>","Parse bool-like string values, everything else is <code>true</code>","Parse non-empty string values","Change the starting value for assigning future display …","Set the default section heading for future args.","Render the help on the line after the argument.","Places the help string for all arguments and subcommands …","Specifies that the parser should not assume the first …","Specifies the number of arguments parsed per occurrence","<code>OsString</code> parser for argument values","Overrides the <code>clap</code> generated help message (both <code>-h</code> and …","Overrides the <code>clap</code> generated usage string for help and …","Sets an overridable argument.","Sets multiple mutually overridable arguments by name.","Parse the argument value","Parse the argument value","","","","","","Parse the argument value","Parse the argument value","Parse the argument value","","","","","","","","","","","","","","","Parse the argument value","Parse the argument value","","","","","","","<code>PathBuf</code> parser for argument values","Reflect on enumerated value properties","Reflect on enumerated value properties","Reflect on enumerated value properties","","","","","","","","Prints the short help message (<code>-h</code>) to <code>io::stdout()</code>.","Prints the long help message (<code>--help</code>) to <code>io::stdout()</code>.","Specifies to use the version of the current command for …","Narrow the supported range","Narrow the supported range","Consume all following arguments.","Render the short help message (<code>-h</code>) to a <code>StyledStr</code>","Render the long help message (<code>--help</code>) to a <code>StyledStr</code>.","Version message rendered as if the user ran <code>--version</code>.","Usage statement","Version message rendered as if the user ran <code>-V</code>.","Requires that options use the <code>--option=val</code> syntax","Specifies that the argument must be present.","Require an argument from the group to be present when …","This argument is required only if the specified <code>arg</code> is …","Specify this argument is required based on multiple …","Specify this argument is required based on multiple …","Set this arg as required as long as the specified argument …","Sets this arg as required unless <em>all</em> of the specified …","Sets this arg as required unless <em>any</em> of the specified …","Sets an argument that is required when this one is present","Specify an argument or group that must be present when …","Specify arguments or groups that must be present when this …","Require another argument if this arg matches the …","Allows multiple conditional requirements.","Set binary name. Uses <code>&amp;mut self</code> instead of <code>self</code>.","Sets the short version of the argument without the …","Add an alias, which functions as a hidden short flag.","Add aliases, which functions as a hidden short flag.","Sets the short version of the subcommand flag without the …","Add an alias, which functions as  “hidden” short flag …","Add aliases, which function as “hidden” short flag …","","<code>String</code> parser for argument values","Sets the <code>Styles</code> for terminal output","Terminal <code>Styles</code> for help and error output","Adds a subcommand to the list of valid possibilities.","Sets the help heading used for subcommands when printing …","Allows <code>subcommands</code> to override all requirements of the …","Prevent subcommands from being consumed as an arguments …","If no <code>subcommand</code> is present at runtime, error and exit …","Sets the value name used for subcommands when printing …","Adds multiple subcommands to the list of valid …","Provide a general suggestion","Suggest an alternative argument","Returns whether this action accepts values on the …","Report whether the argument takes any values (ie is a flag)","Sets the terminal width at which to wrap help messages.","Get the raw string as an <code>OsString</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is a “VarArg” and everything that follows should …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse <code>env::args_os</code>, returning a <code>clap::Result</code> on failure.","Parse the specified arguments, returning a <code>clap::Result</code> on …","Parse the specified arguments, returning a <code>clap::Result</code> on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adapt a <code>TypedValueParser</code> from one value to another","Adapt a <code>TypedValueParser</code> from one value to another","Describes the content of <code>AnyValue</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow grouping of multiple values via a delimiter.","Provide the shell a hint about how to complete this …","Placeholder for the argument’s value in the help message …","Placeholders for the argument’s values in the help …","Create the specified <code>Self::Parser</code>","Specify the typed behavior of the argument.","Sentinel to <strong>stop</strong> parsing multiple values of a given …","Sets the version for the short version (<code>-V</code>) and help …","Add an alias, which functions as a visible long flag.","Sets a visible alias to this subcommand.","Add aliases, which function as visible long flags.","Sets multiple visible aliases to this subcommand.","Add an alias, which functions as a “visible” long flag …","Add aliases, which function as <em>visible</em> long flag …","Add an alias, which functions as a visible short flag.","Add aliases, which function as visible short flags.","Add an alias, which functions as  “visible” short flag …","Add aliases, which function as <em>visible</em> short flag …","","","","","256 (8-bit) color support","Available 4-bit ANSI color palette codes","","","Black: #0 (foreground code <code>30</code>, background code <code>40</code>).","Blue: #4 (foreground code <code>34</code>, background code <code>44</code>).","Bright black: #0 (foreground code <code>90</code>, background code <code>100</code>).","Bright blue: #4 (foreground code <code>94</code>, background code <code>104</code>).","Bright cyan: #6 (foreground code <code>96</code>, background code <code>106</code>).","Bright green: #2 (foreground code <code>92</code>, background code <code>102</code>).","Bright magenta: #5 (foreground code <code>95</code>, background code <code>105</code>…","Bright red: #1 (foreground code <code>91</code>, background code <code>101</code>).","Bright white: #7 (foreground code <code>97</code>, background code <code>107</code>).","Bright yellow: #3 (foreground code <code>93</code>, background code <code>103</code>…","","Any ANSI color code scheme","Cyan: #6 (foreground code <code>36</code>, background code <code>46</code>).","","","","","","A set of text effects","Green: #2 (foreground code <code>32</code>, background code <code>42</code>).","","Swap foreground and background colors; inconsistent …","Not widely supported. Sometimes treated as inverse or blink","Magenta: #5 (foreground code <code>35</code>, background code <code>45</code>).","Red: #1 (foreground code <code>31</code>, background code <code>41</code>).","Reset terminal formatting","","24-bit ANSI RGB color codes","Characters legible but marked as if for deletion. Not …","ANSI Text styling","Terminal styling definitions","Style extensions exist for Kitty, VTE, mintty and iTerm2.","White: #7 (foreground code <code>37</code>, background code <code>47</code>).","Yellow: #3 (foreground code <code>33</code>, background code <code>43</code>).","","Set background color","","","","","Apply <code>blink</code> effect","Apply <code>bold</code> effect","","","","","","","","","","","","","","","","","","","Change the color to/from bright","Reset all effects in-place","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all of the effects in <code>other</code> are contained …","","","","","","Apply <code>dimmed</code> effect","Set text effects","","","","","","","","","","Error heading","Set foreground color","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Error heading","","General Heading style, e.g. <code>help_heading</code>","Highlight invalid usage","Literal command-line syntax, e.g. <code>--help</code>","Descriptions within command-line syntax, e.g. <code>value_name</code>","","Usage heading","Highlight suggested usage","","","","","","","","General Heading style, e.g. <code>help_heading</code>","Apply <code>hidden</code> effect","","Inserts the specified effects in-place.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Highlight invalid usage","Apply <code>invert</code> effect","Report whether the color is bright","Check if no effects are enabled","Check if no effects are enabled","Apply <code>italic</code> effect","Iterate over enabled effects","Literal command-line syntax, e.g. <code>--help</code>","No effects enabled","No effects enabled","","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","Create a <code>Style</code> with this as the foreground","","","","","","","","Descriptions within command-line syntax, e.g. <code>value_name</code>","No terminal styling","","Removes the specified effects in-place.","Render the ANSI code","Render the ANSI code","Render the ANSI code","Render the ANSI code for a background color","Render the ANSI code for a background color","Render the ANSI code for a background color","Render the ANSI code for a background color","Render the ANSI code for a foreground color","Render the ANSI code for a foreground color","Render the ANSI code for a foreground color","Render the ANSI code for a foreground color","Renders the relevant <code>Reset</code> code","Enable or disable the specified effects depending on the …","Apply <code>strikethrough</code> effect","Default terminal styling","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply <code>underline</code> effect","Set underline color","Usage heading","Highlight suggested usage","Write the relevant <code>Reset</code> code","Write the ANSI code","Number of values present","Occurs when the user provides two values which conflict …","A single value","Semantics for a piece of error information","A piece of error information","An opaque message to the user","","Not a true “error” as it means <code>--help</code> or similar was …","Occurs when either an argument or a <code>Subcommand</code> is …","Not a true “error” as it means <code>--version</code> or similar …","Contains the error value","Command Line Argument Parser Error","Defines how to format an error for displaying to the user","Command line argument parser kind of error","Number of allowed values","Represents a Format error (which is a part of <code>Display</code>). …","The cause of the error","The cause of the error","Occurs when the user provides an unrecognized <code>Subcommand</code> …","Occurs when the user provides a value containing invalid …","Rejected values","Occurs when an <code>Arg</code> has a set of possible values, and the …","Represents an I/O error. Can occur when writing to <code>stderr</code> …","Report <code>ErrorKind</code>","Minimum number of allowed values","Occurs when the user does not provide one or more required …","Occurs when a subcommand is required (as defined by …","Occurs when the user doesn’t use equals for an option …","<code>ContextKind</code> is self-sufficient, no additional information …","A single value","Contains the success value","Existing arguments","Short hand for <code>Result</code> type","Richly formatted error context","A single value","Many values","A single value","many value","Potential fix for the user","Potential fix for the user","Potential fix for the user","Potential fix for the user","Potential fix for the user","Occurs when the user provides fewer values for an argument …","Occurs when a user provides more values for an argument …","Trailing argument","Occurs when a user provides a flag, option, argument or …","A usage string","Accepted subcommands","Accepted values","Occurs when the user provides a value for an argument with …","Occurs when the user provides a different number of values …","Apply an alternative formatter to the error","End-user description of the error case, where relevant","End-user description of the error case, where relevant","","","","","","","","","","","","","","","","","","","Additional information to further qualify the error","","","","Prints the error and exits.","Returns the exit code that <code>.exit</code> will exit the process …","","","","","","","","","Format the existing message with the Command’s context","Stylize the error for the terminal","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Lookup a piece of context","","","Insert a piece of context","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Type of error for programmatic processing","Create an error with a pre-defined message","Prints formatted and colored error to <code>stdout</code> or <code>stderr</code> …","Create an unformatted error","Render the error message to a <code>StyledStr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Should the message be written to <code>stdout</code> or not?","Apply <code>Command</code>’s formatting to the error","Container for parse results.","Value was passed in on the command-line","Value came <code>Arg::default_value</code>","Failed to downcast <code>AnyValue</code> to the specified type","Value came [<code>Arg::env</code>][crate::Arg::env]","Iterate over <code>Arg</code> and <code>ArgGroup</code> <code>Id</code>s via <code>ArgMatches::ids</code>.","Iterate over indices for where an argument appeared when …","Violation of <code>ArgMatches</code> assumptions","Iterate over raw argument values via <code>ArgMatches::get_raw</code>.","Argument not defined in <code>Command</code>","Origin of the argument’s value","Iterate over multiple values for an argument via …","Iterate over multiple values for an argument via …","Check if any args were present on the command line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if values are present for the argument or group id","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the value of a specific <code>ArgAction::Count</code> flag","Gets the value of a specific <code>ArgAction::SetTrue</code> or …","Iterate over values of a specific option or positional …","Iterate over the values passed to each occurrence of an …","Gets the value of a specific option or positional argument.","Iterate over the original argument values.","Iterate over the original values for each occurrence of an …","Iterate over <code>Arg</code> and <code>ArgGroup</code> <code>Id</code>s via <code>ArgMatches::ids</code>.","The first index of that an argument showed up.","All indices an argument appeared at when parsing.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Return values of a specific option or positional argument.","Return values for each occurrence of an option.","Returns the value of a specific option or positional …","Return the name and <code>ArgMatches</code> of the current subcommand.","","","","","","The name and <code>ArgMatches</code> of the current subcommand.","The <code>ArgMatches</code> for the current subcommand.","The name of the current subcommand.","","","","","","","","","","Non-panicking version of <code>ArgMatches::contains_id</code>","","","","","","","","","Non-panicking version of <code>ArgMatches::get_many</code>","Non-panicking version of <code>ArgMatches::get_occurrences</code>","Non-panicking version of <code>ArgMatches::get_one</code>","Non-panicking version of <code>ArgMatches::get_raw</code>","Non-panicking version of <code>ArgMatches::get_raw_occurrences</code>","","","","","","","","","Non-panicking version of <code>ArgMatches::remove_many</code>","Non-panicking version of <code>ArgMatches::remove_occurrences</code>","Non-panicking version of <code>ArgMatches::remove_one</code>","","","","","","","","","Report where argument value came from","Type for value stored in <code>ArgMatches</code>","The target type to downcast to"],"i":[4,0,0,0,0,0,4,0,0,0,0,0,0,4,0,0,0,0,0,1,1,116,116,117,117,1,1,4,1,4,0,1,4,1,4,1,118,0,118,1,4,1,1,1,1,1,4,0,1,1,4,4,1,1,1,1,1,1,4,119,119,119,44,44,4,116,116,117,1,1,4,1,1,1,120,120,120,120,0,1,4,1,4,44,4,1,4,1,4,1,4,120,120,120,120,120,120,1,4,120,120,119,119,119,0,44,4,39,26,0,0,0,0,0,0,0,39,39,39,26,39,37,39,0,36,39,0,39,26,26,26,39,0,36,0,0,0,0,39,121,0,0,0,0,0,17,0,37,26,26,26,0,0,0,0,0,0,39,0,39,39,17,76,0,0,0,0,26,0,0,3,25,3,3,25,3,20,25,3,20,3,25,3,25,27,23,30,3,3,30,3,3,3,31,31,31,8,8,8,8,8,3,3,3,3,35,35,26,25,30,36,3,31,31,20,37,17,8,8,23,39,40,41,42,43,47,48,51,53,54,55,56,57,58,27,35,26,25,30,36,3,31,20,37,17,8,23,39,40,41,42,43,47,48,51,53,54,55,56,57,58,27,3,35,26,25,30,36,3,31,20,37,17,8,23,39,40,41,42,43,47,48,51,53,54,55,56,57,58,27,35,26,25,30,36,3,31,20,37,17,8,23,39,40,41,42,43,47,48,51,53,54,55,56,57,58,27,25,31,17,8,23,3,25,30,25,30,3,25,30,3,31,20,37,8,23,23,39,40,41,42,43,48,51,53,54,55,56,25,25,25,25,25,25,25,25,3,31,8,3,3,3,3,3,25,3,3,37,25,30,36,31,31,31,31,31,31,20,37,17,8,8,8,8,8,8,8,23,39,3,25,3,3,3,3,35,26,25,25,30,36,3,3,31,20,37,37,17,8,8,23,23,39,40,41,42,43,47,48,51,53,54,55,56,57,58,27,35,35,35,35,35,35,35,35,35,35,26,25,25,30,30,36,36,3,3,31,31,31,31,31,31,31,31,20,20,37,37,37,37,37,37,37,37,17,17,17,17,8,8,8,8,8,23,23,23,23,23,39,40,41,42,43,47,47,48,48,51,51,53,54,55,56,57,58,27,39,3,25,3,3,25,3,3,25,3,3,30,3,3,3,3,3,3,25,3,3,3,25,20,25,25,30,25,25,3,25,3,25,3,3,3,3,3,20,20,3,25,3,3,25,25,25,3,3,3,3,3,3,25,25,25,25,25,3,25,3,3,25,3,25,25,3,25,3,3,31,37,17,8,39,25,20,3,25,3,25,3,20,25,25,25,3,25,25,30,25,3,25,3,3,3,35,26,25,30,36,3,31,20,37,17,8,23,39,40,41,42,43,47,48,51,53,54,55,56,57,58,27,24,35,26,31,37,17,8,8,8,8,23,39,40,41,42,43,47,48,51,53,54,55,56,57,58,27,3,25,3,25,3,3,3,3,3,3,3,25,3,25,25,25,25,25,3,20,25,25,25,3,30,25,3,3,25,3,25,25,30,3,3,3,25,25,25,3,3,3,3,25,3,76,76,20,3,37,37,3,30,3,3,3,3,35,25,30,3,20,37,23,40,41,42,43,47,48,51,53,54,55,56,3,3,25,3,3,25,35,3,3,25,25,76,76,40,41,42,47,57,76,76,76,40,41,42,43,47,48,51,53,54,55,56,57,58,27,76,76,27,25,31,17,8,23,35,35,76,76,43,47,53,54,55,57,58,3,3,3,48,51,25,3,3,3,3,3,25,25,30,25,25,25,25,25,25,25,30,30,25,25,3,25,25,25,3,3,3,37,35,3,0,3,3,3,3,3,3,3,27,27,26,37,3,31,35,26,25,30,36,3,31,20,37,17,8,23,39,40,41,42,43,47,48,51,53,54,55,56,57,58,27,25,3,37,8,23,25,35,26,25,30,36,3,31,20,37,17,8,23,39,40,41,42,43,47,48,51,53,54,55,56,57,58,27,3,3,3,35,26,25,30,36,3,31,20,37,17,8,23,39,40,41,42,43,47,48,51,53,54,55,56,57,58,27,76,76,35,35,26,25,30,36,3,31,20,37,17,8,23,39,40,41,42,43,47,48,51,53,54,55,56,57,58,27,25,25,25,25,121,25,25,3,25,3,25,3,3,3,25,25,3,3,23,23,92,92,0,0,93,93,94,94,94,94,94,94,94,94,94,94,93,0,94,93,93,93,93,0,0,94,93,93,93,94,94,0,92,0,93,0,0,93,94,94,90,91,93,91,93,91,91,91,92,94,95,90,93,96,97,91,80,92,94,95,90,93,96,97,91,80,94,93,92,94,95,90,93,96,97,91,80,92,94,95,90,93,96,97,91,80,92,94,95,90,93,97,91,93,93,97,91,80,80,91,91,92,94,95,90,93,96,97,91,91,80,91,92,94,95,90,93,96,97,91,80,92,92,92,92,92,92,94,95,95,95,90,90,93,96,97,91,91,80,95,90,91,91,80,91,80,80,80,80,91,80,80,92,94,95,90,93,97,91,80,91,95,93,92,94,95,90,93,96,97,91,80,95,96,80,91,94,93,91,91,93,80,93,91,96,92,94,95,90,92,94,95,90,92,94,95,90,93,97,91,80,80,90,93,93,97,91,92,94,95,90,92,94,95,90,91,93,91,80,93,91,93,91,92,94,95,90,93,96,97,91,80,92,94,95,90,93,96,97,91,80,92,94,95,90,93,96,97,91,80,92,94,95,90,93,96,97,91,80,91,91,80,80,91,91,103,64,104,0,0,103,0,64,64,64,89,0,0,0,103,64,103,103,64,64,103,64,64,0,103,64,64,64,104,104,89,103,0,0,104,104,104,104,103,103,103,103,103,64,64,103,64,103,103,103,64,64,101,103,64,106,107,101,103,104,64,106,107,101,103,104,64,103,104,64,103,104,64,101,103,104,64,101,101,101,101,103,103,104,104,64,64,101,102,106,107,106,107,101,101,101,103,104,64,101,103,64,101,106,107,101,103,104,64,101,101,101,101,101,101,103,104,64,101,103,104,64,106,107,101,103,104,64,106,107,101,103,104,64,106,107,101,103,104,64,101,101,0,85,85,109,85,0,0,0,0,109,0,0,0,12,109,12,110,111,112,113,114,85,109,12,110,111,112,113,114,85,109,12,110,111,112,113,114,85,109,12,110,111,112,113,114,85,85,12,12,111,112,113,114,12,85,109,109,12,110,111,112,113,114,85,109,12,110,111,112,113,114,85,12,12,12,12,12,12,12,12,12,12,109,12,110,111,112,113,114,85,110,111,112,113,114,110,111,112,113,114,110,111,112,113,114,85,12,12,12,12,110,111,112,113,114,12,12,12,109,12,110,111,112,113,114,85,109,12,109,12,110,111,112,113,114,85,12,12,12,12,12,109,12,110,111,112,113,114,85,12,12,12,109,12,110,111,112,113,114,85,12,122,122],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],[3,3],[3,3],[3,3],[3,3],[-1,-2,[],[]],[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[4,4],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[1,1],6],[[],3],0,[[],3],[[],1],[[],4],[[1,1],7],[[1,2],7],[[1,8],7],[[1,2],7],[[1,9],7],[[4,4],7],0,[[1,10],11],[[1,10],11],[[4,10],11],[[4,10],11],[2,1],[-1,-1,[]],[8,1],[1,1],[8,1],[2,1],[-1,-1,[]],[12,[[14,[-1,13]]],[]],[12,[[14,[-1,13]]],[]],[12,[[14,[-1,13]]],[]],[[2,7],[[14,[-1,9]]],[]],[[2,7],[[14,[-1,9]]],[]],[2,[[14,[4]]]],[[],[[15,[1]]]],[[],[[15,[1]]]],[2,7],[[1,-1],5,16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[9]]],[]],[-1,[[17,[8]]],[]],[-1,[[17,[1]]],[]],[[],-1,[]],[[],-1,[]],[-1,-2,18,[]],[-1,-2,18,[]],0,[[1,1],[[15,[6]]]],[[],[[0,[19]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[20]]],[]],[4,[[15,[20]]]],[-1,9,[]],[-1,9,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[[],[[14,[-1,13]]],[]],[[],[[14,[-1,13]]],[]],[-1,[[14,[-2,13]]],18,[]],[-1,[[14,[-2,13]]],18,[]],[[-1,-2],[[14,[5,13]]],[],18],[[-1,-2],[[14,[5,13]]],[],18],[-1,21,[]],[-1,21,[]],[[-1,-2],5,[],18],[[-1,-2],5,[],18],[[-1,12],[[14,[5,13]]],[]],[[-1,12],[[14,[5,13]]],[]],[[-1,12],[[14,[5,13]]],[]],0,[[],[[22,[-1]]],[]],[[],[[22,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,-1],3,[[24,[23]]]],[[25,-1],25,[[24,[26]]]],[[3,-1],3,[[24,[23]]]],[[3,-1],3,[[24,[23]]]],[[25,-1],25,[[24,[8]]]],[[3,-1],3,[[24,[8]]]],[[20,-1],20,[[24,[8]]]],[[25,-1],25,18],[[3,-1],3,18],[[20,-1],20,18],[[3,7],3],[[25,7],25],[[3,7],3],[[25,7],25],[[27,-1],27,[[28,[23]]]],[23,[[0,[29]]]],[[30,-1],30,[[24,[1]]]],[[3,-1],3,[[28,[25]]]],[[3,7],3],[[30,-1],30,18],[[3,-1],3,18],[[3,7],3],[[3,7],3],[31,32],[31,32],[31,33],[8,[[22,[34]]]],[8,32],[8,2],[8,33],[8,2],[[3,-1],3,[[24,[8]]]],[[3,-1],3,[[24,[23]]]],[[3,-1],3,[[24,[23]]]],[[3,-1],3,[[24,[9]]]],[[],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,5],[35,35],[26,26],[25,25],[30,30],[36,36],[3,3],[31,31],[20,20],[37,37],[[[17,[-1]]],[[17,[-1]]],38],[8,8],[23,23],[39,39],[40,40],[41,41],[42,42],[[[43,[-1]]],[[43,[-1]]],[38,44,38,45,46]],[47,47],[[[48,[-1]]],[[48,[-1]]],[38,[50,[49]],38,45,46]],[[[51,[-1]]],[[51,[-1]]],[38,[50,[52]]]],[53,53],[54,54],[55,55],[56,56],[[[57,[-1,-2]]],[[57,[-1,-2]]],38,38],[[[58,[-1,-2]]],[[58,[-1,-2]]],38,38],[27,27],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[25,25],6],[[31,31],6],[[[17,[-1]],[17,[-1]]],6,59],[[8,8],6],[[23,23],6],[[3,4],3],[[25,-1],25,[[24,[1]]]],[[30,-1],30,[[24,[1]]]],[[25,-1],25,18],[[30,-1],30,18],[3,5],[[],25],[[],30],[[],3],[[],31],[[],20],[[],37],[[],8],[[],23],[[],23],[[],39],[[],40],[[],41],[[],42],[[],[[43,[-1]]],[44,38,45,46]],[[],[[48,[-1]]],[[50,[49]],38,45,46]],[[],[[51,[-1]]],[[50,[52]]]],[[],53],[[],54],[[],55],[[],56],[[25,-1],25,[[24,[31]]]],[[25,-1],25,[[28,[31]]]],[[25,-1],25,18],[[25,-1],25,18],[[25,-1],25,[[24,[31]]]],[[25,-1,-2,-3],25,[[28,[1]]],[[28,[36]]],[[24,[31]]]],[[25,-1],25,18],[[25,-1],25,18],[3,3],[31,32],[8,2],[[3,7],3],[[3,7],3],[[3,7],3],[[3,7],3],[[3,-1],3,[[24,[9]]]],[[25,-1],25,[[24,[60]]]],[[3,-1],3,[[24,[60]]]],[[3,7],3],[37,[[61,[60]]]],[[25,25],7],[[30,30],7],[[36,36],7],[[31,9],7],[[31,31],7],[[31,2],7],[[31,2],7],[[31,32],7],[[31,62],7],[[20,20],7],[[37,37],7],[[[17,[-1]],[17,[-1]]],7,63],[[8,32],7],[[8,1],7],[[8,2],7],[[8,2],7],[[8,8],7],[[8,9],7],[[8,32],7],[[23,23],7],[[39,39],7],[[3,64,-1],13,29],[[25,7],25],[[3,-1],3,[[24,[35]]]],[[3,-1],[[15,[3]]],[[65,[32]]]],[[3,-1],[[15,[3]]],[[65,[32]]]],[[3,7],3],[[35,10],[[14,[5,66]]]],[[26,10],11],[[25,10],[[14,[5,66]]]],[[25,10],11],[[30,10],11],[[36,10],11],[[3,10],11],[[3,10],11],[[31,10],11],[[20,10],11],[[37,10],11],[[37,10],11],[[[17,[-1]],10],11,67],[[8,10],11],[[8,10],11],[[23,10],11],[[23,10],11],[[39,10],11],[[40,10],11],[[41,10],11],[[42,10],11],[[[43,[-1]],10],11,[67,44,38,45,46]],[[47,10],11],[[[48,[-1]],10],11,[67,[50,[49]],38,45,46]],[[[51,[-1]],10],11,[67,[50,[52]]]],[[53,10],11],[[54,10],11],[[55,10],11],[[56,10],11],[[[57,[-1,-2]],10],11,67,67],[[[58,[-1,-2]],10],11,67,67],[[27,10],11],[-1,-1,[]],[[[68,[-1]]],35,[[28,[20]]]],[[[69,[49]]],35],[[[70,[49]]],35],[[[71,[-1]]],35,[[28,[20]]]],[[[72,[49]]],35],[[[73,[49]]],35],[[[74,[49]]],35],[75,35],[-1,35,[76,45,46]],[-1,-1,[]],[-1,-1,[]],[25,25],[-1,-1,[]],[30,30],[-1,36,[[28,[31]]]],[-1,-1,[]],[3,3],[-1,-1,[]],[8,31],[8,31],[32,31],[-1,-1,[]],[2,31],[2,31],[31,31],[32,31],[-1,-1,[]],[-1,20,[[28,[8]]]],[[[72,[60]]],37],[60,37],[-1,-1,[]],[[[74,[60]]],37],[[[69,[60]]],37],[75,37],[[[73,[60]]],37],[[[70,[60]]],37],[-1,[[17,[-1]]],[]],[[[15,[-1]]],[[17,[-1]]],[]],[-1,-1,[]],[77,-1,[]],[-1,-1,[]],[1,8],[2,8],[2,8],[8,8],[9,23],[2,23],[2,23],[-1,-1,[]],[9,23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,47,18],[-1,-1,[]],[-1,[[48,[-2]]],[[78,[49]]],[[50,[49]],38,45,46]],[-1,-1,[]],[-1,[[51,[-2]]],[[78,[52]]],[[50,[52]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[2,[[14,[39]]]],[3,[[15,[23]]]],[25,26],[3,[[15,[23]]]],[3,[[15,[23]]]],[25,[[15,[[68,[2]]]]]],[3,[[0,[19]]]],[3,[[0,[19]]]],[25,[[15,[[68,[79]]]]]],[3,[[0,[19]]]],[[3,25],[[68,[25]]]],[30,[[0,[19]]]],[3,[[0,[19]]]],[3,[[15,[2]]]],[3,[[15,[23]]]],[3,[[15,[23]]]],[3,[[15,[2]]]],[3,4],[25,[[22,[31]]]],[3,[[15,[2]]]],[3,[[15,[35]]]],[3,[[0,[19]]]],[25,[[15,[23]]]],[20,[[15,[23]]]],[25,[[15,[2]]]],[25,1],[30,1],[25,[[15,[60]]]],[25,[[15,[2]]]],[3,[[15,[23]]]],[25,[[15,[[68,[2]]]]]],[3,[[15,[2]]]],[25,[[15,[23]]]],[3,[[15,[2]]]],[3,12],[[3,-1],12,18],[3,12],[3,2],[20,2],[20,[[0,[19]]]],[3,[[15,[2]]]],[25,[[15,[37]]]],[3,[[0,[19]]]],[3,[[0,[19]]]],[25,[[68,[20]]]],[25,[[15,[79]]]],[25,[[15,[[68,[79]]]]]],[3,[[15,[79]]]],[3,80],[3,[[15,[2]]]],[3,[[15,[2]]]],[3,[[0,[19]]]],[3,[[0,[19]]]],[25,[[15,[79]]]],[25,39],[25,[[15,[[22,[8]]]]]],[25,35],[25,[[15,[8]]]],[3,[[15,[2]]]],[25,[[15,[[68,[2]]]]]],[3,[[0,[19]]]],[3,[[0,[19]]]],[25,[[15,[[68,[79]]]]]],[3,[[0,[19]]]],[[25,7],25],[[25,-1],25,[[24,[1]]]],[[3,-1],3,[[28,[30]]]],[[25,-1],25,18],[[3,-1],3,18],[3,7],[[31,-1],5,16],[[37,-1],5,16],[[[17,[-1]],-2],5,81,16],[[8,-1],5,16],[[39,-1],5,16],[[25,-1],25,[[24,[23]]]],[[20,-1],20,[[24,[23]]]],[[3,7],3],[[25,-1],25,[[24,[8]]]],[[3,-1],3,[[24,[23]]]],[[25,7],25],[[3,7],3],[[20,7],20],[[25,7],25],[[25,7],25],[[25,7],25],[[3,7],3],[[25,7],25],[[25,-1],25,[[28,[1]]]],[[30,-1],30,[[28,[1]]]],[[25,7],25],[[3,7],3],[[25,-1],25,[[24,[60]]]],[[3,1]],[[3,7],3],[[3,7],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[35]]],[]],[26,[[17,[26]]]],[-1,[[17,[31]]],[]],[-1,[[17,[37]]],[]],[[[17,[-1]]],[[17,[-1]]],[]],[-1,[[17,[1]]],[]],[-1,[[17,[8]]],[]],[-1,[[17,[31]]],[]],[-1,[[17,[9]]],[]],[-1,[[17,[23]]],[]],[39,[[17,[39]]]],[-1,[[17,[35]]],[]],[-1,[[17,[35]]],[]],[-1,[[17,[35]]],[]],[-1,[[17,[35]]],[]],[-1,[[17,[35]]],[]],[-1,[[17,[35]]],[]],[-1,[[17,[35]]],[]],[-1,[[17,[35]]],[]],[-1,[[17,[35]]],[]],[-1,[[17,[35]]],[]],[-1,[[17,[35]]],[]],[-1,[[17,[35]]],[]],[-1,[[17,[35]]],[]],[-1,[[17,[35]]],[]],[3,7],[25,7],[3,7],[25,7],[3,7],[3,7],[3,7],[3,7],[3,7],[3,7],[3,7],[25,7],[3,7],[25,7],[25,7],[25,7],[25,7],[25,7],[3,7],[20,7],[25,7],[25,7],[25,7],[3,7],[30,7],[25,7],[3,7],[3,7],[25,7],[3,7],[25,7],[25,7],[30,7],[3,7],[3,7],[3,7],[25,7],[[25,7],25],[[25,-1],25,[[24,[8]]]],[[3,-1],3,[[24,[23]]]],[[3,-1],3,[[28,[8]]]],[[3,-1],3,[[24,[8]]]],[[3,-1],3,18],[[25,-1],25,[[24,[23]]]],[[3,-1],3,[[24,[8]]]],[[-1,-2],[[57,[-1,-2]]],[],[82,38]],[[-1,-2],[[57,[-1,-2]]],[],[82,38]],[[20,2,7],7],[[3,60],3],[37,60],[37,60],[[3,7],3],[[30,7],30],[[3,-1,-2],3,[[65,[2]]],83],[[3,-1],3,84],[[3,-1,-2],3,[[65,[2]]],83],[[3,-1],3,[[28,[8]]]],[-1,35,76],[-1,25,[[28,[1]]]],[-1,30,[[28,[1]]]],[-1,3,[[28,[8]]]],[-1,20,[[28,[8]]]],[-1,37,[[28,[37]]]],[[],23],[[],40],[[],41],[[],42],[[],[[43,[-1]]],[44,38,45,46]],[-1,47,[[28,[47]]]],[[],[[48,[-1]]],[[50,[49]],38,45,46]],[[],[[51,[-1]]],[[50,[52]]]],[[],53],[[],54],[[],55],[[],56],[[3,-1],3,[[24,[60]]]],[[3,-1],3,[[24,[8]]]],[[25,7],25],[[3,7],3],[[3,7],3],[[25,-1],25,[[24,[37]]]],[[],35],[[3,-1],3,[[24,[23]]]],[[3,-1],3,[[24,[23]]]],[[25,-1],25,[[24,[1]]]],[[25,-1],25,18],[[-1,3,[15,[25]],62],[[14,[13]]],[]],[[-1,3,[15,[25]],62],[[14,[13]]],[]],[[40,3,[15,[25]],62],[[14,[13]]]],[[41,3,[15,[25]],62],[[14,[13]]]],[[42,3,[15,[25]],62],[[14,[13]]]],[[47,3,[15,[25]],62],[[14,[9,13]]]],[[[57,[-1,-2]],3,[15,[25]],62],[[14,[13]]],76,[82,38,45,46]],[[-1,3,[15,[25]],62,85],[[14,[13]]],[]],[[-1,3,[15,[25]],62,85],[[14,[13]]],[]],[[-1,3,[15,[25]],32],[[14,[13]]],[]],[[40,3,[15,[25]],32],[[14,[13]]]],[[41,3,[15,[25]],32],[[14,[13]]]],[[42,3,[15,[25]],32],[[14,[13]]]],[[[43,[-1]],3,[15,[25]],32],[[14,[13]]],[44,38,45,46]],[[47,3,[15,[25]],32],[[14,[13]]]],[[[48,[-1]],3,[15,[25]],32],[[14,[13]]],[[50,[49]],38,45,46]],[[[51,[-1]],3,[15,[25]],32],[[14,[13]]],[[50,[52]],38,45,46]],[[53,3,[15,[25]],32],[[14,[13]]]],[[54,3,[15,[25]],32],[[14,[13]]]],[[55,3,[15,[25]],32],[[14,[13]]]],[[56,3,[15,[25]],32],[[14,[13]]]],[[[57,[-1,-2]],3,[15,[25]],32],[[14,[13]]],76,[82,38,45,46]],[[[58,[-1,-2]],3,[15,[25]],32],[[14,[13]]],76,[82,38,45,46]],[[27,3,[15,[25]],32],[[14,[13]]]],[[-1,3,[15,[25]],32,85],[[14,[13]]],[]],[[-1,3,[15,[25]],32,85],[[14,[13]]],[]],[[27,3,[15,[25]],32,85],[[14,[13]]]],[[25,25],[[15,[6]]]],[[31,31],[[15,[6]]]],[[[17,[-1]],[17,[-1]]],[[15,[6]]],86],[[8,8],[[15,[6]]]],[[23,23],[[15,[6]]]],[[],35],[35,[[15,[[87,[19]]]]]],[-1,[[15,[[87,[19]]]]],[]],[-1,[[15,[[87,[19]]]]],[]],[[[43,[-1]]],[[15,[[87,[19]]]]],[44,38,45,46]],[47,[[15,[[87,[19]]]]]],[53,[[15,[[87,[19]]]]]],[54,[[15,[[87,[19]]]]]],[55,[[15,[[87,[19]]]]]],[[[57,[-1,-2]]],[[15,[[87,[19]]]]],76,[82,38,45,46]],[[[58,[-1,-2]]],[[15,[[87,[19]]]]],76,[82,38,45,46]],[3,[[88,[5]]]],[3,[[88,[5]]]],[[3,7],3],[[[48,[-1]],-2],[[48,[-1]]],[[50,[49]],38,45,46],[[78,[49]]]],[[[51,[-1]],-2],[[51,[-1]]],[[50,[52]]],[[78,[52]]]],[[25,7],25],[3,23],[3,23],[3,9],[3,23],[3,9],[[25,7],25],[[25,7],25],[[30,7],30],[[25,-1,-2],25,[[28,[1]]],[[28,[31]]]],[[25,-1],25,18],[[25,-1],25,18],[[25,-1],25,[[24,[1]]]],[[25,-1],25,18],[[25,-1],25,18],[[25,-1],25,[[24,[1]]]],[[30,-1],30,[[24,[1]]]],[[30,-1],30,18],[[25,-1,-2],25,[[28,[36]]],[[28,[1]]]],[[25,-1],25,18],[[3,-1],5,[[28,[9]]]],[[25,-1],25,[[24,[79]]]],[[25,-1],25,[[24,[79]]]],[[25,-1],25,18],[[3,-1],3,[[24,[79]]]],[[3,-1],3,[[24,[79]]]],[[3,-1],3,18],[37,[[61,[60]]]],[[],35],[[3,80],3],0,[[3,-1],3,[[28,[3]]]],[[3,-1],3,[[24,[8]]]],[[3,7],3],[[3,7],3],[[3,7],3],[[3,-1],3,[[24,[8]]]],[[3,-1],3,18],[-1,27,[[28,[23]]]],[-1,27,[[28,[8]]]],[26,7],[37,7],[[3,60],3],[31,62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[25,7],25],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[3,[[89,[12]]]],[[3,-1],[[89,[12]]],18],[[3,-1],[[89,[12]]],18],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[[-1,-2],[[58,[-1,-2]]],[],[82,38,45,46]],[[-1,-2],[[58,[-1,-2]]],[],[82,38,45,46]],0,[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[25,-1],25,[[24,[79]]]],[[25,-1],25,[[24,[39]]]],[[25,-1],25,[[24,[8]]]],[[25,-1],25,18],[[]],[[25,-1],25,[[24,[35]]]],[[25,-1],25,[[24,[8]]]],[[3,-1],3,[[24,[8]]]],[[25,-1],25,[[24,[8]]]],[[3,-1],3,[[24,[8]]]],[[25,-1],25,18],[[3,-1],3,18],[[3,-1],3,[[24,[8]]]],[[3,-1],3,18],[[25,-1],25,[[24,[79]]]],[[25,-1],25,18],[[3,-1],3,[[24,[79]]]],[[3,-1],3,18],[[23,79],[[14,[5,66]]]],[[23,2],[[14,[5,66]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[90,34],[[91,[15,[92]]],91],[[93,93],93],[[91,93],91],[[93,93],5],[[91,93],5],[91,91],[91,91],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[94,7],94],[93,93],[92,92],[94,94],[95,95],[90,90],[93,93],[96,96],[97,97],[91,91],[80,80],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[92,92],6],[[94,94],6],[[95,95],6],[[90,90],6],[[93,93],6],[[97,97],6],[[91,91],6],[[93,93],7],[[],93],[[],97],[[],91],[[],80],[[],80],[91,91],[[91,93],91],[[92,92],7],[[94,94],7],[[95,95],7],[[90,90],7],[[93,93],7],[[96,96],7],[[97,97],7],[[91,93],7],[[91,91],7],[[80,91],80],[[91,[15,[92]]],91],[[92,10],[[14,[5,66]]]],[[94,10],[[14,[5,66]]]],[[95,10],[[14,[5,66]]]],[[90,10],[[14,[5,66]]]],[[93,10],[[14,[5,66]]]],[[96,10],[[14,[5,66]]]],[[97,10],[[14,[5,66]]]],[[91,10],[[14,[5,66]]]],[[80,10],11],[94,92],[90,92],[34,92],[95,92],[-1,-1,[]],[[[5,[34,34,34]]],92],[-1,-1,[]],[-1,-1,[]],[34,95],[94,95],[-1,-1,[]],[[[5,[34,34,34]]],90],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[93,91],[-1,-1,[]],[94,95],[90,34],[91,[[15,[92]]]],[91,93],[80,91],[91,[[15,[92]]]],[80,91],[80,91],[80,91],[80,91],[91,[[15,[92]]]],[80,91],[80,91],[[92,-1],5,16],[[94,-1],5,16],[[95,-1],5,16],[[90,-1],5,16],[[93,-1],5,16],[[97,-1],5,16],[[91,-1],5,16],[[80,91],80],[91,91],[95,34],[[93,93],93],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[95,[[15,[94]]]],[-1,-2,[],[]],[[80,91],80],[91,91],[94,7],[93,7],[91,7],[91,91],[93,96],[[80,91],80],[[],93],[[],91],[96,15],[[92,-1],91,[[28,[92]]]],[[94,-1],91,[[28,[92]]]],[[95,-1],91,[[28,[92]]]],[[90,-1],91,[[28,[92]]]],[92,91],[94,91],[95,91],[90,91],[[92,92],[[15,[6]]]],[[94,94],[[15,[6]]]],[[95,95],[[15,[6]]]],[[90,90],[[15,[6]]]],[[93,93],[[15,[6]]]],[[97,97],[[15,[6]]]],[[91,91],[[15,[6]]]],[[80,91],80],[[],80],[90,34],[[93,93],93],[93,[[0,[29,98,38]]]],[97,[[0,[29,98,38]]]],[91,[[0,[29,98,38]]]],[92,[[0,[29,98,38]]]],[94,[[0,[29,98,38]]]],[95,[[0,[29,98,38]]]],[90,[[0,[29,98,38]]]],[92,[[0,[29,98,38]]]],[94,[[0,[29,98,38]]]],[95,[[0,[29,98,38]]]],[90,[[0,[29,98,38]]]],[91,[[0,[29,98,38]]]],[[93,93,7],93],[91,91],[[],80],[[93,93],93],[[91,93],91],[[93,93],5],[[91,93],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[91,91],[[91,[15,[92]]],91],[[80,91],80],[[80,91],80],[[91,99],[[14,[5,100]]]],[[91,99],[[14,[5,100]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[101,[-1]]],[[101,[-2]]],102,102],[103,[[15,[2]]]],[64,[[15,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[103,103],[104,104],[64,64],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[[101,[-1]]],[[0,[19]]],102],[[103,103],7],[[104,104],7],[[64,64],7],[[[101,[-1]]],77,102],[[[101,[-1]]],105,102],[[[101,[-1]],10],[[89,[5,66]]],102],[[[101,[-1]],10],11,102],[[103,10],11],[[103,10],11],[[104,10],11],[[104,10],11],[[64,10],11],[[64,10],11],[[[101,[-1]],3],[[101,[-1]]],102],[[[101,[-1]]],23,[]],[[[101,[106]]],23],[[[101,[107]]],23],[-1,-1,[]],[-1,-1,[]],[66,[[101,[-1]]],102],[-1,-1,[]],[100,[[101,[-1]]],102],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[101,[-1]],103],[[15,[104]]],102],[[103,-1],5,16],[[64,-1],5,16],[[[101,[-1]],103,104],[[15,[104]]],102],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[101,[-1]]],64,102],[64,[[101,[-1]]],102],[[[101,[-1]]],[[88,[5]]],102],[[64,-1],[[101,[-2]]],29,102],[[[101,[-1]]],23,102],[[[101,[-1]]],[[15,[108]]],102],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[[101,[-1]]],7,102],[[[101,[-1]],3],[[101,[-1]]],102],0,0,0,0,0,0,0,0,0,0,0,0,0,[12,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[109,109],[12,12],[110,110],[[[111,[-1]]],[[111,[-1]]],38],[[[112,[-1]]],[[112,[-1]]],38],[113,113],[114,114],[85,85],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[85,85],6],[[12,2],7],[[],12],[[],[[111,[-1]]],[]],[[],[[112,[-1]]],[]],[[],113],[[],114],[[12,12],7],[[85,85],7],[[109,10],11],[[109,10],11],[[12,10],11],[[110,10],11],[[[111,[-1]],10],11,67],[[[112,[-1]],10],11,67],[[113,10],11],[[114,10],11],[[85,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[12,2],34],[[12,2],7],[[12,2],[[15,[[112,[-1]]]]],[115,38,45,46]],[[12,2],[[15,[[0,[-1]]]]],[115,38,45,46]],[[12,2],[[15,[-1]]],[115,38,45,46]],[[12,2],[[15,[113]]]],[[12,2],[[15,[0]]]],[12,110],[[12,2],[[15,[60]]]],[[12,2],[[15,[114]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[110,[[15,[1]]]],[[[111,[-1]]],15,[]],[[[112,[-1]]],15,[]],[113,[[15,[32]]]],[114,[[15,[60]]]],[110,[[15,[1]]]],[[[111,[-1]]],15,[]],[[[112,[-1]]],15,[]],[113,[[15,[32]]]],[114,[[15,[60]]]],[[85,85],[[15,[6]]]],[[12,2],[[15,[[111,[-1]]]]],[115,38,45,46]],[[12,2],[[15,[[0,[-1]]]]],[115,38,45,46]],[[12,2],[[15,[-1]]],[115,38,45,46]],[12,[[15,[[5,[9,12]]]]]],[110,[[5,[60,[15,[60]]]]]],[[[111,[-1]]],[[5,[60,[15,[60]]]]],[]],[[[112,[-1]]],[[5,[60,[15,[60]]]]],[]],[113,[[5,[60,[15,[60]]]]]],[114,[[5,[60,[15,[60]]]]]],[12,[[15,[[5,[2,12]]]]]],[[12,2],[[15,[12]]]],[12,[[15,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,9,[]],[[12,2],[[14,[7,109]]]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[[12,2],[[14,[[15,[[112,[-1]]]],109]]],[115,38,45,46]],[[12,2],[[14,[[15,[[0,[-1]]]],109]]],[115,38,45,46]],[[12,2],[[14,[[15,[-1]],109]]],[115,38,45,46]],[[12,2],[[14,[[15,[113]],109]]]],[[12,2],[[14,[[15,[0]],109]]]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[[12,2],[[14,[[15,[[111,[-1]]]],109]]],[115,38,45,46]],[[12,2],[[14,[[15,[[0,[-1]]]],109]]],[115,38,45,46]],[[12,2],[[14,[[15,[-1]],109]]],[115,38,45,46]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[12,2],[[15,[85]]]],0,0],"c":[],"p":[[3,"Id",0],[15,"str"],[3,"Command",107],[4,"ColorChoice",0],[15,"tuple"],[4,"Ordering",1533],[15,"bool"],[3,"Str",107],[3,"String",1534],[3,"Formatter",1535],[6,"Result",1535],[3,"ArgMatches",1370],[6,"Error",0],[4,"Result",1536],[4,"Option",1537],[8,"Hasher",1538],[4,"Resettable",107],[8,"IntoIterator",1539],[8,"Iterator",1540],[3,"PossibleValue",107],[3,"TypeId",1541],[15,"slice"],[3,"StyledStr",107],[8,"IntoResettable",107],[3,"Arg",107],[4,"ArgAction",107],[3,"UnknownArgumentValueParser",107],[8,"Into",1542],[8,"Display",1535],[3,"ArgGroup",107],[3,"OsStr",107],[3,"OsStr",1543],[3,"Path",1544],[15,"u8"],[3,"ValueParser",107],[4,"ArgPredicate",107],[3,"ValueRange",107],[8,"Clone",1545],[4,"ValueHint",107],[3,"StringValueParser",107],[3,"OsStringValueParser",107],[3,"PathBufValueParser",107],[3,"EnumValueParser",107],[8,"ValueEnum",0],[8,"Send",1546],[8,"Sync",1546],[3,"PossibleValuesParser",107],[3,"RangedI64ValueParser",107],[15,"i64"],[8,"TryFrom",1542],[3,"RangedU64ValueParser",107],[15,"u64"],[3,"BoolValueParser",107],[3,"FalseyValueParser",107],[3,"BoolishValueParser",107],[3,"NonEmptyStringValueParser",107],[3,"MapValueParser",107],[3,"TryMapValueParser",107],[8,"Ord",1533],[15,"usize"],[4,"Bound",1547],[3,"OsString",1543],[8,"PartialEq",1533],[4,"ErrorKind",1228],[8,"AsRef",1542],[3,"Error",1535],[8,"Debug",1535],[3,"Vec",1548],[3,"Range",1547],[3,"RangeInclusive",1547],[15,"array"],[3,"RangeTo",1547],[3,"RangeToInclusive",1547],[3,"RangeFrom",1547],[3,"RangeFull",1547],[8,"TypedValueParser",107],[15,"never"],[8,"RangeBounds",1547],[15,"char"],[3,"Styles",963],[8,"Hash",1538],[8,"Fn",1549],[8,"FnOnce",1549],[8,"FnMut",1549],[4,"ValueSource",1370],[8,"PartialOrd",1533],[3,"Box",1550],[6,"Result",1551],[6,"Result",1228],[3,"RgbColor",963],[3,"Style",963],[4,"Color",963],[3,"Effects",963],[4,"AnsiColor",963],[3,"Ansi256Color",963],[3,"EffectIter",963],[3,"Reset",963],[8,"Copy",1546],[8,"Write",1552],[3,"Error",1551],[3,"Error",1228],[8,"ErrorFormatter",1228],[4,"ContextKind",1228],[4,"ContextValue",1228],[15,"i32"],[3,"KindFormatter",1228],[3,"RichFormatter",1228],[8,"Error",1553],[4,"MatchesError",1370],[3,"IdsRef",1370],[3,"Values",1370],[3,"ValuesRef",1370],[3,"RawValues",1370],[3,"Indices",1370],[8,"Any",1541],[8,"Args",0],[8,"Subcommand",0],[8,"CommandFactory",0],[8,"FromArgMatches",0],[8,"Parser",0],[8,"ValueParserFactory",107],[13,"Downcast",1531]],"b":[[41,"impl-PartialEq-for-Id"],[42,"impl-PartialEq%3Cstr%3E-for-Id"],[43,"impl-PartialEq%3CStr%3E-for-Id"],[44,"impl-PartialEq%3C%26str%3E-for-Id"],[45,"impl-PartialEq%3CString%3E-for-Id"],[48,"impl-Display-for-Id"],[49,"impl-Debug-for-Id"],[50,"impl-Display-for-ColorChoice"],[51,"impl-Debug-for-ColorChoice"],[52,"impl-From%3C%26str%3E-for-Id"],[54,"impl-From%3C%26Str%3E-for-Id"],[55,"impl-From%3C%26Id%3E-for-Id"],[56,"impl-From%3CStr%3E-for-Id"],[57,"impl-From%3C%26%26str%3E-for-Id"],[194,"impl-AsRef%3COsStr%3E-for-OsStr"],[195,"impl-AsRef%3CPath%3E-for-OsStr"],[196,"impl-AsRef%3C%5Bu8%5D%3E-for-Str"],[197,"impl-AsRef%3COsStr%3E-for-Str"],[198,"impl-AsRef%3Cstr%3E-for-Str"],[199,"impl-AsRef%3CPath%3E-for-Str"],[335,"impl-Default-for-%26StyledStr"],[336,"impl-Default-for-StyledStr"],[371,"impl-PartialEq%3CString%3E-for-OsStr"],[372,"impl-PartialEq-for-OsStr"],[373,"impl-PartialEq%3Cstr%3E-for-OsStr"],[374,"impl-PartialEq%3C%26str%3E-for-OsStr"],[375,"impl-PartialEq%3C%26OsStr%3E-for-OsStr"],[376,"impl-PartialEq%3COsString%3E-for-OsStr"],[380,"impl-PartialEq%3C%26OsStr%3E-for-Str"],[381,"impl-PartialEq%3CId%3E-for-Str"],[382,"impl-PartialEq%3Cstr%3E-for-Str"],[383,"impl-PartialEq%3C%26str%3E-for-Str"],[384,"impl-PartialEq-for-Str"],[385,"impl-PartialEq%3CString%3E-for-Str"],[386,"impl-PartialEq%3COsStr%3E-for-Str"],[397,"impl-Debug-for-Arg"],[398,"impl-Display-for-Arg"],[401,"impl-Display-for-Command"],[402,"impl-Debug-for-Command"],[405,"impl-Debug-for-ValueRange"],[406,"impl-Display-for-ValueRange"],[408,"impl-Debug-for-Str"],[409,"impl-Display-for-Str"],[410,"impl-Display-for-StyledStr"],[411,"impl-Debug-for-StyledStr"],[428,"impl-From%3CVec%3CP%3E%3E-for-ValueParser"],[429,"impl-From%3CRange%3Ci64%3E%3E-for-ValueParser"],[430,"impl-From%3CRangeInclusive%3Ci64%3E%3E-for-ValueParser"],[431,"impl-From%3C%5BP;+C%5D%3E-for-ValueParser"],[432,"impl-From%3CRangeTo%3Ci64%3E%3E-for-ValueParser"],[433,"impl-From%3CRangeToInclusive%3Ci64%3E%3E-for-ValueParser"],[434,"impl-From%3CRangeFrom%3Ci64%3E%3E-for-ValueParser"],[435,"impl-From%3CRangeFull%3E-for-ValueParser"],[436,"impl-From%3CP%3E-for-ValueParser"],[446,"impl-From%3C%26Str%3E-for-OsStr"],[447,"impl-From%3CStr%3E-for-OsStr"],[448,"impl-From%3C%26OsStr%3E-for-OsStr"],[450,"impl-From%3C%26%26str%3E-for-OsStr"],[451,"impl-From%3C%26str%3E-for-OsStr"],[452,"impl-From%3C%26OsStr%3E-for-OsStr"],[453,"impl-From%3C%26%26OsStr%3E-for-OsStr"],[456,"impl-From%3CRangeTo%3Cusize%3E%3E-for-ValueRange"],[457,"impl-From%3Cusize%3E-for-ValueRange"],[459,"impl-From%3CRangeFrom%3Cusize%3E%3E-for-ValueRange"],[460,"impl-From%3CRange%3Cusize%3E%3E-for-ValueRange"],[461,"impl-From%3CRangeFull%3E-for-ValueRange"],[462,"impl-From%3CRangeToInclusive%3Cusize%3E%3E-for-ValueRange"],[463,"impl-From%3CRangeInclusive%3Cusize%3E%3E-for-ValueRange"],[464,"impl-From%3CT%3E-for-Resettable%3CT%3E"],[465,"impl-From%3COption%3CT%3E%3E-for-Resettable%3CT%3E"],[469,"impl-From%3CId%3E-for-Str"],[470,"impl-From%3C%26%26str%3E-for-Str"],[471,"impl-From%3C%26str%3E-for-Str"],[472,"impl-From%3C%26Str%3E-for-Str"],[473,"impl-From%3C%26String%3E-for-StyledStr"],[474,"impl-From%3C%26str%3E-for-StyledStr"],[475,"impl-From%3C%26%26str%3E-for-StyledStr"],[477,"impl-From%3CString%3E-for-StyledStr"],[1060,"impl-Default-for-%26Styles"],[1061,"impl-Default-for-Styles"],[1071,"impl-PartialEq%3CEffects%3E-for-Style"],[1072,"impl-PartialEq-for-Style"],[1084,"impl-From%3CAnsiColor%3E-for-Color"],[1085,"impl-From%3CRgbColor%3E-for-Color"],[1086,"impl-From%3Cu8%3E-for-Color"],[1087,"impl-From%3CAnsi256Color%3E-for-Color"],[1089,"impl-From%3C(u8,+u8,+u8)%3E-for-Color"],[1092,"impl-From%3Cu8%3E-for-Ansi256Color"],[1093,"impl-From%3CAnsiColor%3E-for-Ansi256Color"],[1307,"impl-Debug-for-Error%3CF%3E"],[1308,"impl-Display-for-Error%3CF%3E"],[1309,"impl-Debug-for-ContextKind"],[1310,"impl-Display-for-ContextKind"],[1311,"impl-Display-for-ContextValue"],[1312,"impl-Debug-for-ContextValue"],[1313,"impl-Display-for-ErrorKind"],[1314,"impl-Debug-for-ErrorKind"],[1321,"impl-From%3CError%3E-for-Error%3CF%3E"],[1323,"impl-From%3CError%3E-for-Error%3CF%3E"],[1425,"impl-Debug-for-MatchesError"],[1426,"impl-Display-for-MatchesError"]]},\
"clap_derive":{"doc":"clap_derive","t":"YYYY","n":["Args","Parser","Subcommand","ValueEnum"],"q":[[0,"clap_derive"]],"d":["Generates the <code>Args</code> impl.","Generates the <code>Parser</code> implementation.","Generates the <code>Subcommand</code> impl.","Generates the <code>ValueEnum</code> impl."],"i":[0,0,0,0],"f":[0,0,0,0],"c":[],"p":[],"b":[]},\
"clap_lex":{"doc":"Minimal, flexible command-line parser","t":"DNNIDDEDNLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKLLLLLLLLLLLLLLLLLLLKLLLLL","n":["ArgCursor","Current","End","OsStrExt","ParsedArg","RawArgs","SeekFrom","ShortFlags","Start","advance_by","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","contains","cursor","default","display","eq","eq","eq","eq","find","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_args","hash","insert","into","into","into","into","into","into_iter","is_empty","is_empty","is_end","is_escape","is_long","is_negative_number","is_negative_number","is_short","is_stdio","new","next","next","next_flag","next_os","next_value_os","partial_cmp","partial_cmp","peek","peek_os","remaining","seek","split","split_once","starts_with","strip_prefix","to_long","to_owned","to_owned","to_owned","to_owned","to_owned","to_short","to_value","to_value_os","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_str","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"clap_lex"],[111,"core::result"],[112,"core::cmp"],[113,"core::fmt"],[114,"core::option"],[115,"core::fmt"],[116,"core::hash"],[117,"core::iter::traits::collect"],[118,"std::ffi::os_str"],[119,"core::str::error"],[120,"core::any"]],"d":["Position within <code>RawArgs</code>","Sets the offset to the current position plus the specified …","Sets the offset to the size of this object plus the …","","Command-line Argument","Command-line arguments","Enumeration of possible methods to seek within an I/O …","Walk through short flags within a <code>ParsedArg</code>","Sets the offset to the provided number of bytes.","Move the iterator forward by <code>n</code> short flags","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the given pattern matches a sub-slice of …","Create a cursor for walking the arguments","","Safely print an argument that may contain non-UTF8 content","","","","","Returns the byte index of the first character of this …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","<strong>NOTE:</strong> The argument returned will be the current binary.","","Inject arguments before the <code>RawArgs::next</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Argument is length of 0","No short flags left","Any remaining args?","Does the argument look like an argument escape (<code>--</code>)","Can treat as a long-flag","Does the argument look like a negative number?","Does the short flag look like a number","Can treat as a short-flag","Does the argument look like a stdio argument (<code>-</code>)","Example","Advance the cursor, returning the next <code>ParsedArg</code>","","Advance the iterator, returning the next short flag on …","Advance the cursor, returning a raw argument value.","Advance the iterator, returning everything left as a value","","","Return the next <code>ParsedArg</code>","Return a raw argument value.","Return all remaining raw arguments, advancing the cursor …","Adjust the cursor’s position","An iterator over substrings of this string slice, …","Splits the string on the first occurrence of the specified …","Returns <code>true</code> if the given pattern matches a prefix of this …","Returns a string slice with the prefix removed.","Treat as a long-flag","","","","","","Treat as a short-flag","Treat as a value","Treat as a value","","","","","","","","","","","Converts to a string slice.","","","","",""],"i":[0,8,8,0,0,0,0,0,8,1,5,6,7,1,8,5,6,7,1,8,5,6,7,1,8,5,6,7,1,8,6,7,24,5,5,7,5,6,7,8,24,5,6,7,1,8,5,5,6,7,1,8,5,7,5,5,6,7,1,8,1,7,1,5,7,7,7,1,7,7,5,5,1,1,5,1,6,7,5,5,5,5,24,24,24,24,7,5,6,7,1,8,7,7,7,5,6,7,1,8,5,6,7,1,8,24,5,6,7,1,8],"f":[0,0,0,0,0,0,0,0,0,[[1,2],[[4,[3,2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[6,6],[7,7],[1,1],[8,8],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[6,6],9],[[7,7],9],[[-1,10],11,[]],[5,6],[[],5],[7,[[0,[12]]]],[[5,5],11],[[6,6],11],[[7,7],11],[[8,8],11],[[-1,10],[[13,[2]]],[]],[[5,14],15],[[6,14],15],[[7,14],15],[[1,14],15],[[8,14],[[4,[3,16]]]],[-1,5,17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],5],[[7,-1],3,18],[[5,6,-1],3,19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,11],[1,11],[[5,6],11],[7,11],[7,11],[7,11],[1,11],[7,11],[7,11],[-1,5,19],[[5,6],[[13,[7]]]],[1,13],[1,[[13,[[4,[20,21]]]]]],[[5,6],[[13,[21]]]],[1,[[13,[21]]]],[[6,6],[[13,[9]]]],[[7,7],[[13,[9]]]],[[5,6],[[13,[7]]]],[[5,6],[[13,[21]]]],[[5,6],[[0,[17]]]],[[5,6,8],3],0,[[-1,10],[[13,[[3,[21,21]]]]],[]],[[-1,10],11,[]],[[-1,10],[[13,[21]]],[]],[7,[[13,[[3,[[4,[10,21]],[13,[21]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,[[13,[1]]]],[7,[[4,[10,21]]]],[7,21],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[10,22]]],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]]],"c":[],"p":[[3,"ShortFlags",0],[15,"usize"],[15,"tuple"],[4,"Result",111],[3,"RawArgs",0],[3,"ArgCursor",0],[3,"ParsedArg",0],[4,"SeekFrom",0],[4,"Ordering",112],[15,"str"],[15,"bool"],[8,"Display",113],[4,"Option",114],[3,"Formatter",113],[6,"Result",113],[3,"Error",113],[8,"Iterator",115],[8,"Hasher",116],[8,"IntoIterator",117],[15,"char"],[3,"OsStr",118],[3,"Utf8Error",119],[3,"TypeId",120],[8,"OsStrExt",0]],"b":[]},\
"colorchoice":{"doc":"Global override of color control","t":"NNNENLLLLLLLLLLLLL","n":["Always","AlwaysAnsi","Auto","ColorChoice","Never","borrow","borrow_mut","clone","default","eq","fmt","from","global","into","try_from","try_into","type_id","write_global"],"q":[[0,"colorchoice"],[18,"core::fmt"],[19,"core::fmt"],[20,"core::any"]],"d":["","","","Selection for overriding color output","","","","","","","","Returns the argument unchanged.","Get the current <code>ColorChoice</code> state","Calls <code>U::from(self)</code>.","","","","Override the detected <code>ColorChoice</code>"],"i":[1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[],1],[[1,1],2],[[1,3],4],[-1,-1,[]],[[],1],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[1,7]],"c":[],"p":[[4,"ColorChoice",0],[15,"bool"],[3,"Formatter",18],[6,"Result",18],[4,"Result",19],[3,"TypeId",20],[15,"tuple"]],"b":[]},\
"constant_time_eq":{"doc":"","t":"FFFFF","n":["constant_time_eq","constant_time_eq_16","constant_time_eq_32","constant_time_eq_64","constant_time_eq_n"],"q":[[0,"constant_time_eq"]],"d":["Compares two equal-sized byte strings in constant time.","Compares two 128-bit byte strings in constant time.","Compares two 256-bit byte strings in constant time.","Compares two 512-bit byte strings in constant time.","Compares two fixed-size byte strings in constant time."],"i":[0,0,0,0,0],"f":[[[[2,[1]],[2,[1]]],3],[[[4,[1]],[4,[1]]],3],[[[4,[1]],[4,[1]]],3],[[[4,[1]],[4,[1]]],3],[[[4,[1]],[4,[1]]],3]],"c":[],"p":[[15,"u8"],[15,"slice"],[15,"bool"],[15,"array"]],"b":[]},\
"crossbeam":{"doc":"Tools for concurrent programming.","t":"AADIQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLSDDGIDDQDDIIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLKLLLLLLLLLKLLLLLLLLLKLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLMMLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["atomic","utils","AtomicCell","AtomicConsume","Val","as_ptr","borrow","borrow_mut","compare_and_swap","compare_exchange","default","deref","deref_mut","drop","drop","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_update","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fmt","from","from","from","init","into","into_inner","is_lock_free","load","load_consume","new","store","swap","take","try_from","try_into","type_id","ALIGN","Atomic","Collector","CompareAndSetError","CompareAndSetOrdering","CompareExchangeError","Guard","Init","LocalHandle","Owned","Pointable","Pointer","Shared","as_mut","as_raw","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","collector","collector","compare_and_set","compare_and_set_weak","compare_exchange","compare_exchange_weak","current","current","default","default","default","defer","defer_destroy","defer_unchecked","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","failure","fetch_and","fetch_or","fetch_update","fetch_xor","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw","from_usize","from_usize","from_usize","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_box","into_owned","into_owned","into_shared","into_usize","into_usize","into_usize","is_null","is_pinned","load","load_consume","new","new","new","new","new","null","null","partial_cmp","pin","register","repin","repin_after","store","success","swap","tag","tag","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_owned","try_into_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unprotected","with_tag","with_tag","ArrayQueue","SegQueue","borrow","borrow","borrow_mut","borrow_mut","capacity","default","deref","deref","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","force_push","from","from","init","init","into","into","into_iter","into_iter","is_empty","is_empty","is_full","len","len","new","new","pop","pop","push","push","try_from","try_from","try_into","try_into","type_id","type_id","Backoff","CachePadded","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","from","from","from","from","hash","init","init","into","into","into_inner","is_completed","new","new","reset","snooze","spin","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"crossbeam"],[2,"crossbeam::atomic"],[133,"crossbeam::epoch"],[333,"crossbeam::queue"],[377,"crossbeam::utils"],[421,"core::marker"],[422,"core::cmp"],[423,"core::result"],[424,"core::default"],[425,"core::ops::function"],[426,"core::fmt"],[427,"core::fmt"],[428,"core::marker"],[429,"core::clone"],[430,"core::cmp"],[431,"core::ops::function"],[432,"core::cmp"],[433,"core::hash"]],"d":["Atomic types.","Miscellaneous utilities.","A thread-safe mutable memory location.","Trait which allows reading from primitive atomic types …","Type returned by <code>load_consume</code>.","Returns a raw pointer to the underlying data in this …","","","If the current value equals <code>current</code>, stores <code>new</code> into the …","If the current value equals <code>current</code>, stores <code>new</code> into the …","","","","","","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies logical “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies logical “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies logical “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Fetches the value, and applies a function to it that …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies logical “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Consumes the atomic and returns the contained value.","Returns <code>true</code> if operations on values of this type are …","Loads a value from the atomic cell.","Loads a value from the atomic using a “consume” memory …","Creates a new atomic cell initialized with <code>val</code>.","Stores <code>val</code> into the atomic cell.","Stores <code>val</code> into the atomic cell and returns the previous …","Takes the value of the atomic cell, leaving …","","","","The alignment of pointer.","An atomic pointer that can be safely shared between …","An epoch-based garbage collector.","The error returned on failed compare-and-set operation.","Memory orderings for compare-and-set operations.","The error returned on failed compare-and-swap operation.","A guard that keeps the current thread pinned.","The type for initializers.","A handle to a garbage collector.","An owned heap-allocated object.","Types that are pointed to by a single word.","A trait for either <code>Owned</code> or <code>Shared</code> pointers.","A pointer to an object protected by the epoch GC.","","Converts the pointer to a raw pointer (without the tag).","","Converts the pointer to a reference.","","","","","","","","","","","","","","","","","Returns a copy of the atomic value.","","","Creates another reference to the same garbage collector.","","","","","","Returns the <code>Collector</code> associated with this handle.","Returns the <code>Collector</code> associated with this guard.","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","The value in the atomic pointer at the time of the failed …","The value in the atomic pointer at the time of the failed …","","","","Stores a function so that it can be executed at some point …","Stores a destructor for an object so that it can be …","Stores a function so that it can be executed at some point …","Dereferences the given pointer.","","","","","","Dereferences the pointer.","","","","Mutably dereferences the given pointer.","","","","","","Dereferences the pointer.","","","","Drops the object pointed to by the given pointer.","","","","","","","","","","","","Checks if both handles point to the same collector.","The ordering of the operation when it fails.","Bitwise “and” with the current tag.","Bitwise “or” with the current tag.","Fetches the pointer, and then applies a function to it …","Bitwise “xor” with the current tag.","Clears up the thread-local cache of deferred functions by …","","","","","","","","","","Returns the argument unchanged.","","Returns a new atomic pointer pointing to <code>owned</code>.","Returns a new atomic pointer pointing to <code>ptr</code>.","","","Returns the argument unchanged.","Returns a new atomic pointer pointing to <code>raw</code>.","Returns a new owned pointer pointing to <code>b</code>.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a new pointer pointing to <code>raw</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a new owned pointer pointing to <code>raw</code>.","Returns a new pointer pointing to the tagged pointer <code>data</code>.","Returns a new pointer pointing to the tagged pointer <code>data</code>.","","Initializes a with the given initializer.","","Allocates <code>value</code> on the heap and returns a new atomic …","","Allocates <code>value</code> on the heap and returns a new owned …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the owned pointer into a <code>Box</code>.","Takes ownership of the pointee.","Takes ownership of the pointee.","Converts the owned pointer into a <code>Shared</code>.","Returns the machine representation of the pointer.","","","Returns <code>true</code> if the pointer is null.","Returns <code>true</code> if the handle is pinned.","Loads a <code>Shared</code> from the atomic pointer.","Loads a <code>Shared</code> from the atomic pointer using a “consume…","Allocates <code>value</code> on the heap and returns a new atomic …","Allocates <code>value</code> on the heap and returns a new owned …","Creates a new collector.","The new value, which the operation failed to store.","The new value, which the operation failed to store.","Returns a new null atomic pointer.","Returns a new null pointer.","","Pins the handle.","Registers a new handle for the collector.","Unpins and then immediately re-pins the thread.","Temporarily unpins the thread, executes the given function …","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer.","The ordering of the operation when it succeeds.","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer, …","Returns the tag stored within the pointer.","Returns the tag stored within the pointer.","","","","","","","","","","","","","","","","","","","Takes ownership of the pointee if it is non-null.","Takes ownership of the pointee if it is not null.","","","","","","","","Returns a reference to a dummy guard that allows …","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …","A bounded multi-producer multi-consumer queue.","An unbounded multi-producer multi-consumer queue.","","","","","Returns the capacity of the queue.","","","","","","","","","","","","Pushes an element into the queue, replacing the oldest …","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is full.","Returns the number of elements in the queue.","Returns the number of elements in the queue.","Creates a new bounded queue with the given capacity.","Creates a new unbounded queue.","Attempts to pop an element from the queue.","Pops an element from the queue.","Attempts to push an element into the queue.","Pushes an element into the queue.","","","","","","","Performs exponential backoff in spin loops.","Pads and aligns a value to the length of a cache line.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the inner value.","Returns <code>true</code> if exponential backoff has completed and …","Creates a new <code>Backoff</code>.","Pads and aligns a value to the length of a cache line.","Resets the <code>Backoff</code>.","Backs off in a blocking loop.","Backs off in a lock-free loop.","","","","","","",""],"i":[0,0,0,0,51,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,51,1,1,1,1,1,1,1,27,0,0,0,0,0,0,27,0,0,0,0,0,26,29,26,29,37,31,26,26,29,33,35,36,37,31,26,26,29,33,35,36,31,26,29,33,31,26,29,33,29,35,36,31,31,31,31,52,37,31,29,33,36,36,36,27,37,31,26,26,29,29,33,35,36,27,37,31,26,26,29,29,33,35,36,27,37,31,26,26,29,33,35,35,36,36,29,33,39,31,31,31,31,36,37,31,31,26,29,29,33,35,36,37,31,31,31,31,31,31,31,26,26,26,26,29,29,33,35,36,26,38,26,29,27,37,31,31,26,26,29,33,35,36,37,31,26,29,33,35,36,26,31,29,26,38,26,29,29,35,31,31,31,26,33,52,37,31,29,29,35,33,36,36,31,39,31,26,29,31,26,29,33,37,31,26,29,33,35,36,37,31,26,29,33,35,36,31,29,37,31,26,29,33,35,36,0,26,29,0,0,44,45,44,45,44,45,44,45,44,45,44,44,45,45,44,45,44,44,45,44,45,44,45,44,45,44,45,44,44,45,44,45,44,45,44,45,44,45,44,45,44,45,0,0,47,46,47,46,46,46,47,46,47,46,46,47,46,46,47,46,46,47,46,47,46,46,46,46,47,46,47,46,46,47,47,46,47,47,47,46,47,46,47,46,47,46],"f":[0,0,0,0,0,[[[1,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]],-1,-1],-1,[2,3]],[[[1,[-1]],-1,-1],[[4,[-1,-1]]],[2,3]],[[],[[1,[-1]]],5],[6,-1,[]],[6,-1,[]],[[[1,[-1]]],7,[]],[6,7],[[[1,[8]],8],8],[[[1,[9]],9],9],[[[1,[10]],10],10],[[[1,[11]],11],11],[[[1,[12]],12],12],[[[1,[13]],13],13],[[[1,[14]],14],14],[[[1,[15]],15],15],[[[1,[16]],16],16],[[[1,[17]],17],17],[[[1,[6]],6],6],[[[1,[18]],18],18],[[[1,[8]],8],8],[[[1,[10]],10],10],[[[1,[15]],15],15],[[[1,[9]],9],9],[[[1,[11]],11],11],[[[1,[18]],18],18],[[[1,[6]],6],6],[[[1,[13]],13],13],[[[1,[12]],12],12],[[[1,[17]],17],17],[[[1,[14]],14],14],[[[1,[19]],19],19],[[[1,[16]],16],16],[[[1,[16]],16],16],[[[1,[14]],14],14],[[[1,[10]],10],10],[[[1,[12]],12],12],[[[1,[17]],17],17],[[[1,[8]],8],8],[[[1,[13]],13],13],[[[1,[11]],11],11],[[[1,[9]],9],9],[[[1,[18]],18],18],[[[1,[6]],6],6],[[[1,[15]],15],15],[[[1,[14]],14],14],[[[1,[12]],12],12],[[[1,[9]],9],9],[[[1,[8]],8],8],[[[1,[15]],15],15],[[[1,[11]],11],11],[[[1,[13]],13],13],[[[1,[18]],18],18],[[[1,[6]],6],6],[[[1,[10]],10],10],[[[1,[16]],16],16],[[[1,[17]],17],17],[[[1,[10]],10],10],[[[1,[17]],17],17],[[[1,[19]],19],19],[[[1,[18]],18],18],[[[1,[16]],16],16],[[[1,[6]],6],6],[[[1,[14]],14],14],[[[1,[11]],11],11],[[[1,[9]],9],9],[[[1,[13]],13],13],[[[1,[15]],15],15],[[[1,[12]],12],12],[[[1,[8]],8],8],[[[1,[11]],11],11],[[[1,[13]],13],13],[[[1,[9]],9],9],[[[1,[12]],12],12],[[[1,[8]],8],8],[[[1,[18]],18],18],[[[1,[16]],16],16],[[[1,[6]],6],6],[[[1,[10]],10],10],[[[1,[15]],15],15],[[[1,[14]],14],14],[[[1,[19]],19],19],[[[1,[17]],17],17],[[[1,[9]],9],9],[[[1,[6]],6],6],[[[1,[10]],10],10],[[[1,[12]],12],12],[[[1,[17]],17],17],[[[1,[8]],8],8],[[[1,[16]],16],16],[[[1,[15]],15],15],[[[1,[13]],13],13],[[[1,[11]],11],11],[[[1,[18]],18],18],[[[1,[14]],14],14],[[[1,[-1]],-2],[[4,[-1,-1]]],[2,3],20],[[[1,[16]],16],16],[[[1,[13]],13],13],[[[1,[10]],10],10],[[[1,[15]],15],15],[[[1,[18]],18],18],[[[1,[8]],8],8],[[[1,[11]],11],11],[[[1,[6]],6],6],[[[1,[19]],19],19],[[[1,[14]],14],14],[[[1,[17]],17],17],[[[1,[9]],9],9],[[[1,[12]],12],12],[[[1,[-1]],21],[[4,[7,22]]],[2,23]],[-1,-1,[]],[24,-1,[]],[-1,[[1,[-1]]],[]],[[],6],[-1,-2,[],[]],[[[1,[-1]]],-1,[]],[[],19],[[[1,[-1]]],-1,2],[-1,[],[]],[-1,[[1,[-1]]],[]],[[[1,[-1]],-1],7,[]],[[[1,[-1]],-1],-1,[]],[[[1,[-1]]],-1,5],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,25,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[26,[-1]]],-1,[27,28]],[[[29,[-1]]],[],[]],[[[26,[-1]]],-1,[27,28]],[[[29,[-1]]],[[30,[-1]]],[27,28]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],-1,[27,28]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],-1,[27,28]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[31,[-1]]],[[31,[-1]]],[27,28]],[[[26,[-1]]],[[26,[-1]]],32],[[[29,[-1]]],[[29,[-1]]],[27,28]],[33,33],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[[29,[-1]],[29,[-1]]],34,[27,28]],[35,33],[36,[[30,[33]]]],[[[31,[-1]],[29,[-1]],-2,-3,36],[[4,[[29,[-1]],[37,[-1,-2]]]]],[27,28],[[38,[-1]]],39],[[[31,[-1]],[29,[-1]],-2,-3,36],[[4,[[29,[-1]],[37,[-1,-2]]]]],[27,28],[[38,[-1]]],39],[[[31,[-1]],[29,[-1]],-2,40,40,36],[[4,[[29,[-1]],[37,[-1,-2]]]]],[27,28],[[38,[-1]]]],[[[31,[-1]],[29,[-1]],-2,40,40,36],[[4,[[29,[-1]],[37,[-1,-2]]]]],[27,28],[[38,[-1]]]],0,0,[[],[[31,[-1]]],[27,28]],[[],[[29,[-1]]],[27,28]],[[],33],[[36,-1],7,[41,42]],[[36,[29,[-1]]],7,[]],[[36,-1],7,41],[6,-1,[]],[6,-1,[]],[6,-1,[]],[[[26,[-1]]],-1,[27,28]],[6,-1,[]],[6,-1,[]],[[[29,[-1]]],-1,[27,28]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[[[26,[-1]]],-1,[27,28]],[6,-1,[]],[[[29,[-1]]],-1,[27,28]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,7],[6,7],[6,7],[6,7],[[[26,[-1]]],7,[27,28]],[6,7],[6,7],[6,7],[35,7],[6,7],[36,7],[[[29,[-1]],[29,[-1]]],19,[27,28]],[[33,33],19],[-1,40,[]],[[[31,[-1]],6,40,36],[[29,[-1]]],[27,28]],[[[31,[-1]],6,40,36],[[29,[-1]]],[27,28]],[[[31,[-1]],40,40,36,-2],[[4,[[29,[-1]],[29,[-1]]]]],[27,28],20],[[[31,[-1]],6,40,36],[[29,[-1]]],[27,28]],[36,7],[[[37,[-1,-2]],21],[[4,[7,22]]],[],[[38,[-1]],23]],[[[31,[-1]],21],[[4,[7,22]]],[27,28]],[[[31,[-1]],21],[[4,[7,22]]],[27,28]],[[[26,[-1]],21],[[4,[7,22]]],[27,28]],[[[29,[-1]],21],[[4,[7,22]]],[27,28]],[[[29,[-1]],21],[[4,[7,22]]],[27,28]],[[33,21],[[4,[7,22]]]],[[35,21],[[4,[7,22]]]],[[36,21],[[4,[7,22]]]],[-1,-1,[]],[-1,[[31,[-1]]],[]],[[[26,[-1]]],[[31,[-1]]],[27,28]],[[[29,[-1]]],[[31,[-1]]],[27,28]],[24,-1,[]],[[[43,[-1]]],[[31,[-1]]],[]],[-1,-1,[]],[[],[[31,[-1]]],[]],[[[43,[-1]]],[[26,[-1]]],[]],[-1,-1,[]],[24,-1,[]],[-1,[[26,[-1]]],[]],[-1,-1,[]],[[],[[29,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[26,[-1]]],[]],[6,-1,[]],[6,[[26,[-1]]],[27,28]],[6,[[29,[-1]]],[27,28]],[[],6],[[],6],[[],[[31,[-1]]],[27,28]],[[],6],[[],[[26,[-1]]],[27,28]],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],[[43,[-1]]],[]],[[[31,[-1]]],[[26,[-1]]],[27,28]],[[[29,[-1]]],[[26,[-1]]],[27,28]],[[[26,[-1]],36],[[29,[-1]]],[27,28]],[-1,6,[]],[[[26,[-1]]],6,[27,28]],[[[29,[-1]]],6,[27,28]],[[[29,[-1]]],19,[27,28]],[35,19],[[[31,[-1]],40,36],[[29,[-1]]],[27,28]],[[[31,[-1]],36],[[29,[-1]]],[27,28]],[-1,[[31,[-1]]],[]],[-1,[[26,[-1]]],[]],[[],33],0,0,[[],[[31,[-1]]],[27,28]],[[],[[29,[-1]]],[27,28]],[[[29,[-1]],[29,[-1]]],[[30,[34]]],[27,28]],[35,36],[33,35],[36,7],[[36,-1],-2,41,[]],[[[31,[-1]],-2,40],7,[27,28],[[38,[-1]]]],[-1,40,[]],[[[31,[-1]],-2,40,36],[[29,[-1]]],[27,28],[[38,[-1]]]],[[[26,[-1]]],6,[27,28]],[[[29,[-1]]],6,[27,28]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[31,[-1]]],[[30,[[26,[-1]]]]],[27,28]],[[[29,[-1]]],[[30,[[26,[-1]]]]],[27,28]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[],36],[[[26,[-1]],6],[[26,[-1]]],[27,28]],[[[29,[-1]],6],[[29,[-1]]],[27,28]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[-1]]],6,[]],[[],[[45,[-1]]],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,7],[[[44,[-1]]],7,[]],[6,7],[[[45,[-1]]],7,[]],[[[44,[-1]],21],[[4,[7,22]]],[]],[[[45,[-1]],21],[[4,[7,22]]],[]],[[[44,[-1]],-1],[[30,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[-1]]],[],[]],[[[45,[-1]]],[],[]],[[[44,[-1]]],19,[]],[[[45,[-1]]],19,[]],[[[44,[-1]]],19,[]],[[[44,[-1]]],6,[]],[[[45,[-1]]],6,[]],[6,[[44,[-1]]],[]],[[],[[45,[-1]]],[]],[[[44,[-1]]],[[30,[-1]]],[]],[[[45,[-1]]],[[30,[-1]]],[]],[[[44,[-1]],-1],[[4,[7,-1]]],[]],[[[45,[-1]],-1],7,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1]]],[[46,[-1]]],32],[[-1,-2],7,[],[]],[[],47],[[],[[46,[-1]]],5],[6,-1,[]],[6,-1,[]],[[[46,[-1]]],-1,[]],[6,-1,[]],[[[46,[-1]]],-1,[]],[6,-1,[]],[6,7],[6,7],[[[46,[-1]],[46,[-1]]],19,48],[[47,21],[[4,[7,22]]]],[[[46,[-1]],21],[[4,[7,22]]],23],[-1,-1,[]],[24,-1,[]],[-1,-1,[]],[-1,[[46,[-1]]],[]],[[[46,[-1]],-2],7,49,50],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1]]],-1,[]],[47,19],[[],47],[-1,[[46,[-1]]],[]],[47,7],[47,7],[47,7],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,25,[]],[-1,25,[]]],"c":[8,136,137,177,178,222,299],"p":[[3,"AtomicCell",2],[8,"Copy",421],[8,"Eq",422],[4,"Result",423],[8,"Default",424],[15,"usize"],[15,"tuple"],[15,"u8"],[15,"u64"],[15,"isize"],[15,"i8"],[15,"i128"],[15,"i64"],[15,"u16"],[15,"u128"],[15,"i16"],[15,"u32"],[15,"i32"],[15,"bool"],[8,"FnMut",425],[3,"Formatter",426],[3,"Error",426],[8,"Debug",426],[15,"never"],[3,"TypeId",427],[3,"Owned",133],[8,"Pointable",133],[8,"Sized",421],[3,"Shared",133],[4,"Option",428],[3,"Atomic",133],[8,"Clone",429],[3,"Collector",133],[4,"Ordering",422],[3,"LocalHandle",133],[3,"Guard",133],[3,"CompareExchangeError",133],[8,"Pointer",133],[8,"CompareAndSetOrdering",133],[4,"Ordering",430],[8,"FnOnce",425],[8,"Send",421],[3,"Box",431],[3,"ArrayQueue",333],[3,"SegQueue",333],[3,"CachePadded",377],[3,"Backoff",377],[8,"PartialEq",422],[8,"Hash",432],[8,"Hasher",432],[8,"AtomicConsume",2],[6,"CompareAndSetError",133]],"b":[[15,"impl-AtomicCell%3Cu8%3E"],[16,"impl-AtomicCell%3Cu64%3E"],[17,"impl-AtomicCell%3Cisize%3E"],[18,"impl-AtomicCell%3Ci8%3E"],[19,"impl-AtomicCell%3Ci128%3E"],[20,"impl-AtomicCell%3Ci64%3E"],[21,"impl-AtomicCell%3Cu16%3E"],[22,"impl-AtomicCell%3Cu128%3E"],[23,"impl-AtomicCell%3Ci16%3E"],[24,"impl-AtomicCell%3Cu32%3E"],[25,"impl-AtomicCell%3Cusize%3E"],[26,"impl-AtomicCell%3Ci32%3E"],[27,"impl-AtomicCell%3Cu8%3E"],[28,"impl-AtomicCell%3Cisize%3E"],[29,"impl-AtomicCell%3Cu128%3E"],[30,"impl-AtomicCell%3Cu64%3E"],[31,"impl-AtomicCell%3Ci8%3E"],[32,"impl-AtomicCell%3Ci32%3E"],[33,"impl-AtomicCell%3Cusize%3E"],[34,"impl-AtomicCell%3Ci64%3E"],[35,"impl-AtomicCell%3Ci128%3E"],[36,"impl-AtomicCell%3Cu32%3E"],[37,"impl-AtomicCell%3Cu16%3E"],[38,"impl-AtomicCell%3Cbool%3E"],[39,"impl-AtomicCell%3Ci16%3E"],[40,"impl-AtomicCell%3Ci16%3E"],[41,"impl-AtomicCell%3Cu16%3E"],[42,"impl-AtomicCell%3Cisize%3E"],[43,"impl-AtomicCell%3Ci128%3E"],[44,"impl-AtomicCell%3Cu32%3E"],[45,"impl-AtomicCell%3Cu8%3E"],[46,"impl-AtomicCell%3Ci64%3E"],[47,"impl-AtomicCell%3Ci8%3E"],[48,"impl-AtomicCell%3Cu64%3E"],[49,"impl-AtomicCell%3Ci32%3E"],[50,"impl-AtomicCell%3Cusize%3E"],[51,"impl-AtomicCell%3Cu128%3E"],[52,"impl-AtomicCell%3Cu16%3E"],[53,"impl-AtomicCell%3Ci128%3E"],[54,"impl-AtomicCell%3Cu64%3E"],[55,"impl-AtomicCell%3Cu8%3E"],[56,"impl-AtomicCell%3Cu128%3E"],[57,"impl-AtomicCell%3Ci8%3E"],[58,"impl-AtomicCell%3Ci64%3E"],[59,"impl-AtomicCell%3Ci32%3E"],[60,"impl-AtomicCell%3Cusize%3E"],[61,"impl-AtomicCell%3Cisize%3E"],[62,"impl-AtomicCell%3Ci16%3E"],[63,"impl-AtomicCell%3Cu32%3E"],[64,"impl-AtomicCell%3Cisize%3E"],[65,"impl-AtomicCell%3Cu32%3E"],[66,"impl-AtomicCell%3Cbool%3E"],[67,"impl-AtomicCell%3Ci32%3E"],[68,"impl-AtomicCell%3Ci16%3E"],[69,"impl-AtomicCell%3Cusize%3E"],[70,"impl-AtomicCell%3Cu16%3E"],[71,"impl-AtomicCell%3Ci8%3E"],[72,"impl-AtomicCell%3Cu64%3E"],[73,"impl-AtomicCell%3Ci64%3E"],[74,"impl-AtomicCell%3Cu128%3E"],[75,"impl-AtomicCell%3Ci128%3E"],[76,"impl-AtomicCell%3Cu8%3E"],[77,"impl-AtomicCell%3Ci8%3E"],[78,"impl-AtomicCell%3Ci64%3E"],[79,"impl-AtomicCell%3Cu64%3E"],[80,"impl-AtomicCell%3Ci128%3E"],[81,"impl-AtomicCell%3Cu8%3E"],[82,"impl-AtomicCell%3Ci32%3E"],[83,"impl-AtomicCell%3Ci16%3E"],[84,"impl-AtomicCell%3Cusize%3E"],[85,"impl-AtomicCell%3Cisize%3E"],[86,"impl-AtomicCell%3Cu128%3E"],[87,"impl-AtomicCell%3Cu16%3E"],[88,"impl-AtomicCell%3Cbool%3E"],[89,"impl-AtomicCell%3Cu32%3E"],[90,"impl-AtomicCell%3Cu64%3E"],[91,"impl-AtomicCell%3Cusize%3E"],[92,"impl-AtomicCell%3Cisize%3E"],[93,"impl-AtomicCell%3Ci128%3E"],[94,"impl-AtomicCell%3Cu32%3E"],[95,"impl-AtomicCell%3Cu8%3E"],[96,"impl-AtomicCell%3Ci16%3E"],[97,"impl-AtomicCell%3Cu128%3E"],[98,"impl-AtomicCell%3Ci64%3E"],[99,"impl-AtomicCell%3Ci8%3E"],[100,"impl-AtomicCell%3Ci32%3E"],[101,"impl-AtomicCell%3Cu16%3E"],[103,"impl-AtomicCell%3Ci16%3E"],[104,"impl-AtomicCell%3Ci64%3E"],[105,"impl-AtomicCell%3Cisize%3E"],[106,"impl-AtomicCell%3Cu128%3E"],[107,"impl-AtomicCell%3Ci32%3E"],[108,"impl-AtomicCell%3Cu8%3E"],[109,"impl-AtomicCell%3Ci8%3E"],[110,"impl-AtomicCell%3Cusize%3E"],[111,"impl-AtomicCell%3Cbool%3E"],[112,"impl-AtomicCell%3Cu16%3E"],[113,"impl-AtomicCell%3Cu32%3E"],[114,"impl-AtomicCell%3Cu64%3E"],[115,"impl-AtomicCell%3Ci128%3E"],[229,"impl-Debug-for-Atomic%3CT%3E"],[230,"impl-Pointer-for-Atomic%3CT%3E"],[232,"impl-Debug-for-Shared%3C\'_,+T%3E"],[233,"impl-Pointer-for-Shared%3C\'_,+T%3E"],[238,"impl-From%3CT%3E-for-Atomic%3CT%3E"],[239,"impl-From%3COwned%3CT%3E%3E-for-Atomic%3CT%3E"],[240,"impl-From%3CShared%3C\'g,+T%3E%3E-for-Atomic%3CT%3E"],[242,"impl-From%3CBox%3CT%3E%3E-for-Atomic%3CT%3E"],[244,"impl-From%3C*const+T%3E-for-Atomic%3CT%3E"],[245,"impl-From%3CBox%3CT%3E%3E-for-Owned%3CT%3E"],[248,"impl-From%3CT%3E-for-Owned%3CT%3E"]]},\
"crossbeam_epoch":{"doc":"Epoch-based memory reclamation.","t":"SDDGIDDQDDIIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLKLLLLLLLLLKLLLLLLLLLKLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLMMLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLL","n":["ALIGN","Atomic","Collector","CompareAndSetError","CompareAndSetOrdering","CompareExchangeError","Guard","Init","LocalHandle","Owned","Pointable","Pointer","Shared","as_mut","as_raw","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","collector","collector","compare_and_set","compare_and_set_weak","compare_exchange","compare_exchange_weak","current","current","default","default","default","defer","defer_destroy","defer_unchecked","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","failure","fetch_and","fetch_or","fetch_update","fetch_xor","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw","from_usize","from_usize","from_usize","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_box","into_owned","into_owned","into_shared","into_usize","into_usize","into_usize","is_null","is_pinned","load","load_consume","new","new","new","new","new","null","null","partial_cmp","pin","register","repin","repin_after","store","success","swap","tag","tag","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_owned","try_into_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unprotected","with_tag","with_tag"],"q":[[0,"crossbeam_epoch"],[200,"core::marker"],[201,"core::option"],[202,"core::clone"],[203,"core::cmp"],[204,"core::result"],[205,"core::sync::atomic"],[206,"core::ops::function"],[207,"core::marker"],[208,"core::fmt"],[209,"core::any"]],"d":["The alignment of pointer.","An atomic pointer that can be safely shared between …","An epoch-based garbage collector.","The error returned on failed compare-and-set operation.","Memory orderings for compare-and-set operations.","The error returned on failed compare-and-swap operation.","A guard that keeps the current thread pinned.","The type for initializers.","A handle to a garbage collector.","An owned heap-allocated object.","Types that are pointed to by a single word.","A trait for either <code>Owned</code> or <code>Shared</code> pointers.","A pointer to an object protected by the epoch GC.","","Converts the pointer to a raw pointer (without the tag).","","Converts the pointer to a reference.","","","","","","","","","","","","","","","","","Returns a copy of the atomic value.","","","Creates another reference to the same garbage collector.","","","","","","Returns the <code>Collector</code> associated with this handle.","Returns the <code>Collector</code> associated with this guard.","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","The value in the atomic pointer at the time of the failed …","The value in the atomic pointer at the time of the failed …","","","","Stores a function so that it can be executed at some point …","Stores a destructor for an object so that it can be …","Stores a function so that it can be executed at some point …","Dereferences the given pointer.","","","","","Dereferences the pointer.","","","","","Mutably dereferences the given pointer.","","","","","","Dereferences the pointer.","","","","Drops the object pointed to by the given pointer.","","","","","","","","","","","","Checks if both handles point to the same collector.","The ordering of the operation when it fails.","Bitwise “and” with the current tag.","Bitwise “or” with the current tag.","Fetches the pointer, and then applies a function to it …","Bitwise “xor” with the current tag.","Clears up the thread-local cache of deferred functions by …","","","","","","","","","","Returns the argument unchanged.","Returns a new atomic pointer pointing to <code>owned</code>.","","Returns a new atomic pointer pointing to <code>raw</code>.","Returns a new atomic pointer pointing to <code>ptr</code>.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a new owned pointer pointing to <code>b</code>.","Returns the argument unchanged.","Returns a new pointer pointing to <code>raw</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a new owned pointer pointing to <code>raw</code>.","Returns a new pointer pointing to the tagged pointer <code>data</code>.","Returns a new pointer pointing to the tagged pointer <code>data</code>.","","Initializes a with the given initializer.","","","Allocates <code>value</code> on the heap and returns a new atomic …","","Allocates <code>value</code> on the heap and returns a new owned …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the owned pointer into a <code>Box</code>.","Takes ownership of the pointee.","Takes ownership of the pointee.","Converts the owned pointer into a <code>Shared</code>.","Returns the machine representation of the pointer.","","","Returns <code>true</code> if the pointer is null.","Returns <code>true</code> if the handle is pinned.","Loads a <code>Shared</code> from the atomic pointer.","Loads a <code>Shared</code> from the atomic pointer using a “consume…","Allocates <code>value</code> on the heap and returns a new atomic …","Allocates <code>value</code> on the heap and returns a new owned …","Creates a new collector.","The new value, which the operation failed to store.","The new value, which the operation failed to store.","Returns a new null atomic pointer.","Returns a new null pointer.","","Pins the handle.","Registers a new handle for the collector.","Unpins and then immediately re-pins the thread.","Temporarily unpins the thread, executes the given function …","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer.","The ordering of the operation when it succeeds.","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer, …","Returns the tag stored within the pointer.","Returns the tag stored within the pointer.","","","","","","","","","","","","","","","","","","","Takes ownership of the pointee if it is non-null.","Takes ownership of the pointee if it is not null.","","","","","","","","Returns a reference to a dummy guard that allows …","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …"],"i":[3,0,0,0,0,0,0,3,0,0,0,0,0,1,4,1,4,18,6,1,1,4,8,11,12,18,6,1,1,4,8,11,12,6,1,4,8,6,1,4,8,4,11,12,6,6,6,6,13,18,6,4,8,12,12,12,3,18,6,1,1,4,4,8,11,12,3,18,6,1,1,4,4,8,11,12,3,18,6,1,1,4,8,11,11,12,12,4,8,16,6,6,6,6,12,18,6,6,1,4,4,8,11,12,18,6,6,6,6,6,6,6,1,1,1,1,4,4,8,11,12,1,15,1,4,3,18,6,6,1,1,4,8,11,12,18,6,1,4,8,11,12,1,6,4,1,15,1,4,4,11,6,6,6,1,8,13,18,6,4,4,11,8,12,12,6,16,6,1,4,6,1,4,8,18,6,1,4,8,11,12,18,6,1,4,8,11,12,6,4,18,6,1,4,8,11,12,0,1,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]]],-1,[2,3]],[[[4,[-1]]],[],[]],[[[1,[-1]]],-1,[2,3]],[[[4,[-1]]],[[5,[-1]]],[2,3]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],-1,[2,3]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],-1,[2,3]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],[[6,[-1]]],[2,3]],[[[1,[-1]]],[[1,[-1]]],7],[[[4,[-1]]],[[4,[-1]]],[2,3]],[8,8],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[[4,[-1]],[4,[-1]]],10,[2,3]],[11,8],[12,[[5,[8]]]],[[[6,[-1]],[4,[-1]],-2,-3,12],[[14,[[4,[-1]],[13,[-1,-2]]]]],[2,3],[[15,[-1]]],16],[[[6,[-1]],[4,[-1]],-2,-3,12],[[14,[[4,[-1]],[13,[-1,-2]]]]],[2,3],[[15,[-1]]],16],[[[6,[-1]],[4,[-1]],-2,17,17,12],[[14,[[4,[-1]],[18,[-1,-2]]]]],[2,3],[[15,[-1]]]],[[[6,[-1]],[4,[-1]],-2,17,17,12],[[14,[[4,[-1]],[18,[-1,-2]]]]],[2,3],[[15,[-1]]]],0,0,[[],[[6,[-1]]],[2,3]],[[],[[4,[-1]]],[2,3]],[[],8],[[12,-1],9,[19,20]],[[12,[4,[-1]]],9,[]],[[12,-1],9,19],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[[[1,[-1]]],-1,[2,3]],[[[4,[-1]]],-1,[2,3]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[[[1,[-1]]],-1,[2,3]],[21,-1,[]],[[[4,[-1]]],-1,[2,3]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,9],[21,9],[21,9],[[[1,[-1]]],9,[2,3]],[21,9],[21,9],[21,9],[21,9],[11,9],[12,9],[21,9],[[[4,[-1]],[4,[-1]]],22,[2,3]],[[8,8],22],[-1,17,[]],[[[6,[-1]],21,17,12],[[4,[-1]]],[2,3]],[[[6,[-1]],21,17,12],[[4,[-1]]],[2,3]],[[[6,[-1]],17,17,12,-2],[[14,[[4,[-1]],[4,[-1]]]]],[2,3],23],[[[6,[-1]],21,17,12],[[4,[-1]]],[2,3]],[12,9],[[[18,[-1,-2]],24],25,[],[[15,[-1]],26]],[[[6,[-1]],24],25,[2,3]],[[[6,[-1]],24],25,[2,3]],[[[1,[-1]],24],25,[2,3]],[[[4,[-1]],24],25,[2,3]],[[[4,[-1]],24],25,[2,3]],[[8,24],25],[[11,24],25],[[12,24],25],[-1,-1,[]],[[[1,[-1]]],[[6,[-1]]],[2,3]],[[[27,[-1]]],[[6,[-1]]],[]],[[],[[6,[-1]]],[]],[[[4,[-1]]],[[6,[-1]]],[2,3]],[-1,[[6,[-1]]],[]],[28,-1,[]],[-1,-1,[]],[-1,[[1,[-1]]],[]],[28,-1,[]],[-1,-1,[]],[[[27,[-1]]],[[1,[-1]]],[]],[-1,-1,[]],[[],[[4,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[1,[-1]]],[]],[21,-1,[]],[21,[[1,[-1]]],[2,3]],[21,[[4,[-1]]],[2,3]],[[],21],[[],21],[[],21],[[],[[6,[-1]]],[2,3]],[[],21],[[],[[1,[-1]]],[2,3]],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[27,[-1]]],[]],[[[6,[-1]]],[[1,[-1]]],[2,3]],[[[4,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],12],[[4,[-1]]],[2,3]],[-1,21,[]],[[[1,[-1]]],21,[2,3]],[[[4,[-1]]],21,[2,3]],[[[4,[-1]]],22,[2,3]],[11,22],[[[6,[-1]],17,12],[[4,[-1]]],[2,3]],[[[6,[-1]],12],[[4,[-1]]],[2,3]],[-1,[[6,[-1]]],[]],[-1,[[1,[-1]]],[]],[[],8],0,0,[[],[[6,[-1]]],[2,3]],[[],[[4,[-1]]],[2,3]],[[[4,[-1]],[4,[-1]]],[[5,[10]]],[2,3]],[11,12],[8,11],[12,9],[[12,-1],-2,19,[]],[[[6,[-1]],-2,17],9,[2,3],[[15,[-1]]]],[-1,17,[]],[[[6,[-1]],-2,17,12],[[4,[-1]]],[2,3],[[15,[-1]]]],[[[1,[-1]]],21,[2,3]],[[[4,[-1]]],21,[2,3]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[[[6,[-1]]],[[5,[[1,[-1]]]]],[2,3]],[[[4,[-1]]],[[5,[[1,[-1]]]]],[2,3]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[[],12],[[[1,[-1]],21],[[1,[-1]]],[2,3]],[[[4,[-1]],21],[[4,[-1]]],[2,3]]],"c":[3,4,44,45,89,166],"p":[[3,"Owned",0],[8,"Sized",200],[8,"Pointable",0],[3,"Shared",0],[4,"Option",201],[3,"Atomic",0],[8,"Clone",202],[3,"Collector",0],[15,"tuple"],[4,"Ordering",203],[3,"LocalHandle",0],[3,"Guard",0],[6,"CompareAndSetError",0],[4,"Result",204],[8,"Pointer",0],[8,"CompareAndSetOrdering",0],[4,"Ordering",205],[3,"CompareExchangeError",0],[8,"FnOnce",206],[8,"Send",200],[15,"usize"],[15,"bool"],[8,"FnMut",206],[3,"Formatter",207],[6,"Result",207],[8,"Debug",207],[3,"Box",208],[15,"never"],[3,"TypeId",209]],"b":[[96,"impl-Debug-for-Atomic%3CT%3E"],[97,"impl-Pointer-for-Atomic%3CT%3E"],[99,"impl-Pointer-for-Shared%3C\'_,+T%3E"],[100,"impl-Debug-for-Shared%3C\'_,+T%3E"],[105,"impl-From%3COwned%3CT%3E%3E-for-Atomic%3CT%3E"],[106,"impl-From%3CBox%3CT%3E%3E-for-Atomic%3CT%3E"],[107,"impl-From%3C*const+T%3E-for-Atomic%3CT%3E"],[108,"impl-From%3CShared%3C\'g,+T%3E%3E-for-Atomic%3CT%3E"],[109,"impl-From%3CT%3E-for-Atomic%3CT%3E"],[112,"impl-From%3CT%3E-for-Owned%3CT%3E"],[115,"impl-From%3CBox%3CT%3E%3E-for-Owned%3CT%3E"]]},\
"crossbeam_queue":{"doc":"Concurrent queues.","t":"DDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ArrayQueue","SegQueue","borrow","borrow","borrow_mut","borrow_mut","capacity","default","drop","drop","fmt","fmt","force_push","from","from","into","into","into_iter","into_iter","is_empty","is_empty","is_full","len","len","new","new","pop","pop","push","push","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"crossbeam_queue"],[36,"core::fmt"],[37,"core::fmt"],[38,"core::result"],[39,"core::any"]],"d":["A bounded multi-producer multi-consumer queue.","An unbounded multi-producer multi-consumer queue.","","","","","Returns the capacity of the queue.","","","","","","Pushes an element into the queue, replacing the oldest …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is full.","Returns the number of elements in the queue.","Returns the number of elements in the queue.","Creates a new bounded queue with the given capacity.","Creates a new unbounded queue.","Attempts to pop an element from the queue.","Pops an element from the queue.","Attempts to push an element into the queue.","Pushes an element into the queue.","","","","","",""],"i":[0,0,1,3,1,3,1,3,1,3,1,3,1,1,3,1,3,1,3,1,3,1,1,3,1,3,1,3,1,3,1,3,1,3,1,3],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],2,[]],[[],[[3,[-1]]],[]],[[[1,[-1]]],4,[]],[[[3,[-1]]],4,[]],[[[1,[-1]],5],6,[]],[[[3,[-1]],5],6,[]],[[[1,[-1]],-1],[[7,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[],[]],[[[3,[-1]]],[],[]],[[[1,[-1]]],8,[]],[[[3,[-1]]],8,[]],[[[1,[-1]]],8,[]],[[[1,[-1]]],2,[]],[[[3,[-1]]],2,[]],[2,[[1,[-1]]],[]],[[],[[3,[-1]]],[]],[[[1,[-1]]],[[7,[-1]]],[]],[[[3,[-1]]],[[7,[-1]]],[]],[[[1,[-1]],-1],[[9,[4,-1]]],[]],[[[3,[-1]],-1],4,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]]],"c":[],"p":[[3,"ArrayQueue",0],[15,"usize"],[3,"SegQueue",0],[15,"tuple"],[3,"Formatter",36],[6,"Result",36],[4,"Option",37],[15,"bool"],[4,"Result",38],[3,"TypeId",39]],"b":[]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","t":"DDALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLL","n":["Backoff","CachePadded","atomic","borrow","borrow","borrow_mut","borrow_mut","clone","default","default","deref","deref_mut","eq","fmt","fmt","from","from","from","from","hash","into","into","into_inner","is_completed","new","new","reset","snooze","spin","try_from","try_from","try_into","try_into","type_id","type_id","AtomicCell","AtomicConsume","Val","as_ptr","borrow","borrow_mut","compare_and_swap","compare_exchange","default","drop","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_update","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fmt","from","from","from","into","into_inner","is_lock_free","load","load_consume","new","store","swap","take","try_from","try_into","type_id"],"q":[[0,"crossbeam_utils"],[35,"crossbeam_utils::atomic"],[162,"core::clone"],[163,"core::default"],[164,"core::cmp"],[165,"core::fmt"],[166,"core::fmt"],[167,"core::hash"],[168,"core::any"],[169,"core::marker"],[170,"core::cmp"]],"d":["Performs exponential backoff in spin loops.","Pads and aligns a value to the length of a cache line.","Atomic types.","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the inner value.","Returns <code>true</code> if exponential backoff has completed and …","Creates a new <code>Backoff</code>.","Pads and aligns a value to the length of a cache line.","Resets the <code>Backoff</code>.","Backs off in a blocking loop.","Backs off in a lock-free loop.","","","","","","","A thread-safe mutable memory location.","Trait which allows reading from primitive atomic types …","Type returned by <code>load_consume</code>.","Returns a raw pointer to the underlying data in this …","","","If the current value equals <code>current</code>, stores <code>new</code> into the …","If the current value equals <code>current</code>, stores <code>new</code> into the …","","","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies logical “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies logical “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies logical “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Fetches the value, and applies a function to it that …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies logical “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Consumes the atomic and returns the contained value.","Returns <code>true</code> if operations on values of this type are …","Loads a value from the atomic cell.","Loads a value from the atomic using a “consume” memory …","Creates a new atomic cell initialized with <code>val</code>.","Stores <code>val</code> into the atomic cell.","Stores <code>val</code> into the atomic cell and returns the previous …","Takes the value of the atomic cell, leaving …","","",""],"i":[0,0,0,3,1,3,1,1,3,1,1,1,1,3,1,3,1,1,1,1,3,1,1,3,3,1,3,3,3,3,1,3,1,3,1,0,0,32,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,32,16,16,16,16,16,16,16],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[1,[-1]]],2],[[],3],[[],[[1,[-1]]],4],[[[1,[-1]]],-1,[]],[[[1,[-1]]],-1,[]],[[[1,[-1]],[1,[-1]]],5,6],[[3,7],8],[[[1,[-1]],7],8,9],[-1,-1,[]],[-1,[[1,[-1]]],[]],[-1,-1,[]],[10,-1,[]],[[[1,[-1]],-2],11,12,13],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],-1,[]],[3,5],[[],3],[-1,[[1,[-1]]],[]],[3,11],[3,11],[3,11],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],0,0,0,[[[16,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[16,[-1]],-1,-1],-1,[17,18]],[[[16,[-1]],-1,-1],[[14,[-1,-1]]],[17,18]],[[],[[16,[-1]]],4],[[[16,[-1]]],11,[]],[[[16,[19]],19],19],[[[16,[20]],20],20],[[[16,[21]],21],21],[[[16,[22]],22],22],[[[16,[23]],23],23],[[[16,[24]],24],24],[[[16,[25]],25],25],[[[16,[26]],26],26],[[[16,[27]],27],27],[[[16,[28]],28],28],[[[16,[29]],29],29],[[[16,[30]],30],30],[[[16,[30]],30],30],[[[16,[19]],19],19],[[[16,[21]],21],21],[[[16,[5]],5],5],[[[16,[29]],29],29],[[[16,[20]],20],20],[[[16,[26]],26],26],[[[16,[23]],23],23],[[[16,[24]],24],24],[[[16,[27]],27],27],[[[16,[22]],22],22],[[[16,[28]],28],28],[[[16,[25]],25],25],[[[16,[19]],19],19],[[[16,[21]],21],21],[[[16,[28]],28],28],[[[16,[24]],24],24],[[[16,[23]],23],23],[[[16,[22]],22],22],[[[16,[25]],25],25],[[[16,[20]],20],20],[[[16,[29]],29],29],[[[16,[27]],27],27],[[[16,[26]],26],26],[[[16,[30]],30],30],[[[16,[24]],24],24],[[[16,[23]],23],23],[[[16,[21]],21],21],[[[16,[19]],19],19],[[[16,[30]],30],30],[[[16,[26]],26],26],[[[16,[25]],25],25],[[[16,[27]],27],27],[[[16,[22]],22],22],[[[16,[29]],29],29],[[[16,[20]],20],20],[[[16,[28]],28],28],[[[16,[27]],27],27],[[[16,[30]],30],30],[[[16,[25]],25],25],[[[16,[28]],28],28],[[[16,[22]],22],22],[[[16,[19]],19],19],[[[16,[20]],20],20],[[[16,[23]],23],23],[[[16,[24]],24],24],[[[16,[5]],5],5],[[[16,[26]],26],26],[[[16,[29]],29],29],[[[16,[21]],21],21],[[[16,[30]],30],30],[[[16,[25]],25],25],[[[16,[21]],21],21],[[[16,[5]],5],5],[[[16,[29]],29],29],[[[16,[19]],19],19],[[[16,[28]],28],28],[[[16,[27]],27],27],[[[16,[20]],20],20],[[[16,[23]],23],23],[[[16,[24]],24],24],[[[16,[22]],22],22],[[[16,[26]],26],26],[[[16,[22]],22],22],[[[16,[23]],23],23],[[[16,[29]],29],29],[[[16,[25]],25],25],[[[16,[20]],20],20],[[[16,[28]],28],28],[[[16,[21]],21],21],[[[16,[19]],19],19],[[[16,[27]],27],27],[[[16,[26]],26],26],[[[16,[24]],24],24],[[[16,[30]],30],30],[[[16,[-1]],-2],[[14,[-1,-1]]],[17,18],31],[[[16,[20]],20],20],[[[16,[19]],19],19],[[[16,[5]],5],5],[[[16,[21]],21],21],[[[16,[29]],29],29],[[[16,[27]],27],27],[[[16,[26]],26],26],[[[16,[23]],23],23],[[[16,[22]],22],22],[[[16,[25]],25],25],[[[16,[30]],30],30],[[[16,[24]],24],24],[[[16,[28]],28],28],[[[16,[-1]],7],8,[17,9]],[-1,[[16,[-1]]],[]],[10,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[16,[-1]]],-1,[]],[[],5],[[[16,[-1]]],-1,17],[-1,[],[]],[-1,[[16,[-1]]],[]],[[[16,[-1]],-1],11,[]],[[[16,[-1]],-1],-1,[]],[[[16,[-1]]],-1,4],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]]],"c":[41],"p":[[3,"CachePadded",0],[8,"Clone",162],[3,"Backoff",0],[8,"Default",163],[15,"bool"],[8,"PartialEq",164],[3,"Formatter",165],[6,"Result",165],[8,"Debug",165],[15,"never"],[15,"tuple"],[8,"Hash",166],[8,"Hasher",166],[4,"Result",167],[3,"TypeId",168],[3,"AtomicCell",35],[8,"Copy",169],[8,"Eq",164],[15,"isize"],[15,"i64"],[15,"u64"],[15,"i32"],[15,"usize"],[15,"u32"],[15,"u128"],[15,"i128"],[15,"u16"],[15,"i8"],[15,"u8"],[15,"i16"],[8,"FnMut",170],[8,"AtomicConsume",35]],"b":[[45,"impl-AtomicCell%3Cisize%3E"],[46,"impl-AtomicCell%3Ci64%3E"],[47,"impl-AtomicCell%3Cu64%3E"],[48,"impl-AtomicCell%3Ci32%3E"],[49,"impl-AtomicCell%3Cusize%3E"],[50,"impl-AtomicCell%3Cu32%3E"],[51,"impl-AtomicCell%3Cu128%3E"],[52,"impl-AtomicCell%3Ci128%3E"],[53,"impl-AtomicCell%3Cu16%3E"],[54,"impl-AtomicCell%3Ci8%3E"],[55,"impl-AtomicCell%3Cu8%3E"],[56,"impl-AtomicCell%3Ci16%3E"],[57,"impl-AtomicCell%3Ci16%3E"],[58,"impl-AtomicCell%3Cisize%3E"],[59,"impl-AtomicCell%3Cu64%3E"],[60,"impl-AtomicCell%3Cbool%3E"],[61,"impl-AtomicCell%3Cu8%3E"],[62,"impl-AtomicCell%3Ci64%3E"],[63,"impl-AtomicCell%3Ci128%3E"],[64,"impl-AtomicCell%3Cusize%3E"],[65,"impl-AtomicCell%3Cu32%3E"],[66,"impl-AtomicCell%3Cu16%3E"],[67,"impl-AtomicCell%3Ci32%3E"],[68,"impl-AtomicCell%3Ci8%3E"],[69,"impl-AtomicCell%3Cu128%3E"],[70,"impl-AtomicCell%3Cisize%3E"],[71,"impl-AtomicCell%3Cu64%3E"],[72,"impl-AtomicCell%3Ci8%3E"],[73,"impl-AtomicCell%3Cu32%3E"],[74,"impl-AtomicCell%3Cusize%3E"],[75,"impl-AtomicCell%3Ci32%3E"],[76,"impl-AtomicCell%3Cu128%3E"],[77,"impl-AtomicCell%3Ci64%3E"],[78,"impl-AtomicCell%3Cu8%3E"],[79,"impl-AtomicCell%3Cu16%3E"],[80,"impl-AtomicCell%3Ci128%3E"],[81,"impl-AtomicCell%3Ci16%3E"],[82,"impl-AtomicCell%3Cu32%3E"],[83,"impl-AtomicCell%3Cusize%3E"],[84,"impl-AtomicCell%3Cu64%3E"],[85,"impl-AtomicCell%3Cisize%3E"],[86,"impl-AtomicCell%3Ci16%3E"],[87,"impl-AtomicCell%3Ci128%3E"],[88,"impl-AtomicCell%3Cu128%3E"],[89,"impl-AtomicCell%3Cu16%3E"],[90,"impl-AtomicCell%3Ci32%3E"],[91,"impl-AtomicCell%3Cu8%3E"],[92,"impl-AtomicCell%3Ci64%3E"],[93,"impl-AtomicCell%3Ci8%3E"],[94,"impl-AtomicCell%3Cu16%3E"],[95,"impl-AtomicCell%3Ci16%3E"],[96,"impl-AtomicCell%3Cu128%3E"],[97,"impl-AtomicCell%3Ci8%3E"],[98,"impl-AtomicCell%3Ci32%3E"],[99,"impl-AtomicCell%3Cisize%3E"],[100,"impl-AtomicCell%3Ci64%3E"],[101,"impl-AtomicCell%3Cusize%3E"],[102,"impl-AtomicCell%3Cu32%3E"],[103,"impl-AtomicCell%3Cbool%3E"],[104,"impl-AtomicCell%3Ci128%3E"],[105,"impl-AtomicCell%3Cu8%3E"],[106,"impl-AtomicCell%3Cu64%3E"],[107,"impl-AtomicCell%3Ci16%3E"],[108,"impl-AtomicCell%3Cu128%3E"],[109,"impl-AtomicCell%3Cu64%3E"],[110,"impl-AtomicCell%3Cbool%3E"],[111,"impl-AtomicCell%3Cu8%3E"],[112,"impl-AtomicCell%3Cisize%3E"],[113,"impl-AtomicCell%3Ci8%3E"],[114,"impl-AtomicCell%3Cu16%3E"],[115,"impl-AtomicCell%3Ci64%3E"],[116,"impl-AtomicCell%3Cusize%3E"],[117,"impl-AtomicCell%3Cu32%3E"],[118,"impl-AtomicCell%3Ci32%3E"],[119,"impl-AtomicCell%3Ci128%3E"],[120,"impl-AtomicCell%3Ci32%3E"],[121,"impl-AtomicCell%3Cusize%3E"],[122,"impl-AtomicCell%3Cu8%3E"],[123,"impl-AtomicCell%3Cu128%3E"],[124,"impl-AtomicCell%3Ci64%3E"],[125,"impl-AtomicCell%3Ci8%3E"],[126,"impl-AtomicCell%3Cu64%3E"],[127,"impl-AtomicCell%3Cisize%3E"],[128,"impl-AtomicCell%3Cu16%3E"],[129,"impl-AtomicCell%3Ci128%3E"],[130,"impl-AtomicCell%3Cu32%3E"],[131,"impl-AtomicCell%3Ci16%3E"],[133,"impl-AtomicCell%3Ci64%3E"],[134,"impl-AtomicCell%3Cisize%3E"],[135,"impl-AtomicCell%3Cbool%3E"],[136,"impl-AtomicCell%3Cu64%3E"],[137,"impl-AtomicCell%3Cu8%3E"],[138,"impl-AtomicCell%3Cu16%3E"],[139,"impl-AtomicCell%3Ci128%3E"],[140,"impl-AtomicCell%3Cusize%3E"],[141,"impl-AtomicCell%3Ci32%3E"],[142,"impl-AtomicCell%3Cu128%3E"],[143,"impl-AtomicCell%3Ci16%3E"],[144,"impl-AtomicCell%3Cu32%3E"],[145,"impl-AtomicCell%3Ci8%3E"]]},\
"doc_comment":{"doc":"The point of this (small) crate is to allow you to add doc …","t":"OO","n":["doc_comment","doctest"],"q":[[0,"doc_comment"]],"d":["This macro can be used to generate documentation upon a …","This macro provides a simpler way to test an outer …"],"i":[0,0],"f":[0,0],"c":[],"p":[],"b":[]},\
"either":{"doc":"The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","t":"ECNCNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOLLL","n":["Either","Left","Left","Right","Right","all","any","as_mut","as_mut","as_mut","as_mut","as_pin_mut","as_pin_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow_mut","clone","clone_from","cmp","collect","count","deref","deref_mut","either","either_into","either_with","eq","expect_left","expect_right","extend","factor_err","factor_first","factor_none","factor_ok","factor_second","find","find_map","flip","fmt","fmt","fold","for_both","for_each","from","from","hash","into","into","into_future","into_inner","into_iter","into_iter","is_left","is_right","last","left","left_and_then","left_or","left_or_default","left_or_else","len","map","map_either","map_either_with","map_left","map_right","next","next_back","nth","partial_cmp","partition","poll","position","rfind","rfold","right","right_and_then","right_or","right_or_default","right_or_else","size_hint","try_from","try_into","try_left","try_right","type_id","unwrap_left","unwrap_right"],"q":[[0,"either"],[91,"core::iter::traits::iterator"],[92,"core::ops::function"],[93,"core::convert"],[94,"core::pin"],[95,"core::convert"],[96,"core::cmp"],[97,"core::cmp"],[98,"core::ops::deref"],[99,"core::ops::deref"],[100,"core::iter::traits::collect"],[101,"core::option"],[102,"core::fmt"],[103,"core::hash"],[104,"core::iter::traits::exact_size"],[105,"core::iter::traits::double_ended"],[106,"core::cmp"],[107,"core::task::poll"],[108,"core::future::future"],[109,"core::any"]],"d":["The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","","A value of type <code>L</code>.","","A value of type <code>R</code>.","","","","","","Convert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.","Convert <code>Pin&lt;&amp;mut Either&lt;L, R&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;L, R&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;L&gt;, Pin&lt;&amp;R&gt;&gt;</code>, …","","Convert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.","","","","","","","","","","","","Apply one of two functions depending on contents, unifying …","Convert the contained value into <code>T</code>","Like <code>either</code>, but provide some context to whichever of the …","","Returns the left value","Returns the right value","","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Factors out <code>None</code> from an <code>Either</code> of <code>Option</code>.","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","","","Convert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.","","","","Evaluate the provided expression for both <code>Either::Left</code> and …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Extract the value of an either over two equivalent types.","Convert the inner value to an iterator.","","Return true if the value is the <code>Left</code> variant.","Return true if the value is the <code>Right</code> variant.","","Convert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","","Map <code>f</code> over the contained value and return the result in the","Apply the functions <code>f</code> and <code>g</code> to the <code>Left</code> and <code>Right</code> variants …","Similar to [<code>map_either</code>], with an added context <code>ctx</code> …","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","","","","","","","","","","Convert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","","","","Macro for unwrapping the left side of an <code>Either</code>, which …","Dual to <code>try_left!</code>, see its documentation for more …","","Returns the left value","Returns the right value"],"i":[0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1],"f":[0,0,0,0,0,[[[1,[-1,-2]],-3],2,3,3,4],[[[1,[-1,-2]],-3],2,3,3,4],[[[1,[-1,-2]]],5,[[6,[5]]],[[6,[5]]]],[[[1,[-2,-3]]],[[7,[-1]]],[],[[6,[[7,[-1]]]]],[[6,[[7,[-1]]]]]],[[[1,[-2,-3]]],-1,[],[[6,[-1]]],[[6,[-1]]]],[[[1,[-1,-2]]],[[1,[-1,-2]]],[],[]],[[[8,[[1,[-1,-2]]]]],[[1,[[8,[-1]],[8,[-2]]]]],[],[]],[[[8,[[1,[-1,-2]]]]],[[1,[[8,[-1]],[8,[-2]]]]],[],[]],[[[1,[-2,-3]]],[[7,[-1]]],[],[[9,[[7,[-1]]]]],[[9,[[7,[-1]]]]]],[[[1,[-1,-2]]],[[1,[-1,-2]]],[],[]],[[[1,[-2,-3]]],-1,[],[[9,[-1]]],[[9,[-1]]]],[[[1,[-1,-2]]],5,[[9,[5]]],[[9,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],[[1,[-1,-2]]],10,10],[[[1,[-1,-2]],[1,[-1,-2]]],11,10,10],[[[1,[-1,-2]],[1,[-1,-2]]],12,13,13],[[[1,[-1,-2]]],-3,3,3,14],[[[1,[-1,-2]]],15,3,3],[[[1,[-1,-2]]],[],16,16],[[[1,[-1,-2]]],[],17,17],[[[1,[-1,-2]],-3,-4],-5,[],[],18,18,[]],[[[1,[-2,-3]]],-1,[],[[19,[-1]]],[[19,[-1]]]],[[[1,[-1,-2]],-3,-4,-5],-6,[],[],[],18,18,[]],[[[1,[-1,-2]],[1,[-1,-2]]],2,20,20],[[[1,[-1,-2]],5],-1,[],21],[[[1,[-1,-2]],5],-2,21,[]],[[[1,[-2,-3]],-4],11,[],[[22,[-1]]],[[22,[-1]]],23],[[[1,[[24,[-1,-2]],[24,[-3,-2]]]]],[[24,[[1,[-1,-3]],-2]]],[],[],[]],[[[1,[[11,[-1,-2]],[11,[-1,-3]]]]],[[11,[-1,[1,[-2,-3]]]]],[],[],[]],[[[1,[[25,[-1]],[25,[-2]]]]],[[25,[[1,[-1,-2]]]]],[],[]],[[[1,[[24,[-1,-2]],[24,[-1,-3]]]]],[[24,[-1,[1,[-2,-3]]]]],[],[],[]],[[[1,[[11,[-1,-2]],[11,[-3,-2]]]]],[[11,[[1,[-1,-3]],-2]]],[],[],[]],[[[1,[-1,-2]],-3],25,3,3,4],[[[1,[-1,-2]],-3],[[25,[-4]]],3,3,4,[]],[[[1,[-1,-2]]],[[1,[-2,-1]]],[],[]],[[[1,[-1,-2]],26],27,21,21],[[[1,[-1,-2]],26],27,28,28],[[[1,[-1,-2]],-3,-4],-3,3,3,[],4],0,[[[1,[-1,-2]],-3],11,3,3,4],[[[24,[-1,-2]]],[[1,[-2,-1]]],[],[]],[-1,-1,[]],[[[1,[-1,-2]],-3],11,29,29,30],[-1,-2,[],[]],[[[1,[-1,-2]]],[[24,[-2,-1]]],[],[]],[-1,[],[]],[[[1,[-1,-1]]],-1,[]],[[[1,[-1,-2]]],1,23,23],[-1,-2,[],[]],[[[1,[-1,-2]]],2,[],[]],[[[1,[-1,-2]]],2,[],[]],[[[1,[-1,-2]]],25,3,3],[[[1,[-1,-2]]],[[25,[-1]]],[],[]],[[[1,[-1,-2]],-3],[[1,[-4,-2]]],[],[],18,[]],[[[1,[-1,-2]],-1],-1,[],[]],[[[1,[-1,-2]]],-1,31,[]],[[[1,[-1,-2]],-3],-1,[],[],18],[[[1,[-1,-2]]],15,32,32],[[[1,[-1,-1]],-2],[[1,[-3,-3]]],[],18,[]],[[[1,[-1,-2]],-3,-4],[[1,[-5,-6]]],[],[],18,18,[],[]],[[[1,[-1,-2]],-3,-4,-5],[[1,[-6,-7]]],[],[],[],18,18,[],[]],[[[1,[-1,-2]],-3],[[1,[-4,-2]]],[],[],18,[]],[[[1,[-1,-2]],-3],[[1,[-1,-4]]],[],[],18,[]],[[[1,[-1,-2]]],25,3,3],[[[1,[-1,-2]]],25,33,33],[[[1,[-1,-2]],15],25,3,3],[[[1,[-1,-2]],[1,[-1,-2]]],[[25,[12]]],34,34],[[[1,[-1,-2]],-3],[[11,[-4,-4]]],3,3,4,[31,22]],[[[8,[[1,[-1,-2]]]],35],36,37,37],[[[1,[-1,-2]],-3],[[25,[15]]],3,3,4],[[[1,[-1,-2]],-3],25,33,33,4],[[[1,[-1,-2]],-3,-4],-3,33,33,[],4],[[[1,[-1,-2]]],[[25,[-2]]],[],[]],[[[1,[-1,-2]],-3],[[1,[-1,-4]]],[],[],18,[]],[[[1,[-1,-2]],-2],-2,[],[]],[[[1,[-1,-2]]],-2,[],31],[[[1,[-1,-2]],-3],-2,[],[],18],[[[1,[-1,-2]]],[[11,[15,[25,[15]]]]],3,3],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],0,0,[-1,38,[]],[[[1,[-1,-2]]],-1,[],21],[[[1,[-1,-2]]],-2,21,[]]],"c":[],"p":[[4,"Either",0],[15,"bool"],[8,"Iterator",91],[8,"FnMut",92],[15,"str"],[8,"AsMut",93],[15,"slice"],[3,"Pin",94],[8,"AsRef",93],[8,"Clone",95],[15,"tuple"],[4,"Ordering",96],[8,"Ord",96],[8,"FromIterator",97],[15,"usize"],[8,"Deref",98],[8,"DerefMut",98],[8,"FnOnce",92],[8,"Into",93],[8,"PartialEq",96],[8,"Debug",99],[8,"Extend",97],[8,"IntoIterator",97],[4,"Result",100],[4,"Option",101],[3,"Formatter",99],[6,"Result",99],[8,"Display",99],[8,"Hash",102],[8,"Hasher",102],[8,"Default",103],[8,"ExactSizeIterator",104],[8,"DoubleEndedIterator",105],[8,"PartialOrd",96],[3,"Context",106],[4,"Poll",107],[8,"Future",108],[3,"TypeId",109]],"b":[[7,"impl-AsMut%3Cstr%3E-for-Either%3CL,+R%3E"],[8,"impl-AsMut%3C%5BTarget%5D%3E-for-Either%3CL,+R%3E"],[9,"impl-AsMut%3CTarget%3E-for-Either%3CL,+R%3E"],[10,"impl-Either%3CL,+R%3E"],[13,"impl-AsRef%3C%5BTarget%5D%3E-for-Either%3CL,+R%3E"],[14,"impl-Either%3CL,+R%3E"],[15,"impl-AsRef%3CTarget%3E-for-Either%3CL,+R%3E"],[16,"impl-AsRef%3Cstr%3E-for-Either%3CL,+R%3E"],[41,"impl-Debug-for-Either%3CL,+R%3E"],[42,"impl-Display-for-Either%3CL,+R%3E"]]},\
"elf":{"doc":"The <code>elf</code> crate provides a pure-safe-rust interface for …","t":"DDCALLLLALALMLMMMAALLLMAALLLAAAALLLLLLLLALLLAALLMMMLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDDDLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLDGDDLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLENDINDGLLLLLLLLLLLLLLLLLLLKLLLLLLLKLLLLLLLLLLLLLLLLLLENRNRDDDMLLLLLLLLMLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLMFLLLLLLLLLLLLLMDDDDDDDDDDDDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMDDDDLLLLLLLLLLLLLLLLLLLLLLFMLLLLMMMMLLMLLLLFMLLLLLLLLLLLLNNEDDDDNLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMMLLMLLMLLLLLLLLLLLLLLLNNNNIEDDNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLDDDDDGDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLDDDGLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLDDDGLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLDLLLLLLLLLLLLLDDDGLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMLMMMLLLLLLLLLL","n":["CommonElfData","ElfBytes","ParseError","abi","borrow","borrow","borrow_mut","borrow_mut","compression","default","dynamic","dynamic","dynamic","dynamic_symbol_table","dynsyms","dynsyms_strs","ehdr","endian","file","find_common_data","from","from","gnu_hash","gnu_symver","hash","into","into","minimal_parse","note","parse","relocation","section","section_data","section_data_as_notes","section_data_as_relas","section_data_as_rels","section_data_as_strtab","section_header_by_name","section_headers","section_headers_with_strtab","segment","segment_data","segment_data_as_notes","segments","string_table","symbol","symbol_table","symbol_version_table","symtab","symtab_strs","sysv_hash","try_from","try_from","try_into","try_into","type_id","type_id","DF_1_CONFALT","DF_1_DIRECT","DF_1_DISPRELDNE","DF_1_DISPRELPND","DF_1_EDITED","DF_1_ENDFILTEE","DF_1_GLOBAL","DF_1_GLOBAUDIT","DF_1_GROUP","DF_1_IGNMULDEF","DF_1_INITFIRST","DF_1_INTERPOSE","DF_1_KMOD","DF_1_LOADFLTR","DF_1_NOCOMMON","DF_1_NODEFLIB","DF_1_NODELETE","DF_1_NODIRECT","DF_1_NODUMP","DF_1_NOHDR","DF_1_NOKSYMS","DF_1_NOOPEN","DF_1_NORELOC","DF_1_NOW","DF_1_ORIGIN","DF_1_PIE","DF_1_SINGLETON","DF_1_STUB","DF_1_SYMINTPOSE","DF_1_TRANS","DF_1_WEAKFILTER","DF_BIND_NOW","DF_ORIGIN","DF_P1_GROUPPERM","DF_P1_LAZYLOAD","DF_STATIC_TLS","DF_SYMBOLIC","DF_TEXTREL","DTF_1_CONFEXP","DTF_1_PARINIT","DT_AARCH64_BTI_PLT","DT_AARCH64_PAC_PLT","DT_AARCH64_VARIANT_PCS","DT_ARM_PREEMPTMAP","DT_ARM_SYMTABSZ","DT_AUDIT","DT_BIND_NOW","DT_CHECKSUM","DT_CONFIG","DT_DEBUG","DT_DEPAUDIT","DT_FEATURE_1","DT_FINI","DT_FINI_ARRAY","DT_FINI_ARRAYSZ","DT_FLAGS","DT_FLAGS_1","DT_GNU_CONFLICT","DT_GNU_CONFLICTSZ","DT_GNU_HASH","DT_GNU_LIBLIST","DT_GNU_LIBLISTSZ","DT_GNU_PRELINKED","DT_GUILE_ENTRY","DT_GUILE_FRAME_MAPS","DT_GUILE_GC_ROOT","DT_GUILE_GC_ROOT_SZ","DT_GUILE_VM_VERSION","DT_HASH","DT_HIOS","DT_HIPROC","DT_INIT","DT_INIT_ARRAY","DT_INIT_ARRAYSZ","DT_JMPREL","DT_LOOS","DT_LOPROC","DT_MOVEENT","DT_MOVESZ","DT_MOVETAB","DT_NEEDED","DT_NULL","DT_PLTGOT","DT_PLTPAD","DT_PLTPADSZ","DT_PLTREL","DT_PLTRELSZ","DT_POSFLAG_1","DT_PPC64_GLINK","DT_PPC64_OPD","DT_PPC64_OPDSZ","DT_PPC64_OPT","DT_PPC_GOT","DT_PPC_OPT","DT_PREINIT_ARRAY","DT_PREINIT_ARRAYSZ","DT_REL","DT_RELA","DT_RELACOUNT","DT_RELAENT","DT_RELASZ","DT_RELCOUNT","DT_RELENT","DT_RELSZ","DT_RISCV_VARIANT_CC","DT_RPATH","DT_RUNPATH","DT_SONAME","DT_STRSZ","DT_STRTAB","DT_SYMBOLIC","DT_SYMENT","DT_SYMINENT","DT_SYMINFO","DT_SYMINSZ","DT_SYMTAB","DT_SYMTAB_SHNDX","DT_TEXTREL","DT_TLSDESC_GOT","DT_TLSDESC_PLT","DT_VERDEF","DT_VERDEFNUM","DT_VERNEED","DT_VERNEEDNUM","DT_VERSYM","EF_ARM_ABI_FLOAT_HARD","EF_ARM_ABI_FLOAT_SOFT","EF_ARM_BE8","EF_ARM_EABIMASK","EF_ARM_EABI_UNKNOWN","EF_ARM_EABI_VER1","EF_ARM_EABI_VER2","EF_ARM_EABI_VER3","EF_ARM_EABI_VER4","EF_ARM_EABI_VER5","EF_ARM_GCCMASK","EF_ARM_SOFT_FLOAT","EF_ARM_VFP_FLOAT","EF_PPC64_ABI","EF_PPC_EMB","EF_PPC_RELOCATABLE","EF_PPC_RELOCATABLE_LIB","EF_RISCV_FLOAT_ABI_DOUBLE","EF_RISCV_FLOAT_ABI_MASK","EF_RISCV_FLOAT_ABI_QUAD","EF_RISCV_FLOAT_ABI_SINGLE","EF_RISCV_FLOAT_ABI_SOFT","EF_RISCV_RVC","EF_RISCV_RVE","EF_RISCV_TSO","EI_ABIVERSION","EI_CLASS","EI_DATA","EI_MAG0","EI_MAG1","EI_MAG2","EI_MAG3","EI_NIDENT","EI_OSABI","EI_PAD","EI_VERSION","ELFCLASS32","ELFCLASS64","ELFCLASSNONE","ELFCOMPRESS_HIOS","ELFCOMPRESS_HIPROC","ELFCOMPRESS_LOOS","ELFCOMPRESS_LOPROC","ELFCOMPRESS_ZLIB","ELFCOMPRESS_ZSTD","ELFDATA2LSB","ELFDATA2MSB","ELFDATANONE","ELFMAG0","ELFMAG1","ELFMAG2","ELFMAG3","ELFMAGIC","ELFOSABI_AIX","ELFOSABI_AROS","ELFOSABI_CLOUDABI","ELFOSABI_FENIXOS","ELFOSABI_FREEBSD","ELFOSABI_GNU","ELFOSABI_HPUX","ELFOSABI_IRIX","ELFOSABI_LINUX","ELFOSABI_MODESTO","ELFOSABI_NETBSD","ELFOSABI_NONE","ELFOSABI_NSK","ELFOSABI_OPENBSD","ELFOSABI_OPENVMS","ELFOSABI_OPENVOS","ELFOSABI_SOLARIS","ELFOSABI_SYSV","ELFOSABI_TRU64","ELF_NOTE_GNU","ELF_NOTE_GNU_ABI_TAG_OS_FREEBSD","ELF_NOTE_GNU_ABI_TAG_OS_GNU","ELF_NOTE_GNU_ABI_TAG_OS_LINUX","ELF_NOTE_GNU_ABI_TAG_OS_SOLARIS2","EM_386","EM_56800EX","EM_68HC05","EM_68HC08","EM_68HC11","EM_68HC12","EM_68HC16","EM_68K","EM_78KOR","EM_8051","EM_860","EM_88K","EM_960","EM_AARCH64","EM_ALPHA","EM_ALTERA_NIOS2","EM_AMDGPU","EM_ARC","EM_ARCA","EM_ARC_COMPACT","EM_ARC_COMPACT2","EM_ARM","EM_AVR","EM_AVR32","EM_BA1","EM_BA2","EM_BLACKFIN","EM_BPF","EM_C166","EM_CDP","EM_CE","EM_CLOUDSHIELD","EM_COGE","EM_COLDFIRE","EM_COOL","EM_COREA_1ST","EM_COREA_2ND","EM_CR","EM_CR16","EM_CRAYNV2","EM_CRIS","EM_CRX","EM_CSR_KALIMBA","EM_CUDA","EM_CYPRESS_M8C","EM_D10V","EM_D30V","EM_DSP24","EM_DSPIC30F","EM_DXP","EM_ECOG1","EM_ECOG16","EM_ECOG1X","EM_ECOG2","EM_ETPU","EM_EXCESS","EM_F2MC16","EM_FIREPATH","EM_FR20","EM_FR30","EM_FT32","EM_FX66","EM_H8S","EM_H8_300","EM_H8_300H","EM_H8_500","EM_HUANY","EM_IAMCU","EM_IA_64","EM_INTEL205","EM_INTEL206","EM_INTEL207","EM_INTEL208","EM_INTEL209","EM_IP2K","EM_JAVELIN","EM_K10M","EM_KM32","EM_KMX16","EM_KMX32","EM_KMX8","EM_KVARC","EM_L10M","EM_LATTICEMICO32","EM_M16C","EM_M32","EM_M32C","EM_M32R","EM_MANIK","EM_MAX","EM_MAXQ30","EM_MCHP_PIC","EM_MCST_ELBRUS","EM_ME16","EM_METAG","EM_MICROBLAZE","EM_MIPS","EM_MIPS_RS3_LE","EM_MIPS_X","EM_MMA","EM_MMDSP_PLUS","EM_MMIX","EM_MN10200","EM_MN10300","EM_MOXIE","EM_MSP430","EM_NCPU","EM_NDR1","EM_NDS32","EM_NONE","EM_NORC","EM_NS32K","EM_OPEN8","EM_OPENRISC","EM_PARISC","EM_PCP","EM_PDP10","EM_PDP11","EM_PDSP","EM_PJ","EM_PPC","EM_PPC64","EM_PRISM","EM_QDSP6","EM_R32C","EM_RCE","EM_RH32","EM_RISCV","EM_RL78","EM_RS08","EM_RX","EM_S370","EM_S390","EM_SCORE7","EM_SEP","EM_SE_C17","EM_SE_C33","EM_SH","EM_SHARC","EM_SLE9X","EM_SNP1K","EM_SPARC","EM_SPARC32PLUS","EM_SPARCV9","EM_SPU","EM_ST100","EM_ST19","EM_ST200","EM_ST7","EM_ST9PLUS","EM_STARCORE","EM_STM8","EM_STXP7X","EM_SVX","EM_TILE64","EM_TILEGX","EM_TILEPRO","EM_TINYJ","EM_TI_ARP32","EM_TI_C2000","EM_TI_C5500","EM_TI_C6000","EM_TI_PRU","EM_TMM_GPP","EM_TPC","EM_TRICORE","EM_TRIMEDIA","EM_TSK3000","EM_UNICORE","EM_V800","EM_V850","EM_VAX","EM_VIDEOCORE","EM_VIDEOCORE3","EM_VIDEOCORE5","EM_VISIUM","EM_VPP500","EM_X86_64","EM_XCORE","EM_XGATE","EM_XIMO16","EM_XTENSA","EM_Z80","EM_ZSP","ET_CORE","ET_DYN","ET_EXEC","ET_HIOS","ET_HIPROC","ET_LOOS","ET_LOPROC","ET_NONE","ET_REL","EV_CURRENT","EV_NONE","GNU_PROPERTY_AARCH64_FEATURE_1_AND","GNU_PROPERTY_AARCH64_FEATURE_1_BTI","GNU_PROPERTY_AARCH64_FEATURE_1_PAC","NT_386_IOPERM","NT_386_TLS","NT_ARM_HW_BREAK","NT_ARM_HW_WATCH","NT_ARM_PACA_KEYS","NT_ARM_PACG_KEYS","NT_ARM_PAC_ENABLED_KEYS","NT_ARM_PAC_MASK","NT_ARM_SVE","NT_ARM_SYSTEM_CALL","NT_ARM_TAGGED_ADDR_CTRL","NT_ARM_TLS","NT_ARM_VFP","NT_ASRS","NT_AUXV","NT_FILE","NT_FPREGSET","NT_GNU_ABI_TAG","NT_GNU_BUILD_ID","NT_GNU_GOLD_VERSION","NT_GNU_HWCAP","NT_GNU_PROPERTY_TYPE_0","NT_GWINDOWS","NT_LWPSINFO","NT_LWPSTATUS","NT_PLATFORM","NT_PPC_DSCR","NT_PPC_EBB","NT_PPC_PKEY","NT_PPC_PMU","NT_PPC_PPR","NT_PPC_SPE","NT_PPC_TAR","NT_PPC_TM_CDSCR","NT_PPC_TM_CFPR","NT_PPC_TM_CGPR","NT_PPC_TM_CPPR","NT_PPC_TM_CTAR","NT_PPC_TM_CVMX","NT_PPC_TM_CVSX","NT_PPC_TM_SPR","NT_PPC_VMX","NT_PPC_VSX","NT_PRCRED","NT_PRFPREG","NT_PRFPXREG","NT_PRPSINFO","NT_PRSTATUS","NT_PRXFPREG","NT_PRXREG","NT_PSINFO","NT_PSTATUS","NT_SIGINFO","NT_TASKSTRUCT","NT_UTSNAME","NT_VMCOREDD","NT_X86_XSTATE","PF_MASKOS","PF_MASKPROC","PF_NONE","PF_R","PF_W","PF_X","PN_XNUM","PPC64_OPT_LOCALENTRY","PPC64_OPT_MULTI_TOC","PPC64_OPT_TLS","PPC_OPT_TLS","PT_AARCH64_ARCHEXT","PT_AARCH64_MEMTAG_MTE","PT_AARCH64_UNWIND","PT_ARM_ARCHEXT","PT_ARM_ARCHEXT_ARCHMSK","PT_ARM_ARCHEXT_ARCHV4","PT_ARM_ARCHEXT_ARCHV4T","PT_ARM_ARCHEXT_ARCHV5T","PT_ARM_ARCHEXT_ARCHV5TE","PT_ARM_ARCHEXT_ARCHV5TEJ","PT_ARM_ARCHEXT_ARCHV6","PT_ARM_ARCHEXT_ARCHV6K","PT_ARM_ARCHEXT_ARCHV6KZ","PT_ARM_ARCHEXT_ARCHV6M","PT_ARM_ARCHEXT_ARCHV6SM","PT_ARM_ARCHEXT_ARCHV6T2","PT_ARM_ARCHEXT_ARCHV7","PT_ARM_ARCHEXT_ARCHV7EM","PT_ARM_ARCHEXT_ARCH_UNKN","PT_ARM_ARCHEXT_FMTMSK","PT_ARM_ARCHEXT_FMT_ABI","PT_ARM_ARCHEXT_FMT_OS","PT_ARM_ARCHEXT_PROFMSK","PT_ARM_ARCHEXT_PROF_ARM","PT_ARM_ARCHEXT_PROF_CLASSIC","PT_ARM_ARCHEXT_PROF_MC","PT_ARM_ARCHEXT_PROF_NONE","PT_ARM_ARCHEXT_PROF_RT","PT_ARM_EXIDX","PT_ARM_UNWIND","PT_DYNAMIC","PT_GNU_EH_FRAME","PT_GNU_PROPERTY","PT_GNU_RELRO","PT_GNU_STACK","PT_HIOS","PT_HIPROC","PT_INTERP","PT_LOAD","PT_LOOS","PT_LOPROC","PT_NOTE","PT_NULL","PT_PHDR","PT_RISCV_ATTRIBUTES","PT_SHLIB","PT_TLS","R_AARCH64_ABS16","R_AARCH64_ABS32","R_AARCH64_ABS64","R_AARCH64_ADD_ABS_LO12_NC","R_AARCH64_ADR_GOT_PAGE","R_AARCH64_ADR_PREL_LO21","R_AARCH64_ADR_PREL_PG_HI21","R_AARCH64_ADR_PREL_PG_HI21_NC","R_AARCH64_CALL26","R_AARCH64_CONDBR19","R_AARCH64_COPY","R_AARCH64_GLOB_DAT","R_AARCH64_GOTREL32","R_AARCH64_GOTREL64","R_AARCH64_GOT_LD_PREL19","R_AARCH64_IRELATIVE","R_AARCH64_JUMP26","R_AARCH64_JUMP_SLOT","R_AARCH64_LD64_GOTOFF_LO15","R_AARCH64_LD64_GOTPAGE_LO15","R_AARCH64_LD64_GOT_LO12_NC","R_AARCH64_LDST128_ABS_LO12_NC","R_AARCH64_LDST16_ABS_LO12_NC","R_AARCH64_LDST32_ABS_LO12_NC","R_AARCH64_LDST64_ABS_LO12_NC","R_AARCH64_LDST8_ABS_LO12_NC","R_AARCH64_LD_PREL_LO19","R_AARCH64_MOVW_GOTOFF_G0","R_AARCH64_MOVW_GOTOFF_G0_NC","R_AARCH64_MOVW_GOTOFF_G1","R_AARCH64_MOVW_GOTOFF_G1_NC","R_AARCH64_MOVW_GOTOFF_G2","R_AARCH64_MOVW_GOTOFF_G2_NC","R_AARCH64_MOVW_GOTOFF_G3","R_AARCH64_MOVW_PREL_G0","R_AARCH64_MOVW_PREL_G0_NC","R_AARCH64_MOVW_PREL_G1","R_AARCH64_MOVW_PREL_G1_NC","R_AARCH64_MOVW_PREL_G2","R_AARCH64_MOVW_PREL_G2_NC","R_AARCH64_MOVW_PREL_G3","R_AARCH64_MOVW_SABS_G0","R_AARCH64_MOVW_SABS_G1","R_AARCH64_MOVW_SABS_G2","R_AARCH64_MOVW_UABS_G0","R_AARCH64_MOVW_UABS_G0_NC","R_AARCH64_MOVW_UABS_G1","R_AARCH64_MOVW_UABS_G1_NC","R_AARCH64_MOVW_UABS_G2","R_AARCH64_MOVW_UABS_G2_NC","R_AARCH64_MOVW_UABS_G3","R_AARCH64_NONE","R_AARCH64_P32_ABS32","R_AARCH64_P32_COPY","R_AARCH64_P32_GLOB_DAT","R_AARCH64_P32_IRELATIVE","R_AARCH64_P32_JUMP_SLOT","R_AARCH64_P32_RELATIVE","R_AARCH64_P32_TLSDESC","R_AARCH64_P32_TLS_DTPMOD","R_AARCH64_P32_TLS_DTPREL","R_AARCH64_P32_TLS_TPREL","R_AARCH64_PREL16","R_AARCH64_PREL32","R_AARCH64_PREL64","R_AARCH64_RELATIVE","R_AARCH64_TLSDESC","R_AARCH64_TLSDESC_ADD","R_AARCH64_TLSDESC_ADD_LO12","R_AARCH64_TLSDESC_ADR_PAGE21","R_AARCH64_TLSDESC_ADR_PREL21","R_AARCH64_TLSDESC_CALL","R_AARCH64_TLSDESC_LD64_LO12","R_AARCH64_TLSDESC_LDR","R_AARCH64_TLSDESC_LD_PREL19","R_AARCH64_TLSDESC_OFF_G0_NC","R_AARCH64_TLSDESC_OFF_G1","R_AARCH64_TLSGD_ADD_LO12_NC","R_AARCH64_TLSGD_ADR_PAGE21","R_AARCH64_TLSGD_ADR_PREL21","R_AARCH64_TLSGD_MOVW_G0_NC","R_AARCH64_TLSGD_MOVW_G1","R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21","R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC","R_AARCH64_TLSIE_LD_GOTTPREL_PREL19","R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC","R_AARCH64_TLSIE_MOVW_GOTTPREL_G1","R_AARCH64_TLSLD_ADD_DTPREL_HI12","R_AARCH64_TLSLD_ADD_DTPREL_LO12","R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC","R_AARCH64_TLSLD_ADD_LO12_NC","R_AARCH64_TLSLD_ADR_PAGE21","R_AARCH64_TLSLD_ADR_PREL21","R_AARCH64_TLSLD_LDST128_DTPREL_LO12","R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC","R_AARCH64_TLSLD_LDST16_DTPREL_LO12","R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC","R_AARCH64_TLSLD_LDST32_DTPREL_LO12","R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC","R_AARCH64_TLSLD_LDST64_DTPREL_LO12","R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC","R_AARCH64_TLSLD_LDST8_DTPREL_LO12","R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC","R_AARCH64_TLSLD_LD_PREL19","R_AARCH64_TLSLD_MOVW_DTPREL_G0","R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC","R_AARCH64_TLSLD_MOVW_DTPREL_G1","R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC","R_AARCH64_TLSLD_MOVW_DTPREL_G2","R_AARCH64_TLSLD_MOVW_G0_NC","R_AARCH64_TLSLD_MOVW_G1","R_AARCH64_TLSLE_ADD_TPREL_HI12","R_AARCH64_TLSLE_ADD_TPREL_LO12","R_AARCH64_TLSLE_ADD_TPREL_LO12_NC","R_AARCH64_TLSLE_LDST128_TPREL_LO12","R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC","R_AARCH64_TLSLE_LDST16_TPREL_LO12","R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC","R_AARCH64_TLSLE_LDST32_TPREL_LO12","R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC","R_AARCH64_TLSLE_LDST64_TPREL_LO12","R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC","R_AARCH64_TLSLE_LDST8_TPREL_LO12","R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC","R_AARCH64_TLSLE_MOVW_TPREL_G0","R_AARCH64_TLSLE_MOVW_TPREL_G0_NC","R_AARCH64_TLSLE_MOVW_TPREL_G1","R_AARCH64_TLSLE_MOVW_TPREL_G1_NC","R_AARCH64_TLSLE_MOVW_TPREL_G2","R_AARCH64_TLS_DTPMOD","R_AARCH64_TLS_DTPREL","R_AARCH64_TLS_TPREL","R_AARCH64_TSTBR14","R_ARM_ABS12","R_ARM_ABS16","R_ARM_ABS32","R_ARM_ABS32_NOI","R_ARM_ABS8","R_ARM_ALU_PCREL_15_8","R_ARM_ALU_PCREL_23_15","R_ARM_ALU_PCREL_7_0","R_ARM_ALU_PC_G0","R_ARM_ALU_PC_G0_NC","R_ARM_ALU_PC_G1","R_ARM_ALU_PC_G1_NC","R_ARM_ALU_PC_G2","R_ARM_ALU_SBREL_19_12","R_ARM_ALU_SBREL_27_20","R_ARM_ALU_SB_G0","R_ARM_ALU_SB_G0_NC","R_ARM_ALU_SB_G1","R_ARM_ALU_SB_G1_NC","R_ARM_ALU_SB_G2","R_ARM_BASE_ABS","R_ARM_BASE_BREL","R_ARM_BASE_PREL","R_ARM_BREL_ADJ","R_ARM_CALL","R_ARM_COPY","R_ARM_GLOB_DAT","R_ARM_GNU_VTENTRY","R_ARM_GNU_VTINHERIT","R_ARM_GOTOFF12","R_ARM_GOTOFF32","R_ARM_GOTRELAX","R_ARM_GOT_ABS","R_ARM_GOT_BREL12","R_ARM_GOT_PREL","R_ARM_IRELATIVE","R_ARM_JUMP24","R_ARM_JUMP_SLOT","R_ARM_LDC_PC_G0","R_ARM_LDC_PC_G1","R_ARM_LDC_PC_G2","R_ARM_LDC_SB_G0","R_ARM_LDC_SB_G1","R_ARM_LDC_SB_G2","R_ARM_LDRS_PC_G0","R_ARM_LDRS_PC_G1","R_ARM_LDRS_PC_G2","R_ARM_LDRS_SB_G0","R_ARM_LDRS_SB_G1","R_ARM_LDRS_SB_G2","R_ARM_LDR_PC_G0","R_ARM_LDR_PC_G1","R_ARM_LDR_PC_G2","R_ARM_LDR_SBREL_11_0","R_ARM_LDR_SB_G0","R_ARM_LDR_SB_G1","R_ARM_LDR_SB_G2","R_ARM_ME_TOO","R_ARM_MOVT_ABS","R_ARM_MOVT_BREL","R_ARM_MOVT_PREL","R_ARM_MOVW_ABS_NC","R_ARM_MOVW_BREL","R_ARM_MOVW_BREL_NC","R_ARM_MOVW_PREL_NC","R_ARM_NONE","R_ARM_PC24","R_ARM_PLT32","R_ARM_PLT32_ABS","R_ARM_PREL31","R_ARM_REL32","R_ARM_REL32_NOI","R_ARM_RELATIVE","R_ARM_SBREL31","R_ARM_SBREL32","R_ARM_TARGET1","R_ARM_TARGET2","R_ARM_THM_ABS5","R_ARM_THM_ALU_ABS_G0_NC","R_ARM_THM_ALU_ABS_G1_NC","R_ARM_THM_ALU_ABS_G2_NC","R_ARM_THM_ALU_ABS_G3","R_ARM_THM_ALU_PREL_11_0","R_ARM_THM_BF12","R_ARM_THM_BF16","R_ARM_THM_BF18","R_ARM_THM_CALL","R_ARM_THM_GOT_BREL12","R_ARM_THM_JUMP11","R_ARM_THM_JUMP19","R_ARM_THM_JUMP24","R_ARM_THM_JUMP6","R_ARM_THM_JUMP8","R_ARM_THM_MOVT_ABS","R_ARM_THM_MOVT_BREL","R_ARM_THM_MOVT_PREL","R_ARM_THM_MOVW_ABS_NC","R_ARM_THM_MOVW_BREL","R_ARM_THM_MOVW_BREL_NC","R_ARM_THM_MOVW_PREL_NC","R_ARM_THM_PC12","R_ARM_THM_PC8","R_ARM_THM_SWI8","R_ARM_THM_TLS_CALL","R_ARM_THM_TLS_DESCSEQ16","R_ARM_THM_TLS_DESCSEQ32","R_ARM_THM_XPC22","R_ARM_TLS_CALL","R_ARM_TLS_DESC","R_ARM_TLS_DESCSEQ","R_ARM_TLS_DTPMOD32","R_ARM_TLS_DTPOFF32","R_ARM_TLS_GD32","R_ARM_TLS_GOTDESC","R_ARM_TLS_IE12GP","R_ARM_TLS_IE32","R_ARM_TLS_LDM32","R_ARM_TLS_LDO12","R_ARM_TLS_LDO32","R_ARM_TLS_LE12","R_ARM_TLS_LE32","R_ARM_TLS_TPOFF32","R_ARM_V4BX","R_ARM_XPC25","R_PPC64_ADDR14","R_PPC64_ADDR14_BRNTAKEN","R_PPC64_ADDR14_BRTAKEN","R_PPC64_ADDR16","R_PPC64_ADDR16_DS","R_PPC64_ADDR16_HA","R_PPC64_ADDR16_HI","R_PPC64_ADDR16_HIGH","R_PPC64_ADDR16_HIGHA","R_PPC64_ADDR16_HIGHER","R_PPC64_ADDR16_HIGHERA","R_PPC64_ADDR16_HIGHEST","R_PPC64_ADDR16_HIGHESTA","R_PPC64_ADDR16_LO","R_PPC64_ADDR16_LO_DS","R_PPC64_ADDR24","R_PPC64_ADDR30","R_PPC64_ADDR32","R_PPC64_ADDR64","R_PPC64_COPY","R_PPC64_DTPMOD64","R_PPC64_DTPREL16","R_PPC64_DTPREL16_DS","R_PPC64_DTPREL16_HA","R_PPC64_DTPREL16_HI","R_PPC64_DTPREL16_HIGH","R_PPC64_DTPREL16_HIGHA","R_PPC64_DTPREL16_HIGHER","R_PPC64_DTPREL16_HIGHERA","R_PPC64_DTPREL16_HIGHEST","R_PPC64_DTPREL16_HIGHESTA","R_PPC64_DTPREL16_LO","R_PPC64_DTPREL16_LO_DS","R_PPC64_DTPREL64","R_PPC64_GLOB_DAT","R_PPC64_GOT16","R_PPC64_GOT16_DS","R_PPC64_GOT16_HA","R_PPC64_GOT16_HI","R_PPC64_GOT16_LO","R_PPC64_GOT16_LO_DS","R_PPC64_GOT_DTPREL16_DS","R_PPC64_GOT_DTPREL16_HA","R_PPC64_GOT_DTPREL16_HI","R_PPC64_GOT_DTPREL16_LO_DS","R_PPC64_GOT_TLSGD16","R_PPC64_GOT_TLSGD16_HA","R_PPC64_GOT_TLSGD16_HI","R_PPC64_GOT_TLSGD16_LO","R_PPC64_GOT_TLSLD16","R_PPC64_GOT_TLSLD16_HA","R_PPC64_GOT_TLSLD16_HI","R_PPC64_GOT_TLSLD16_LO","R_PPC64_GOT_TPREL16_DS","R_PPC64_GOT_TPREL16_HA","R_PPC64_GOT_TPREL16_HI","R_PPC64_GOT_TPREL16_LO_DS","R_PPC64_IRELATIVE","R_PPC64_JMP_IREL","R_PPC64_JMP_SLOT","R_PPC64_NONE","R_PPC64_PLT16_HA","R_PPC64_PLT16_HI","R_PPC64_PLT16_LO","R_PPC64_PLT16_LO_DS","R_PPC64_PLT32","R_PPC64_PLT64","R_PPC64_PLTGOT16","R_PPC64_PLTGOT16_DS","R_PPC64_PLTGOT16_HA","R_PPC64_PLTGOT16_HI","R_PPC64_PLTGOT16_LO","R_PPC64_PLTGOT16_LO_DS","R_PPC64_PLTREL32","R_PPC64_PLTREL64","R_PPC64_REL14","R_PPC64_REL14_BRNTAKEN","R_PPC64_REL14_BRTAKEN","R_PPC64_REL16","R_PPC64_REL16_HA","R_PPC64_REL16_HI","R_PPC64_REL16_LO","R_PPC64_REL24","R_PPC64_REL32","R_PPC64_REL64","R_PPC64_RELATIVE","R_PPC64_SECTOFF","R_PPC64_SECTOFF_DS","R_PPC64_SECTOFF_HA","R_PPC64_SECTOFF_HI","R_PPC64_SECTOFF_LO","R_PPC64_SECTOFF_LO_DS","R_PPC64_TLS","R_PPC64_TLSGD","R_PPC64_TLSLD","R_PPC64_TOC","R_PPC64_TOC16","R_PPC64_TOC16_DS","R_PPC64_TOC16_HA","R_PPC64_TOC16_HI","R_PPC64_TOC16_LO","R_PPC64_TOC16_LO_DS","R_PPC64_TOCSAVE","R_PPC64_TPREL16","R_PPC64_TPREL16_DS","R_PPC64_TPREL16_HA","R_PPC64_TPREL16_HI","R_PPC64_TPREL16_HIGH","R_PPC64_TPREL16_HIGHA","R_PPC64_TPREL16_HIGHER","R_PPC64_TPREL16_HIGHERA","R_PPC64_TPREL16_HIGHEST","R_PPC64_TPREL16_HIGHESTA","R_PPC64_TPREL16_LO","R_PPC64_TPREL16_LO_DS","R_PPC64_TPREL64","R_PPC64_UADDR16","R_PPC64_UADDR32","R_PPC64_UADDR64","R_PPC_ADDR14","R_PPC_ADDR14_BRNTAKEN","R_PPC_ADDR14_BRTAKEN","R_PPC_ADDR16","R_PPC_ADDR16_HA","R_PPC_ADDR16_HI","R_PPC_ADDR16_LO","R_PPC_ADDR24","R_PPC_ADDR32","R_PPC_COPY","R_PPC_DIAB_RELSDA_HA","R_PPC_DIAB_RELSDA_HI","R_PPC_DIAB_RELSDA_LO","R_PPC_DIAB_SDA21_HA","R_PPC_DIAB_SDA21_HI","R_PPC_DIAB_SDA21_LO","R_PPC_DTPMOD32","R_PPC_DTPREL16","R_PPC_DTPREL16_HA","R_PPC_DTPREL16_HI","R_PPC_DTPREL16_LO","R_PPC_DTPREL32","R_PPC_EMB_BIT_FLD","R_PPC_EMB_MRKREF","R_PPC_EMB_NADDR16","R_PPC_EMB_NADDR16_HA","R_PPC_EMB_NADDR16_HI","R_PPC_EMB_NADDR16_LO","R_PPC_EMB_NADDR32","R_PPC_EMB_RELSDA","R_PPC_EMB_RELSEC16","R_PPC_EMB_RELST_HA","R_PPC_EMB_RELST_HI","R_PPC_EMB_RELST_LO","R_PPC_EMB_SDA21","R_PPC_EMB_SDA2I16","R_PPC_EMB_SDA2REL","R_PPC_EMB_SDAI16","R_PPC_GLOB_DAT","R_PPC_GOT16","R_PPC_GOT16_HA","R_PPC_GOT16_HI","R_PPC_GOT16_LO","R_PPC_GOT_DTPREL16","R_PPC_GOT_DTPREL16_HA","R_PPC_GOT_DTPREL16_HI","R_PPC_GOT_DTPREL16_LO","R_PPC_GOT_TLSGD16","R_PPC_GOT_TLSGD16_HA","R_PPC_GOT_TLSGD16_HI","R_PPC_GOT_TLSGD16_LO","R_PPC_GOT_TLSLD16","R_PPC_GOT_TLSLD16_HA","R_PPC_GOT_TLSLD16_HI","R_PPC_GOT_TLSLD16_LO","R_PPC_GOT_TPREL16","R_PPC_GOT_TPREL16_HA","R_PPC_GOT_TPREL16_HI","R_PPC_GOT_TPREL16_LO","R_PPC_IRELATIVE","R_PPC_JMP_SLOT","R_PPC_LOCAL24PC","R_PPC_NONE","R_PPC_PLT16_HA","R_PPC_PLT16_HI","R_PPC_PLT16_LO","R_PPC_PLT32","R_PPC_PLTREL24","R_PPC_PLTREL32","R_PPC_REL14","R_PPC_REL14_BRNTAKEN","R_PPC_REL14_BRTAKEN","R_PPC_REL16","R_PPC_REL16_HA","R_PPC_REL16_HI","R_PPC_REL16_LO","R_PPC_REL24","R_PPC_REL32","R_PPC_RELATIVE","R_PPC_SDAREL16","R_PPC_SECTOFF","R_PPC_SECTOFF_HA","R_PPC_SECTOFF_HI","R_PPC_SECTOFF_LO","R_PPC_TLS","R_PPC_TLSGD","R_PPC_TLSLD","R_PPC_TOC16","R_PPC_TPREL16","R_PPC_TPREL16_HA","R_PPC_TPREL16_HI","R_PPC_TPREL16_LO","R_PPC_TPREL32","R_PPC_UADDR16","R_PPC_UADDR32","R_RISCV_32","R_RISCV_32_PCREL","R_RISCV_64","R_RISCV_ADD16","R_RISCV_ADD32","R_RISCV_ADD64","R_RISCV_ADD8","R_RISCV_ALIGN","R_RISCV_BRANCH","R_RISCV_CALL","R_RISCV_CALL_PLT","R_RISCV_COPY","R_RISCV_GOT_HI20","R_RISCV_HI20","R_RISCV_IRELATIVE","R_RISCV_JAL","R_RISCV_JUMP_SLOT","R_RISCV_LO12_I","R_RISCV_LO12_S","R_RISCV_NONE","R_RISCV_PCREL_HI20","R_RISCV_PCREL_LO12_I","R_RISCV_PCREL_LO12_S","R_RISCV_RELATIVE","R_RISCV_RELAX","R_RISCV_RVC_BRANCH","R_RISCV_RVC_JUMP","R_RISCV_RVC_LUI","R_RISCV_SET16","R_RISCV_SET32","R_RISCV_SET6","R_RISCV_SET8","R_RISCV_SUB16","R_RISCV_SUB32","R_RISCV_SUB6","R_RISCV_SUB64","R_RISCV_SUB8","R_RISCV_TLS_DTPMOD32","R_RISCV_TLS_DTPMOD64","R_RISCV_TLS_DTPREL32","R_RISCV_TLS_DTPREL64","R_RISCV_TLS_GD_HI20","R_RISCV_TLS_GOT_HI20","R_RISCV_TLS_TPREL32","R_RISCV_TLS_TPREL64","R_RISCV_TPREL_ADD","R_RISCV_TPREL_HI20","R_RISCV_TPREL_LO12_I","R_RISCV_TPREL_LO12_S","R_X86_64_16","R_X86_64_32","R_X86_64_32S","R_X86_64_64","R_X86_64_8","R_X86_64_COPY","R_X86_64_DTPMOD64","R_X86_64_DTPOFF32","R_X86_64_DTPOFF64","R_X86_64_GLOB_DAT","R_X86_64_GOT32","R_X86_64_GOT64","R_X86_64_GOTOFF64","R_X86_64_GOTPC32","R_X86_64_GOTPC32_TLSDESC","R_X86_64_GOTPC64","R_X86_64_GOTPCREL","R_X86_64_GOTPCREL64","R_X86_64_GOTPCRELX","R_X86_64_GOTTPOFF","R_X86_64_IRELATIVE","R_X86_64_JUMP_SLOT","R_X86_64_NONE","R_X86_64_PC16","R_X86_64_PC32","R_X86_64_PC64","R_X86_64_PC8","R_X86_64_PLT32","R_X86_64_PLTOFF64","R_X86_64_RELATIVE","R_X86_64_RELATIVE64","R_X86_64_REX_GOTPCRELX","R_X86_64_SIZE32","R_X86_64_SIZE64","R_X86_64_TLSDESC","R_X86_64_TLSDESC_CALL","R_X86_64_TLSGD","R_X86_64_TLSLD","R_X86_64_TPOFF32","R_X86_64_TPOFF64","SHF_ALLOC","SHF_ARM_PURECODE","SHF_COMPRESSED","SHF_EXECINSTR","SHF_GROUP","SHF_INFO_LINK","SHF_LINK_ORDER","SHF_MASKOS","SHF_MASKPROC","SHF_MERGE","SHF_NONE","SHF_OS_NONCONFORMING","SHF_STRINGS","SHF_TLS","SHF_WRITE","SHF_X86_64_LARGE","SHN_ABS","SHN_COMMON","SHN_UNDEF","SHN_XINDEX","SHT_AARCH64_ATTRIBUTES","SHT_AARCH64_ATTRIBUTES_SECTION_NAME","SHT_ARM_ATTRIBUTES","SHT_ARM_DEBUGOVERLAY","SHT_ARM_EXIDX","SHT_ARM_OVERLAYSECTION","SHT_ARM_PREEMPTMAP","SHT_DYNAMIC","SHT_DYNSYM","SHT_FINI_ARRAY","SHT_GNU_ATTRIBUTES","SHT_GNU_HASH","SHT_GNU_LIBLIST","SHT_GNU_VERDEF","SHT_GNU_VERNEED","SHT_GNU_VERSYM","SHT_GROUP","SHT_HASH","SHT_HIOS","SHT_HIPROC","SHT_HIUSER","SHT_IA_64_EXT","SHT_IA_64_UNWIND","SHT_INIT_ARRAY","SHT_LOOS","SHT_LOPROC","SHT_LOUSER","SHT_NOBITS","SHT_NOTE","SHT_NULL","SHT_PREINIT_ARRAY","SHT_PROGBITS","SHT_REL","SHT_RELA","SHT_RISCV_ATTRIBUTES","SHT_RISCV_ATTRIBUTES_SECTION_NAME","SHT_SHLIB","SHT_STRTAB","SHT_SYMTAB","SHT_SYMTAB_SHNDX","SHT_X86_64_UNWIND","STB_GLOBAL","STB_GNU_UNIQUE","STB_HIOS","STB_HIPROC","STB_LOCAL","STB_LOOS","STB_LOPROC","STB_WEAK","STO_AARCH64_VARIANT_PCS","STO_PPC64_LOCAL_BIT","STO_PPC64_LOCAL_MASK","STO_RISCV_VARIANT_CC","STT_COMMON","STT_FILE","STT_FUNC","STT_GNU_IFUNC","STT_HIOS","STT_HIPROC","STT_LOOS","STT_LOPROC","STT_NOTYPE","STT_OBJECT","STT_SECTION","STT_TLS","STV_DEFAULT","STV_HIDDEN","STV_INTERNAL","STV_PROTECTED","VER_DEF_CURRENT","VER_FLG_BASE","VER_FLG_INFO","VER_FLG_WEAK","VER_NDX_GLOBAL","VER_NDX_HIDDEN","VER_NDX_LOCAL","VER_NDX_VERSION","VER_NEED_CURRENT","CompressionHeader","Elf32_Chdr","Elf64_Chdr","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","ch_addralign","ch_addralign","ch_addralign","ch_reserved","ch_size","ch_size","ch_size","ch_type","ch_type","ch_type","clone","eq","fmt","from","from","from","into","into","into","parse_at","size_for","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Dyn","DynamicTable","Elf32_Dyn","Elf64_Dyn","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","d_ptr","d_tag","d_tag","d_tag","d_un","d_un","d_val","eq","fmt","from","from","from","into","into","into","parse_at","size_for","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AnyEndian","Big","BigEndian","EndianParse","Little","LittleEndian","NativeEndian","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","default","default","default","eq","eq","eq","fmt","from","from","from","from_ei_data","from_ei_data","from_ei_data","from_ei_data","into","into","into","is_big","is_little","is_little","is_little","is_little","parse_i32_at","parse_i64_at","parse_u16_at","parse_u32_at","parse_u64_at","parse_u8_at","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Class","ELF32","ELF32_EHDR_TAILSIZE","ELF64","ELF64_EHDR_TAILSIZE","Elf32_Ehdr","Elf64_Ehdr","FileHeader","abiversion","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","e_ehsize","e_ehsize","e_ehsize","e_entry","e_entry","e_entry","e_flags","e_flags","e_flags","e_ident","e_ident","e_machine","e_machine","e_machine","e_phentsize","e_phentsize","e_phentsize","e_phnum","e_phnum","e_phnum","e_phoff","e_phoff","e_phoff","e_shentsize","e_shentsize","e_shentsize","e_shnum","e_shnum","e_shnum","e_shoff","e_shoff","e_shoff","e_shstrndx","e_shstrndx","e_shstrndx","e_type","e_type","e_type","e_version","e_version","endianness","eq","eq","fmt","fmt","from","from","from","from","into","into","into","into","osabi","parse_ident","parse_tail","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","SymbolDefinition","SymbolNamesIterator","SymbolRequirement","SymbolVersionTable","VerDef","VerDefAux","VerDefAuxIterator","VerDefIterator","VerNeed","VerNeedAux","VerNeedAuxIterator","VerNeedIterator","VersionIndex","VersionIndexTable","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","eq","eq","eq","eq","eq","eq","file","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","get_definition","get_requirement","hash","hash","hidden","hidden","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_global","is_hidden","is_local","name","names","new","new","new","new","new","new","next","next","next","next","next","parse_at","parse_at","parse_at","parse_at","parse_at","size_for","size_for","size_for","size_for","size_for","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vd_cnt","vd_flags","vd_hash","vd_ndx","vda_name","vn_cnt","vn_file","vna_flags","vna_hash","vna_name","vna_other","GnuHashHeader","GnuHashTable","SysVHashHeader","SysVHashTable","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","eq","eq","find","find","fmt","fmt","fmt","fmt","from","from","from","from","gnu_hash","hdr","into","into","into","into","nbloom","nbucket","nbucket","nchain","new","new","nshift","parse_at","parse_at","size_for","size_for","sysv_hash","table_start_idx","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","GnuAbiTag","GnuBuildId","Note","NoteAny","NoteGnuAbiTag","NoteGnuBuildId","NoteIterator","Unknown","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","desc","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_iter","major","minor","n_type","name","new","next","os","parse_at","size_for","subminor","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","BadEntsize","BadMagic","BadOffset","IntegerOverflow","ParseAt","ParseError","ParsingIterator","ParsingTable","SliceReadError","StringTableMissingNul","TryFromIntError","TryFromSliceError","UnexpectedAlignment","UnexpectedSectionType","UnexpectedSegmentType","UnsupportedElfClass","UnsupportedElfEndianness","UnsupportedVersion","Utf8Error","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get","into","into","into","into_iter","into_iter","is_empty","iter","len","new","new","next","parse_at","size_for","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_entsize","Elf32_Rel","Elf32_Rela","Elf64_Rel","Elf64_Rela","Rel","RelIterator","Rela","RelaIterator","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","eq","eq","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","parse_at","parse_at","r_addend","r_addend","r_addend","r_info","r_info","r_info","r_info","r_offset","r_offset","r_offset","r_offset","r_offset","r_offset","r_sym","r_sym","r_type","r_type","size_for","size_for","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Elf32_Shdr","Elf64_Shdr","SectionHeader","SectionHeaderTable","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","eq","fmt","from","from","from","into","into","into","parse_at","sh_addr","sh_addr","sh_addr","sh_addralign","sh_addralign","sh_addralign","sh_entsize","sh_entsize","sh_entsize","sh_flags","sh_flags","sh_flags","sh_info","sh_info","sh_info","sh_link","sh_link","sh_link","sh_name","sh_name","sh_name","sh_offset","sh_offset","sh_offset","sh_size","sh_size","sh_size","sh_type","sh_type","sh_type","size_for","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Elf32_Phdr","Elf64_Phdr","ProgramHeader","SegmentTable","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","eq","fmt","from","from","from","into","into","into","p_align","p_align","p_align","p_filesz","p_filesz","p_filesz","p_flags","p_flags","p_flags","p_memsz","p_memsz","p_memsz","p_offset","p_offset","p_offset","p_paddr","p_paddr","p_paddr","p_type","p_type","p_type","p_vaddr","p_vaddr","p_vaddr","parse_at","size_for","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","StringTable","borrow","borrow_mut","clone","default","fmt","from","get","get_raw","into","new","try_from","try_into","type_id","Elf32_Sym","Elf64_Sym","Symbol","SymbolTable","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","eq","fmt","from","from","from","into","into","into","is_undefined","parse_at","size_for","st_bind","st_info","st_info","st_name","st_name","st_name","st_other","st_other","st_shndx","st_shndx","st_shndx","st_size","st_size","st_size","st_symtype","st_value","st_value","st_value","st_vis","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"elf"],[57,"elf::abi"],[1230,"elf::compression"],[1269,"elf::dynamic"],[1306,"elf::endian"],[1359,"elf::file"],[1448,"elf::gnu_symver"],[1624,"elf::hash"],[1681,"elf::note"],[1747,"elf::parse"],[1807,"elf::relocation"],[1884,"elf::section"],[1944,"elf::segment"],[1998,"elf::string_table"],[2012,"elf::symbol"],[2062,"core::default"],[2063,"core::option"],[2064,"core::result"],[2065,"core::any"],[2066,"core::fmt"],[2067,"core::fmt"],[2068,"core::cmp"],[2069,"core::fmt"],[2070,"core::array"],[2071,"core::num::error"]],"d":["This struct collects the common sections found in ELF …","This type encapsulates the bytes-oriented interface for …","","Contains ELF constants defined in the ELF gABI and various …","","","","","Parsing CompressionHeader from compressed ELF sections","","Parsing <code>.dynamic</code> section or PT_DYNAMIC segment contents","Get the .dynamic section or abi::PT_DYNAMIC segment …",".dynamic section or PT_DYNAMIC segment (both point to the …","Get the ELF file’s <code>.dynsym</code> and associated strtab (if any)",".dynsym section","strtab for .dynsym","","An all-safe-code endian-aware integer parsing …","Parsing the ELF File Header","Efficiently locate the set of common sections found in ELF …","Returns the argument unchanged.","Returns the argument unchanged.",".gnu.hash section","Parsing GNU extension sections for dynamic symbol …","Parsing hash table sections for symbol tables: <code>.hash</code>, and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Do the minimal parsing work to get an ElfBytes handle from …","Parsing ELF notes: <code>.note.*</code>, SHT_NOTE, PT_NOTE","Utilities to drive safe and lazy parsing of ELF structures.","Parsing relocation sections: <code>.rel.*</code>, <code>.rela.*</code>, SHT_REL, …","Parsing the Section Header table","Get the section data for a given SectionHeader, alongside …","Get the section data for a given SectionHeader, and …","Get the section data for a given SectionHeader, and …","Get the section data for a given SectionHeader, and …","Get the section data for a given SectionHeader, and …","Parse section headers until one is found with the given …","Get this Elf object’s zero-alloc lazy-parsing …","Get this ELF object’s SectionHeaderTable alongside its …","Parsing the Program Header table aka Segment table aka …","Get the segment’s file data for a given segment/…","Get the segment’s file data for a given ProgramHeader, …","Get this Elf object’s zero-alloc lazy-parsing …","Interpreting string table sections: <code>.strtab</code>, SHT_STRTAB","Parsing symbol table sections: <code>.symtab</code>, <code>.dynsym</code>","Get the ELF file’s <code>.symtab</code> and associated strtab (if any)","Locate the section data for the various GNU Symbol …",".symtab section","strtab for .symtab",".hash section","","","","","","","Configuration alternative created","Direct binding enabled","Disp reloc applied at build time","Disp reloc applied at run-time","Object is modified after built","Filtee terminates filters search","Set RTLD_GLOBAL for this object","Global auditing required","Set RTLD_GROUP for this object","","Set RTLD_INITFIRST for this object","Object is used to interpose","","Trigger filtee loading at runtime","","Ignore default lib search path","Set RTLD_NODELETE for this object","Object has no-direct binding","Object can’t be dldump’ed","","","Set RTLD_NOOPEN for this object","","Set RTLD_NOW for this object","$ORIGIN must be handled","","Singleton symbols are used","","Object has individual interposers","","","If set in a shared object or executable, this flag …","This flag signifies that the object being loaded may make …","Symbols from next object are not generally available","Lazyload following object","If set in a shared object or executable, this flag …","If this flag is set in a shared object library, the …","If this flag is not set, no relocation entry should cause …","","","indicates PLTs enabled with Branch Target Identification …","indicates PLTs enabled with Pointer Authentication.","must be present if there are R_{CLS}_JUMP_SLOT relocations …","holds the address of the pre-emption map for platforms …","gives the number of entries in the dynamic symbol table, …","Object auditing","If present in a shared object or executable, this entry …","","Configuration information","This member is used for debugging. Its contents are not …","Dependency auditing","Feature selection (DTF_*)","This element holds the address of the termination function.","This element holds the address of the array of pointers to …","This element holds the size in bytes of the array of …","This element holds flag values specific to the object …","State flags, see DF_1_* below.","Start of conflict section","Size of conflict section","GNU-style hash table","Library list","Size of library list","Prelinking timestamp","Guile address of entry thunk","Guile frame maps","Guile offset of GC roots","Guile size in machine words of GC roots","Guile bytecode version","This element holds the address of the symbol hash table. …","Values in [DT_LOOS, DT_HIOS] are reserved for operating …","Values in [DT_LOPROC, DT_HIPROC] are reserved for …","This element holds the address of the initialization …","This element holds the address of the array of pointers to …","This element holds the size in bytes of the array of …","If present, this entry’s d_ptr member holds the address …","Values in [DT_LOOS, DT_HIOS] are reserved for operating …","Values in [DT_LOPROC, DT_HIPROC] are reserved for …","","","Move table","This element holds the string table offset of a …","An entry with a DT_NULL tag marks the end of the _DYNAMIC …","This element holds an address associated with the …","PLT padding","","This member specifies the type of relocation entry to …","This element holds the total size, in bytes, of the …","Flags for DT_* entries, effecting the following DT_* entry","","","","","","","This element holds the address of the array of pointers to …","This element holds the size in bytes of the array of …","This element is similar to DT_RELA, except its table has …","This element holds the address of a relocation table. …","","This element holds the size, in bytes, of the DT_RELA …","This element holds the total size, in bytes, of the …","","This element holds the size, in bytes, of the DT_REL …","This element holds the total size, in bytes, of the DT_REL …","An object must have the dynamic tag DT_RISCV_VARIANT_CC if …","This element holds the string table offset of a …","This element holds the string table offset of a …","This element holds the string table offset of a …","This element holds the size, in bytes, of the string table.","This element holds the address of the string table. Symbol …","This element’s presence in a shared object library …","This element holds the size, in bytes, of a symbol table …","Entry size of syminfo table","Syminfo table","Size of syminfo table (in bytes)","This element holds the address of the symbol table.","This element holds the address of the SHT_SYMTAB_SHNDX …","This member’s absence signifies that no relocation entry …","","","Address of version definition table","Number of version definitions","Address of table with needed versions","Number of needed versions","","Set in executable file headers (e_type = ET_EXEC or …","Set in executable file headers (e_type = ET_EXEC or …","The ELF file contains BE-8 code, suitable for execution on …","This masks an 8-bit version number, the version of the ABI …","","","","","","","Legacy code (ABI version 4 and earlier) generated by …","Compatible with legacy (pre version 5) gcc use as …","Compatible with legacy (pre version 5) gcc use as …","","PowerPC embedded flag","PowerPC -mrelocatable flag","PowerPC -mrelocatable-lib flag","","This is used as a mask to test for one of the above …","","","","This bit is set when the binary targets the C ABI.","This bit is set when the binary targets the E ABI.","This bit is set when the binary requires the RVTSO memory …","Location of ABI version field in ELF file header ident …","Location of ELF class field in ELF file header ident array","Location of data format field in ELF file header ident …","Location of first ELF magic number byte","Location of second ELF magic number byte","Location of third ELF magic number byte","Location of fourth ELF magic number byte","Length of ELF file header platform-independent …","Location of OS ABI field in ELF file header ident array","Start of padding bytes","Location of ELF version field in ELF file header ident …","32-bit ELF file","64-bit ELF file","Invalid ELF file class","Values in [ELFCOMPRESS_LOOS, ELFCOMPRESS_HIOS] are …","Values in [ELFCOMPRESS_LOPROC, ELFCOMPRESS_HIPROC] are …","Values in [ELFCOMPRESS_LOOS, ELFCOMPRESS_HIOS] are …","Values in [ELFCOMPRESS_LOPROC, ELFCOMPRESS_HIPROC] are …","ZLIB/DEFLATE","zstd algorithm","2’s complement values, with the least significant byte …","2’s complement values, with the most significant byte …","Invalid ELF data format","ELF magic number byte 1","ELF magic number byte 2","ELF magic number byte 3","ELF magic number byte 4","","AIX","Amiga Research OS","Nuxi CloudABI","The FenixOS highly scalable multi-core OS","FreeBSD","GNU","Hewlett-Packard HP-UX","IRIX","Linux historical - alias for ELFOSABI_GNU","Novell Modesto","NetBSD","No extensions or unspecified","Hewlett-Packard Non-Stop Kernel","Open BSD","Open VMS","Stratus Technologies OpenVOS","Sun Solaris","Alias of unspecified for UNIX System V ABI","Compaq TRU64 UNIX","GNU-extension notes have this name","","","","","Intel 80386","Freescale 56800EX Digital Signal Controller (DSC)","Motorola MC68HC05 Microcontroller","Motorola MC68HC08 Microcontroller","Motorola MC68HC11 Microcontroller","Motorola M68HC12","Motorola MC68HC16 Microcontroller","Motorola 68000","Renesas 78KOR family","Intel 8051 and variants","Intel 80860","Motorola 88000","Intel 80960","ARM 64-bit architecture (AARCH64)","Digital Alpha","Altera Nios II soft-core processor","AMD GPU architecture","Argonaut RISC Core, Argonaut Technologies Inc.","Arca RISC Microprocessor","ARC International ARCompact processor (old …","Synopsys ARCompact V2","ARM 32-bit architecture (AARCH32)","Atmel AVR 8-bit microcontroller","Atmel Corporation 32-bit microprocessor family","Beyond BA1 CPU architecture","Beyond BA2 CPU architecture","Analog Devices Blackfin (DSP) processor","Linux BPF","Infineon C16x/XC16x processor","Paneve CDP architecture family","Freescale Communication Engine RISC core","CloudShield architecture family","Cognitive Smart Memory Processor","Motorola ColdFire","Bluechip Systems CoolEngine","KIPO-KAIST Core-A 1st generation processor family","KIPO-KAIST Core-A 2nd generation processor family","National Semiconductor CompactRISC microprocessor","National Semiconductor CompactRISC CR16 16-bit …","Cray Inc. NV2 vector architecture","Axis Communications 32-bit embedded processor","National Semiconductor CompactRISC CRX microprocessor","CSR Kalimba architecture family","NVIDIA CUDA architecture","Cypress M8C microprocessor","Mitsubishi D10V","Mitsubishi D30V","New Japan Radio (NJR) 24-bit DSP Processor","Microchip Technology dsPIC30F Digital Signal Controller","Icera Semiconductor Inc. Deep Execution Processor","Cyan Technology eCOG1X family","Cyan Technology eCOG16 family","Cyan Technology eCOG1X family","Cyan Technology eCOG2 microprocessor","Freescale Extended Time Processing Unit","eXcess: 16/32/64-bit configurable embedded CPU","Fujitsu F2MC16","Element 14 64-bit DSP Processor","Fujitsu FR20","Fujitsu FR30","FTDI Chip FT32 high performance 32-bit RISC architecture","Siemens FX66 microcontroller","Hitachi H8S","Hitachi H8/300","Hitachi H8/300H","Hitachi H8/500","Harvard University machine-independent object files","Intel MCU","Intel IA-64 processor architecture","Reserved by Intel","Reserved by Intel","Reserved by Intel","Reserved by Intel","Reserved by Intel","Ubicom IP2xxx microcontroller family","Infineon Technologies 32-bit embedded processor","Intel K10M","KM211 KM32 32-bit processor","KM211 KMX16 16-bit processor","KM211 KMX32 32-bit processor","KM211 KMX8 8-bit processor","KM211 KVARC processor","Intel L10M","RISC processor for Lattice FPGA architecture","Renesas M16C series microprocessors","AT&amp;T WE 32100","Renesas M32C series microprocessors","Mitsubishi M32R","M2000 Reconfigurable RISC Microprocessor","MAX Processor","Dallas Semiconductor MAXQ30 Core Micro-controllers","Microchip 8-bit PIC(r) family","MCST Elbrus general purpose hardware architecture","Toyota ME16 processor","Imagination Technologies META processor architecture","Xilinx MicroBlaze 32-bit RISC soft processor core","MIPS I Architecture","MIPS RS3000 Little-endian","Stanford MIPS-X","Fujitsu MMA Multimedia Accelerator","STMicroelectronics 64bit VLIW Data Signal Processor","Donald Knuth’s educational 64-bit processor","Matsushita MN10200","Matsushita MN10300","Moxie processor family","Texas Instruments embedded microcontroller msp430","Sony nCPU embedded RISC processor","Denso NDR1 microprocessor","Andes Technology compact code size embedded RISC processor …","No machine","Nanoradio Optimized RISC","National Semiconductor 32000 series","Open8 8-bit RISC soft processor core","OpenRISC 32-bit embedded processor","Hewlett-Packard PA-RISC","Siemens PCP","Digital Equipment Corp. PDP-10","Digital Equipment Corp. PDP-11","Sony DSP Processor","picoJava","PowerPC","64-bit PowerPC","SiTera Prism","QUALCOMM DSP6 Processor","Renesas R32C series microprocessors","Motorola RCE","TRW RH-32","RISC-V","Renesas RL78 family","Freescale RS08 embedded processor","Renesas RX family","IBM System/370 Processor","IBM System/390 Processor","Sunplus S+core7 RISC processor","Sharp embedded microprocessor","Seiko Epson C17 family","S1C33 Family of Seiko Epson processors","Hitachi SH","Analog Devices SHARC family of 32-bit DSP processors","Infineon Technologies SLE9X core","Trebia SNP 1000 processor","SPARC","Enhanced instruction set SPARC","SPARC Version 9","IBM SPU/SPC","STMicroelectronics ST100 processor","STMicroelectronics ST19 8-bit microcontroller","STMicroelectronics (www.st.com) ST200 microcontroller","STMicroelectronics ST7 8-bit microcontroller","STMicroelectronics ST9+ 8/16 bit microcontroller","Motorola Star*Core processor","STMicroeletronics STM8 8-bit microcontroller","STMicroelectronics STxP7x family of configurable and …","Silicon Graphics SVx","Tilera TILE64 multicore architecture family","Tilera TILE-Gx multicore architecture family","Tilera TILEPro multicore architecture family","Advanced Logic Corp. TinyJ embedded processor family","Texas Instruments Application Specific RISC Processor, …","The Texas Instruments TMS320C2000 DSP family","The Texas Instruments TMS320C55x DSP family","The Texas Instruments TMS320C6000 DSP family","Texas Instruments Programmable Realtime Unit","Thompson Multimedia General Purpose Processor","Tenor Network TPC processor","Siemens TriCore embedded processor","NXP Semiconductors TriMedia architecture family","Altium TSK3000 core","Microprocessor series from PKU-Unity Ltd. and MPRC of …","NEC V800","NEC v850","Digital VAX","Alphamosaic VideoCore processor","Broadcom VideoCore III processor","Broadcom VideoCore V processor","Controls and Data Services VISIUMcore processor","Fujitsu VPP500","AMD x86-64 architecture","XMOS xCORE processor family","Motorola XGATE embedded processor","New Japan Radio (NJR) 16-bit DSP Processor","Tensilica Xtensa Architecture","Zilog Z80","LSI Logic 16-bit DSP Processor","Core file","Shared object file","Executable file","Operating system-specific","Processor-specific","Operating system-specific","Processor-specific","64-255 Architecture-specific value range No file type","Relocatable file","Current version","Invalid version","","","","x86 io permission bitmap (1=deny)","i386 TLS slots (struct user_desc)","ARM hardware breakpoint registers","ARM hardware watchpoint registers","ARM pointer authentication address keys","ARM pointer authentication generic key","AArch64 pointer authentication enabled keys","ARM pointer authentication code masks","ARM Scalable Vector Extension registers","ARM system call number","AArch64 tagged address control.","ARM TLS register","ARM VFP/NEON registers","Contains copy of asrset struct","Contains copy of auxv array","Contains information about mapped files","Contains copy of fpregset struct","ABI information The descriptor consists of words: word 0: …","Build ID bits as generated by ld –build-id.","Version note generated by GNU gold containing a version …","Synthetic hwcap information","Program property note which describes special handling …","Contains copy of gwindows struct","Contains copy of lwpinfo struct","Contains copy of lwpstatus struct","String from sysinfo(SI_PLATFORM)","Data Stream Control Register","Event Based Branch Registers","Memory Protection Keys registers","Performance Monitor Registers","Program Priority Register","PowerPC SPE/EVR registers","Target Address Register","TM checkpointed Data Stream Control Register","TM checkpointed FPR Registers","TM checkpointed GPR Registers","TM checkpointed Program Priority Register","TM checkpointed Target Address Register","TM checkpointed VMX Registers","TM checkpointed VSX Registers","TM Special Purpose Registers","/// PowerPC Altivec/VMX registers","PowerPC VSX registers","Contains copy of prcred struct","Contains copy of fpregset struct","Contains copy of fprxregset struct","Contains copy of prpsinfo struct","Contains copy of prstatus struct","Contains copy of user_fxsr_struct","Contains copy of prxregset struct","Contains copy of psinfo struct","Contains copy of pstatus struct","Contains copy of siginfo_t, size might increase","Contains copy of task structure","Contains copy of utsname struct","Vmcore Device Dump Note","x86 extended state using xsave","","","","Readable program segment","Writable program segment","Executable program segment","If the number of program headers is greater than or equal …","","","","PowerPC specific values for the DT_PPC_OPT Dyn entry.","Architecture compatibility information.","Reserved for MTE memory tag data dumps in core files (if …","(if present) describes the location of a program’s …","Architecture compatibility information.","Masks bits describing the base architecture required by …","Architecture v4","Architecture v4T","Architecture v5T","Architecture v5TE","Architecture v5TEJ","Architecture v6","Architecture v6K","Architecture v6KZ","Architecture v6M (e.g. Cortex-M0)","Architecture v6S-M (e.g. Cortex-M0)","Architecture v6T2","Architecture v7 (in this case the architecture profile may …","Architecture v7E-M","The needed architecture is unknown or specified in some …","Masks bits describing the format of data in subsequent …","See …","There are no additional words of data. However, if …","Masks bits describing the architecture profile required by …","(‘A’&lt;&lt;16) The executable file requires the Application …","(‘S’&lt;&lt;16) The executable file requires the …","(‘M’&lt;&lt;16) The executable file requires the …","The architecture has no profile variants, or the image has …","(‘R’&lt;&lt;16) The executable file requires the Real-Time …","alias for unwind","Exception unwind tables","Dynamic linking information","GCC .eh_frame_hdr segment","The segment contains .note.gnu.property section","Read-only after relocation","Indicates stack executability","Values between [PT_LOOS, PT_HIOS] in this inclusive range …","Values between [PT_LOPROC, PT_HIPROC] in this inclusive …","Program interpreter","Loadable program segment","Values between [PT_LOOS, PT_HIOS] in this inclusive range …","Values between [PT_LOPROC, PT_HIPROC] in this inclusive …","Auxiliary information","Program header table entry unused","The program header table","","Unused","Thread-local storage segment","Direct 16-bit.","Direct 32 bit.","Direct 64 bit.","Dir. ADD imm. from bits 11:0.","P-page-rel. GOT off. ADRP: u32 = 32:12.","PC-rel. ADR imm. from bits 20:0.","Page-rel. ADRP imm. from 32:12.","Likewise; no overflow check.","Likewise for CALL.","PC-rel. cond. br. imm. from 20:2.","Copy symbol at runtime.","Create GOT entry.","GOT-relative 32-bit.","GOT-relative 64-bit.","PC-rel. GOT off. load imm. 20:2.","STT_GNU_IFUNC relocation.","PC-rel. B imm. from bits 27:2.","Create PLT entry.","GOT-rel. off. LD/ST imm. 14:3.","GOT-page-rel. GOT off. LD/ST: u32 = 14:3","Dir. GOT off. LD/ST imm. 11:3.","Dir. ADD imm. from bits 11:4.","Dir. ADD imm. from bits 11:1.","Likewise for bits 11:2.","Likewise for bits 11:3.","Likewise for LD/ST; no check.","PC-rel. LD imm. from bits 20:2.","GOT-rel. off. MOV{N,Z} imm. 15:0.","Likewise for MOVK; no check.","GOT-rel. o. MOV{N,Z} imm. 31:16.","Likewise for MOVK; no check.","GOT-rel. o. MOV{N,Z} imm. 47:32.","Likewise for MOVK; no check.","GOT-rel. o. MOV{N,Z} imm. 63:48.","PC-rel. MOV{N,Z} imm. from 15:0.","Likewise for MOVK; no check.","PC-rel. MOV{N,Z} imm. from 31:16.","Likewise for MOVK; no check.","PC-rel. MOV{N,Z} imm. from 47:32.","Likewise for MOVK; no check.","PC-rel. MOV{N,Z} imm. from 63:48.","Dir. MOV{N,Z} imm. from 15:0.","Dir. MOV{N,Z} imm. from 31:16.","Dir. MOV{N,Z} imm. from 47:32.","Dir. MOVZ imm. from bits 15:0.","Likewise for MOVK; no check.","Dir. MOVZ imm. from bits 31:16.","Likewise for MOVK; no check.","Dir. MOVZ imm. from bits 47:32.","Likewise for MOVK; no check.","Dir. MOV{K,Z} imm. from 63:48.","No relocation.","Direct 32 bit.","Copy symbol at runtime.","Create GOT entry.","STT_GNU_IFUNC relocation","Create PLT entry.","Adjust by program base.","TLS Descriptor.","Module number, 32 bit.","Module-relative offset, 32 bit.","TP-relative offset, 32 bit.","PC-relative 16-bit.","PC-relative 32-bit.","PC-relative 64-bit.","Adjust by program base.","TLS Descriptor.","Relax ADD.","Direct ADD imm. from 11:0.","Page-rel. ADRP imm. 32:12.","PC-rel. ADR immediate 20:0.","Relax BLR.","Direct LD off. from 11:3.","Relax LDR.","PC-rel. load immediate 20:2.","GOT-rel. MOVK imm. 15:0; no ck.","GOT-rel. MOV{N,Z} imm. 31:16.","direct ADD imm. from 11:0.","page-rel. ADRP imm. 32:12.","PC-relative ADR imm. 20:0.","GOT-rel. MOVK imm. 15:0.","GOT-rel. MOV{N,Z} 31:16.","Page-rel. ADRP: u32 = 32:12.","Direct LD off. 11:3.","PC-rel. load imm. 20:2.","GOT-rel. MOVK: u32 = 15:0.","GOT-rel. MOV{N,Z} 31:16.","DTP-rel. ADD imm. from 23:12.","DTP-rel. ADD imm. from 11:0.","Likewise; no ovfl. check.","Like 514; local dynamic model.","Like 513; local dynamic model.","Like 512; local dynamic model.","DTP-rel. LD/ST imm. 11:4.","Likewise; no check.","DTP-rel. LD/ST imm. 11:1.","Likewise; no check.","DTP-rel. LD/ST imm. 11:2.","Likewise; no check.","DTP-rel. LD/ST imm. 11:3.","Likewise; no check.","DTP-rel. LD/ST imm. 11:0.","Likewise; no check.","TLS PC-rel. load imm. 20:2.","TLS DTP-rel. MOV{N,Z} 15:0.","Likewise; MOVK; no check.","TLS DTP-rel. MOV{N,Z} 31:16.","Likewise; MOVK; no check.","TLS DTP-rel. MOV{N,Z} 47:32.","Like 516; local dynamic model.","Like 515; local dynamic model.","TP-rel. ADD imm. 23:12.","TP-rel. ADD imm. 11:0.","Likewise; no ovfl. check.","TP-rel. LD/ST off. 11:4.","Likewise; no check.","TP-rel. LD/ST off. 11:1.","Likewise; no check.","TP-rel. LD/ST off. 11:2.","Likewise; no check.","TP-rel. LD/ST off. 11:3.","Likewise; no check.","TP-rel. LD/ST off. 11:0.","Likewise; no ovfl. check.","TLS TP-rel. MOV{N,Z} 15:0.","Likewise; MOVK; no check.","TLS TP-rel. MOV{N,Z} 31:16.","Likewise; MOVK; no check.","TLS TP-rel. MOV{N,Z} 47:32.","Module number, 64 bit.","Module-relative offset, 64 bit.","TP-relative offset, 64 bit.","PC-rel. TBZ/TBNZ imm. from 15:2.","Direct 12 bit. <code>S + A</code>","Direct 16 bit. <code>S + A</code>","Direct 32 bit. <code>(S + A) | T</code>","Direct 32-bit. <code>S + A</code>","Direct 8 bit. <code>S + A</code>","Obsolete.","Obsolete.","Obsolete.","PC relative (ADD, SUB). <code>((S + A) | T) – P</code>","PC relative (ADD, SUB). <code>((S + A) | T) – P</code>","PC relative (ADD, SUB). <code>((S + A) | T) – P</code>","PC relative (ADD, SUB). <code>((S + A) | T) – P</code>","PC relative (ADD, SUB). <code>((S + A) | T) – P</code>","Deprecated, prog. base relative.","Deprecated, prog. base relative.","Program base relative (ADD,SUB). <code>((S + A) | T) – B(S)</code>","Program base relative (ADD,SUB). <code>((S + A) | T) – B(S)</code>","Program base relative (ADD,SUB). <code>((S + A) | T) – B(S)</code>","Program base relative (ADD,SUB). <code>((S + A) | T) – B(S)</code>","Program base relative (ADD,SUB). <code>((S + A) | T) – B(S)</code>","Adjust by program base. <code>B(S) + A</code>","32 bit GOT entry. <code>GOT(S) + A – GOT_ORG</code>","32 bit PC relative offset to GOT. <code>B(S) + A – P</code>","","PC relative 24 bit (BL, BLX). <code>((S + A) | T) – P</code>","dynamic reloc Copy symbol at runtime.","Create GOT entry. <code>(S + A) | T</code>","","","12 bit, GOT entry relative to GOT origin (LDR, STR). …","32 bit offset to GOT. <code>((S + A) | T) – GOT_ORG</code>","","GOT entry. <code>GOT(S) + A</code>","GOT entry relative to GOT origin (LDR). …","PC relative GOT entry. <code>GOT(S) + A – P</code>","","PC relative 24 bit (B, BL{cond}). <code>((S + A) | T) – P</code>","Create PLT entry. <code>(S + A) | T</code>","PC relative (LDC, STC). <code>S + A – P</code>","PC relative (LDC, STC). <code>S + A – P</code>","PC relative (LDC, STC). <code>S + A – P</code>","Program base relative (LDC,STC). <code>S + A – B(S)</code>","Program base relative (LDC,STC). <code>S + A – B(S)</code>","Program base relative (LDC,STC). <code>S + A – B(S)</code>","PC relative (STR{D,H}, LDR{D,SB,H,SH}). <code>S + A – P</code>","PC relative (STR{D,H}, LDR{D,SB,H,SH}). <code>S + A – P</code>","PC relative (STR{D,H}, LDR{D,SB,H,SH}). <code>S + A – P</code>","Program base relative (LDR, STR, LDRB, STRB). …","Program base relative (LDR, STR, LDRB, STRB). …","Program base relative (LDR, STR, LDRB, STRB). …","<code>S + A – P</code>","PC relative (LDR,STR,LDRB,STRB). <code>S + A – P</code>","PC relative (LDR,STR,LDRB,STRB). <code>S + A – P</code>","Deprecated, prog. base relative.","Program base relative (LDR, STR, LDRB, STRB). …","Program base relative (LDR, STR, LDRB, STRB). …","Program base relative (LDR, STR, LDRB, STRB). …","Obsolete.","Direct high 16-bit (MOVT). <code>S + A</code>","Program base relative high 16 bit (MOVT). <code>S + A – B(S)</code>","PC relative (MOVT). <code>S + A - P</code>","Direct 16-bit (MOVW). <code>(S + A) | T</code>","Program base relative 16 bit (MOVW). <code>((S + A) | T) – B(S)</code>","Program base relative 16 bit (MOVW). <code>((S + A) | T) – B(S)</code>","PC relative 16-bit (MOVW). <code>((S + A) | T) – P</code>","no reloc","Deprecated PC relative 26 bit branch. <code>((S + A) | T) – P</code>","Deprecated, 32 bit PLT address.","<code>PLT(S) + A</code>","32 bit PC relative. <code>((S + A) | T) – P</code>","PC relative 32 bit. <code>((S + A) | T) | – P</code>","PC relative 32-bit. <code>S + A - P</code>","Adjust by program base. <code>B(S) + A</code>","Program base relative. <code>((S + A) | T) – B(S)</code>","<code>((S + A) | T) – B(S)</code>","","","Direct &amp; 0x7C <code>(LDR, STR). S + A</code>","Static Thumb16 <code>(S + A) | T</code>","Static Thumb16 <code>S + A</code>","Static Thumb16 <code>S + A</code>","Static Thumb16 <code>S + A</code>","PC relative 12 bit (Thumb32 ADR.W). <code>((S + A) | T) – Pa</code>","Static Arm <code>((S + A) | T) – P</code>","Static Arm <code>((S + A) | T) – P</code>","Static Arm <code>((S + A) | T) – P</code>","PC relative 24 bit (Thumb32 BL). <code>((S + A) | T) – P</code>","GOT entry relative to GOT origin, 12 bit (Thumb32 LDR). …","PC relative &amp; 0xFFE (Thumb16 B). <code>S + A – P</code>","PC relative 20 bit (Thumb32 B{cond}.W). <code>((S + A) | T) – P</code>","PC relative 24 bit (Thumb32 B.W). <code>((S + A) | T) – P</code>","PC relative X &amp; 0x7E (Thumb16 CBZ, CBNZ). <code>S + A – P</code>","PC relative &amp; 0x1FE (Thumb16 B/B{cond}). <code>S + A – P</code>","Direct high 16 bit (Thumb32 MOVT). <code>S + A</code>","Program base relative high 16 bit (Thumb32 MOVT). …","PC relative high 16 bit (Thumb32 MOVT). <code>S + A – P</code>","Direct 16 bit (Thumb32 MOVW). <code>(S + A) | T</code>","Program base relative 16 bit (Thumb32 MOVW). …","Program base relative 16 bit (Thumb32 MOVW). …","PC relative 16 bit (Thumb32 MOVW). <code>((S + A) | T) – P</code>","PC relative 12 bit (Thumb32 LDR{D,SB,H,SH}). <code>S + A – Pa</code>","PC relative &amp; 0x3FC (Thumb16 LDR, ADD, ADR). <code>S + A – Pa</code>","obsolete/reserved","","","","obsolete/reserved","","dynamic reloc","TLS relaxation.","ID of module containing symbol.","Offset in TLS block. <code>S + A – TLS</code>","PC-rel 32 bit for global dynamic thread local data. …","","12 bit GOT entry relative to GOT origin (LDR). …","PC-rel 32 bit for GOT entry of static TLS block offset. …","PC-rel 32 bit for local dynamic thread local data. …","12 bit relative to TLS block (LDR, STR). <code>S + A – TLS</code>","32 bit offset relative to TLS block. <code>S + A – TLS</code>","12 bit relative to static TLS block (LDR, STR). …","32 bit offset relative to static TLS block. <code>S + A – tp</code>","Offset in static TLS block. <code>S + A – Tp</code>","","obsolete/reserved","<code>(S + A) &gt;&gt; 2</code>","<code>(S + A) &gt;&gt; 2</code>","<code>(S + A) &gt;&gt; 2</code>","<code>S + A</code>","<code>(S + A) &gt;&gt; 2</code>","<code>#ha(S + A)</code>","<code>#hi(S + A)</code>","","","<code>#higher(S + A)</code>","<code>#highera(S + A)</code>","<code>#highest(S + A)</code>","<code>#highesta(S + A)</code>","<code>#lo(S + A)</code>","<code>#lo(S + A) &gt;&gt; 2</code>","<code>(S + A) &gt;&gt; 2</code>","<code>(S + A - P) &gt;&gt; 2</code>","<code>S + A</code>","<code>S + A</code>","none","<code>@dtpmod</code>","<code>@dtprel</code>","<code>@dtprel</code>","<code>#ha(@dtprel)</code>","<code>#hi(@dtprel)</code>","","","<code>#higher(@dtprel)</code>","<code>#highera(@dtprel)</code>","<code>#highest(@dtprel)</code>","<code>#highesta(@dtprel)</code>","<code>#lo(@dtprel)</code>","<code>#lo(@dtprel)</code>","<code>@dtprel</code>","<code>S + A</code>","<code>G</code>","<code>G &gt;&gt; 2</code>","<code>#ha(G)</code>","<code>#hi(G)</code>","<code>#lo(G)</code>","<code>#lo(G) &gt;&gt; 2</code>","<code>@got@dtprel</code>","<code>#ha(@got@dtprel)</code>","<code>#hi(@got@dtprel)</code>","<code>#lo(@got@dtprel)</code>","<code>@got@tlsgd</code>","<code>#ha(@got@tlsgd)</code>","<code>#hi(@got@tlsgd)</code>","<code>#lo(@got@tlsgd)</code>","<code>@got@tlsld</code>","<code>#ha(@got@tlsld)</code>","<code>#hi(@got@tlsld)</code>","<code>#lo(@got@tlsld)</code>","<code>@got@tprel</code>","<code>#ha(@got@tprel)</code>","<code>#hi(@got@tprel)</code>","<code>#lo(@got@tprel)</code>","","","see below","none","<code>#ha(L)</code>","<code>#hi(L)</code>","<code>#lo(L)</code>","<code>#lo(L) &gt;&gt; 2</code>","<code>L</code>","<code>L</code>","<code>M</code>","<code>M &gt;&gt; 2</code>","<code>#ha(M)</code>","<code>#hi(M)</code>","<code>#lo(M)</code>","<code>#lo(M) &gt;&gt; 2</code>","<code>L - P</code>","<code>L - P</code>","<code>(S + A - P) &gt;&gt; 2</code>","<code>(S + A - P) &gt;&gt; 2</code>","<code>(S + A - P) &gt;&gt; 2</code>","<code>(sym+add-.)</code>","<code>(sym+add-.)@ha</code>","<code>(sym+add-.)@h</code>","<code>(sym+add-.)@l</code>","<code>(S + A - P) &gt;&gt; 2</code>","<code>S + A - P</code>","<code>S + A - P</code>","<code>B + A</code>","<code>R + A</code>","<code>(R + A) &gt;&gt; 2</code>","<code>#ha(R + A)</code>","<code>#hi(R + A)</code>","<code>#lo(R + A)</code>","<code>#lo(R + A) &gt;&gt; 2</code>","none","<code>(sym+add)@tlsgd</code>","<code>(sym+add)@tlsld</code>","<code>.TOC.</code>","<code>S + A - .TOC.</code>","<code>(S + A - .TOC.) &gt;&gt; 2</code>","<code>#ha(S + A - .TOC.)</code>","<code>#hi(S + A - .TOC.)</code>","<code>#lo(S + A - .TOC.)</code>","<code>#lo(S + A - .TOC.) &gt;&gt; 2</code>","","<code>@tprel</code>","<code>@tprel</code>","<code>#ha(@tprel)</code>","<code>#hi(@tprel)</code>","","","<code>#higher(@tprel)</code>","<code>#highera(@tprel)</code>","<code>#highest(@tprel)</code>","<code>#highesta(@tprel)</code>","<code>#lo(@tprel)</code>","<code>#lo(@tprel)</code>","<code>@tprel</code>","<code>S + A</code>","<code>S + A</code>","<code>S + A</code>","16bit address, 2 bits ignored","","","16bit absolute address","adjusted high 16bit","high 16bit of absolute address","lower 16bit of absolute address","26bit address, 2 bits ignored.","32bit absolute address","","like EMB_RELSDA, adjusted high 16","like EMB_RELSDA, but high 16 bit","like EMB_RELSDA, but lower 16 bit","like EMB_SDA21, adjusted high 16","like EMB_SDA21, but high 16 bit","like EMB_SDA21, but lower 16 bit","(sym+add)@dtpmod","(sym+add)@dtprel","(sym+add)@dtprel@ha","(sym+add)@dtprel@h","(sym+add)@dtprel@l","(sym+add)@dtprel","","","","","","","","","","","","","16 bit offset in SDA","","","","","","","","","(sym+add)@got@dtprel","(sym+add)@got@dtprel@ha","(sym+add)@got@dtprel@h","(sym+add)@got@dtprel@l","(sym+add)@got@tlsgd","(sym+add)@got@tlsgd@ha","(sym+add)@got@tlsgd@h","(sym+add)@got@tlsgd@l","(sym+add)@got@tlsld","(sym+add)@got@tlsld@ha","(sym+add)@got@tlsld@h","(sym+add)@got@tlsld@l","(sym+add)@got@tprel","(sym+add)@got@tprel@ha","(sym+add)@got@tprel@h","(sym+add)@got@tprel@l","","","","","","","","","","","PC relative 16 bit","","","(sym+add-.)","(sym+add-.)@ha","(sym+add-.)@h","(sym+add-.)@l","PC relative 26 bit","","","","","","","","(sym+add)@tls","(sym+add)@tlsgd","(sym+add)@tlsld","This is a phony reloc to handle any old fashioned TOC16 …","(sym+add)@tprel","(sym+add)@tprel@ha","(sym+add)@tprel@h","(sym+add)@tprel@l","(sym+add)@tprel","","","32-bit relocation: <code>S + A</code>","32-bit PC relative: <code>S + A - P</code>","64-bit relocation: <code>S + A</code>","16-bit label addition: <code>V + S + A</code>","32-bit label addition: <code>V + S + A</code>","64-bit label addition: <code>V + S + A</code>","8-bit label addition: <code>V + S + A</code>","Alignment statement. The addend indicates the number of …","12-bit PC-relative branch offset <code>S + A - P</code>","Deprecated, please use CALL_PLT instead 32-bit PC-relative …","32-bit PC-relative function call, macros call, tail (PIC): …","Must be in executable; not allowed in shared library","High 20 bits of 32-bit PC-relative GOT access, …","High 20 bits of 32-bit absolute address, %hi(symbol): <code>S + A</code>","Relocation against a non-preemptible ifunc …","20-bit PC-relative jump offset <code>S + A - P</code>","Indicates the symbol associated with a PLT entry: <code>S</code>","Low 12 bits of 32-bit absolute address, %lo(symbol): <code>S + A</code>","Low 12 bits of 32-bit absolute address, %lo(symbol): <code>S + A</code>","","High 20 bits of 32-bit PC-relative reference, …","Low 12 bits of a 32-bit PC-relative, %pcrel_lo(address of …","Low 12 bits of a 32-bit PC-relative, %pcrel_lo(address of …","Adjust a link address (A) to its load address: <code>(B + A).</code>","Instruction can be relaxed, paired with a normal …","8-bit PC-relative branch offset: <code>S + A - P</code>","11-bit PC-relative jump offset: <code>S + A - P</code>","High 6 bits of 18-bit absolute address: <code>S + A</code>","Local label assignment: <code>S + A</code>","Local label assignment: <code>S + A</code>","Local label assignment: <code>S + A</code>","Local label assignment: <code>S + A</code>","16-bit label subtraction: <code>V - S - A</code>","32-bit label subtraction: <code>V - S - A</code>","Local label subtraction: <code>V - S - A</code>","64-bit label subtraction: <code>V - S - A</code>","8-bit label subtraction: <code>V - S - A</code>","<code>TLSMODULE</code>","<code>TLSMODULE</code>","<code>S + A - TLS_DTV_OFFSET</code>","<code>S + A - TLS_DTV_OFFSET</code>","High 20 bits of 32-bit PC-relative TLS GD GOT reference, …","High 20 bits of 32-bit PC-relative TLS IE GOT access, …","<code>S + A + TLSOFFSET</code>","<code>S + A + TLSOFFSET</code>","TLS LE thread pointer usage, <code>%tprel_add(symbol)</code>","High 20 bits of TLS LE thread pointer offset, …","Low 12 bits of TLS LE thread pointer offset, …","Low 12 bits of TLS LE thread pointer offset, …","<code>S + A</code>","<code>S + A</code>","<code>S + A</code>","<code>S + A</code>","<code>S + A</code>","","","","","<code>S</code>","<code>G + A</code>","<code>G + A</code>","<code>S + A - GOT</code>","<code>GOT + A - P</code>","","<code>GOT - P + A</code>","<code>G + GOT + A - P</code>","<code>G + GOT - P + A</code>","<code>G + GOT + A - P</code>","","<code>indirect (B + A)</code>","<code>S</code>","","<code>S + A - P</code>","<code>S + A - P</code>","<code>S + A - P</code>","<code>S + A - P</code>","<code>L + A - P</code>","<code>L - GOT + A</code>","<code>B + A</code>","<code>B + A</code>","<code>G + GOT + A - P</code>","<code>Z + A</code>","<code>Z + A</code>","","","","","","","The section occupies memory during process execution. Some …","The contents of this section contains only program …","This flag identifies a section containing compressed data. …","The section contains executable machine instructions.","This section is a member (perhaps the only one) of a …","The sh_info field of this section header holds a section …","This flag adds special ordering requirements for link …","Masked bits are reserved for operating system-specific …","Masked bits are reserved for processor-specific semantics.","The data in the section may be merged to eliminate …","Empty flags","This section requires special OS-specific processing …","The data elements in the section consist of …","This section holds Thread-Local Storage, meaning that each …","The section contains data that should be writable during …","If an object file section does not have this flag set, …","Symbols with st_shndx=SHN_ABS are absolute and are not …","Symbols with st_shndx=SHN_COMMON are sometimes used for …","This value marks an undefined, missing, irrelevant, or …","","Object file compatibility attributes","","Object file compatibility attributes","See …","Section contains index information for exception unwinding","See …","BPABI DLL dynamic linking pre-emption map","Section data contains information for dynamic linking","Section data contains a minimal set of dynamic linking …","Section data contains an array of destructors","Object attributes","GNU-style hash section","Pre-link library list","Version definition section","Version needs section","Version symbol table","Section group","Section data contains a symbol hash table. Must be present …","Values in [SHT_LOOS, SHT_HIOS] are reserved for operating …","Values in [SHT_LOPROC, SHT_HIPROC] are reserved for …","Values in [SHT_LOUSER, SHT_HIUSER] are reserved for …","IA_64 extension bits","IA_64 unwind section","Section data contains an array of constructors","Values in [SHT_LOOS, SHT_HIOS] are reserved for operating …","Values in [SHT_LOPROC, SHT_HIPROC] are reserved for …","Values in [SHT_LOUSER, SHT_HIUSER] are reserved for …","Section data occupies no space in the file but otherwise …","Section data contains information that marks the file in …","Inactive section with undefined values","Section data contains an array of pre-constructors","Information defined by the program, includes executable …","Section data contains relocation entries without explicit …","Section data contains relocation entries with explicit …","","","Section is reserved but has unspecified semantics","Section data contains a string table","Section data contains a symbol table","Extended symbol table section index","This section contains unwind function table entries for …","Global symbols are visible to all object files being …","Unique symbol","Values between [STB_LOOS, STB_HIOS] in this inclusive …","Values between [STB_LOPROC, STB_HIPROC] in this inclusive …","Local symbols are not visible outside the object file …","Values between [STB_LOOS, STB_HIOS] in this inclusive …","Values between [STB_LOPROC, STB_HIPROC] in this inclusive …","Weak symbols resemble global symbols, but their …","The function associated with the symbol may follow a …","","","Any functions that use registers in a way that is …","Common data object symbol","File name symbol","Code object symbol","Indirect code object symbol","Values between [STT_LOOS, STT_HIOS] in this inclusive …","Values between [STT_LOPROC, STT_HIPROC] in this inclusive …","Values between [STT_LOOS, STT_HIOS] in this inclusive …","Values between [STT_LOPROC, STT_HIPROC] in this inclusive …","Unspecified symbol type","Data object symbol","Section symbol","Thread-local data object symbol","STV_* define constants for the ELF Symbol’s …","A symbol defined in the current component is hidden if its …","The meaning of this visibility attribute may be defined by …","A symbol defined in the current component is protected if …","Only defined valid vd_version value","","","","Symbol is global","Symbol is hidden","Symbol is local",".gnu.version index mask","Only defined valid vn_version value","","C-style 32-bit ELF Compression Header definition","C-style 64-bit ELF Compression Header definition","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","C-style 32-bit ELF Dynamic section entry definition","C-style 64-bit ELF Dynamic section entry definition","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","An endian parsing type that can choose at runtime which …","Used for a big-endian ELF structures that have been parsed …","A zero-sized type that always parses integers as if they’…","An all-safe-code endian-aware integer parsing trait.","Used for a little-endian ELF structures that have been …","A zero-sized type that always parses integers as if they’…","A zero-sized type that always parses integers as if they’…","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get an endian-aware integer parsing spec for an ELF …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Represents the ELF file data format (little-endian vs …","","","","","C-style 32-bit ELF File Header definition","C-style 64-bit ELF File Header definition","Encapsulates the contents of the ELF File Header","Version of the OS ABI","","","","","","","","","32-bit vs 64-bit","","","","","This member holds the ELF header’s size in bytes.","","","Virtual address of program entry point This member gives …","","","This member holds processor-specific flags associated with …","","","","","Target machine architecture","","","This member holds the size in bytes of one entry in the …","","","This member holds the number of entries in the program …","","","This member holds the program header table’s file offset …","","","This member holds a section header’s size in bytes. A …","","","This member holds the number of entries in the section …","","","This member holds the section header table’s file offset …","","","This member holds the section header table index of the …","","","ELF file type","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","OS ABI","","","","","","","","","","","","","","","elf version","","","","","The special GNU extension section .gnu.version_d has a …","Version Definition Auxiliary Entries from the …","","","The GNU extension section .gnu.version_r has a section …","Version Need Auxiliary Entries from the .gnu.version_r …","","","The special GNU extension section .gnu.version has a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of associated verdaux array entries.","Version information flag bitmask.","Version name hash value (ELF hash function).","VersionIndex value referencing the SHT_GNU_VERSYM section.","Offset to the version or dependency name string in the …","Number of associated verneed array entries.","Offset to the file name string in the linked string table, …","Dependency information flag bitmask.","Dependency name hash value (ELF hash function).","Offset to the dependency name string in the linked string …","VersionIndex value used in the .gnu.version symbol version …","Header at the start of a GNU extension Hash Table section …","","Header at the start of SysV Hash Table sections of type …","","","","","","","","","","","","","","Use the hash table to find the symbol table entry with the …","Use the hash table to find the symbol table entry with the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calculate the GNU hash for a given symbol name.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The number of words in the bloom filter. (must be a …","","","","Construct a SysVHashTable from given bytes. Keeps a …","Construct a GnuHashTable from given bytes. Keeps a …","The bit shift count for the bloom filter.","","","","","Calculate the SysV hash value for a given symbol name.","The symbol table index of the first symbol in the hash …","","","","","","","","","","","","","(name: abi::ELF_NOTE_GNU, n_type: abi::NT_GNU_ABI_TAG)","(name: abi::ELF_NOTE_GNU, n_type: abi::NT_GNU_BUILD_ID)","This enum contains parsed Note variants which can be …","Contains the raw fields found in any ELF note. Used for …","Contains four 4-byte integers. The first 4-byte integer …","Contains a build ID note which is unique among the set of …","","All other notes that we don’t know how to parse","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returned when parsing a table of ELF structures and the …","Returned when the ELF File Header’s magic bytes weren’…","Returned when parsing an ELF structure resulted in an …","Returned when doing math with parsed elf fields that …","Trait for safely parsing an ELF structure of a given class …","","Lazy-parsing iterator which wraps bytes and parses out a …","Lazy-parsing table which wraps bytes and parses out a …","Returned when parsing an ELF structure out of an in-memory …","Returned when parsing a string out of a StringTable failed …","Returned when parsing an ELF structure whose on-disk …","Returned when parsing an ELF structure and the underlying …","Returned when a section has a sh_addralign value that was …","Returned when trying to interpret a section’s data as …","Returned when trying to interpret a segment’s data as …","Returned when the ELF File Header’s <code>e_ident[EI_CLASS]</code> …","Returned when the ELF File Header’s <code>e_ident[EI_DATA]</code> wasn…","Returned when parsing an ELF struct with a version field …","Returned when parsing a string out of a StringTable that …","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Parse the element at <code>index</code> in the table.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether the table is empty (contains zero …","Get a lazy-parsing iterator for the table’s bytes","Returns the number of elements of type P in the table.","","","","Parse this type by using the given endian-awareness and …","Returns the expected size of the type being parsed for the …","","","","","","","","","","Checks whether the given entsize matches what we need to …","C-style 32-bit ELF Relocation definition","C-style 32-bit ELF Relocation (with addend) definition","C-style 64-bit ELF Relocation definition","C-style 64-bit ELF Relocation (with addend) definition","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-style 32-bit ELF Section Header definition","C-style 64-bit ELF Section Header definition","Encapsulates the contents of an ELF Section Header","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","in-memory address where this section is loaded","","","address alignment","","","size of an entry if section data is an array of entries","","","Section Flags","","","Defined by section type","","","Defined by section type","","","Section Name","","","Byte-offset into the file where this section starts","","","Section size in bytes","","","Section Type","","","","","","","","","","","C-style 32-bit ELF Program Segment Header definition","C-style 64-bit ELF Program Segment Header definition","Encapsulates the contents of an ELF Program Header","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","file and memory alignment","","","Size of this segment in the file","","","Flags for this segment","","","Size of this segment in memory","","","Offset into the ELF file where this segment begins","","","Physical address where this segment should be loaded","","","Program segment type","","","Virtual adress where this segment should be loaded","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","C-style 32-bit ELF Symbol definition","C-style 64-bit ELF Symbol definition","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if a symbol is undefined in this ELF object.","","","","","","","","This member holds an index into the symbol table’s …","","","","","Every symbol table entry is defined in relation to some …","","","This member gives the symbol’s size. For example, a data …","","","","This member gives the value of the associated symbol. …","","","","","","","","","",""],"i":[0,0,0,0,4,1,4,1,0,1,0,4,1,4,1,1,4,0,0,4,4,1,1,0,0,4,1,4,0,0,0,0,4,4,4,4,4,4,4,4,0,4,4,4,0,0,4,4,1,1,1,4,1,4,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,74,15,73,74,15,73,74,15,74,73,74,15,73,74,15,15,15,15,73,74,15,73,74,15,15,15,73,74,15,73,74,15,73,74,15,0,0,0,0,75,76,30,75,76,30,30,30,75,76,30,75,76,30,30,30,75,76,30,75,76,30,30,30,75,76,30,75,76,30,75,76,30,0,32,0,0,32,0,0,32,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,32,33,34,3,32,33,34,32,33,34,3,3,32,33,34,3,3,3,3,3,3,32,33,34,32,33,34,32,33,34,0,28,0,28,0,0,0,0,39,77,78,28,39,77,78,28,39,39,28,39,77,78,39,77,78,39,77,78,39,77,78,77,78,39,77,78,39,77,78,39,77,78,39,77,78,39,77,78,39,77,78,39,77,78,39,77,78,39,77,78,39,28,39,28,39,77,78,28,39,77,78,28,39,39,0,39,77,78,28,39,77,78,28,39,77,78,28,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,23,45,51,46,47,43,48,52,49,44,50,53,54,23,45,51,46,47,43,48,52,49,44,50,53,43,44,45,46,47,48,49,50,45,54,45,45,51,46,47,43,48,52,49,44,50,53,54,23,45,51,46,47,43,48,52,49,44,50,53,23,23,54,45,54,45,46,54,23,45,51,46,47,43,48,52,49,44,50,53,51,43,52,44,53,46,46,46,45,54,23,51,43,52,44,53,51,43,52,44,53,46,47,48,49,50,46,47,48,49,50,54,23,45,51,46,47,43,48,52,49,44,50,53,54,23,45,51,46,47,43,48,52,49,44,50,53,54,23,45,51,46,47,43,48,52,49,44,50,53,47,47,47,47,48,49,49,50,50,50,50,0,0,0,0,56,58,57,60,56,58,57,60,56,57,56,57,58,60,56,58,57,60,56,58,57,60,0,60,56,58,57,60,57,56,57,56,58,60,57,56,57,56,57,0,57,56,58,57,60,56,58,57,60,56,58,57,60,63,63,0,0,0,0,0,63,63,61,62,64,16,63,61,62,64,16,61,62,64,63,61,62,64,63,61,62,64,16,63,61,62,64,16,63,61,62,64,16,16,61,61,64,64,16,16,61,61,61,61,63,61,62,64,16,63,61,62,64,16,63,61,62,64,16,7,7,7,7,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,67,65,7,67,65,65,7,7,67,65,7,7,7,7,67,65,65,7,67,65,67,65,65,65,65,67,65,67,66,66,7,67,65,7,67,65,7,67,65,66,0,0,0,0,0,0,0,0,79,80,81,82,71,72,79,80,81,82,71,72,71,72,71,72,71,72,79,80,81,82,71,72,79,80,81,82,71,72,71,72,81,82,72,79,80,81,82,79,80,81,82,71,72,71,72,71,72,71,72,79,80,81,82,71,72,79,80,81,82,71,72,79,80,81,82,71,72,0,0,0,0,83,84,14,83,84,14,14,14,14,83,84,14,83,84,14,14,83,84,14,83,84,14,83,84,14,83,84,14,83,84,14,83,84,14,83,84,14,83,84,14,83,84,14,83,84,14,14,83,84,14,83,84,14,83,84,14,0,0,0,0,85,86,21,85,86,21,21,21,21,85,86,21,85,86,21,85,86,21,85,86,21,85,86,21,85,86,21,85,86,21,85,86,21,85,86,21,85,86,21,21,21,85,86,21,85,86,21,85,86,21,0,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,87,88,59,87,88,59,59,59,59,87,88,59,87,88,59,59,59,59,59,87,88,87,88,59,87,88,87,88,59,87,88,59,59,87,88,59,59,87,88,59,87,88,59,87,88,59],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[1,[-1]]],[2,3]],0,[[[4,[-1]]],[[8,[[6,[[5,[-1]]]],7]]],3],0,[[[4,[-1]]],[[8,[[6,[[11,[[9,[-1]],10]]]],7]]],3],0,0,0,0,0,[[[4,[-1]]],[[8,[[1,[-1]],7]]],3],[-1,-1,[]],[-1,-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[12]]],[[8,[[4,[-1]],7]]],3],0,0,0,0,[[[4,[-1]],14],[[8,[[11,[[13,[12]],[6,[15]]]],7]]],3],[[[4,[-1]],14],[[8,[[16,[-1]],7]]],3],[[[4,[-1]],14],[[8,[[17,[-1]],7]]],3],[[[4,[-1]],14],[[8,[[18,[-1]],7]]],3],[[[4,[-1]],14],[[8,[10,7]]],3],[[[4,[-1]],19],[[8,[[6,[14]],7]]],3],[[[4,[-1]]],[[6,[[20,[-1]]]]],3],[[[4,[-1]]],[[8,[[11,[[6,[[20,[-1]]]],[6,[10]]]],7]]],3],0,[[[4,[-1]],21],[[8,[[13,[12]],7]]],3],[[[4,[-1]],21],[[8,[[16,[-1]],7]]],3],[[[4,[-1]]],[[6,[[22,[-1]]]]],3],0,0,[[[4,[-1]]],[[8,[[6,[[11,[[9,[-1]],10]]]],7]]],3],[[[4,[-1]]],[[8,[[6,[[23,[-1]]]],7]]],3],0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[15,15],[[15,15],25],[[15,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,28,29,[13,[12]]],[[8,[15,7]]],3],[28,29],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[30,30],[30,31],0,0,0,0,0,[30,31],[[30,30],25],[[30,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,28,29,[13,[12]]],[[8,[30,7]]],3],[28,29],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,32],[33,33],[34,34],[[],32],[[],33],[[],34],[[32,32],25],[[33,33],25],[[34,34],25],[[32,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[8,[-1,7]]],[]],[12,[[8,[32,7]]]],[12,[[8,[33,7]]]],[12,[[8,[34,7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,25,[]],[-1,25,[]],[32,25],[33,25],[34,25],[[-1,29,[13,[12]]],[[8,[35,7]]],[]],[[-1,29,[13,[12]]],[[8,[36,7]]],[]],[[-1,29,[13,[12]]],[[8,[37,7]]],[]],[[-1,29,[13,[12]]],[[8,[38,7]]],[]],[[-1,29,[13,[12]]],[[8,[31,7]]],[]],[[-1,29,[13,[12]]],[[8,[12,7]]],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[28,28],[[[39,[-1]]],[[39,[-1]]],[40,3]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[28,28],25],[[[39,[-1]],[39,[-1]]],25,[41,3]],[[28,26],27],[[[39,[-1]],26],27,[42,3]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[13,[12]]],[[8,[[11,[-1,28,12,12]],7]]],3],[[[11,[-1,28,12,12]],[13,[12]]],[[8,[[39,[-1]],7]]],3],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1]]],[[43,[-1]]],[40,3]],[[[44,[-1]]],[[44,[-1]]],[40,3]],[[45,45],25],[[46,46],25],[[47,47],25],[[48,48],25],[[49,49],25],[[50,50],25],0,0,0,[[45,26],27],[[[51,[-1]],26],27,[42,3]],[[46,26],27],[[47,26],27],[[[43,[-1]],26],27,[42,3]],[[48,26],27],[[[52,[-1]],26],27,[42,3]],[[49,26],27],[[[44,[-1]],26],27,[42,3]],[[50,26],27],[[[53,[-1]],26],27,[42,3]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[23,[-1]],29],[[8,[[6,[[54,[-1]]]],7]]],3],[[[23,[-1]],29],[[8,[[6,[45]],7]]],3],0,0,0,0,[46,37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,25],[46,25],[46,25],0,0,[[[55,[-1]],[6,[[11,[[44,[-1]],10]]]],[6,[[11,[[43,[-1]],10]]]]],[[23,[-1]]],3],[[[52,[-1]],10],[[51,[-1]]],3],[[-1,28,31,29,[13,[12]]],[[43,[-1]]],3],[[-1,28,37,29,[13,[12]]],[[52,[-1]]],3],[[-1,28,31,29,[13,[12]]],[[44,[-1]]],3],[[-1,28,37,29,[13,[12]]],[[53,[-1]]],3],[[[51,[-1]]],6,3],[[[43,[-1]]],6,3],[[[52,[-1]]],6,3],[[[44,[-1]]],6,3],[[[53,[-1]]],6,3],[[-1,28,29,[13,[12]]],[[8,[46,7]]],3],[[-1,28,29,[13,[12]]],[[8,[47,7]]],3],[[-1,28,29,[13,[12]]],[[8,[48,7]]],3],[[-1,28,29,[13,[12]]],[[8,[49,7]]],3],[[-1,28,29,[13,[12]]],[[8,[50,7]]],3],[28,29],[28,29],[28,29],[28,29],[28,29],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[56,56],[57,57],[[56,56],25],[[57,57],25],[[[58,[-1]],[13,[12]],[9,[-1]],10],[[8,[[6,[[11,[29,59]]]],7]]],3],[[[60,[-1]],[13,[12]],[9,[-1]],10],[[8,[[6,[[11,[29,59]]]],7]]],3],[[56,26],27],[[[58,[-1]],26],27,[42,3]],[[57,26],27],[[[60,[-1]],26],27,[42,3]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[13,[12]]],38],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,28,[13,[12]]],[[8,[[58,[-1]],7]]],3],[[-1,28,[13,[12]]],[[8,[[60,[-1]],7]]],3],0,[[-1,28,29,[13,[12]]],[[8,[56,7]]],3],[[-1,28,29,[13,[12]]],[[8,[57,7]]],3],[28,29],[28,29],[[[13,[12]]],38],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[61,61],[62,62],0,[[63,63],25],[[61,61],25],[[62,62],25],[[64,64],25],[[63,26],27],[[61,26],27],[[62,26],27],[[64,26],27],[[[16,[-1]],26],27,[42,3]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,28,29,[13,[12]]],[[16,[-1]]],3],[[[16,[-1]]],6,3],0,[[-1,28,29,[13,[12]]],[[8,[61,7]]],3],[28,29],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[65,[-1,-2]]],[[65,[-1,-2]]],[40,3],[40,66]],[[7,26],27],[[7,26],27],[[[67,[-1,-2]],26],27,[42,3],[42,66]],[[[65,[-1,-2]],26],27,[42,3],[42,66]],[68,7],[69,7],[-1,-1,[]],[70,7],[-1,-1,[]],[-1,-1,[]],[[[65,[-1,-2]],29],[[8,[-2,7]]],3,66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[65,[-1,-2]]],[],3,66],[[[65,[-1,-2]]],25,3,66],[[[65,[-1,-2]]],[[67,[-1,-2]]],3,66],[[[65,[-1,-2]]],29,3,66],[[-1,28,[13,[12]]],[[67,[-1,-2]]],3,66],[[-1,28,[13,[12]]],[[65,[-1,-2]]],3,66],[[[67,[-1,-2]]],6,3,66],[[-1,28,29,[13,[12]]],[[8,[-2,7]]],3,[]],[28,29],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[[28,29],[[8,[29,7]]]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71,71],[72,72],[[71,71],25],[[72,72],25],[[71,26],27],[[72,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,28,29,[13,[12]]],[[8,[71,7]]],3],[[-1,28,29,[13,[12]]],[[8,[72,7]]],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[28,29],[28,29],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,14],[[14,14],25],[[14,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,28,29,[13,[12]]],[[8,[14,7]]],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[28,29],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,21],[[21,21],25],[[21,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,28,29,[13,[12]]],[[8,[21,7]]],3],[28,29],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[10,10],[[],10],[[10,26],27],[-1,-1,[]],[[10,29],[[8,[19,7]]]],[[10,29],[[8,[[13,[12]],7]]]],[-1,-2,[],[]],[[[13,[12]]],10],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,24,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,59],[[59,59],25],[[59,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,25],[[-1,28,29,[13,[12]]],[[8,[59,7]]],3],[28,29],[59,12],0,0,0,0,0,0,0,0,0,0,0,0,0,[59,12],0,0,0,[59,12],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]]],"c":[],"p":[[3,"CommonElfData",0],[8,"Default",2062],[8,"EndianParse",1306],[3,"ElfBytes",0],[6,"DynamicTable",1269],[4,"Option",2063],[4,"ParseError",1747],[4,"Result",2064],[6,"SymbolTable",2012],[3,"StringTable",1998],[15,"tuple"],[15,"u8"],[15,"slice"],[3,"SectionHeader",1884],[3,"CompressionHeader",1230],[3,"NoteIterator",1681],[6,"RelaIterator",1807],[6,"RelIterator",1807],[15,"str"],[6,"SectionHeaderTable",1884],[3,"ProgramHeader",1944],[6,"SegmentTable",1944],[3,"SymbolVersionTable",1448],[3,"TypeId",2065],[15,"bool"],[3,"Formatter",2066],[6,"Result",2066],[4,"Class",1359],[15,"usize"],[3,"Dyn",1269],[15,"u64"],[4,"AnyEndian",1306],[3,"LittleEndian",1306],[3,"BigEndian",1306],[15,"i32"],[15,"i64"],[15,"u16"],[15,"u32"],[3,"FileHeader",1359],[8,"Clone",2067],[8,"PartialEq",2068],[8,"Debug",2066],[3,"VerDefIterator",1448],[3,"VerNeedIterator",1448],[3,"SymbolRequirement",1448],[3,"VersionIndex",1448],[3,"VerDef",1448],[3,"VerDefAux",1448],[3,"VerNeed",1448],[3,"VerNeedAux",1448],[3,"SymbolNamesIterator",1448],[3,"VerDefAuxIterator",1448],[3,"VerNeedAuxIterator",1448],[3,"SymbolDefinition",1448],[6,"VersionIndexTable",1448],[3,"SysVHashHeader",1624],[3,"GnuHashHeader",1624],[3,"SysVHashTable",1624],[3,"Symbol",2012],[3,"GnuHashTable",1624],[3,"NoteGnuAbiTag",1681],[3,"NoteGnuBuildId",1681],[4,"Note",1681],[3,"NoteAny",1681],[3,"ParsingTable",1747],[8,"ParseAt",1747],[3,"ParsingIterator",1747],[3,"Utf8Error",2069],[3,"TryFromSliceError",2070],[3,"TryFromIntError",2071],[3,"Rel",1807],[3,"Rela",1807],[3,"Elf32_Chdr",1230],[3,"Elf64_Chdr",1230],[3,"Elf32_Dyn",1269],[3,"Elf64_Dyn",1269],[3,"Elf32_Ehdr",1359],[3,"Elf64_Ehdr",1359],[3,"Elf32_Rel",1807],[3,"Elf64_Rel",1807],[3,"Elf32_Rela",1807],[3,"Elf64_Rela",1807],[3,"Elf32_Shdr",1884],[3,"Elf64_Shdr",1884],[3,"Elf32_Phdr",1944],[3,"Elf64_Phdr",1944],[3,"Elf32_Sym",2012],[3,"Elf64_Sym",2012]],"b":[[1773,"impl-Display-for-ParseError"],[1774,"impl-Debug-for-ParseError"],[1777,"impl-From%3CUtf8Error%3E-for-ParseError"],[1778,"impl-From%3CTryFromSliceError%3E-for-ParseError"],[1780,"impl-From%3CTryFromIntError%3E-for-ParseError"]]},\
"futures_core":{"doc":"Core traits and types for asynchronous operations in Rust.","t":"CCCCCCAOAAGQICGQIKKGQIQGQIIKKLKCCCCC","n":["FusedFuture","FusedStream","Future","Stream","TryFuture","TryStream","future","ready","stream","task","BoxFuture","Error","FusedFuture","Future","LocalBoxFuture","Ok","TryFuture","is_terminated","try_poll","BoxStream","Error","FusedStream","Item","LocalBoxStream","Ok","Stream","TryStream","is_terminated","poll_next","size_hint","try_poll_next","Context","Poll","RawWaker","RawWakerVTable","Waker"],"q":[[0,"futures_core"],[10,"futures_core::future"],[19,"futures_core::stream"],[31,"futures_core::task"],[36,"core::pin"],[37,"core::task::wake"],[38,"core::result"],[39,"core::task::poll"],[40,"core::option"]],"d":["","","","","","","Futures.","Extracts the successful type of a <code>Poll&lt;T&gt;</code>.","Asynchronous streams.","Task notification.","An owned dynamically typed <code>Future</code> for use in cases where …","The type of failures yielded by this future","A future which tracks whether or not the underlying future …","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.","The type of successful values yielded by this future","A convenience for futures that return <code>Result</code> values that …","Returns <code>true</code> if the underlying future should no longer be …","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","An owned dynamically typed <code>Stream</code> for use in cases where …","The type of failures yielded by this future","A stream which tracks whether or not the underlying stream …","Values yielded by the stream.","<code>BoxStream</code>, but without the <code>Send</code> requirement.","The type of successful values yielded by this future","A stream of values produced asynchronously.","A convenience for streams that return <code>Result</code> values that …","Returns <code>true</code> if the stream should no longer be polled.","Attempt to pull out the next value of this stream, …","Returns the bounds on the remaining length of the stream.","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,0,10,9,0,11,0,12,0,11,0,0,13,12,12,11,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[[[2,[-1]],3],[[5,[4]]],[]],0,0,0,0,0,0,0,0,[-1,1,[]],[[[2,[-1]],3],[[5,[6]]],[]],[-1,[[8,[7,[6,[7]]]]],[]],[[[2,[-1]],3],[[5,[[6,[4]]]]],[]],0,0,0,0,0],"c":[],"p":[[15,"bool"],[3,"Pin",36],[3,"Context",37],[4,"Result",38],[4,"Poll",39],[4,"Option",40],[15,"usize"],[15,"tuple"],[8,"TryFuture",10],[8,"FusedFuture",10],[8,"TryStream",19],[8,"Stream",19],[8,"FusedStream",19]],"b":[]},\
"futures_task":{"doc":"Tools for working with tasks.","t":"ICDDICCCIDICDLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLFFLLLKKLLLLLLLLLLLLLLLLLLLKFF","n":["ArcWake","Context","FutureObj","LocalFutureObj","LocalSpawn","Poll","RawWaker","RawWakerVTable","Spawn","SpawnError","UnsafeFutureObj","Waker","WakerRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into_future","into_future","into_future_obj","into_raw","is_shutdown","new","new","new","new_unowned","noop_waker","noop_waker_ref","poll","poll","shutdown","spawn_local_obj","spawn_obj","status","status","status_local","status_local","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wake","wake","wake_by_ref","waker","waker_ref"],"q":[[0,"futures_task"],[84,"core::task::wake"],[85,"core::future::future"],[86,"core::fmt"],[87,"core::fmt"],[88,"core::pin"],[89,"core::marker"],[90,"core::mem::manually_drop"],[91,"core::task::wake"],[92,"core::result"],[93,"alloc::string"],[94,"core::any"],[95,"alloc::sync"]],"d":["A way of waking up a specific task.","","A custom trait object for polling futures, roughly akin to …","A custom trait object for polling futures, roughly akin to …","The <code>LocalSpawn</code> is similar to <code>Spawn</code>, but allows spawning …","","","","The <code>Spawn</code> trait allows for pushing futures onto an …","An error that occurred during spawning.","A custom implementation of a future trait object for …","","A <code>Waker</code> that is only valid for a given lifetime.","","","","","","","","","","Drops the future represented by the given fat pointer.","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.","Convert an owned instance into a (conceptually owned) fat …","Check whether spawning failed to the executor being shut …","Create a <code>LocalFutureObj</code> from a custom trait object …","Create a <code>FutureObj</code> from a custom trait object …","Create a new <code>WakerRef</code> from a <code>Waker</code> reference.","Create a new <code>WakerRef</code> from a <code>Waker</code> that must not be …","Create a new <code>Waker</code> which does nothing when <code>wake()</code> is …","Get a static reference to a <code>Waker</code> which does nothing when …","","","Spawning failed because the executor has been shut down.","Spawns a future that will be run to completion.","Spawns a future that will be run to completion.","Determines whether the executor is able to spawn new tasks.","Determines whether the executor is able to spawn new tasks.","Determines whether the executor is able to spawn new tasks.","Determines whether the executor is able to spawn new tasks.","","","","","","","","","","","","","","Indicates that the associated task is ready to make …","Indicates that the associated task is ready to make …","Indicates that the associated task is ready to make …","Creates a <code>Waker</code> from an <code>Arc&lt;impl ArcWake&gt;</code>.","Creates a reference to a <code>Waker</code> from a reference to …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,6,5,9,1,6,5,9,1,1,14,5,6,6,5,9,1,6,5,5,5,5,5,5,9,9,9,9,9,1,6,5,9,1,5,9,5,14,6,5,9,1,1,0,0,5,9,6,23,24,24,24,23,23,6,6,5,9,1,6,5,9,1,6,5,9,1,22,22,22,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[3,4],[[[5,[-1]]],4,[]],[[6,7],8],[[6,7],8],[[[5,[-1]],7],8,[]],[[[9,[-1]],7],8,[]],[[1,7],8],[-1,-1,[]],[[[9,[-1]]],[[5,[-1]]],[]],[[[11,[[10,[-1]]]]],[[5,[4]]],3],[[[11,[[10,[3]]]]],[[5,[4]]]],[[[10,[3]]],[[5,[4]]]],[-1,-1,[]],[[[10,[-1]]],[[5,[4]]],3],[[[11,[[10,[3]]]]],[[9,[4]]]],[-1,-1,[]],[[[10,[-1]]],[[9,[4]]],[3,12]],[[[11,[[10,[-1]]]]],[[9,[4]]],[3,12]],[[[10,[3]]],[[9,[4]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[[[5,[-1]]],[[9,[-1]]],[]],[-1,3,[]],[6,13],[-2,[[5,[-1]]],[],[[14,[-1]]]],[-2,[[9,[-1]]],[],[[14,[-1]],12]],[2,1],[[[15,[2]]],1],[[],2],[[],2],[[[11,[[5,[-1]]]],16],[[17,[-1]]],[]],[[[11,[[9,[-1]]]],16],[[17,[-1]]],[]],[[],6],[[-1,[5,[4]]],[[18,[4,6]]],[]],[[-1,[9,[4]]],[[18,[4,6]]],[]],[-1,[[18,[4,6]]],[]],[-1,[[18,[4,6]]],[]],[-1,[[18,[4,6]]],[]],[-1,[[18,[4,6]]],[]],[-1,19,[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[[[21,[-1]]],4,[]],[[[21,[-1]]],4,[]],[[[21,[-1]]],4,[]],[[[21,[-1]]],2,22],[[[21,[-1]]],1,22]],"c":[],"p":[[3,"WakerRef",0],[3,"Waker",84],[8,"Future",85],[15,"tuple"],[3,"LocalFutureObj",0],[3,"SpawnError",0],[3,"Formatter",86],[6,"Result",86],[3,"FutureObj",0],[3,"Box",87],[3,"Pin",88],[8,"Send",89],[15,"bool"],[8,"UnsafeFutureObj",0],[3,"ManuallyDrop",90],[3,"Context",84],[4,"Poll",91],[4,"Result",92],[3,"String",93],[3,"TypeId",94],[3,"Arc",95],[8,"ArcWake",0],[8,"LocalSpawn",0],[8,"Spawn",0]],"b":[[24,"impl-Display-for-SpawnError"],[25,"impl-Debug-for-SpawnError"],[30,"impl-From%3CFutureObj%3C\'a,+T%3E%3E-for-LocalFutureObj%3C\'a,+T%3E"],[31,"impl-From%3CPin%3CBox%3CF%3E%3E%3E-for-LocalFutureObj%3C\'a,+()%3E"],[32,"impl-From%3CPin%3CBox%3Cdyn+Future%3COutput+=+()%3E%3E%3E%3E-for-LocalFutureObj%3C\'a,+()%3E"],[33,"impl-From%3CBox%3Cdyn+Future%3COutput+=+()%3E%3E%3E-for-LocalFutureObj%3C\'a,+()%3E"],[35,"impl-From%3CBox%3CF%3E%3E-for-LocalFutureObj%3C\'a,+()%3E"],[36,"impl-From%3CPin%3CBox%3Cdyn+Future%3COutput+=+()%3E+%2B+Send%3E%3E%3E-for-FutureObj%3C\'a,+()%3E"],[38,"impl-From%3CBox%3CF%3E%3E-for-FutureObj%3C\'a,+()%3E"],[39,"impl-From%3CPin%3CBox%3CF%3E%3E%3E-for-FutureObj%3C\'a,+()%3E"],[40,"impl-From%3CBox%3Cdyn+Future%3COutput+=+()%3E+%2B+Send%3E%3E-for-FutureObj%3C\'a,+()%3E"]]},\
"futures_util":{"doc":"Combinators and utilities for working with <code>Future</code>s, <code>Stream</code>…","t":"CCCCCCCCAAAOOAADDDDDGNNEDQDDDICNNIDNNDDDDDDDDDDDNGDDDDDDEDQDDDDDDDNDDDDDDIIDDDDDEDDIDLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLLLLLLLFLLLLLLFLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLFLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDDDDDDDGDDDDDDDDDDDQDDDDDGDDDDIDDDDDDQDNGDDDDDDQDDDDDDDDEDDDNDDDDDDDIIDDDDDDDDDDDDDDDDDDDDIIDDDDDFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLFLLLLLLFLLLLLLLLLLLLLLLLLLLLLLFFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLFAFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLIDCDDIICCCIDIICDLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLFFLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLKFF","n":["Future","FutureExt","Stream","StreamExt","TryFuture","TryFutureExt","TryStream","TryStreamExt","future","lock","never","pin_mut","ready","stream","task","AbortHandle","AbortRegistration","Abortable","Aborted","AndThen","BoxFuture","Done","Done","Either","ErrInto","Error","Flatten","FlattenStream","Fuse","FusedFuture","Future","Future","Future","FutureExt","FutureObj","Gone","Gone","Inspect","InspectErr","InspectOk","IntoFuture","IntoStream","Join","Join3","Join4","Join5","JoinAll","Lazy","Left","LocalBoxFuture","LocalFutureObj","Map","MapErr","MapInto","MapOk","MapOkOrElse","MaybeDone","NeverError","Ok","OkInto","OptionFuture","OrElse","Pending","PollFn","PollImmediate","Ready","Right","Select","SelectAll","SelectOk","Then","TryFlatten","TryFlattenStream","TryFuture","TryFutureExt","TryJoin","TryJoin3","TryJoin4","TryJoin5","TryJoinAll","TryMaybeDone","TrySelect","UnitError","UnsafeFutureObj","UnwrapOrElse","abort","abortable","and_then","and_then","as_pin_mut","as_pin_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed","boxed_local","boxed_local","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","drop","eq","err","err_into","err_into","factor_first","factor_second","flatten","flatten","flatten_stream","flatten_stream","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","fuse","fuse","handle","inspect","inspect","inspect_err","inspect_err","inspect_ok","inspect_ok","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_raw","into_stream","into_stream","is_aborted","is_aborted","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","join","join3","join4","join5","join_all","lazy","left_future","left_future","map","map","map_err","map_err","map_into","map_into","map_ok","map_ok","map_ok_or_else","map_ok_or_else","maybe_done","never_error","never_error","new","new_pair","now_or_never","now_or_never","ok","ok_into","ok_into","or_else","or_else","output_mut","output_mut","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_fn","poll_immediate","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_unpin","poll_unpin","ready","right_future","right_future","select","select_all","select_ok","size_hint","size_hint","size_hint","size_hint","take_output","take_output","terminated","then","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_flatten","try_flatten","try_flatten_stream","try_flatten_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_join","try_join3","try_join4","try_join5","try_join_all","try_maybe_done","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_unpin","try_poll_unpin","try_select","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit_error","unit_error","unwrap_or_else","unwrap_or_else","Never","AbortHandle","AbortRegistration","Abortable","Aborted","All","AndThen","Any","BoxStream","BufferUnordered","Buffered","Chain","Chunks","Collect","Concat","Count","Cycle","Empty","Enumerate","ErrInto","Error","Filter","FilterMap","FlatMap","FlatMapUnordered","Flatten","FlattenUnordered","Fold","ForEach","ForEachConcurrent","Fuse","FusedStream","FuturesOrdered","FuturesUnordered","Inspect","InspectErr","InspectOk","IntoStream","Item","Iter","Left","LocalBoxStream","Map","MapErr","MapOk","Next","NextIf","NextIfEq","Ok","Once","OrElse","Peek","PeekMut","Peekable","Pending","PollFn","PollImmediate","PollNext","ReadyChunks","Repeat","RepeatWith","Right","Scan","Select","SelectAll","SelectNextSome","SelectWithStrategy","Skip","SkipWhile","Stream","StreamExt","StreamFuture","Take","TakeUntil","TakeWhile","Then","TryBufferUnordered","TryBuffered","TryChunks","TryChunksError","TryCollect","TryConcat","TryFilter","TryFilterMap","TryFlatten","TryFlattenUnordered","TryFold","TryForEach","TryForEachConcurrent","TryNext","TrySkipWhile","TryStream","TryStreamExt","TryTakeWhile","TryUnfold","Unfold","Unzip","Zip","abortable","all","all","and_then","and_then","any","any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed","boxed_local","boxed_local","buffer_unordered","buffer_unordered","buffered","buffered","by_ref","by_ref","chain","chain","chunks","chunks","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collect","collect","concat","concat","count","count","cycle","cycle","default","default","default","default","drop","empty","enumerate","enumerate","eq","eq","err_into","err_into","extend","extend","extend","filter","filter","filter_map","filter_map","flat_map","flat_map","flat_map_unordered","flat_map_unordered","flatten","flatten","flatten_unordered","flatten_unordered","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","for_each","for_each","for_each_concurrent","for_each_concurrent","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","fuse","fuse","futures_unordered","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","hash","inspect","inspect","inspect_err","inspect_err","inspect_ok","inspect_ok","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_stream","into_stream","is_done","is_empty","is_stopped","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","iter","left_stream","left_stream","len","map","map","map_err","map_err","map_ok","map_ok","new","next","next","next_if","next_if_eq","once","or_else","or_else","peek","peek_mut","peekable","peekable","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_fn","poll_immediate","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next_unpin","poll_next_unpin","poll_peek","poll_peek_mut","push","push_back","push_front","ready_chunks","ready_chunks","repeat","repeat_with","right_stream","right_stream","scan","scan","select","select_all","select_all","select_next_some","select_next_some","select_with_strategy","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","skip","skip","skip_while","skip_while","spawn_local_obj","spawn_obj","take","take","take_future","take_result","take_until","take_until","take_while","take_while","then","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","try_buffer_unordered","try_buffer_unordered","try_buffered","try_buffered","try_chunks","try_chunks","try_collect","try_collect","try_concat","try_concat","try_filter","try_filter","try_filter_map","try_filter_map","try_flatten","try_flatten","try_flatten_unordered","try_flatten_unordered","try_fold","try_fold","try_for_each","try_for_each","try_for_each_concurrent","try_for_each_concurrent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_next","try_next","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next_unpin","try_poll_next_unpin","try_skip_while","try_skip_while","try_take_while","try_take_while","try_unfold","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfold","unzip","unzip","zip","zip","FuturesUnordered","IntoIter","Iter","IterMut","IterPinMut","IterPinRef","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","iter_pin_mut","iter_pin_ref","len","new","next","next","next","next","next","push","size_hint","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","IntoIter","Iter","IterMut","SelectAll","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","len","new","next","next","next","push","select_all","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ArcWake","AtomicWaker","Context","FutureObj","LocalFutureObj","LocalSpawn","LocalSpawnExt","Poll","RawWaker","RawWakerVTable","Spawn","SpawnError","SpawnExt","UnsafeFutureObj","Waker","WakerRef","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into_future","into_future","into_future_obj","into_raw","is_shutdown","new","new","new","new","new_unowned","noop_waker","noop_waker_ref","poll","poll","register","shutdown","spawn","spawn","spawn_local","spawn_local","spawn_local_obj","spawn_obj","status","status_local","take","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","type_id","type_id","type_id","type_id","type_id","wake","wake","wake_by_ref","waker","waker_ref"],"q":[[0,"futures_util"],[15,"futures_util::future"],[798,"futures_util::never"],[799,"futures_util::stream"],[2196,"futures_util::stream::futures_unordered"],[2266,"futures_util::stream::select_all"],[2311,"futures_util::task"],[2414,"core::future::future"],[2415,"core::marker"],[2416,"core::ops::function"],[2417,"core::pin"],[2418,"core::marker"],[2419,"core::result"],[2420,"core::fmt"],[2421,"core::fmt"],[2422,"core::iter::traits::collect"],[2423,"core::marker"],[2424,"core::task::wake"],[2425,"core::task::poll"],[2426,"core::ops::function"],[2427,"core::any"],[2428,"core::default"],[2429,"core::iter::traits::collect"],[2430,"core::convert"],[2431,"core::fmt"],[2432,"core::iter::traits::iterator"],[2433,"core::task::wake"],[2434,"core::mem::manually_drop"],[2435,"alloc::sync"]],"d":["","","","","","","","","Asynchronous values.","Futures-powered synchronization primitives.","This module contains the <code>Never</code> type.","Pins a value on the stack.","Extracts the successful type of a <code>Poll&lt;T&gt;</code>.","Asynchronous streams.","Tools for working with tasks.","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Future for the <code>and_then</code> method.","An owned dynamically typed <code>Future</code> for use in cases where …","The output of the completed future","The output of the completed future","Combines two different futures, streams, or sinks having …","Future for the <code>err_into</code> method.","The type of failures yielded by this future","Future for the <code>flatten</code> method.","Stream for the <code>flatten_stream</code> method.","Future for the <code>fuse</code> method.","A future which tracks whether or not the underlying future …","","A not-yet-completed future","A not-yet-completed future","An extension trait for <code>Future</code>s that provides a variety of …","A custom trait object for polling futures, roughly akin to …","The empty variant after the result of a <code>MaybeDone</code> has been …","The empty variant after the result of a <code>TryMaybeDone</code> has …","Future for the <code>inspect</code> method.","Future for the <code>inspect_err</code> method.","Future for the <code>inspect_ok</code> method.","Future for the <code>into_future</code> method.","Stream for the <code>into_stream</code> method.","Future for the <code>join</code> function.","Future for the <code>join3</code> function.","Future for the <code>join4</code> function.","Future for the <code>join5</code> function.","Future for the <code>join_all</code> function.","Future for the <code>lazy</code> function.","First branch of the type","<code>BoxFuture</code>, but without the <code>Send</code> requirement.","A custom trait object for polling futures, roughly akin to …","Future for the <code>map</code> method.","Future for the <code>map_err</code> method.","Future for the <code>map_into</code> combinator.","Future for the <code>map_ok</code> method.","Future for the <code>map_ok_or_else</code> method.","A future that may have completed.","Future for the <code>never_error</code> combinator.","The type of successful values yielded by this future","Future for the <code>ok_into</code> method.","A future representing a value which may or may not be …","Future for the <code>or_else</code> method.","Future for the <code>pending()</code> function.","Future for the <code>poll_fn</code> function.","Future for the <code>poll_immediate</code> function.","Future for the <code>ready</code> function.","Second branch of the type","Future for the <code>select()</code> function.","Future for the <code>select_all</code> function.","Future for the <code>select_ok</code> function.","Future for the <code>then</code> method.","Future for the <code>try_flatten</code> method.","Future for the <code>try_flatten_stream</code> method.","A convenience for futures that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning futures","Future for the <code>try_join</code> function.","Future for the <code>try_join3</code> function.","Future for the <code>try_join4</code> function.","Future for the <code>try_join5</code> function.","Future for the <code>try_join_all</code> function.","A future that may have completed with an error.","Future for the <code>try_select()</code> function.","Future for the <code>unit_error</code> combinator.","A custom implementation of a future trait object for …","Future for the <code>unwrap_or_else</code> method.","Abort the <code>Abortable</code> stream/future associated with this …","Creates a new <code>Abortable</code> future and an <code>AbortHandle</code> which …","Executes another future after this one resolves …","Executes another future after this one resolves …","Convert <code>Pin&lt;&amp;mut Either&lt;A, B&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;A, B&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;A&gt;, Pin&lt;&amp;B&gt;&gt;</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","","","","","","","","","","","","","","","","","","Drops the future represented by the given fat pointer.","","Create a future that is immediately ready with an error …","Maps this future’s <code>Error</code> to a new error type using the …","Maps this future’s <code>Error</code> to a new error type using the …","Factor out a homogeneous type from an either of pairs.","Factor out a homogeneous type from an either of pairs.","Flatten the execution of this future when the output of …","Flatten the execution of this future when the output of …","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Fuse a future such that <code>poll</code> will never again be called …","Fuse a future such that <code>poll</code> will never again be called …","Create an <code>AbortHandle</code> from the given <code>AbortRegistration</code>.","Do something with the output of a future before passing it …","Do something with the output of a future before passing it …","Do something with the error value of a future before …","Do something with the error value of a future before …","Do something with the success value of a future before …","Do something with the success value of a future before …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Wraps a <code>TryFuture</code> into a type that implements <code>Future</code>.","Wraps a <code>TryFuture</code> into a type that implements <code>Future</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwraps the value from this immediately ready future.","Consumes this combinator, returning the underlying futures.","Extract the value of an either over two equivalent types.","Convert an owned instance into a (conceptually owned) fat …","Convert this future into a single element stream.","Convert this future into a single element stream.","Checks whether the task has been aborted. Note that all …","Checks whether <code>AbortHandle::abort</code> was <em>called</em> on any …","Returns <code>true</code> if the underlying future should no longer be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joins the result of two futures, waiting for them both to …","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Creates a future which represents a collection of the …","Creates a new future that allows delayed execution of a …","Wrap this future in an <code>Either</code> future, making it the …","Wrap this future in an <code>Either</code> future, making it the …","Map this future’s output to a different type, returning …","Map this future’s output to a different type, returning …","Maps this future’s error value to a different value.","Maps this future’s error value to a different value.","Map this future’s output to a different type, returning …","Map this future’s output to a different type, returning …","Maps this future’s success value to a different value.","Maps this future’s success value to a different value.","Maps this future’s success value to a different value, …","Maps this future’s success value to a different value, …","Wraps a future into a <code>MaybeDone</code>","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Creates a new <code>Abortable</code> future/stream using an existing …","Creates an (<code>AbortHandle</code>, <code>AbortRegistration</code>) pair which can …","Evaluates and consumes the future, returning the resulting …","Evaluates and consumes the future, returning the resulting …","Create a future that is immediately ready with a success …","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.","Executes another future if this one resolves to an error. …","Executes another future if this one resolves to an error. …","Returns an <code>Option</code> containing a mutable reference to the …","Returns an <code>Option</code> containing a mutable reference to the …","Creates a future which never resolves, representing a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new future wrapping around a function returning …","Creates a future that is immediately ready with an Option …","","","","","","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …","Creates a future that is immediately ready with a value.","Wrap this future in an <code>Either</code> future, making it the …","Wrap this future in an <code>Either</code> future, making it the …","Waits for either one of two differently-typed futures to …","Creates a new future which will select over a list of …","Creates a new future which will select the first …","","","","","Attempt to take the output of a <code>MaybeDone</code> without driving …","Attempt to take the output of a <code>TryMaybeDone</code> without …","Creates a new <code>Fuse</code>-wrapped future which is already …","Chain on a computation for when a future finished, passing …","Chain on a computation for when a future finished, passing …","","","","","","","","","","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joins the result of two futures, waiting for them both to …","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Creates a future which represents either a collection of …","Wraps a future into a <code>TryMaybeDone</code>","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>TryFuture::try_poll</code> on …","A convenience method for calling <code>TryFuture::try_poll</code> on …","Waits for either one of two differently-typed futures to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Unwraps this future’s output, producing a future with …","Unwraps this future’s output, producing a future with …","A type with no possible values.","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Future for the <code>all</code> method.","Stream for the <code>and_then</code> method.","Future for the <code>any</code> method.","An owned dynamically typed <code>Stream</code> for use in cases where …","Stream for the <code>buffer_unordered</code> method.","Stream for the <code>buffered</code> method.","Stream for the <code>chain</code> method.","Stream for the <code>chunks</code> method.","Future for the <code>collect</code> method.","Future for the <code>concat</code> method.","Future for the <code>count</code> method.","Stream for the <code>cycle</code> method.","Stream for the <code>empty</code> function.","Stream for the <code>enumerate</code> method.","Stream for the <code>err_into</code> method.","The type of failures yielded by this future","Stream for the <code>filter</code> method.","Stream for the <code>filter_map</code> method.","Stream for the <code>flat_map</code> method.","Stream for the <code>flat_map_unordered</code> method.","Stream for the <code>flatten</code> method.","Stream for the <code>flatten_unordered</code> method.","Future for the <code>fold</code> method.","Future for the <code>for_each</code> method.","Future for the <code>for_each_concurrent</code> method.","Stream for the <code>fuse</code> method.","A stream which tracks whether or not the underlying stream …","An unbounded queue of futures.","A set of futures which may complete in any order.","Stream for the <code>inspect</code> method.","Stream for the <code>inspect_err</code> method.","Stream for the <code>inspect_ok</code> method.","Stream for the <code>into_stream</code> method.","Values yielded by the stream.","Stream for the <code>iter</code> function.","Poll the first stream.","<code>BoxStream</code>, but without the <code>Send</code> requirement.","Stream for the <code>map</code> method.","Stream for the <code>map_err</code> method.","Stream for the <code>map_ok</code> method.","Future for the <code>next</code> method.","Future for the <code>Peekable::next_if</code> method.","Future for the <code>Peekable::next_if_eq</code> method.","The type of successful values yielded by this future","A stream which emits single element and then EOF.","Stream for the <code>or_else</code> method.","Future for the <code>Peekable::peek</code> method.","Future for the <code>Peekable::peek_mut</code> method.","A <code>Stream</code> that implements a <code>peek</code> method.","Stream for the <code>pending()</code> function.","Stream for the <code>poll_fn</code> function.","Stream for the poll_immediate function.","Type to tell <code>SelectWithStrategy</code> which stream to poll next.","Stream for the <code>ready_chunks</code> method.","Stream for the <code>repeat</code> function.","An stream that repeats elements of type <code>A</code> endlessly by …","Poll the second stream.","Stream for the <code>scan</code> method.","Stream for the <code>select()</code> function.","An unbounded set of streams","Future for the <code>select_next_some</code> method.","Stream for the <code>select_with_strategy()</code> function. See …","Stream for the <code>skip</code> method.","Stream for the <code>skip_while</code> method.","A stream of values produced asynchronously.","An extension trait for <code>Stream</code>s that provides a variety of …","Future for the <code>into_future</code> method.","Stream for the <code>take</code> method.","Stream for the <code>take_until</code> method.","Stream for the <code>take_while</code> method.","Stream for the <code>then</code> method.","Stream for the <code>try_buffer_unordered</code> method.","Stream for the <code>try_buffered</code> method.","Stream for the <code>try_chunks</code> method.","Error indicating, that while chunk was collected inner …","Future for the <code>try_collect</code> method.","Future for the <code>try_concat</code> method.","Stream for the <code>try_filter</code> method.","Stream for the <code>try_filter_map</code> method.","Stream for the <code>try_flatten</code> method.","Stream for the <code>try_flatten_unordered</code> method.","Future for the <code>try_fold</code> method.","Future for the <code>try_for_each</code> method.","Future for the <code>try_for_each_concurrent</code> method.","Future for the <code>try_next</code> method.","Stream for the <code>try_skip_while</code> method.","A convenience for streams that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning streams","Stream for the <code>try_take_while</code> method.","Stream for the <code>try_unfold</code> function.","Stream for the <code>unfold</code> function.","Future for the <code>unzip</code> method.","Stream for the <code>zip</code> method.","Creates a new <code>Abortable</code> stream and an <code>AbortHandle</code> which …","Execute predicate over asynchronous stream, and return <code>true</code>…","Execute predicate over asynchronous stream, and return <code>true</code>…","Chain on a computation for when a value is ready, passing …","Chain on a computation for when a value is ready, passing …","Execute predicate over asynchronous stream, and return <code>true</code>…","Execute predicate over asynchronous stream, and return <code>true</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrap the stream in a Box, pinning it.","Wrap the stream in a Box, pinning it.","Wrap the stream in a Box, pinning it.","Wrap the stream in a Box, pinning it.","An adaptor for creating a buffered list of pending futures …","An adaptor for creating a buffered list of pending futures …","An adaptor for creating a buffered list of pending futures.","An adaptor for creating a buffered list of pending futures.","Borrows a stream, rather than consuming it.","Borrows a stream, rather than consuming it.","Adapter for chaining two streams.","Adapter for chaining two streams.","An adaptor for chunking up items of the stream inside a …","An adaptor for chunking up items of the stream inside a …","","","","","","","","","","","","","","","Transforms a stream into a collection, returning a future …","Transforms a stream into a collection, returning a future …","Concatenate all items of a stream into a single extendable …","Concatenate all items of a stream into a single extendable …","Drives the stream to completion, counting the number of …","Drives the stream to completion, counting the number of …","Repeats a stream endlessly.","Repeats a stream endlessly.","","","","","","Creates a stream which contains no elements.","Creates a stream which gives the current iteration count …","Creates a stream which gives the current iteration count …","","","Wraps the current stream in a new stream which converts …","Wraps the current stream in a new stream which converts …","","","","Filters the values produced by this stream according to …","Filters the values produced by this stream according to …","Filters the values produced by this stream while …","Filters the values produced by this stream while …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute an accumulating asynchronous computation over a …","Execute an accumulating asynchronous computation over a …","Runs this stream to completion, executing the provided …","Runs this stream to completion, executing the provided …","Runs this stream to completion, executing the provided …","Runs this stream to completion, executing the provided …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Fuse a stream such that <code>poll_next</code> will never again be …","Fuse a stream such that <code>poll_next</code> will never again be …","An unbounded set of futures.","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying stream that …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying streams …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying streams …","Acquires a mutable reference to the underlying streams …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying stream that this …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying streams that this …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying streams that this …","Acquires a reference to the underlying streams that this …","","Do something with each item of this stream, afterwards …","Do something with each item of this stream, afterwards …","Do something with the error value of this stream, …","Do something with the error value of this stream, …","Do something with the success value of this stream, …","Do something with the success value of this stream, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this stream into a future of …","Converts this stream into a future of …","","","","","","","","","","","","","","","","","","","","","","","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying stream.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying streams.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying streams.","Consumes this combinator, returning the underlying streams.","","","","","","","Wraps a <code>TryStream</code> into a type that implements <code>Stream</code>","Wraps a <code>TryStream</code> into a type that implements <code>Stream</code>","Returns whether the underlying stream has finished or not.","Returns <code>true</code> if the queue contains no futures","Whether the stream was stopped yet by the stopping future …","Returns <code>true</code> if the stream should no longer be polled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …","Wrap this stream in an <code>Either</code> stream, making it the …","Wrap this stream in an <code>Either</code> stream, making it the …","Returns the number of futures contained in the queue.","Maps this stream’s items to a different type, returning …","Maps this stream’s items to a different type, returning …","Wraps the current stream in a new stream which maps the …","Wraps the current stream in a new stream which maps the …","Wraps the current stream in a new stream which maps the …","Wraps the current stream in a new stream which maps the …","Constructs a new, empty <code>FuturesOrdered</code>","Creates a future that resolves to the next item in the …","Creates a future that resolves to the next item in the …","Creates a future which will consume and return the next …","Creates a future which will consume and return the next …","Creates a stream of a single element.","Chain on a computation for when an error happens, passing …","Chain on a computation for when an error happens, passing …","Produces a future which retrieves a reference to the next …","Produces a future which retrieves a mutable reference to …","Creates a new stream which exposes a <code>peek</code> method.","Creates a new stream which exposes a <code>peek</code> method.","Creates a stream which never returns any elements.","","","","","","","","","","","","","","","","","","","","","","","Creates a new stream wrapping a function returning …","Creates a new stream that always immediately returns …","Attempt to pull out the next value of this stream, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>","A convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>","Peek retrieves a reference to the next item in the stream.","Peek retrieves a mutable reference to the next item in the …","Push a future into the queue.","Pushes a future to the back of the queue.","Pushes a future to the front of the queue.","An adaptor for chunking up ready items of the stream …","An adaptor for chunking up ready items of the stream …","Create a stream which produces the same item repeatedly.","Creates a new stream that repeats elements of type <code>A</code> …","Wrap this stream in an <code>Either</code> stream, making it the …","Wrap this stream in an <code>Either</code> stream, making it the …","Combinator similar to <code>StreamExt::fold</code> that holds internal …","Combinator similar to <code>StreamExt::fold</code> that holds internal …","This function will attempt to pull items from both …","An unbounded set of streams","Convert a list of streams into a <code>Stream</code> of results from …","Returns a <code>Future</code> that resolves when the next item in this …","Returns a <code>Future</code> that resolves when the next item in this …","This function will attempt to pull items from both …","Returns the bounds on the remaining length of the stream.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new stream which skips <code>n</code> items of the underlying …","Creates a new stream which skips <code>n</code> items of the underlying …","Skip elements on this stream while the provided …","Skip elements on this stream while the provided …","","","Creates a new stream of at most <code>n</code> items of the underlying …","Creates a new stream of at most <code>n</code> items of the underlying …","Extract the stopping future out of the combinator. The …","Once the stopping future is resolved, this method can be …","Take elements from this stream until the provided future …","Take elements from this stream until the provided future …","Take elements from this stream while the provided …","Take elements from this stream while the provided …","Computes from this stream’s items new items of a …","Computes from this stream’s items new items of a …","","","","","","","","","Toggle the value and return the old one.","Attempt to execute several futures from a stream …","Attempt to execute several futures from a stream …","Attempt to execute several futures from a stream …","Attempt to execute several futures from a stream …","An adaptor for chunking up successful items of the stream …","An adaptor for chunking up successful items of the stream …","Attempt to transform a stream into a collection, returning …","Attempt to transform a stream into a collection, returning …","Attempt to concatenate all items of a stream into a single …","Attempt to concatenate all items of a stream into a single …","Attempt to filter the values produced by this stream …","Attempt to filter the values produced by this stream …","Attempt to filter the values produced by this stream while …","Attempt to filter the values produced by this stream while …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","Attempt to execute an accumulating asynchronous …","Attempt to execute an accumulating asynchronous …","Attempts to run this stream to completion, executing the …","Attempts to run this stream to completion, executing the …","Attempts to run this stream to completion, executing the …","Attempts to run this stream to completion, executing the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a future that attempts to resolve the next item in …","Creates a future that attempts to resolve the next item in …","","","","","","","","","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>TryStream::try_poll_next</code> …","A convenience method for calling <code>TryStream::try_poll_next</code> …","Skip elements on this stream while the provided …","Skip elements on this stream while the provided …","Take elements on this stream while the provided …","Take elements on this stream while the provided …","Creates a <code>TryStream</code> from a seed and a closure returning a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Stream</code> from a seed and a closure returning a …","Converts a stream of pairs into a future, which resolves …","Converts a stream of pairs into a future, which resolves …","An adapter for zipping two streams together.","An adapter for zipping two streams together.","A set of futures which may complete in any order.","Owned iterator over all futures in the unordered set.","Immutable iterator over all the futures in the unordered …","Mutable iterator over all futures in the unordered set.","Mutable iterator over all futures in the unordered set.","Immutable iterator over all futures in the unordered set.","","","","","","","","","","","Clears the set, removing all futures.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns <code>true</code> if the set contains no futures.","Returns an iterator that allows inspecting each future in …","Returns an iterator that allows modifying each future in …","Returns an iterator that allows modifying each future in …","Returns an iterator that allows inspecting each future in …","Returns the number of futures contained in the set.","Constructs a new, empty <code>FuturesUnordered</code>.","","","","","","Push a future into the set.","","","","","","","","","","","","","","","","","","","","","Owned iterator over all streams in the unordered set.","Immutable iterator over all streams in the unordered set.","Mutable iterator over all streams in the unordered set.","An unbounded set of streams","","","","","","","Clears the set, removing all streams.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if the set contains no streams","Returns an iterator that allows inspecting each stream in …","Returns an iterator that allows modifying each stream in …","Returns the number of streams contained in the set.","Constructs a new, empty <code>SelectAll</code>","","","","Push a stream into the set.","Convert a list of streams into a <code>Stream</code> of results from …","","","","","","","","","","","","","A way of waking up a specific task.","A synchronization primitive for task wakeup.","","A custom trait object for polling futures, roughly akin to …","A custom trait object for polling futures, roughly akin to …","The <code>LocalSpawn</code> is similar to <code>Spawn</code>, but allows spawning …","Extension trait for <code>LocalSpawn</code>.","","","","The <code>Spawn</code> trait allows for pushing futures onto an …","An error that occurred during spawning.","Extension trait for <code>Spawn</code>.","A custom implementation of a future trait object for …","","A <code>Waker</code> that is only valid for a given lifetime.","","","","","","","","","","","","","Drops the future represented by the given fat pointer.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.","Convert an owned instance into a (conceptually owned) fat …","Check whether spawning failed to the executor being shut …","Create an <code>AtomicWaker</code>.","Create a <code>LocalFutureObj</code> from a custom trait object …","Create a <code>FutureObj</code> from a custom trait object …","Create a new <code>WakerRef</code> from a <code>Waker</code> reference.","Create a new <code>WakerRef</code> from a <code>Waker</code> that must not be …","Create a new <code>Waker</code> which does nothing when <code>wake()</code> is …","Get a static reference to a <code>Waker</code> which does nothing when …","","","Registers the waker to be notified on calls to <code>wake</code>.","Spawning failed because the executor has been shut down.","Spawns a task that polls the given future with output <code>()</code> to","Spawns a task that polls the given future with output <code>()</code> to","Spawns a task that polls the given future with output <code>()</code> to","Spawns a task that polls the given future with output <code>()</code> to","Spawns a future that will be run to completion.","Spawns a future that will be run to completion.","Determines whether the executor is able to spawn new tasks.","Determines whether the executor is able to spawn new tasks.","Returns the last <code>Waker</code> passed to <code>register</code>, so that the …","","","","","","","","","","","","","","","","","","","Indicates that the associated task is ready to make …","Calls <code>wake</code> on the last <code>Waker</code> passed to <code>register</code>.","Indicates that the associated task is ready to make …","Creates a <code>Waker</code> from an <code>Arc&lt;impl ArcWake&gt;</code>.","Creates a reference to a <code>Waker</code> from a reference to …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,52,0,0,8,0,0,0,0,0,51,52,0,0,51,52,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,190,190,9,9,25,28,30,31,23,24,32,33,34,35,36,37,38,39,40,41,5,42,22,43,44,45,46,47,48,49,50,14,51,52,15,17,18,53,54,55,56,57,58,59,60,61,62,63,64,9,3,65,1,19,25,28,30,31,23,24,32,33,34,35,36,37,38,39,40,41,5,42,22,43,44,45,46,47,48,49,50,14,51,52,15,17,18,53,54,55,56,57,58,59,60,61,62,63,64,9,3,65,1,19,191,191,191,191,14,15,17,18,9,3,1,19,14,15,17,18,9,3,1,19,15,186,19,0,190,190,9,9,191,191,191,191,25,28,30,31,23,24,32,33,34,35,36,37,38,39,40,41,5,42,22,43,44,45,46,47,48,49,50,14,51,52,15,17,18,53,54,55,56,57,58,59,60,61,62,63,64,9,3,65,1,19,19,25,28,30,31,23,24,32,33,34,35,36,37,38,39,40,41,5,42,22,43,44,45,46,47,48,49,50,14,51,52,15,15,17,18,53,54,55,56,57,58,59,60,61,62,63,64,9,3,65,1,19,28,30,58,64,191,191,65,191,191,190,190,190,190,25,28,30,31,23,24,32,33,34,35,36,37,38,39,40,41,5,42,22,43,44,45,46,47,48,49,50,14,51,52,15,17,18,53,54,55,56,57,58,59,60,61,62,63,64,9,3,65,1,19,190,190,25,28,30,31,23,32,34,35,36,37,38,39,40,5,42,22,43,44,45,46,47,48,49,50,14,51,52,15,17,18,53,54,55,56,57,58,59,60,61,62,63,64,9,3,18,58,9,186,191,191,3,1,70,31,23,24,32,33,34,35,36,37,38,39,40,41,5,42,22,43,44,45,46,47,48,49,50,14,51,52,15,17,18,53,54,55,56,57,9,9,0,0,0,0,0,0,191,191,191,191,190,190,191,191,190,190,190,190,0,191,191,3,1,191,191,0,190,190,190,190,51,52,0,25,28,30,31,23,32,34,35,36,37,38,39,40,5,42,22,43,44,45,46,47,48,49,50,14,51,52,15,17,18,53,54,55,56,57,58,59,60,61,62,63,64,9,3,0,0,24,33,41,17,9,3,191,191,0,191,191,0,0,0,24,33,41,9,51,52,31,191,191,14,15,17,18,9,3,1,19,19,190,190,190,190,25,28,30,31,23,24,32,33,34,35,36,37,38,39,40,41,5,42,22,43,44,45,46,47,48,49,50,14,51,52,15,17,18,53,54,55,56,57,58,59,60,61,62,63,64,9,3,65,1,19,25,28,30,31,23,24,32,33,34,35,36,37,38,39,40,41,5,42,22,43,44,45,46,47,48,49,50,14,51,52,15,17,18,53,54,55,56,57,58,59,60,61,62,63,64,9,3,65,1,19,0,0,0,0,0,0,8,25,30,31,23,32,34,35,36,37,38,39,40,5,42,22,43,44,45,46,47,48,49,50,14,52,18,59,60,61,62,63,64,9,3,24,33,41,9,3,190,190,0,25,28,30,31,23,24,32,33,34,35,36,37,38,39,40,41,5,42,22,43,44,45,46,47,48,49,50,14,51,52,15,17,18,53,54,55,56,57,58,59,60,61,62,63,64,9,3,65,1,19,191,191,190,190,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,0,94,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0,0,0,0,0,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,192,193,193,192,192,115,101,102,103,86,95,116,98,99,100,104,108,109,113,117,81,79,118,119,120,121,122,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,87,137,138,84,85,111,139,80,107,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,105,157,158,159,160,161,162,163,88,89,90,91,164,92,93,165,94,166,167,115,101,102,103,86,95,116,98,99,100,104,108,109,113,117,81,79,118,119,120,121,122,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,87,137,138,84,85,111,139,80,107,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,105,157,158,159,160,161,162,163,88,89,90,91,164,92,93,165,94,166,167,192,192,192,192,192,192,192,192,192,192,192,192,192,192,88,89,90,91,92,93,94,88,89,90,91,92,93,94,192,192,192,192,192,192,192,192,101,102,103,94,102,0,192,192,105,94,193,193,101,102,103,192,192,192,192,192,192,192,192,192,192,192,192,115,101,102,103,86,95,116,98,99,100,104,108,109,113,117,81,79,118,119,120,121,122,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,87,137,138,84,85,111,139,80,107,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,105,105,157,158,159,160,161,162,163,88,89,90,91,164,92,93,165,94,166,167,192,192,192,192,192,192,115,101,102,103,86,95,116,98,99,100,104,108,109,113,117,81,79,118,119,120,121,122,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,87,137,138,84,85,111,139,80,107,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,105,157,158,159,160,161,162,163,88,89,90,91,164,92,93,165,94,166,167,101,102,103,192,192,0,104,108,109,113,119,120,121,122,110,125,130,131,132,133,134,135,136,87,137,138,84,85,111,80,107,140,141,142,143,144,145,148,150,151,152,155,159,160,161,162,165,166,104,108,109,113,119,120,121,122,110,125,130,131,132,133,134,135,136,87,137,138,84,85,111,80,107,140,141,142,143,144,145,148,150,151,152,155,159,160,161,162,165,166,104,108,109,113,119,120,121,122,110,125,130,131,132,133,134,135,136,87,137,138,84,85,111,80,107,140,141,142,143,144,145,148,150,151,152,155,159,160,161,162,165,166,94,192,192,193,193,193,193,115,101,102,103,86,95,116,98,99,100,104,108,109,113,117,81,79,118,119,120,121,122,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,87,137,138,84,85,111,139,80,107,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,105,157,158,159,160,161,162,163,88,89,90,91,164,92,93,165,94,166,167,192,192,95,116,98,99,117,81,79,118,120,123,124,126,127,128,129,139,146,147,153,154,157,163,104,108,109,113,119,120,121,122,110,125,130,131,132,133,134,135,136,87,137,138,84,85,111,80,107,140,141,142,143,144,145,148,150,151,152,155,159,160,161,162,165,166,102,102,102,103,103,103,193,193,119,101,134,71,101,102,103,86,95,116,98,99,100,104,108,109,113,117,81,79,118,119,120,121,122,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,87,137,138,84,85,111,139,80,107,140,141,142,143,144,145,146,148,150,151,152,153,155,157,159,160,163,89,90,91,164,92,93,165,166,167,0,192,192,101,192,192,193,193,193,193,101,192,192,125,125,0,193,193,125,125,192,192,0,95,116,98,99,117,81,79,118,120,123,124,126,127,128,129,139,146,147,153,154,157,163,0,0,75,115,101,102,103,86,100,104,108,109,113,119,121,122,110,125,130,131,132,133,134,135,136,87,137,138,84,85,111,80,107,140,141,142,143,144,145,148,150,151,152,155,158,159,160,161,162,88,89,90,91,164,92,93,165,166,167,192,192,125,125,101,101,101,192,192,0,0,192,192,192,192,0,0,0,192,192,0,75,101,102,86,100,104,108,109,113,119,121,122,110,125,130,131,132,133,134,135,136,87,137,138,84,85,111,80,107,140,141,142,143,144,145,148,150,152,155,159,160,88,89,90,91,164,92,93,192,192,192,192,102,102,192,192,134,134,192,192,192,192,192,192,88,89,90,91,92,93,94,105,94,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,115,101,102,103,86,95,116,98,99,100,104,108,109,113,117,81,79,118,119,120,121,122,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,87,137,138,84,85,111,139,80,107,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,105,157,158,159,160,161,162,163,88,89,90,91,164,92,93,165,94,166,167,115,101,102,103,86,95,116,98,99,100,104,108,109,113,117,81,79,118,119,120,121,122,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,87,137,138,84,85,111,139,80,107,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,105,157,158,159,160,161,162,163,88,89,90,91,164,92,93,165,94,166,167,193,193,98,117,124,146,147,153,154,157,163,149,115,101,102,103,86,100,108,109,113,119,121,122,110,125,130,131,132,133,134,135,138,84,85,80,107,140,141,142,143,144,145,148,150,151,155,158,159,160,161,162,88,89,90,91,164,92,165,166,167,193,193,193,193,193,193,0,115,101,102,103,86,95,116,98,99,100,104,108,109,113,117,81,79,118,119,120,121,122,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,87,137,138,84,85,111,139,80,107,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,105,157,158,159,160,161,162,163,88,89,90,91,164,92,93,165,94,166,167,0,192,192,192,192,0,0,0,0,0,0,173,174,175,176,177,173,174,175,176,177,102,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,102,102,102,102,102,102,102,173,174,175,176,177,102,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,173,174,175,176,177,0,0,0,0,178,179,180,178,179,180,103,178,179,180,178,179,180,178,179,180,178,179,180,103,103,103,103,103,178,179,180,103,0,178,179,180,178,179,180,178,179,180,178,179,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,171,181,170,172,182,171,181,170,172,182,181,182,186,170,171,171,181,170,172,182,171,181,170,170,170,170,170,170,172,172,172,172,172,182,171,181,170,172,182,170,172,170,186,171,181,170,172,182,182,0,0,170,172,181,171,194,194,195,195,196,197,197,196,181,171,171,181,170,172,182,171,181,170,172,182,170,172,171,181,170,172,182,189,181,189,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[-1,[[2,[[3,[-1]],1]]],4],[[-1,-2],[[5,[-1,-3,-2]]],6,7,8],[[-1,-2],[[5,[-1,-3,-2]]],6,7,8],[[[10,[[9,[-1,-2]]]]],[[9,[[10,[-1]],[10,[-2]]]]],[],[]],[[[10,[[9,[-1,-2]]]]],[[9,[[10,[-1]],[10,[-2]]]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,11,[6,12]],[-1,11,[6,12]],[-1,13,6],[-1,13,6],[[[14,[-1]]],[[14,[-1]]],[]],[[[15,[-1]]],[[15,[-1]]],16],[[[17,[-1]]],[[17,[-1]]],16],[[[18,[-1]]],[[18,[-1]]],16],[[[9,[-1,-2]]],[[9,[-1,-2]]],16,16],[[[3,[-1]]],[[3,[-1]]],16],[1,1],[19,19],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],[[15,[-1]]],[]],[4,2],[[19,19],20],[-1,[[18,[[21,[-2,-1]]]]],[],[]],[-1,[[22,[-1,-2]]],6,[]],[-1,[[22,[-1,-2]]],6,[]],[[[9,[[2,[-1,-2]],[2,[-1,-3]]]]],[[2,[-1,[9,[-2,-3]]]]],[],[],[]],[[[9,[[2,[-1,-2]],[2,[-3,-2]]]]],[[2,[[9,[-1,-3]],-2]]],[],[],[]],[-1,[[23,[-1]]],6],[-1,[[23,[-1]]],6],[-1,[[24,[-1]]],6],[-1,[[24,[-1]]],6],[[[25,[-1]],26],27,[]],[[[28,[-1]],26],27,[4,29]],[[[30,[-1]],26],27,[8,29]],[[[31,[-1]],26],27,29],[[[23,[-1]],26],27,4],[[[24,[-1]],26],27,4],[[[32,[-1,-2]],26],27,[],[]],[[[33,[-1]],26],27,[]],[[[34,[-1,-2]],26],27,[],[]],[[[35,[-1,-2,-3]],26],27,[],[],[]],[[[36,[-1,-2]],26],27,[],[]],[[[37,[-1]],26],27,[]],[[[38,[-1]],26],27,[]],[[[39,[-1]],26],27,29],[[[40,[-1,-2]],26],27,[],[]],[[[41,[-1]],26],27,8],[[[5,[-1,-2,-3]],26],27,[],[],[]],[[[42,[-1,-2,-3]],26],27,[],[],[]],[[[22,[-1,-2]],26],27,[],[]],[[[43,[-1,-2]],26],27,[],[]],[[[44,[-1,-2]],26],27,[],[]],[[[45,[-1,-2]],26],27,[],[]],[[[46,[-1,-2]],26],27,[],[]],[[[47,[-1,-2]],26],27,[],[]],[[[48,[-1,-2,-3]],26],27,[],[],[]],[[[49,[-1,-2]],26],27,[],[]],[[[50,[-1]],26],27,29],[[[14,[-1]],26],27,29],[[[51,[-1]],26],27,[29,4]],[[[52,[-1]],26],27,[29,8]],[[[15,[-1]],26],27,29],[[[17,[-1]],26],27,29],[[[18,[-1]],26],27,29],[[[53,[-1,-2]],26],27,[4,29],[4,29]],[[[54,[-1,-2,-3]],26],27,[4,29],[4,29],[4,29]],[[[55,[-1,-2,-3,-4]],26],27,[4,29],[4,29],[4,29],[4,29]],[[[56,[-1,-2,-3,-4,-5]],26],27,[4,29],[4,29],[4,29],[4,29],[4,29]],[[[57,[-1,-2]],26],27,29,29],[[[58,[-1]],26],27,29],[[[59,[-1,-2]],26],27,[8,29],[8,29]],[[[60,[-1,-2,-3]],26],27,[8,29],[8,29],[8,29]],[[[61,[-1,-2,-3,-4]],26],27,[8,29],[8,29],[8,29],[8,29]],[[[62,[-1,-2,-3,-4,-5]],26],27,[8,29],[8,29],[8,29],[8,29],[8,29]],[[[63,[-1,-2]],26],27,29,29],[[[64,[-1]],26],27,29],[[[9,[-1,-2]],26],27,29,29],[[[3,[-1]],26],27,29],[[65,26],27],[[1,26],27],[[19,26],27],[[19,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[66,[-1]]],[[15,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[28,[-2]]],67,4],[-1,[[30,[-2]]],67,8],[-1,[[58,[-2]]],67,[4,68]],[-1,[[64,[-2]]],67,[8,68]],[-1,[[31,[-1]]],6],[-1,[[31,[-1]]],6],[65,1],[[-1,-2],[[36,[-1,-2]]],6,7],[[-1,-2],[[36,[-1,-2]]],6,7],[[-1,-2],[[45,[-1,-2]]],6,7],[[-1,-2],[[45,[-1,-2]]],6,7],[[-1,-2],[[44,[-1,-2]]],6,7],[[-1,-2],[[44,[-1,-2]]],6,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[39,[-1]]],6],[-1,[[39,[-1]]],6],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[[18,[-1]]],-1,[]],[[[58,[-1]]],[[69,[-1]]],[]],[[[9,[-1,-1]]],-1,[]],[-1,4,[]],[-1,[[33,[-1]]],6],[-1,[[33,[-1]]],6],[[[3,[-1]]],20,[]],[1,20],[-1,20,[]],[[[31,[-1]]],20,4],[[[23,[-1]]],20,4],[[[24,[-1]]],20,4],[[[32,[-1,-2]]],20,[],[]],[[[33,[-1]]],20,[]],[[[34,[-1,-2]]],20,[],[]],[[[35,[-1,-2,-3]]],20,[],[],[]],[[[36,[-1,-2]]],20,[],[]],[[[37,[-1]]],20,[]],[[[38,[-1]]],20,[]],[[[39,[-1]]],20,[8,70]],[[[40,[-1,-2]]],20,[],[]],[[[41,[-1]]],20,8],[[[5,[-1,-2,-3]]],20,[],[],[]],[[[42,[-1,-2,-3]]],20,[],[],[]],[[[22,[-1,-2]]],20,[],[]],[[[43,[-1,-2]]],20,[],[]],[[[44,[-1,-2]]],20,[],[]],[[[45,[-1,-2]]],20,[],[]],[[[46,[-1,-2]]],20,[],[]],[[[47,[-1,-2]]],20,[],[]],[[[48,[-1,-2,-3]]],20,[],[],[]],[[[49,[-1,-2]]],20,[],[]],[[[50,[-1]]],20,7],[[[14,[-1]]],20,[]],[[[51,[-1]]],20,4],[[[52,[-1]]],20,8],[[[15,[-1]]],20,70],[[[17,[-1]]],20,4],[[[18,[-1]]],20,[]],[[[53,[-1,-2]]],20,70,70],[[[54,[-1,-2,-3]]],20,70,70,70],[[[55,[-1,-2,-3,-4]]],20,70,70,70,70],[[[56,[-1,-2,-3,-4,-5]]],20,70,70,70,70,70],[[[57,[-1,-2]]],20,[4,68],[4,68]],[[[9,[-1,-2]]],20,70,70],[[[9,[-1,-2]]],20,71,71],[[-1,-2],[[53,[-1,-2]]],4,4],[[-1,-2,-3],[[54,[-1,-2,-3]]],4,4,4],[[-1,-2,-3,-4],[[55,[-1,-2,-3,-4]]],4,4,4,4],[[-1,-2,-3,-4,-5],[[56,[-1,-2,-3,-4,-5]]],4,4,4,4,4],[-1,28,67],[-1,[[50,[-1]]],7],[-1,[[9,[-1,-2]]],6,4],[-1,[[9,[-1,-2]]],6,4],[[-1,-2],[[32,[-1,-2]]],6,7],[[-1,-2],[[32,[-1,-2]]],6,7],[[-1,-2],[[47,[-1,-2]]],6,7],[[-1,-2],[[47,[-1,-2]]],6,7],[-1,[[34,[-1,-2]]],6,[]],[-1,[[34,[-1,-2]]],6,[]],[[-1,-2],[[46,[-1,-2]]],6,7],[[-1,-2],[[46,[-1,-2]]],6,7],[[-1,-2,-3],[[48,[-1,-3,-2]]],6,7,7],[[-1,-2,-3],[[48,[-1,-3,-2]]],6,7,7],[-1,[[51,[-1]]],4],[-1,[[37,[-1]]],6],[-1,[[37,[-1]]],6],[[-1,65],[[3,[-1]]],[]],[[],[[2,[1,65]]]],[-1,66,6],[-1,66,6],[-1,[[18,[[21,[-1,-2]]]]],[],[]],[-1,[[43,[-1,-2]]],6,[]],[-1,[[43,[-1,-2]]],6,[]],[[-1,-2],[[42,[-1,-3,-2]]],6,7,8],[[-1,-2],[[42,[-1,-3,-2]]],6,7,8],[[[10,[[51,[-1]]]]],66,4],[[[10,[[52,[-1]]]]],66,8],[[],[[14,[-1]]],[]],[[[10,[[25,[-1]]]],72],[[73,[-2]]],74,[]],[[[10,[[28,[-1]]]],72],73,4],[[[10,[[30,[-1]]]],72],73,8],[[[10,[[31,[-1]]]],72],73,4],[[[10,[[23,[-1]]]],72],73,4],[[[10,[[32,[-1,-2]]]],72],73,[],[]],[[[10,[[34,[-1,-2]]]],72],73,[],[]],[[[10,[[35,[-1,-2,-3]]]],72],73,[],[],[]],[[[10,[[36,[-1,-2]]]],72],73,[],[]],[[[10,[[37,[-1]]]],72],73,[]],[[[10,[[38,[-1]]]],72],73,[]],[[[10,[[39,[-1]]]],72],73,8],[[[10,[[40,[-1,-2]]]],72],73,[],[]],[[[10,[[5,[-1,-2,-3]]]],72],73,[],[],[]],[[[10,[[42,[-1,-2,-3]]]],72],73,[],[],[]],[[[10,[[22,[-1,-2]]]],72],73,[],[]],[[[10,[[43,[-1,-2]]]],72],73,[],[]],[[[10,[[44,[-1,-2]]]],72],73,[],[]],[[[10,[[45,[-1,-2]]]],72],73,[],[]],[[[10,[[46,[-1,-2]]]],72],73,[],[]],[[[10,[[47,[-1,-2]]]],72],73,[],[]],[[[10,[[48,[-1,-2,-3]]]],72],73,[],[],[]],[[[10,[[49,[-1,-2]]]],72],73,[],[]],[[[10,[[50,[-1]]]],72],[[73,[-2]]],7,[]],[[[10,[[14,[-1]]]],72],[[73,[-1]]],[]],[[[10,[[51,[-1]]]],72],73,4],[[[10,[[52,[-1]]]],72],73,8],[[[10,[[15,[-1]]]],72],73,4],[[[10,[[17,[-1]]]],72],[[73,[[66,[-2]]]]],4,[]],[[[10,[[18,[-1]]]],72],[[73,[-1]]],[]],[[[10,[[53,[-1,-2]]]],72],73,4,4],[[[10,[[54,[-1,-2,-3]]]],72],73,4,4,4],[[[10,[[55,[-1,-2,-3,-4]]]],72],73,4,4,4,4],[[[10,[[56,[-1,-2,-3,-4,-5]]]],72],73,4,4,4,4,4],[[[10,[[57,[-1,-2]]]],72],73,[4,68],[4,68]],[[[10,[[58,[-1]]]],72],73,[4,68]],[[[10,[[59,[-1,-2]]]],72],73,8,8],[[[10,[[60,[-1,-2,-3]]]],72],73,8,8,8],[[[10,[[61,[-1,-2,-3,-4]]]],72],73,8,8,8,8],[[[10,[[62,[-1,-2,-3,-4,-5]]]],72],73,8,8,8,8,8],[[[10,[[63,[-1,-2]]]],72],73,[8,68],[8,68]],[[[10,[[64,[-1]]]],72],73,[8,68]],[[[10,[[9,[-1,-2]]]],72],73,4,4],[[[10,[[3,[-1]]]],72],73,4],[-1,[[25,[-1]]],74],[-1,[[17,[-1]]],4],[[[10,[[24,[-1]]]],72],[[73,[66]]],4],[[[10,[[33,[-1]]]],72],[[73,[66]]],[]],[[[10,[[41,[-1]]]],72],[[73,[66]]],8],[[[10,[[17,[-1]]]],72],[[73,[66]]],4],[[[10,[[9,[-1,-2]]]],72],[[73,[66]]],75,75],[[[10,[[3,[-1]]]],72],[[73,[66]]],75],[[-1,72],73,68],[[-1,72],73,68],[-1,[[18,[-1]]],[]],[-1,[[9,[-2,-1]]],6,4],[-1,[[9,[-2,-1]]],6,4],[[-1,-2],[[57,[-1,-2]]],[4,68],[4,68]],[-1,58,67],[-1,64,67],[[[24,[-1]]],[[2,[76,[66,[76]]]]],4],[[[33,[-1]]],[[2,[76,[66,[76]]]]],[]],[[[41,[-1]]],[[2,[76,[66,[76]]]]],8],[[[9,[-1,-2]]],[[2,[76,[66,[76]]]]],75,75],[[[10,[[51,[-1]]]]],66,4],[[[10,[[52,[-1]]]]],66,8],[[],[[31,[-1]]],4],[[-1,-2],[[35,[-1,-3,-2]]],6,7,4],[[-1,-2],[[35,[-1,-3,-2]]],6,7,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,77,[]],[-1,[[40,[-1]]],6],[-1,[[40,[-1]]],6],[-1,[[41,[-1]]],6],[-1,[[41,[-1]]],6],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[[-1,-2],[[59,[-1,-2]]],8,8],[[-1,-2,-3],[[60,[-1,-2,-3]]],8,8,8],[[-1,-2,-3,-4],[[61,[-1,-2,-3,-4]]],8,8,8,8],[[-1,-2,-3,-4,-5],[[62,[-1,-2,-3,-4,-5]]],8,8,8,8,8],[-1,30,67],[-1,[[52,[-1]]],8],[[[10,[-1]],72],[[73,[21]]],[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[-1,72],[[73,[21]]],68],[[-1,72],[[73,[21]]],68],[[-1,-2],[[63,[-1,-2]]],[8,68],[8,68]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,[[38,[-1]]],6],[-1,[[38,[-1]]],6],[[-1,-2],[[49,[-1,-2]]],6,7],[[-1,-2],[[49,[-1,-2]]],6,7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[2,[[3,[-1]],1]]],75],[[-1,-2],[[79,[-1,-3,-2]]],6,74,4],[[-1,-2],[[79,[-1,-3,-2]]],6,74,4],[[-1,-2],[[80,[-1,-3,-2]]],6,74,8],[[-1,-2],[[80,[-1,-3,-2]]],6,74,8],[[-1,-2],[[81,[-1,-3,-2]]],6,74,4],[[-1,-2],[[81,[-1,-3,-2]]],6,74,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,82,[6,12]],[-1,82,[6,12]],[-1,83,6],[-1,83,6],[[-1,76],[[84,[-1]]],6],[[-1,76],[[84,[-1]]],6],[[-1,76],[[85,[-1]]],6],[[-1,76],[[85,[-1]]],6],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[86,[-1,-2]]],6,75],[[-1,-2],[[86,[-1,-2]]],6,75],[[-1,76],[[87,[-1]]],6],[[-1,76],[[87,[-1]]],6],[[[88,[-1]]],[[88,[-1]]],16],[[[89,[-1]]],[[89,[-1]]],16],[[[90,[-1]]],[[90,[-1]]],16],[[[91,[-1]]],[[91,[-1]]],[]],[[[92,[-1]]],[[92,[-1]]],[]],[[[93,[-1]]],[[93,[-1]]],16],[94,94],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[95,[-1,-2]]],6,[96,97]],[-1,[[95,[-1,-2]]],6,[96,97]],[-1,[[98,[-1]]],6],[-1,[[98,[-1]]],6],[-1,[[99,[-1]]],6],[-1,[[99,[-1]]],6],[-1,[[100,[-1]]],[6,16]],[-1,[[100,[-1]]],[6,16]],[[],[[101,[-1]]],4],[[],[[102,[-1]]],[]],[[],[[103,[-1]]],[75,68]],[[],94],[[[102,[-1]]],2,[]],[[],[[91,[-1]]],[]],[-1,[[104,[-1]]],6],[-1,[[104,[-1]]],6],[[[105,[-1,-2]],[105,[-1,-2]]],20,106,106],[[94,94],20],[-1,[[107,[-1,-2]]],6,[]],[-1,[[107,[-1,-2]]],6,[]],[[[101,[-1]],-2],2,4,67],[[[102,[-1]],-2],2,[],67],[[[103,[-1]],-2],2,[75,68],67],[[-1,-2],[[108,[-1,-3,-2]]],6,74,4],[[-1,-2],[[108,[-1,-3,-2]]],6,74,4],[[-1,-2],[[109,[-1,-3,-2]]],6,74,4],[[-1,-2],[[109,[-1,-3,-2]]],6,74,4],[[-1,-2],[[110,[-1,-3,-2]]],6,74,75],[[-1,-2],[[110,[-1,-3,-2]]],6,74,75],[[-1,-2,-3],[[111,[-1,-4,-3]]],6,[[112,[[66,[76]]]]],74,[75,68]],[[-1,-2,-3],[[111,[-1,-4,-3]]],6,[[112,[[66,[76]]]]],74,[75,68]],[-1,[[113,[-1]]],6],[-1,[[113,[-1]]],6],[[-1,-2],[[114,[-1]]],6,[[112,[[66,[76]]]]]],[[-1,-2],[[114,[-1]]],6,[[112,[[66,[76]]]]]],[[[115,[-1]],26],27,[]],[[[101,[-1]],26],27,4],[[[102,[-1]],26],27,[]],[[[103,[-1]],26],27,29],[[[86,[-1,-2]],26],27,29,29],[[[95,[-1,-2]],26],27,29,29],[[[116,[-1,-2,-3]],26],27,29,29,29],[[[98,[-1]],26],27,[29,75]],[[[99,[-1]],26],27,29],[[[100,[-1]],26],27,29],[[[104,[-1]],26],27,29],[[[108,[-1,-2,-3]],26],27,[75,29],29,[]],[[[109,[-1,-2,-3]],26],27,29,29,[]],[[[113,[-1]],26],27,75],[[[117,[-1,-2,-3,-4]],26],27,29,29,29,[]],[[[81,[-1,-2,-3]],26],27,29,29,[]],[[[79,[-1,-2,-3]],26],27,29,29,[]],[[[118,[-1,-2,-3]],26],27,29,29,[]],[[[119,[-1]],26],27,29],[[[120,[-1]],26],27,29],[[[121,[-1,-2]],26],27,[],[]],[[[122,[-1,-2]],26],27,29,[]],[[[110,[-1,-2,-3]],26],27,[],[],[]],[[[123,[-1]],26],27,[29,6]],[[[124,[-1]],26],27,[29,6]],[[[125,[-1]],26],27,[29,75]],[[[126,[-1]],26],27,[75,29]],[[[127,[-1]],26],27,[75,29]],[[[128,[-1,-2]],26],27,[75,29],[]],[[[129,[-1,-2]],26],27,[75,29],6],[[[130,[-1]],26],27,29],[[[131,[-1,-2,-3]],26],27,[75,29],29,[]],[[[132,[-1]],26],27,29],[[[133,[-1,-2,-3]],26],27,[75,29],29,[]],[[[134,[-1,-2]],26],27,[75,29],[4,29]],[[[135,[-1,-2,-3]],26],27,29,29,[]],[[[136,[-1,-2]],26],27,[29,75],[29,75]],[[[87,[-1]],26],27,[29,75]],[[[137,[-1]],26],27,[29,75]],[[[138,[-1,-2,-3,-4]],26],27,[75,29],29,29,[]],[[[84,[-1]],26],27,[75,29]],[[[85,[-1]],26],27,[75,29]],[[[111,[-1,-2,-3]],26],27,75,[75,68],74],[[[139,[-1,-2,-3]],26],27,29,29,[]],[[[80,[-1,-2,-3]],26],27,29,29,[]],[[[107,[-1,-2]],26],27,[],[]],[[[140,[-1,-2]],26],27,[],[]],[[[141,[-1,-2]],26],27,[],[]],[[[142,[-1]],26],27,29],[[[143,[-1,-2]],26],27,[],[]],[[[144,[-1,-2]],26],27,[],[]],[[[145,[-1,-2,-3]],26],27,29,29,[]],[[[146,[-1]],26],27,[29,6]],[[[147,[-1,-2,-3]],26],27,29,29,[]],[[[148,[-1,-2,-3]],26],27,[149,29],29,[]],[[[150,[-1,-2,-3]],26],27,29,29,[]],[[[151,[-1]],26],27,[149,29]],[[[152,[-1]],26],27,149],[[[153,[-1,-2]],26],27,29,29],[[[154,[-1]],26],27,[29,149]],[[[155,[-1]],26],27,[29,149]],[[[105,[-1,-2]],26],27,[],156],[[[105,[-1,-2]],26],27,[],29],[[[157,[-1,-2,-3,-4]],26],27,29,29,29,[]],[[[158,[-1,-2,-3]],26],27,29,[],29],[[[159,[-1,-2,-3]],26],27,[149,29],29,[]],[[[160,[-1,-2,-3]],26],27,[149,29],29,[]],[[[161,[-1]],26],27,[149,29]],[[[162,[-1]],26],27,[149,29]],[[[163,[-1,-2,-3]],26],27,29,29,[]],[[[88,[-1]],26],27,29],[[[89,[-1]],26],27,29],[[[90,[-1]],26],27,29],[[[91,[-1]],26],27,29],[[[164,[-1]],26],27,29],[[[92,[-1]],26],27,29],[[[93,[-1]],26],27,29],[[[165,[-1,-2]],26],27,29,29],[[94,26],27],[[[166,[-1,-2,-3,-4]],26],27,29,29,[],29],[[[167,[-1,-2,-3]],26],27,29,[],29],[[-1,-2,-3],[[117,[-1,-4,-2,-3]]],6,[],74,4],[[-1,-2,-3],[[117,[-1,-4,-2,-3]]],6,[],74,4],[[-1,-2],[[118,[-1,-3,-2]]],6,74,4],[[-1,-2],[[118,[-1,-3,-2]]],6,74,4],[[-1,-2,-3],[[139,[-1,-4,-3]]],6,[[112,[[66,[76]]]]],74,4],[[-1,-2,-3],[[139,[-1,-4,-3]]],6,[[112,[[66,[76]]]]],74,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[101,[-2]]],67,4],[-1,[[102,[-2]]],67,[]],[-1,[[103,[-2]]],67,[75,68]],[-1,[[119,[-1]]],6],[-1,[[119,[-1]]],6],0,[[[104,[-1]]],-1,75],[[[108,[-1,-2,-3]]],-1,75,4,0],[[[109,[-1,-2,-3]]],-1,75,4,74],[[[113,[-1]]],-1,75],[[[119,[-1]]],-1,[]],[[[120,[-1]]],[[66,[-1]]],[75,68]],[[[121,[-1,-2]]],-1,[],[]],[[[122,[-1,-2]]],-1,[],[]],[[[110,[-1,-2,-3]]],-1,[],[],[]],[[[125,[-1]]],-1,75],[[[130,[-1]]],-1,75],[[[131,[-1,-2,-3]]],-1,75,4,74],[[[132,[-1]]],-1,75],[[[133,[-1,-2,-3]]],-1,75,4,74],[[[134,[-1,-2]]],-1,75,4],[[[135,[-1,-2,-3]]],-1,75,[],74],[[[136,[-1,-2]]],[[2,[-1,-2]]],75,75],[[[87,[-1]]],-1,75],[[[137,[-1]]],-1,75],[[[138,[-1,-2,-3,-4]]],-1,75,[],4,74],[[[84,[-1]]],-1,75],[[[85,[-1]]],-1,75],[[[111,[-1,-2,-3]]],-1,75,[75,68],74],[[[80,[-1,-2,-3]]],-1,149,8,74],[[[107,[-1,-2]]],-1,[],[]],[[[140,[-1,-2]]],-1,[],[]],[[[141,[-1,-2]]],-1,[],[]],[[[142,[-1]]],-1,[]],[[[143,[-1,-2]]],-1,[],[]],[[[144,[-1,-2]]],-1,[],[]],[[[145,[-1,-2,-3]]],-1,149,8,74],[[[148,[-1,-2,-3]]],-1,149,[],[]],[[[150,[-1,-2,-3]]],-1,[],[],[]],[[[151,[-1]]],-1,149],[[[152,[-1]]],-1,149],[[[155,[-1]]],-1,149],[[[159,[-1,-2,-3]]],-1,149,8,74],[[[160,[-1,-2,-3]]],-1,149,8,74],[[[161,[-1]]],-1,149],[[[162,[-1]]],-1,149],[[[165,[-1,-2]]],[[2,[-1,-2]]],[],[]],[[[166,[-1,-2,-3,-4]]],[[2,[-1,-2]]],[],[],[],[]],[[[10,[[104,[-1]]]]],[[10,[-1]]],75],[[[10,[[108,[-1,-2,-3]]]]],[[10,[-1]]],75,4,0],[[[10,[[109,[-1,-2,-3]]]]],[[10,[-1]]],75,4,74],[[[10,[[113,[-1]]]]],[[10,[-1]]],75],[[[10,[[119,[-1]]]]],[[10,[-1]]],[]],[[[10,[[120,[-1]]]]],[[66,[[10,[-1]]]]],[75,68]],[[[10,[[121,[-1,-2]]]]],[[10,[-1]]],[],[]],[[[10,[[122,[-1,-2]]]]],[[10,[-1]]],[],[]],[[[10,[[110,[-1,-2,-3]]]]],[[10,[-1]]],[],[],[]],[[[10,[[125,[-1]]]]],[[10,[-1]]],75],[[[10,[[130,[-1]]]]],[[10,[-1]]],75],[[[10,[[131,[-1,-2,-3]]]]],[[10,[-1]]],75,4,74],[[[10,[[132,[-1]]]]],[[10,[-1]]],75],[[[10,[[133,[-1,-2,-3]]]]],[[10,[-1]]],75,4,74],[[[10,[[134,[-1,-2]]]]],[[10,[-1]]],75,4],[[[10,[[135,[-1,-2,-3]]]]],[[10,[-1]]],75,[],74],[[[10,[[136,[-1,-2]]]]],[[2,[[10,[-1]],[10,[-2]]]]],75,75],[[[10,[[87,[-1]]]]],[[10,[-1]]],75],[[[10,[[137,[-1]]]]],[[10,[-1]]],75],[[[10,[[138,[-1,-2,-3,-4]]]]],[[10,[-1]]],75,[],4,74],[[[10,[[84,[-1]]]]],[[10,[-1]]],75],[[[10,[[85,[-1]]]]],[[10,[-1]]],75],[[[10,[[111,[-1,-2,-3]]]]],[[10,[-1]]],75,[75,68],74],[[[10,[[80,[-1,-2,-3]]]]],[[10,[-1]]],149,8,74],[[[10,[[107,[-1,-2]]]]],[[10,[-1]]],[],[]],[[[10,[[140,[-1,-2]]]]],[[10,[-1]]],[],[]],[[[10,[[141,[-1,-2]]]]],[[10,[-1]]],[],[]],[[[10,[[142,[-1]]]]],[[10,[-1]]],[]],[[[10,[[143,[-1,-2]]]]],[[10,[-1]]],[],[]],[[[10,[[144,[-1,-2]]]]],[[10,[-1]]],[],[]],[[[10,[[145,[-1,-2,-3]]]]],[[10,[-1]]],149,8,74],[[[10,[[148,[-1,-2,-3]]]]],[[10,[-1]]],149,[],[]],[[[10,[[150,[-1,-2,-3]]]]],[[10,[-1]]],[],[],[]],[[[10,[[151,[-1]]]]],[[10,[-1]]],149],[[[10,[[152,[-1]]]]],[[10,[-1]]],149],[[[10,[[155,[-1]]]]],[[10,[-1]]],149],[[[10,[[159,[-1,-2,-3]]]]],[[10,[-1]]],149,8,74],[[[10,[[160,[-1,-2,-3]]]]],[[10,[-1]]],149,8,74],[[[10,[[161,[-1]]]]],[[10,[-1]]],149],[[[10,[[162,[-1]]]]],[[10,[-1]]],149],[[[10,[[165,[-1,-2]]]]],[[2,[[10,[-1]],[10,[-2]]]]],[],[]],[[[10,[[166,[-1,-2,-3,-4]]]]],[[2,[[10,[-1]],[10,[-2]]]]],[],[],[],[]],[[[104,[-1]]],-1,75],[[[108,[-1,-2,-3]]],-1,75,4,0],[[[109,[-1,-2,-3]]],-1,75,4,74],[[[113,[-1]]],-1,75],[[[119,[-1]]],-1,[]],[[[120,[-1]]],[[66,[-1]]],[75,68]],[[[121,[-1,-2]]],-1,[],[]],[[[122,[-1,-2]]],-1,[],[]],[[[110,[-1,-2,-3]]],-1,[],[],[]],[[[125,[-1]]],-1,75],[[[130,[-1]]],-1,75],[[[131,[-1,-2,-3]]],-1,75,4,74],[[[132,[-1]]],-1,75],[[[133,[-1,-2,-3]]],-1,75,4,74],[[[134,[-1,-2]]],-1,75,4],[[[135,[-1,-2,-3]]],-1,75,[],74],[[[136,[-1,-2]]],[[2,[-1,-2]]],75,75],[[[87,[-1]]],-1,75],[[[137,[-1]]],-1,75],[[[138,[-1,-2,-3,-4]]],-1,75,[],4,74],[[[84,[-1]]],-1,75],[[[85,[-1]]],-1,75],[[[111,[-1,-2,-3]]],-1,75,[75,68],74],[[[80,[-1,-2,-3]]],-1,149,8,74],[[[107,[-1,-2]]],-1,[],[]],[[[140,[-1,-2]]],-1,[],[]],[[[141,[-1,-2]]],-1,[],[]],[[[142,[-1]]],-1,[]],[[[143,[-1,-2]]],-1,[],[]],[[[144,[-1,-2]]],-1,[],[]],[[[145,[-1,-2,-3]]],-1,149,8,74],[[[148,[-1,-2,-3]]],-1,149,[],[]],[[[150,[-1,-2,-3]]],-1,[],[],[]],[[[151,[-1]]],-1,149],[[[152,[-1]]],-1,149],[[[155,[-1]]],-1,149],[[[159,[-1,-2,-3]]],-1,149,8,74],[[[160,[-1,-2,-3]]],-1,149,8,74],[[[161,[-1]]],-1,149],[[[162,[-1]]],-1,149],[[[165,[-1,-2]]],[[2,[-1,-2]]],[],[]],[[[166,[-1,-2,-3,-4]]],[[2,[-1,-2]]],[],[],[],[]],[[94,-1],2,168],[[-1,-2],[[121,[-1,-2]]],6,74],[[-1,-2],[[121,[-1,-2]]],6,74],[[-1,-2],[[141,[-1,-2]]],6,74],[[-1,-2],[[141,[-1,-2]]],6,74],[[-1,-2],[[140,[-1,-2]]],6,74],[[-1,-2],[[140,[-1,-2]]],6,74],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[120,[-1]]],[6,68]],[-1,[[120,[-1]]],[6,68]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[[104,[-1]]],-1,75],[[[108,[-1,-2,-3]]],-1,75,4,0],[[[109,[-1,-2,-3]]],-1,75,4,74],[[[113,[-1]]],-1,75],[[[119,[-1]]],-1,[]],[[[120,[-1]]],[[66,[-1]]],[75,68]],[[[121,[-1,-2]]],-1,[],[]],[[[122,[-1,-2]]],-1,[],[]],[[[110,[-1,-2,-3]]],-1,[],[],[]],[[[125,[-1]]],-1,75],[[[130,[-1]]],-1,75],[[[131,[-1,-2,-3]]],-1,75,4,74],[[[132,[-1]]],-1,75],[[[133,[-1,-2,-3]]],-1,75,4,74],[[[134,[-1,-2]]],-1,75,4],[[[135,[-1,-2,-3]]],-1,75,[],74],[[[136,[-1,-2]]],[[2,[-1,-2]]],75,75],[[[87,[-1]]],-1,75],[[[137,[-1]]],-1,75],[[[138,[-1,-2,-3,-4]]],-1,75,[],4,74],[[[84,[-1]]],-1,75],[[[85,[-1]]],-1,75],[[[111,[-1,-2,-3]]],-1,75,[75,68],74],[[[80,[-1,-2,-3]]],-1,149,8,74],[[[107,[-1,-2]]],-1,[],[]],[[[140,[-1,-2]]],-1,[],[]],[[[141,[-1,-2]]],-1,[],[]],[[[142,[-1]]],-1,[]],[[[143,[-1,-2]]],-1,[],[]],[[[144,[-1,-2]]],-1,[],[]],[[[145,[-1,-2,-3]]],-1,149,8,74],[[[148,[-1,-2,-3]]],-1,149,[],[]],[[[150,[-1,-2,-3]]],-1,[],[],[]],[[[151,[-1]]],-1,149],[[[152,[-1]]],-1,149],[[[155,[-1]]],-1,149],[[[159,[-1,-2,-3]]],-1,149,8,74],[[[160,[-1,-2,-3]]],-1,149,8,74],[[[161,[-1]]],-1,149],[[[162,[-1]]],-1,149],[[[165,[-1,-2]]],[[2,[-1,-2]]],[],[]],[[[166,[-1,-2,-3,-4]]],[[2,[-1,-2]]],[],[],[],[]],[[[102,[-1]]],[],68],[[[102,[-1]]],[],68],[[[102,[-1]]],[],68],[[[103,[-1]]],[],[75,68]],[[[103,[-1]]],[],[75,68]],[[[103,[-1]]],[],[75,68]],[-1,[[142,[-1]]],6],[-1,[[142,[-1]]],6],[[[119,[-1]]],20,[]],[[[101,[-1]]],20,4],[[[134,[-1,-2]]],20,75,4],[-1,20,[]],[[[101,[-1]]],20,4],[[[102,[-1]]],20,4],[[[103,[-1]]],20,[75,68]],[[[86,[-1,-2]]],20,75,71],[[[95,[-1,-2]]],20,71,[96,97]],[[[116,[-1,-3,-5]]],20,71,[],[96,[97,[-2]]],[],[96,[97,[-4]]]],[[[98,[-1]]],20,71],[[[99,[-1]]],20,71],[[[100,[-1]]],20,[16,75]],[[[104,[-1]]],20,[75,71]],[[[108,[-1,-2,-3]]],20,[75,71],4,74],[[[109,[-1,-2,-3]]],20,[75,71],4,0],[[[113,[-1]]],20,75],[[[117,[-1,-2,-3,-4]]],20,75,4,[],74],[[[81,[-1,-2,-3]]],20,75,4,74],[[[79,[-1,-2,-3]]],20,75,4,74],[[[118,[-1,-2,-3]]],20,71,4,74],[[[119,[-1]]],20,75],[[[120,[-1]]],20,[75,68]],[[[121,[-1,-2]]],20,[],[]],[[[122,[-1,-2]]],20,71,0],[[[110,[-1,-2,-3]]],20,[],[],[]],[[[123,[-1]]],20,[6,71,68]],[[[124,[-1]]],20,[6,71,68]],[[[125,[-1]]],20,75],[[[126,[-1]]],20,75],[[[127,[-1]]],20,75],[[[128,[-1,-2]]],20,75,0],[[[129,[-1,-2]]],20,75,6],[[[130,[-1]]],20,71],[[[131,[-1,-2,-3]]],20,71,4,74],[[[132,[-1]]],20,71],[[[133,[-1,-2,-3]]],20,71,4,74],[[[134,[-1,-2]]],20,75,4],[[[135,[-1,-2,-3]]],20,71,4,74],[[[136,[-1,-2]]],20,75,75],[[[87,[-1]]],20,71],[[[137,[-1]]],20,75],[[[138,[-1,-2,-3,-4]]],20,71,[],4,74],[[[84,[-1]]],20,75],[[[85,[-1]]],20,75],[[[111,[-1,-2,-3]]],20,75,[75,68],74],[[[139,[-1,-2,-3]]],20,75,4,74],[[[80,[-1,-2,-3]]],20,[149,71],8,74],[[[107,[-1,-2]]],20,[],[]],[[[140,[-1,-2]]],20,[],[]],[[[141,[-1,-2]]],20,[],[]],[[[142,[-1]]],20,[149,71]],[[[143,[-1,-2]]],20,[],[]],[[[144,[-1,-2]]],20,[],[]],[[[145,[-1,-2,-3]]],20,[149,71],8,74],[[[146,[-1]]],20,[6,149,68,71]],[[[148,[-1,-2,-3]]],20,[149,71],4,74],[[[150,[-1,-2,-3]]],20,[149,71],8,74],[[[151,[-1]]],20,[149,71]],[[[152,[-1]]],20,149],[[[153,[-1,-2]]],20,[149,71],[96,97]],[[[155,[-1]]],20,[149,71]],[[[157,[-1,-2,-3,-4]]],20,149,8,[],74],[[[159,[-1,-2,-3]]],20,[149,71],8,74],[[[160,[-1,-2,-3]]],20,[149,71],8,74],[[[163,[-1,-2,-3]]],20,149,4,74],[[[89,[-1]]],20,16],[[[90,[-1]]],20,74],[[[91,[-1]]],20,[]],[[[164,[-1]]],20,4],[[[92,[-1]]],20,[]],[[[93,[-1]]],20,75],[[[165,[-1,-2]]],20,75,75],[[[166,[-1,-2,-3,-4]]],20,75,75,74,[]],[[[167,[-1,-2,-3]]],20,[],74,4],[-1,88,67],[-1,[[9,[-1,-2]]],6,75],[-1,[[9,[-1,-2]]],6,75],[[[101,[-1]]],76,4],[[-1,-2],[[122,[-1,-2]]],6,74],[[-1,-2],[[122,[-1,-2]]],6,74],[[-1,-2],[[144,[-1,-2]]],6,74],[[-1,-2],[[144,[-1,-2]]],6,74],[[-1,-2],[[143,[-1,-2]]],6,74],[[-1,-2],[[143,[-1,-2]]],6,74],[[],[[101,[-1]]],4],[-1,[[123,[-1]]],68],[-1,[[123,[-1]]],68],[[[10,[[125,[-1]]]],-2],[[128,[-1,-2]]],75,7],[[[10,[[125,[-1]]]],-2],[[129,[-1,-2]]],75,6],[-1,[[164,[-1]]],4],[[-1,-2],[[145,[-1,-3,-2]]],6,74,8],[[-1,-2],[[145,[-1,-3,-2]]],6,74,8],[[[10,[[125,[-1]]]]],[[126,[-1]]],75],[[[10,[[125,[-1]]]]],[[127,[-1]]],75],[-1,[[125,[-1]]],6],[-1,[[125,[-1]]],6],[[],[[92,[-1]]],[]],[[[10,[[95,[-1,-2]]]],72],[[73,[-2]]],75,[96,97]],[[[10,[[116,[-1,-3,-5]]]],72],[[73,[[2,[-3,-5]]]]],75,[],[96,[97,[-2]]],[],[96,[97,[-4]]]],[[[10,[[98,[-1]]]],72],73,75],[[[10,[[99,[-1]]]],72],73,75],[[[10,[[117,[-1,-2,-3,-4]]]],72],[[73,[-3]]],75,4,[],74],[[[10,[[81,[-1,-2,-3]]]],72],[[73,[20]]],75,4,74],[[[10,[[79,[-1,-2,-3]]]],72],[[73,[20]]],75,4,74],[[[10,[[118,[-1,-2,-3]]]],72],[[73,[2]]],75,4,74],[[[10,[[120,[-1]]]],72],73,[75,68]],[[[10,[[123,[-1]]]],72],73,[6,75,68]],[[[10,[[124,[-1]]]],72],73,[6,71,68]],[[[10,[[126,[-1]]]],72],73,75],[[[10,[[127,[-1]]]],72],73,75],[[[10,[[128,[-1,-2]]]],72],73,75,0],[[[10,[[129,[-1,-2]]]],72],73,75,6],[[[10,[[139,[-1,-2,-3]]]],72],[[73,[2]]],75,4,74],[[[10,[[146,[-1]]]],72],73,[6,149,68]],[[[10,[[147,[-1,-2,-3]]]],72],73,149,8,74],[[[10,[[153,[-1,-2]]]],72],73,149,[96,97]],[[[10,[[154,[-1]]]],72],73,149],[[[10,[[157,[-1,-2,-3,-4]]]],72],73,149,8,[],74],[[[10,[[163,[-1,-2,-3]]]],72],73,149,4,74],[-1,[[115,[-1]]],74],[-1,[[93,[-1]]],75],[[[10,[-1]],72],[[73,[66]]],[]],[[[10,[[115,[-1]]]],72],[[73,[[66,[-2]]]]],74,[]],[[[10,[[101,[-1]]]],72],[[73,[66]]],4],[[[10,[[102,[-1]]]],72],[[73,[66]]],4],[[[10,[[103,[-1]]]],72],[[73,[66]]],[75,68]],[[[10,[[86,[-1,-2]]]],72],[[73,[66]]],75,75],[[[10,[[100,[-1]]]],72],[[73,[66]]],[16,75]],[[[10,[[104,[-1]]]],72],[[73,[66]]],75],[[[10,[[108,[-1,-2,-3]]]],72],[[73,[66]]],75,4,0],[[[10,[[109,[-1,-2,-3]]]],72],[[73,[[66,[-4]]]]],75,4,0,[]],[[[10,[[113,[-1]]]],72],[[73,[66]]],75],[[[10,[[119,[-1]]]],72],[[73,[66]]],75],[[[10,[[121,[-1,-2]]]],72],[[73,[66]]],[],[]],[[[10,[[122,[-1,-2]]]],72],[[73,[66]]],75,0],[[[10,[[110,[-1,-2,-3]]]],72],[[73,[66]]],[],[],[]],[[[10,[[125,[-1]]]],72],[[73,[66]]],75],[[[10,[[130,[-1]]]],72],[[73,[66]]],75],[[[10,[[131,[-1,-2,-3]]]],72],[[73,[66]]],75,4,74],[[[10,[[132,[-1]]]],72],[[73,[66]]],75],[[[10,[[133,[-1,-2,-3]]]],72],[[73,[66]]],75,4,74],[[[10,[[134,[-1,-2]]]],72],[[73,[66]]],75,4],[[[10,[[135,[-1,-2,-3]]]],72],[[73,[66]]],75,4,74],[[[10,[[136,[-1,-2]]]],72],[[73,[66]]],75,75],[[[10,[[87,[-1]]]],72],[[73,[66]]],75],[[[10,[[137,[-1]]]],72],[[73,[66]]],75],[[[10,[[138,[-1,-2,-3,-4]]]],72],[[73,[[66,[-5]]]]],75,[],4,74,[]],[[[10,[[84,[-1]]]],72],[[73,[66]]],75],[[[10,[[85,[-1]]]],72],[[73,[66]]],75],[[[10,[[111,[-1,-2,-3]]]],72],[[73,[66]]],75,[75,68],74],[[[10,[[80,[-1,-2,-3]]]],72],[[73,[66]]],149,8,74],[[[10,[[107,[-1,-2]]]],72],[[73,[66]]],[],[]],[[[10,[[140,[-1,-2]]]],72],[[73,[66]]],[],[]],[[[10,[[141,[-1,-2]]]],72],[[73,[66]]],[],[]],[[[10,[[142,[-1]]]],72],[[73,[66]]],149],[[[10,[[143,[-1,-2]]]],72],[[73,[66]]],[],[]],[[[10,[[144,[-1,-2]]]],72],[[73,[66]]],[],[]],[[[10,[[145,[-1,-2,-3]]]],72],[[73,[66]]],149,8,74],[[[10,[[148,[-1,-2,-3]]]],72],[[73,[66]]],149,4,74],[[[10,[[150,[-1,-2,-3]]]],72],[[73,[66]]],149,8,74],[[[10,[[151,[-1]]]],72],[[73,[66]]],149],[[[10,[[152,[-1]]]],72],[[73,[66]]],149],[[[10,[[155,[-1]]]],72],[[73,[66]]],149],[[[10,[[158,[-1,-2,-3]]]],72],[[73,[66]]],[],74,8],[[[10,[[159,[-1,-2,-3]]]],72],[[73,[66]]],149,8,74],[[[10,[[160,[-1,-2,-3]]]],72],[[73,[66]]],149,8,74],[[[10,[[161,[-1]]]],72],[[73,[66]]],149],[[[10,[[162,[-1]]]],72],[[73,[66]]],149],[[[10,[[88,[-1]]]],72],[[73,[66]]],169],[[[10,[[89,[-1]]]],72],[[73,[66]]],16],[[[10,[[90,[-1]]]],72],[[73,[66]]],74],[[[10,[[91,[-1]]]],72],[[73,[66]]],[]],[[[10,[[164,[-1]]]],72],[[73,[66]]],4],[[[10,[[92,[-1]]]],72],[[73,[66]]],[]],[[[10,[[93,[-1]]]],72],[[73,[66]]],75],[[[10,[[165,[-1,-2]]]],72],[[73,[66]]],75,75],[[[10,[[166,[-1,-2,-3,-4]]]],72],[[73,[66]]],75,75,74,[]],[[[10,[[167,[-1,-2,-3]]]],72],[[73,[66]]],[],74,4],[[-1,72],[[73,[66]]],68],[[-1,72],[[73,[66]]],68],[[[10,[[125,[-1]]]],72],[[73,[66]]],75],[[[10,[[125,[-1]]]],72],[[73,[66]]],75],[[[101,[-1]],-1],2,4],[[[101,[-1]],-1],2,4],[[[101,[-1]],-1],2,4],[[-1,76],[[137,[-1]]],6],[[-1,76],[[137,[-1]]],6],[-1,[[89,[-1]]],16],[-1,[[90,[-1]]],74],[-1,[[9,[-2,-1]]],6,75],[-1,[[9,[-2,-1]]],6,75],[[-1,-2,-3],[[138,[-1,-2,-4,-3]]],6,[],74,4],[[-1,-2,-3],[[138,[-1,-2,-4,-3]]],6,[],74,4],[[-1,-2],[[165,[-1,-2]]],75,75],0,[-1,103,67],[-1,[[124,[-1]]],[68,71]],[-1,[[124,[-1]]],[68,71]],[[-1,-2,-3],[[166,[-1,-2,-3,-4]]],75,75,74,96],[-1,[[2,[76,[66,[76]]]]],[]],[[[101,[-1]]],[[2,[76,[66,[76]]]]],4],[[[102,[-1]]],[[2,[76,[66,[76]]]]],4],[[[86,[-1,-2]]],[[2,[76,[66,[76]]]]],75,75],[[[100,[-1]]],[[2,[76,[66,[76]]]]],[16,75]],[[[104,[-1]]],[[2,[76,[66,[76]]]]],75],[[[108,[-1,-2,-3]]],[[2,[76,[66,[76]]]]],75,4,0],[[[109,[-1,-2,-3]]],[[2,[76,[66,[76]]]]],75,4,0],[[[113,[-1]]],[[2,[76,[66,[76]]]]],75],[[[119,[-1]]],[[2,[76,[66,[76]]]]],75],[[[121,[-1,-2]]],[[2,[76,[66,[76]]]]],[],[]],[[[122,[-1,-2]]],[[2,[76,[66,[76]]]]],75,0],[[[110,[-1,-2,-3]]],[[2,[76,[66,[76]]]]],[],[],[]],[[[125,[-1]]],[[2,[76,[66,[76]]]]],75],[[[130,[-1]]],[[2,[76,[66,[76]]]]],75],[[[131,[-1,-2,-3]]],[[2,[76,[66,[76]]]]],75,4,74],[[[132,[-1]]],[[2,[76,[66,[76]]]]],75],[[[133,[-1,-2,-3]]],[[2,[76,[66,[76]]]]],75,4,74],[[[134,[-1,-2]]],[[2,[76,[66,[76]]]]],75,4],[[[135,[-1,-2,-3]]],[[2,[76,[66,[76]]]]],75,4,74],[[[136,[-1,-2]]],[[2,[76,[66,[76]]]]],75,75],[[[87,[-1]]],[[2,[76,[66,[76]]]]],75],[[[137,[-1]]],[[2,[76,[66,[76]]]]],75],[[[138,[-1,-2,-3,-4]]],[[2,[76,[66,[76]]]]],75,[],4,74],[[[84,[-1]]],[[2,[76,[66,[76]]]]],75],[[[85,[-1]]],[[2,[76,[66,[76]]]]],75],[[[111,[-1,-2,-3]]],[[2,[76,[66,[76]]]]],75,[75,68],74],[[[80,[-1,-2,-3]]],[[2,[76,[66,[76]]]]],149,8,74],[[[107,[-1,-2]]],[[2,[76,[66,[76]]]]],[],[]],[[[140,[-1,-2]]],[[2,[76,[66,[76]]]]],[],[]],[[[141,[-1,-2]]],[[2,[76,[66,[76]]]]],[],[]],[[[142,[-1]]],[[2,[76,[66,[76]]]]],149],[[[143,[-1,-2]]],[[2,[76,[66,[76]]]]],[],[]],[[[144,[-1,-2]]],[[2,[76,[66,[76]]]]],[],[]],[[[145,[-1,-2,-3]]],[[2,[76,[66,[76]]]]],149,8,74],[[[148,[-1,-2,-3]]],[[2,[76,[66,[76]]]]],149,4,74],[[[150,[-1,-2,-3]]],[[2,[76,[66,[76]]]]],149,8,74],[[[152,[-1]]],[[2,[76,[66,[76]]]]],149],[[[155,[-1]]],[[2,[76,[66,[76]]]]],149],[[[159,[-1,-2,-3]]],[[2,[76,[66,[76]]]]],149,8,74],[[[160,[-1,-2,-3]]],[[2,[76,[66,[76]]]]],149,8,74],[[[88,[-1]]],[[2,[76,[66,[76]]]]],169],[[[89,[-1]]],[[2,[76,[66,[76]]]]],16],[[[90,[-1]]],[[2,[76,[66,[76]]]]],74],[[[91,[-1]]],[[2,[76,[66,[76]]]]],[]],[[[164,[-1]]],[[2,[76,[66,[76]]]]],4],[[[92,[-1]]],[[2,[76,[66,[76]]]]],[]],[[[93,[-1]]],[[2,[76,[66,[76]]]]],75],[[-1,76],[[130,[-1]]],6],[[-1,76],[[130,[-1]]],6],[[-1,-2],[[131,[-1,-3,-2]]],6,74,4],[[-1,-2],[[131,[-1,-3,-2]]],6,74,4],[[[102,[[170,[2]]]],[170,[2]]],[[21,[2,171]]]],[[[102,[[172,[2]]]],[172,[2]]],[[21,[2,171]]]],[[-1,76],[[132,[-1]]],6],[[-1,76],[[132,[-1]]],6],[[[134,[-1,-2]]],[[66,[-2]]],75,4],[[[134,[-1,-2]]],66,75,4],[[-1,-2],[[134,[-1,-2]]],6,4],[[-1,-2],[[134,[-1,-2]]],6,4],[[-1,-2],[[133,[-1,-3,-2]]],6,74,4],[[-1,-2],[[133,[-1,-3,-2]]],6,74,4],[[-1,-2],[[135,[-1,-3,-2]]],6,74,4],[[-1,-2],[[135,[-1,-3,-2]]],6,74,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,77,[]],[94,94],[[-1,76],[[161,[-1]]],6],[[-1,76],[[161,[-1]]],6],[[-1,76],[[162,[-1]]],6],[[-1,76],[[162,[-1]]],6],[[-1,76],[[155,[-1]]],6],[[-1,76],[[155,[-1]]],6],[-1,[[153,[-1,-2]]],6,[96,97]],[-1,[[153,[-1,-2]]],6,[96,97]],[-1,[[154,[-1]]],6],[-1,[[154,[-1]]],6],[[-1,-2],[[148,[-1,-3,-2]]],6,74,4],[[-1,-2],[[148,[-1,-3,-2]]],6,74,4],[[-1,-2],[[150,[-1,-3,-2]]],6,74,8],[[-1,-2],[[150,[-1,-3,-2]]],6,74,8],[-1,[[151,[-1]]],6],[-1,[[151,[-1]]],6],[[-1,-2],[[152,[-1]]],6,[[112,[[66,[76]]]]]],[[-1,-2],[[152,[-1]]],6,[[112,[[66,[76]]]]]],[[-1,-2,-3],[[157,[-1,-4,-2,-3]]],6,[],74,8],[[-1,-2,-3],[[157,[-1,-4,-2,-3]]],6,[],74,8],[[-1,-2],[[147,[-1,-3,-2]]],6,74,8],[[-1,-2],[[147,[-1,-3,-2]]],6,74,8],[[-1,-2,-3],[[163,[-1,-4,-3]]],6,[[112,[[66,[76]]]]],74,4],[[-1,-2,-3],[[163,[-1,-4,-3]]],6,[[112,[[66,[76]]]]],74,4],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[146,[-1]]],68],[-1,[[146,[-1]]],68],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[[10,[-1]],72],[[73,[[66,[21]]]]],[]],[[-1,72],[[73,[[66,[21]]]]],68],[[-1,72],[[73,[[66,[21]]]]],68],[[-1,-2],[[159,[-1,-3,-2]]],6,74,8],[[-1,-2],[[159,[-1,-3,-2]]],6,74,8],[[-1,-2],[[160,[-1,-3,-2]]],6,74,8],[[-1,-2],[[160,[-1,-3,-2]]],6,74,8],[[-1,-2],[[158,[-1,-2,-3]]],[],74,8],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[[-1,-2],[[167,[-1,-2,-3]]],[],74,4],[-1,[[116,[-1,-3,-5]]],[6,75],[],[96,[97,[-2]]],[],[96,[97,[-4]]]],[-1,[[116,[-1,-3,-5]]],[6,75],[],[96,[97,[-2]]],[],[96,[97,[-4]]]],[[-1,-2],[[136,[-1,-2]]],6,75],[[-1,-2],[[136,[-1,-2]]],6,75],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[102,[-1]]],2,[]],[[[173,[-1]],26],27,29],[[[174,[-1]],26],27,[29,68]],[[[175,[-1]],26],27,29],[[[176,[-1]],26],27,[29,68]],[[[177,[-1]],26],27,[29,68]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[102,[-1]]],20,[]],[[[102,[-1]]],[[176,[-1]]],68],[[[102,[-1]]],[[174,[-1]]],68],[[[10,[[102,[-1]]]]],[[173,[-1]]],[]],[[[10,[[102,[-1]]]]],[[175,[-1]]],[]],[[[102,[-1]]],76,[]],[[],[[102,[-1]]],[]],[[[173,[-1]]],66,[]],[[[174,[-1]]],66,68],[[[175,[-1]]],66,[]],[[[176,[-1]]],66,68],[[[177,[-1]]],66,68],[[[102,[-1]],-1],2,[]],[[[173,[-1]]],[[2,[76,[66,[76]]]]],[]],[[[174,[-1]]],[[2,[76,[66,[76]]]]],68],[[[175,[-1]]],[[2,[76,[66,[76]]]]],[]],[[[176,[-1]]],[[2,[76,[66,[76]]]]],68],[[[177,[-1]]],[[2,[76,[66,[76]]]]],68],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[103,[-1]]],2,[75,68]],[[[178,[-1]],26],27,[29,68]],[[[179,[-1]],26],27,[29,68]],[[[180,[-1]],26],27,[29,68]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[103,[-1]]],20,[75,68]],[[[103,[-1]]],[[178,[-1]]],[75,68]],[[[103,[-1]]],[[179,[-1]]],[75,68]],[[[103,[-1]]],76,[75,68]],[[],[[103,[-1]]],[75,68]],[[[178,[-1]]],66,[75,68]],[[[179,[-1]]],66,[75,68]],[[[180,[-1]]],66,[75,68]],[[[103,[-1]],-1],2,[75,68]],[-1,103,67],[[[178,[-1]]],[[2,[76,[66,[76]]]]],[75,68]],[[[179,[-1]]],[[2,[76,[66,[76]]]]],[75,68]],[[[180,[-1]]],[[2,[76,[66,[76]]]]],[75,68]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],181],[182,183],[4,2],[[[170,[-1]]],2,[]],[[171,26],[[21,[2,184]]]],[[171,26],[[21,[2,184]]]],[[181,26],[[21,[2,184]]]],[[[170,[-1]],26],[[21,[2,184]]],[]],[[[172,[-1]],26],[[21,[2,184]]],[]],[[182,26],[[21,[2,184]]]],[-1,-1,[]],[-1,-1,[]],[[[172,[-1]]],[[170,[-1]]],[]],[[[10,[[185,[-1]]]]],[[170,[2]]],4],[[[10,[[185,[4]]]]],[[170,[2]]]],[[[185,[4]]],[[170,[2]]]],[[[185,[-1]]],[[170,[2]]],4],[-1,-1,[]],[-1,-1,[]],[[[185,[-1]]],[[172,[2]]],[4,12]],[[[10,[[185,[4]]]]],[[172,[2]]]],[[[10,[[185,[-1]]]]],[[172,[2]]],[4,12]],[[[185,[4]]],[[172,[2]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[[[170,[-1]]],[[172,[-1]]],[]],[-1,4,[]],[171,20],[[],181],[-2,[[170,[-1]]],[],[[186,[-1]]]],[-2,[[172,[-1]]],[],[[186,[-1]],12]],[183,182],[[[187,[183]]],182],[[],183],[[],183],[[[10,[[170,[-1]]]],72],[[73,[-1]]],[]],[[[10,[[172,[-1]]]],72],[[73,[-1]]],[]],[[181,183],2],[[],171],[[-1,-2],[[21,[2,171]]],[],[4,12]],[[-1,-2],[[21,[2,171]]],[],[4,12]],[[-1,-2],[[21,[2,171]]],[],4],[[-1,-2],[[21,[2,171]]],[],4],[[-1,[170,[2]]],[[21,[2,171]]],[]],[[-1,[172,[2]]],[[21,[2,171]]],[]],[-1,[[21,[2,171]]],[]],[-1,[[21,[2,171]]],[]],[181,[[66,[183]]]],[-1,77,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[[[10,[-1]],72],73,[]],[[[10,[-1]],72],73,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[-1,78,[]],[[[188,[-1]]],2,[]],[181,2],[[[188,[-1]]],2,[]],[[[188,[-1]]],183,189],[[[188,[-1]]],182,189]],"c":[1769],"p":[[3,"AbortHandle",15],[15,"tuple"],[3,"Abortable",15],[8,"Future",2414],[3,"AndThen",15],[8,"Sized",2415],[8,"FnOnce",2416],[8,"TryFuture",15],[4,"Either",15],[3,"Pin",2417],[6,"BoxFuture",15],[8,"Send",2415],[6,"LocalBoxFuture",15],[3,"Pending",15],[3,"OptionFuture",15],[8,"Clone",2418],[3,"PollImmediate",15],[3,"Ready",15],[3,"Aborted",15],[15,"bool"],[4,"Result",2419],[3,"ErrInto",15],[3,"Flatten",15],[3,"FlattenStream",15],[3,"PollFn",15],[3,"Formatter",2420],[6,"Result",2420],[3,"JoinAll",15],[8,"Debug",2420],[3,"TryJoinAll",15],[3,"Fuse",15],[3,"Map",15],[3,"IntoStream",15],[3,"MapInto",15],[3,"Then",15],[3,"Inspect",15],[3,"NeverError",15],[3,"UnitError",15],[3,"IntoFuture",15],[3,"TryFlatten",15],[3,"TryFlattenStream",15],[3,"OrElse",15],[3,"OkInto",15],[3,"InspectOk",15],[3,"InspectErr",15],[3,"MapOk",15],[3,"MapErr",15],[3,"MapOkOrElse",15],[3,"UnwrapOrElse",15],[3,"Lazy",15],[4,"MaybeDone",15],[4,"TryMaybeDone",15],[3,"Join",15],[3,"Join3",15],[3,"Join4",15],[3,"Join5",15],[3,"Select",15],[3,"SelectAll",15],[3,"TryJoin",15],[3,"TryJoin3",15],[3,"TryJoin4",15],[3,"TryJoin5",15],[3,"TrySelect",15],[3,"SelectOk",15],[3,"AbortRegistration",15],[4,"Option",2421],[8,"IntoIterator",2422],[8,"Unpin",2415],[3,"Vec",2423],[8,"FusedFuture",15],[8,"FusedStream",799],[3,"Context",2424],[4,"Poll",2425],[8,"FnMut",2416],[8,"Stream",799],[15,"usize"],[3,"String",2426],[3,"TypeId",2427],[3,"All",799],[3,"AndThen",799],[3,"Any",799],[6,"BoxStream",799],[6,"LocalBoxStream",799],[3,"BufferUnordered",799],[3,"Buffered",799],[3,"Chain",799],[3,"Chunks",799],[3,"Iter",799],[3,"Repeat",799],[3,"RepeatWith",799],[3,"Empty",799],[3,"Pending",799],[3,"PollImmediate",799],[4,"PollNext",799],[3,"Collect",799],[8,"Default",2428],[8,"Extend",2422],[3,"Concat",799],[3,"Count",799],[3,"Cycle",799],[3,"FuturesOrdered",799],[3,"FuturesUnordered",799],[3,"SelectAll",799],[3,"Enumerate",799],[3,"TryChunksError",799],[8,"PartialEq",2429],[3,"ErrInto",799],[3,"Filter",799],[3,"FilterMap",799],[3,"FlatMap",799],[3,"FlatMapUnordered",799],[8,"Into",2430],[3,"Flatten",799],[6,"FlattenUnordered",799],[3,"PollFn",799],[3,"Unzip",799],[3,"Fold",799],[3,"ForEach",799],[3,"Fuse",799],[3,"StreamFuture",799],[3,"Inspect",799],[3,"Map",799],[3,"Next",799],[3,"SelectNextSome",799],[3,"Peekable",799],[3,"Peek",799],[3,"PeekMut",799],[3,"NextIf",799],[3,"NextIfEq",799],[3,"Skip",799],[3,"SkipWhile",799],[3,"Take",799],[3,"TakeWhile",799],[3,"TakeUntil",799],[3,"Then",799],[3,"Zip",799],[3,"ReadyChunks",799],[3,"Scan",799],[3,"ForEachConcurrent",799],[3,"InspectOk",799],[3,"InspectErr",799],[3,"IntoStream",799],[3,"MapOk",799],[3,"MapErr",799],[3,"OrElse",799],[3,"TryNext",799],[3,"TryForEach",799],[3,"TryFilter",799],[8,"TryStream",799],[3,"TryFilterMap",799],[3,"TryFlatten",799],[3,"TryFlattenUnordered",799],[3,"TryCollect",799],[3,"TryConcat",799],[3,"TryChunks",799],[8,"Display",2420],[3,"TryFold",799],[3,"TryUnfold",799],[3,"TrySkipWhile",799],[3,"TryTakeWhile",799],[3,"TryBufferUnordered",799],[3,"TryBuffered",799],[3,"TryForEachConcurrent",799],[3,"Once",799],[3,"Select",799],[3,"SelectWithStrategy",799],[3,"Unfold",799],[8,"Hasher",2431],[8,"Iterator",2432],[3,"LocalFutureObj",2311],[3,"SpawnError",2311],[3,"FutureObj",2311],[3,"IterPinMut",2196],[3,"IterMut",2196],[3,"IterPinRef",2196],[3,"Iter",2196],[3,"IntoIter",2196],[3,"Iter",2266],[3,"IterMut",2266],[3,"IntoIter",2266],[3,"AtomicWaker",2311],[3,"WakerRef",2311],[3,"Waker",2424],[3,"Error",2420],[3,"Box",2433],[8,"UnsafeFutureObj",2311],[3,"ManuallyDrop",2434],[3,"Arc",2435],[8,"ArcWake",2311],[8,"TryFutureExt",15],[8,"FutureExt",15],[8,"StreamExt",799],[8,"TryStreamExt",799],[8,"SpawnExt",2311],[8,"LocalSpawnExt",2311],[8,"LocalSpawn",2311],[8,"Spawn",2311]],"b":[[272,"impl-Debug-for-Aborted"],[273,"impl-Display-for-Aborted"],[478,"impl-FusedFuture-for-Either%3CA,+B%3E"],[479,"impl-FusedStream-for-Either%3CA,+B%3E"],[1187,"impl-Display-for-TryChunksError%3CT,+E%3E"],[1188,"impl-Debug-for-TryChunksError%3CT,+E%3E"],[1578,"impl-IntoIterator-for-FuturesUnordered%3CFut%3E"],[1579,"impl-IntoIterator-for-%26mut+FuturesUnordered%3CFut%3E"],[1580,"impl-IntoIterator-for-%26FuturesUnordered%3CFut%3E"],[1581,"impl-IntoIterator-for-%26SelectAll%3CSt%3E"],[1582,"impl-IntoIterator-for-%26mut+SelectAll%3CSt%3E"],[1583,"impl-IntoIterator-for-SelectAll%3CSt%3E"],[2341,"impl-Display-for-SpawnError"],[2342,"impl-Debug-for-SpawnError"],[2349,"impl-From%3CFutureObj%3C\'a,+T%3E%3E-for-LocalFutureObj%3C\'a,+T%3E"],[2350,"impl-From%3CPin%3CBox%3CF%3E%3E%3E-for-LocalFutureObj%3C\'a,+()%3E"],[2351,"impl-From%3CPin%3CBox%3Cdyn+Future%3COutput+=+()%3E%3E%3E%3E-for-LocalFutureObj%3C\'a,+()%3E"],[2352,"impl-From%3CBox%3Cdyn+Future%3COutput+=+()%3E%3E%3E-for-LocalFutureObj%3C\'a,+()%3E"],[2353,"impl-From%3CBox%3CF%3E%3E-for-LocalFutureObj%3C\'a,+()%3E"],[2356,"impl-From%3CBox%3CF%3E%3E-for-FutureObj%3C\'a,+()%3E"],[2357,"impl-From%3CPin%3CBox%3Cdyn+Future%3COutput+=+()%3E+%2B+Send%3E%3E%3E-for-FutureObj%3C\'a,+()%3E"],[2358,"impl-From%3CPin%3CBox%3CF%3E%3E%3E-for-FutureObj%3C\'a,+()%3E"],[2359,"impl-From%3CBox%3Cdyn+Future%3COutput+=+()%3E+%2B+Send%3E%3E-for-FutureObj%3C\'a,+()%3E"]]},\
"glam":{"doc":"glam","t":"ECCCNNNNNNALLLLLAALLLAALALLLAADDDDDSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMSSSSDDSSSSSSSSSSSSSSSSSSSDDDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDDDDDSSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSDDDDDDDDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSDDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSDDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQQIQQIQQIKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKSSSSSSSSSSSSDDDSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSSSDDDSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["EulerRot","Vec2Swizzles","Vec3Swizzles","Vec4Swizzles","XYZ","XZY","YXZ","YZX","ZXY","ZYX","bool","borrow","borrow_mut","clone","default","eq","f32","f64","fmt","from","hash","i32","i64","into","swizzles","try_from","try_into","type_id","u32","u64","BVec2","BVec3","BVec3A","BVec4","BVec4A","FALSE","FALSE","FALSE","FALSE","FALSE","TRUE","TRUE","TRUE","TRUE","TRUE","all","all","all","all","all","any","any","any","any","any","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitmask","bitmask","bitmask","bitmask","bitmask","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","default","default","default","default","default","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","new","new","new","new","new","not","not","not","not","not","set","set","set","set","set","splat","splat","splat","splat","splat","test","test","test","test","test","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","w","x","x","x","y","y","y","z","z","AXES","AXES","AXES","AXES","Affine2","Affine3A","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","INFINITY","INFINITY","INFINITY","INFINITY","MAX","MAX","MAX","MAX","MIN","MIN","MIN","MIN","Mat2","Mat3","Mat3A","Mat4","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NEG_INFINITY","NEG_INFINITY","NEG_INFINITY","NEG_INFINITY","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","NEG_Z","ONE","ONE","ONE","ONE","Quat","Vec2","Vec3","Vec3A","Vec4","W","X","X","X","X","Y","Y","Y","Y","Z","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat2","add_mat3","add_mat3","add_mat4","angle_between","angle_between","angle_between","angle_between","any_orthogonal_vector","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_pair","any_orthonormal_vector","any_orthonormal_vector","as_dmat2","as_dmat3","as_dmat3","as_dmat4","as_dvec2","as_dvec3","as_dvec3","as_dvec4","as_f64","as_i64vec2","as_i64vec3","as_i64vec3","as_i64vec4","as_ivec2","as_ivec3","as_ivec3","as_ivec4","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_u64vec2","as_u64vec3","as_u64vec3","as_u64vec4","as_uvec2","as_uvec3","as_uvec3","as_uvec4","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","ceil","ceil","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmpeq","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cmpne","col","col","col","col","col_mut","col_mut","col_mut","col_mut","conjugate","copysign","copysign","copysign","copysign","cross","cross","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","determinant","determinant","determinant","determinant","distance","distance","distance","distance","distance_squared","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exp","exp","exp","exp","extend","extend","extend","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle_translation","from_array","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_euler","from_euler","from_euler","from_euler","from_mat2","from_mat2","from_mat2","from_mat2_translation","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3_translation","from_mat3a","from_mat3a","from_mat3a","from_mat3a","from_mat4","from_mat4","from_mat4","from_mat4","from_quat","from_quat","from_quat","from_quat","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_translation","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale_angle","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scaled_axis","from_slice","from_slice","from_slice","from_slice","from_slice","from_translation","from_translation","from_translation","from_translation","from_translation","from_vec4","from_xyzw","index","index","index","index","index_mut","index_mut","index_mut","index_mut","into","into","into","into","into","into","into","into","into","into","into","inverse","inverse","inverse","inverse","inverse","inverse","inverse","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","length","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","lerp","look_at_lh","look_at_lh","look_at_rh","look_at_rh","look_to_lh","look_to_lh","look_to_rh","look_to_rh","mat2","mat3","mat3a","mat4","matrix2","matrix3","max","max","max","max","max_element","max_element","max_element","max_element","min","min","min","min","min_element","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat3","mul_mat3","mul_mat4","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_vec2","mul_vec3","mul_vec3","mul_vec3","mul_vec3a","mul_vec3a","mul_vec3a","mul_vec4","neg","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","normalize","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","orthographic_lh","orthographic_rh","orthographic_rh_gl","perp","perp_dot","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_lh","perspective_rh","perspective_rh_gl","powf","powf","powf","powf","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","quat","recip","recip","recip","recip","reject_from","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rotate","round","round","round","round","row","row","row","row","select","select","select","select","signum","signum","signum","signum","slerp","splat","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat3","sub_mat3","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_array","to_array","to_axis_angle","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_scale_rotation_translation","to_scale_rotation_translation","to_scaled_axis","transform_point2","transform_point2","transform_point2","transform_point3","transform_point3","transform_point3a","transform_point3a","transform_vector2","transform_vector2","transform_vector2","transform_vector3","transform_vector3","transform_vector3a","transform_vector3a","translation","translation","transpose","transpose","transpose","transpose","trunc","trunc","trunc","trunc","truncate","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","try_normalize","try_normalize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec2","vec3","vec3a","vec4","w_axis","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x_axis","x_axis","x_axis","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxy","xxxz","xxxz","xxxz","xxy","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyy","xxyz","xxyz","xxyz","xxz","xxz","xxz","xxzw","xxzx","xxzx","xxzx","xxzy","xxzy","xxzy","xxzz","xxzz","xxzz","xy","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxy","xyxz","xyxz","xyxz","xyy","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyy","xyyz","xyyz","xyyz","xyz","xyz","xyz","xyz","xyzw","xyzx","xyzx","xyzx","xyzy","xyzy","xyzy","xyzz","xyzz","xyzz","xz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzx","xzxw","xzxx","xzxx","xzxx","xzxy","xzxy","xzxy","xzxz","xzxz","xzxz","xzy","xzy","xzy","xzyw","xzyx","xzyx","xzyx","xzyy","xzyy","xzyy","xzyz","xzyz","xzyz","xzz","xzz","xzz","xzzw","xzzx","xzzx","xzzx","xzzy","xzzy","xzzy","xzzz","xzzz","xzzz","y","y","y_axis","y_axis","y_axis","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxy","yxxz","yxxz","yxxz","yxy","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyy","yxyz","yxyz","yxyz","yxz","yxz","yxz","yxzw","yxzx","yxzx","yxzx","yxzy","yxzy","yxzy","yxzz","yxzz","yxzz","yy","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxy","yyxz","yyxz","yyxz","yyy","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyy","yyyz","yyyz","yyyz","yyz","yyz","yyz","yyzw","yyzx","yyzx","yyzx","yyzy","yyzy","yyzy","yyzz","yyzz","yyzz","yz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzx","yzxw","yzxx","yzxx","yzxx","yzxy","yzxy","yzxy","yzxz","yzxz","yzxz","yzy","yzy","yzy","yzyw","yzyx","yzyx","yzyx","yzyy","yzyy","yzyy","yzyz","yzyz","yzyz","yzz","yzz","yzz","yzzw","yzzx","yzzx","yzzx","yzzy","yzzy","yzzy","yzzz","yzzz","yzzz","z","z_axis","z_axis","z_axis","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxx","zxxw","zxxx","zxxx","zxxx","zxxy","zxxy","zxxy","zxxz","zxxz","zxxz","zxy","zxy","zxy","zxyw","zxyx","zxyx","zxyx","zxyy","zxyy","zxyy","zxyz","zxyz","zxyz","zxz","zxz","zxz","zxzw","zxzx","zxzx","zxzx","zxzy","zxzy","zxzy","zxzz","zxzz","zxzz","zy","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyx","zyxw","zyxx","zyxx","zyxx","zyxy","zyxy","zyxy","zyxz","zyxz","zyxz","zyy","zyy","zyy","zyyw","zyyx","zyyx","zyyx","zyyy","zyyy","zyyy","zyyz","zyyz","zyyz","zyz","zyz","zyz","zyzw","zyzx","zyzx","zyzx","zyzy","zyzy","zyzy","zyzz","zyzz","zyzz","zz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzx","zzxw","zzxx","zzxx","zzxx","zzxy","zzxy","zzxy","zzxz","zzxz","zzxz","zzy","zzy","zzy","zzyw","zzyx","zzyx","zzyx","zzyy","zzyy","zzyy","zzyz","zzyz","zzyz","zzz","zzz","zzz","zzzw","zzzx","zzzx","zzzx","zzzy","zzzy","zzzy","zzzz","zzzz","zzzz","AXES","AXES","AXES","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","INFINITY","INFINITY","INFINITY","MAX","MAX","MAX","MIN","MIN","MIN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NEG_INFINITY","NEG_INFINITY","NEG_INFINITY","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","ONE","ONE","ONE","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat2","add_mat3","add_mat4","angle_between","angle_between","angle_between","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_vector","as_f32","as_i64vec2","as_i64vec3","as_i64vec4","as_ivec2","as_ivec3","as_ivec4","as_mat2","as_mat3","as_mat4","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_u64vec2","as_u64vec3","as_u64vec4","as_uvec2","as_uvec3","as_uvec4","as_vec2","as_vec3","as_vec3a","as_vec4","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","ceil","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","col","col","col","col_mut","col_mut","col_mut","conjugate","copysign","copysign","copysign","cross","default","default","default","default","default","default","default","default","default","deref","deref","deref_mut","deref_mut","determinant","determinant","determinant","distance","distance","distance","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dmat2","dmat3","dmat4","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","dquat","dvec2","dvec3","dvec4","eq","eq","eq","eq","eq","eq","eq","eq","eq","exp","exp","exp","extend","extend","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_angle","from_angle","from_angle","from_angle","from_angle_translation","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_diagonal","from_diagonal","from_diagonal","from_euler","from_euler","from_euler","from_mat2","from_mat2","from_mat2_translation","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3_translation","from_mat4","from_mat4","from_mat4","from_quat","from_quat","from_quat","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_translation","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_scale","from_scale","from_scale","from_scale","from_scale_angle","from_scale_angle_translation","from_scale_angle_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scaled_axis","from_slice","from_slice","from_slice","from_slice","from_translation","from_translation","from_translation","from_translation","from_vec4","from_xyzw","index","index","index","index_mut","index_mut","index_mut","into","into","into","into","into","into","into","into","into","inverse","inverse","inverse","inverse","inverse","inverse","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_normalized","is_normalized","is_normalized","is_normalized","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","look_at_lh","look_at_lh","look_at_rh","look_at_rh","look_to_lh","look_to_lh","look_to_rh","look_to_rh","matrix2","matrix3","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat3","mul_mat4","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_vec2","mul_vec3","mul_vec3","mul_vec4","neg","neg","neg","neg","neg","neg","neg","new","new","new","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","orthographic_lh","orthographic_rh","orthographic_rh_gl","perp","perp_dot","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_lh","perspective_rh","perspective_rh_gl","powf","powf","powf","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","recip","recip","recip","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rotate","round","round","round","row","row","row","select","select","select","signum","signum","signum","slerp","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat3","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_array","to_axis_angle","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_scale_rotation_translation","to_scale_rotation_translation","to_scaled_axis","transform_point2","transform_point2","transform_point3","transform_point3","transform_vector2","transform_vector2","transform_vector3","transform_vector3","translation","translation","transpose","transpose","transpose","trunc","trunc","trunc","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","try_normalize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","w","w","w_axis","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","x","x_axis","x_axis","x_axis","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","y","y_axis","y_axis","y_axis","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","z","z_axis","z_axis","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","AXES","AXES","AXES","IVec2","IVec3","IVec4","MAX","MAX","MAX","MIN","MIN","MIN","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","ONE","ONE","ONE","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","abs","abs","abs","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","as_dvec2","as_dvec3","as_dvec4","as_i64vec2","as_i64vec3","as_i64vec4","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_u64vec2","as_u64vec3","as_u64vec4","as_uvec2","as_uvec3","as_uvec4","as_vec2","as_vec3","as_vec3a","as_vec4","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clamp","clamp","clamp","clone","clone","clone","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cross","default","default","default","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_array","from_array","from_slice","from_slice","from_slice","hash","hash","hash","index","index","index","index_mut","index_mut","index_mut","into","into","into","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","ivec2","ivec3","ivec4","length_squared","length_squared","length_squared","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","neg","new","new","new","not","not","not","perp","perp_dot","product","product","product","product","product","product","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rotate","select","select","select","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","signum","signum","signum","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","w","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","AXES","AXES","AXES","I64Vec2","I64Vec3","I64Vec4","MAX","MAX","MAX","MIN","MIN","MIN","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","ONE","ONE","ONE","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","abs","abs","abs","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","as_dvec2","as_dvec3","as_dvec4","as_ivec2","as_ivec3","as_ivec4","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_u64vec2","as_u64vec3","as_u64vec4","as_uvec2","as_uvec3","as_uvec4","as_vec2","as_vec3","as_vec3a","as_vec4","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clamp","clamp","clamp","clone","clone","clone","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cross","default","default","default","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_array","from_array","from_slice","from_slice","from_slice","hash","hash","hash","i64vec2","i64vec3","i64vec4","index","index","index","index_mut","index_mut","index_mut","into","into","into","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","length_squared","length_squared","length_squared","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","neg","new","new","new","not","not","not","perp","perp_dot","product","product","product","product","product","product","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rotate","select","select","select","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","signum","signum","signum","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","w","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3Swizzles","Vec4","Vec4","Vec4Swizzles","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyz","xyzw","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","AXES","AXES","AXES","MAX","MAX","MAX","MIN","MIN","MIN","ONE","ONE","ONE","UVec2","UVec3","UVec4","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","as_dvec2","as_dvec3","as_dvec4","as_i64vec2","as_i64vec3","as_i64vec4","as_ivec2","as_ivec3","as_ivec4","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_u64vec2","as_u64vec3","as_u64vec4","as_vec2","as_vec3","as_vec3a","as_vec4","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clamp","clamp","clamp","clone","clone","clone","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cross","default","default","default","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_array","from_array","from_slice","from_slice","from_slice","hash","hash","hash","index","index","index","index_mut","index_mut","index_mut","into","into","into","length_squared","length_squared","length_squared","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","new","new","new","not","not","not","product","product","product","product","product","product","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","select","select","select","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uvec2","uvec3","uvec4","w","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","AXES","AXES","AXES","MAX","MAX","MAX","MIN","MIN","MIN","ONE","ONE","ONE","U64Vec2","U64Vec3","U64Vec4","W","X","X","X","Y","Y","Y","Z","Z","ZERO","ZERO","ZERO","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","as_dvec2","as_dvec3","as_dvec4","as_i64vec2","as_i64vec3","as_i64vec4","as_ivec2","as_ivec3","as_ivec4","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_uvec2","as_uvec3","as_uvec4","as_vec2","as_vec3","as_vec3a","as_vec4","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clamp","clamp","clamp","clone","clone","clone","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cross","default","default","default","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_array","from_array","from_slice","from_slice","from_slice","hash","hash","hash","index","index","index","index_mut","index_mut","index_mut","into","into","into","length_squared","length_squared","length_squared","max","max","max","max_element","max_element","max_element","min","min","min","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","new","new","new","not","not","not","product","product","product","product","product","product","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","select","select","select","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u64vec2","u64vec3","u64vec4","w","write_to_slice","write_to_slice","write_to_slice","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","y","y","y","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","z","z","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz"],"q":[[0,"glam"],[30,"glam::bool"],[189,"glam::f32"],[1792,"glam::f64"],[3066,"glam::i32"],[3924,"glam::i64"],[4779,"glam::swizzles"],[5272,"glam::u32"],[6100,"glam::u64"],[6925,"core::fmt"],[6926,"core::fmt"],[6927,"core::result"],[6928,"core::any"],[6929,"core::core_arch::x86"],[6930,"core::iter::traits::iterator"],[6931,"core::option"]],"d":["Rotation Helper  Euler rotation sequences.","","","","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","<code>bool</code> vector mask types. ","","","","Default <code>YXZ</code> as yaw (y-axis), pitch (x-axis), roll (z-axis).","","<code>f32</code> vector, quaternion and matrix types. ","<code>f64</code> vector, quaternion and matrix types. ","","Returns the argument unchanged.","","<code>i32</code> vector types. ","<code>i64</code> vector types. ","Calls <code>U::from(self)</code>.","Traits adding swizzle methods to all vector types. ","","","","<code>u32</code> vector types. ","<code>u64</code> vector types. ","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","All false.","All false.","All false.","All false.","All false.","All true.","All true.","All true.","All true.","All true.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","","","","","","","","","","","Returns a bitmask with the lowest 2 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","","","","","","Sets the element at <code>index</code>.","Sets the element at <code>index</code>.","Sets the element at <code>index</code>.","Sets the element at <code>index</code>.","Sets the element at <code>index</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","Tests the value at <code>index</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The unit axes.","The unit axes.","The unit axes.","The unit axes.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","The identity transform.","The identity transform.","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","All <code>f32::INFINITY</code>.","All <code>f32::INFINITY</code>.","All <code>f32::INFINITY</code>.","All <code>f32::INFINITY</code>.","All <code>f32::MAX</code>.","All <code>f32::MAX</code>.","All <code>f32::MAX</code>.","All <code>f32::MAX</code>.","All <code>f32::MIN</code>.","All <code>f32::MIN</code>.","All <code>f32::MIN</code>.","All <code>f32::MIN</code>.","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","All NAN:s.","All NAN:s.","All NAN:s.","All <code>f32::NAN</code>.","All <code>f32::NAN</code>.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All <code>f32::NAN</code>.","All <code>f32::NAN</code>.","All <code>f32::NEG_INFINITY</code>.","All <code>f32::NEG_INFINITY</code>.","All <code>f32::NEG_INFINITY</code>.","All <code>f32::NEG_INFINITY</code>.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","All ones.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","The degenerate zero transform.","The degenerate zero transform.","A 3x3 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","","","","","","","","","Adds two quaternions.","","","","","","","","","","","","","","","","","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Returns the angle (in radians) between <code>self</code> and <code>rhs</code> in the …","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between two vectors.","Returns some vector that is orthogonal to the given one.","Returns some vector that is orthogonal to the given one.","Given a unit vector return two other vectors that together …","Given a unit vector return two other vectors that together …","Returns any unit vector that is orthogonal to the given …","Returns any unit vector that is orthogonal to the given …","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns the quaternion conjugate of <code>self</code>. For a unit …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Creates a <code>Vec3A</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code> …","","Returns the argument unchanged.","","","","","","","","","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given rotation <code>angle</code>.","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 2D rotation …","Creates a new vector from an array.","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","Creates an affine transform from a <code>[f32; 6]</code> array stored …","Creates an affine transform from a <code>[f32; 12]</code> array stored …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 2x2 matrix from a <code>[f32; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f32; 16]</code> array stored in …","Creates an affine transform from a <code>[[f32; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f32; 3]; 4]</code> 3D array …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 2x2 matrix from a <code>[[f32; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f32; 4]; 4]</code> 4D array stored …","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3D rotation matrix from the given euler rotation …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","The given <code>Mat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>Mat3A</code> must be an affine transform,","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 SIMD aligned rotation …","The given <code>Mat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates a new rotation quaternion from a 4D vector.","Creates a new rotation quaternion.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies a quaternion by a scalar value.","Multiplies two quaternions. If they each represent a …","Multiplies a quaternion and a 3D vector, returning the …","","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Transforms a 2D vector.","Transforms a 3D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Transforms a <code>Vec3A</code>.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 4D vector.","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","","","","","","","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","","","","","","","","","","","","","","","","","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Performs a spherical linear interpolation between <code>self</code> and …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis (normalized) and angle (in …","Creates a <code>[f32; 6]</code> array storing data in column major …","Creates a <code>[f32; 12]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 4]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 16]</code> array storing data in column major …","Creates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 2D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code>, applying shear, scale, …","Transforms the given <code>Vec3A</code> as 3D point.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Rotates the given 2D vector.","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","Transforms the given <code>Vec3A</code>, applying shear, scale and …","Transforms the give <code>Vec3A</code> as 3D vector.","","","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …eturns the vector part of the quaternionhe unit axes.","The unit axes.","The unit axes.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","The identity transform.","The identity transform.","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","All <code>f64::INFINITY</code>.","All <code>f64::INFINITY</code>.","All <code>f64::INFINITY</code>.","All <code>f64::MAX</code>.","All <code>f64::MAX</code>.","All <code>f64::MAX</code>.","All <code>f64::MIN</code>.","All <code>f64::MIN</code>.","All <code>f64::MIN</code>.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All <code>f64::NAN</code>.","All <code>f64::NAN</code>.","All <code>f64::NAN</code>.","All <code>f64::NEG_INFINITY</code>.","All <code>f64::NEG_INFINITY</code>.","All <code>f64::NEG_INFINITY</code>.","All negative ones.","All negative ones.","All negative ones.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","The degenerate zero transform.","The degenerate zero transform.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","All zeroes.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","","","","Adds two quaternions.","","","","","","","","","","","","","","","","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between <code>self</code> and <code>rhs</code> in the …","Returns the angle (in radians) between two vectors.","Returns some vector that is orthogonal to the given one.","Given a unit vector return two other vectors that together …","Returns any unit vector that is orthogonal to the given …","","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns the quaternion conjugate of <code>self</code>. For a unit …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Returns a vector with signs of <code>rhs</code> and the magnitudes of …","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","","","","","","","","","","","","","","","","","","","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given rotation <code>angle</code>.","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates an affine transform from the given 2D rotation …","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","Creates an affine transform from a <code>[f64; 6]</code> array stored …","Creates an affine transform from a <code>[f64; 12]</code> array stored …","Creates a 2x2 matrix from a <code>[f64; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f64; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f64; 16]</code> array stored in …","Creates an affine transform from a <code>[[f64; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f64; 3]; 4]</code> 3D array …","Creates a 2x2 matrix from a <code>[[f64; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f64; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f64; 4]; 4]</code> 4D array stored …","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","The given <code>DMat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>DMat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a rotation quaternion from a slice.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates a new rotation quaternion from a 4D vector.","Creates a new rotation quaternion.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","Multiplies a quaternion and a 3D vector, returning the …","Multiplies a quaternion by a scalar value.","","","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Transforms a 2D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 4D vector.","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","","","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","","","","","","","","","","","","","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Performs a spherical linear interpolation between <code>self</code> and …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis (normalized) and angle (in …","Creates a <code>[f64; 6]</code> array storing data in column major …","Creates a <code>[f64; 12]</code> array storing data in column major …","Creates a <code>[f64; 4]</code> array storing data in column major …","Creates a <code>[f64; 9]</code> array storing data in column major …","Creates a <code>[f64; 16]</code> array storing data in column major …","Creates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","","","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Returns a vector containing the integer part each element …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …eturns the vector part of the quaternionhe unit axes.","The unit axes.","The unit axes.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","All <code>i32::MAX</code>.","All <code>i32::MAX</code>.","All <code>i32::MAX</code>.","All <code>i32::MIN</code>.","All <code>i32::MIN</code>.","All <code>i32::MIN</code>.","All negative ones.","All negative ones.","All negative ones.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","All zeroes.","All zeroes.","All zeroes.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","","","","","","","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","","","","","","","","","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","","","","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","","","","","","","","","","","","","","","","","","","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …he unit axes.","The unit axes.","The unit axes.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","All <code>i64::MAX</code>.","All <code>i64::MAX</code>.","All <code>i64::MAX</code>.","All <code>i64::MIN</code>.","All <code>i64::MIN</code>.","All <code>i64::MIN</code>.","All negative ones.","All negative ones.","All negative ones.","A unit vector pointing along the negative W axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative X axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Y axis.","A unit vector pointing along the negative Z axis.","A unit vector pointing along the negative Z axis.","All ones.","All ones.","All ones.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","All zeroes.","All zeroes.","All zeroes.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Component-wise clamping of values, similar to <code>i64::clamp</code>.","Component-wise clamping of values, similar to <code>i64::clamp</code>.","Component-wise clamping of values, similar to <code>i64::clamp</code>.","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","","","","","","","","","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","","","","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","","","","","","","","","","","","","","","","","","","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …he unit axes.","The unit axes.","The unit axes.","All <code>u32::MAX</code>.","All <code>u32::MAX</code>.","All <code>u32::MAX</code>.","All <code>u32::MIN</code>.","All <code>u32::MIN</code>.","All <code>u32::MIN</code>.","All ones.","All ones.","All ones.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","All zeroes.","All zeroes.","All zeroes.","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>u64</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","","","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","","","","","","","","","","","","","","","","","","","","","","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …he unit axes.","The unit axes.","The unit axes.","All <code>u64::MAX</code>.","All <code>u64::MAX</code>.","All <code>u64::MAX</code>.","All <code>u64::MIN</code>.","All <code>u64::MIN</code>.","All <code>u64::MIN</code>.","All ones.","All ones.","All ones.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A unit vector pointing along the positive W axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive X axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Y axis.","A unit vector pointing along the positive Z axis.","A unit vector pointing along the positive Z axis.","All zeroes.","All zeroes.","All zeroes.","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i64</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Component-wise clamping of values, similar to <code>u64::clamp</code>.","Component-wise clamping of values, similar to <code>u64::clamp</code>.","Component-wise clamping of values, similar to <code>u64::clamp</code>.","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","","","","","","","","","","","","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new vector.","","","","","","","","","","","","","","","","","","","","","","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","","","","","","","","","","","","","","","","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …if":[0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[],1],[[1,1],2],0,0,[[1,3],4],[-1,-1,[]],[[1,-1],5,6],0,0,[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,2],[10,2],[11,2],[12,2],[13,2],[9,2],[10,2],[11,2],[12,2],[13,2],[[9,9],9],[[10,10],10],[[11,11],11],[[12,12],12],[[13,13],13],[[9,9],5],[[10,10],5],[[11,11],5],[[12,12],5],[[13,13],5],[9,14],[10,14],[11,14],[12,14],[13,14],[[9,9],9],[[10,10],10],[[11,11],11],[[12,12],12],[[13,13],13],[[9,9],5],[[10,10],5],[[11,11],5],[[12,12],5],[[13,13],5],[[9,9],9],[[10,10],10],[[11,11],11],[[12,12],12],[[13,13],13],[[9,9],5],[[10,10],5],[[11,11],5],[[12,12],5],[[13,13],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,9],[10,10],[11,11],[12,12],[13,13],[[],9],[[],10],[[],11],[[],12],[[],13],[[9,9],2],[[10,10],2],[[11,11],2],[[12,12],2],[[13,13],2],[[9,3],4],[[9,3],4],[[10,3],4],[[10,3],4],[[11,3],4],[[11,3],4],[[12,3],4],[[12,3],4],[[13,3],4],[[13,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[9,-1],5,6],[[10,-1],5,6],[[11,-1],5,6],[[12,-1],5,6],[[13,-1],5,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,2],9],[[2,2,2],10],[[2,2,2,2],11],[[2,2,2],12],[[2,2,2,2],13],[9,9],[10,10],[11,11],[12,12],[13,13],[[9,15,2],5],[[10,15,2],5],[[11,15,2],5],[[12,15,2],5],[[13,15,2],5],[2,9],[2,10],[2,11],[2,12],[2,13],[[9,15],2],[[10,15],2],[[11,15],2],[[12,15],2],[[13,15],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,16],[17,17],[18,18],[19,19],[[20,20,21],2],[[22,22,21],2],[[23,23,21],2],[[16,16,21],2],[[17,17,21],2],[[24,24,21],2],[[25,25,21],2],[[26,26,21],2],[[27,27,21],2],[[18,18,21],2],[[19,19,21],2],[[23,23]],[[16,16],16],[[16,21],16],[[17,21],17],[[17,17],17],[[24,24]],[[25,25]],[[26,26]],[[27,27],27],[[18,21],18],[[18,18],18],[[19,19],19],[[19,21],19],[[23,23],5],[[16,21],5],[[16,16],5],[[17,21],5],[[17,17],5],[[24,24],5],[[25,25],5],[[26,26],5],[[18,21],5],[[18,18],5],[[19,19],5],[[19,21],5],[[24,24],24],[[23,23],23],[[25,25],25],[[26,26],26],[[16,16],21],[[17,17],21],[[27,27],21],[[18,18],21],[17,17],[18,18],[17,[[5,[17,17]]]],[18,[[5,[18,18]]]],[17,17],[18,18],[24,28],[23,29],[25,29],[26,30],[16,31],[17,32],[18,32],[19,33],[27,34],[16,35],[17,36],[18,36],[19,37],[16,38],[17,39],[18,39],[19,40],[23,[[41,[21]]]],[16,[[41,[21]]]],[17,[[41,[21]]]],[24,[[41,[21]]]],[26,[[41,[21]]]],[18,[[41,[21]]]],[19,[[41,[21]]]],[23,[[41,[21]]]],[16,[[41,[21]]]],[17,[[41,[21]]]],[24,[[41,[21]]]],[26,[[41,[21]]]],[27,[[41,[21]]]],[18,[[41,[21]]]],[19,[[41,[21]]]],[16,42],[17,43],[18,43],[19,44],[16,45],[17,46],[18,46],[19,47],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,16],[17,17],[18,18],[19,19],[[16,16,16],16],[[17,17,17],17],[[18,18,18],18],[[19,19,19],19],[[16,21,21],16],[[17,21,21],17],[[18,21,21],18],[[19,21,21],19],[[16,21],16],[[17,21],17],[[18,21],18],[[19,21],19],[[16,21],16],[[17,21],17],[[18,21],18],[[19,21],19],[20,20],[22,22],[23,23],[16,16],[17,17],[24,24],[25,25],[26,26],[27,27],[18,18],[19,19],[[16,16],9],[[17,17],10],[[18,18],12],[[19,19],13],[[16,16],9],[[17,17],10],[[18,18],12],[[19,19],13],[[16,16],9],[[17,17],10],[[18,18],12],[[19,19],13],[[16,16],9],[[17,17],10],[[18,18],12],[[19,19],13],[[16,16],9],[[17,17],10],[[18,18],12],[[19,19],13],[[16,16],9],[[17,17],10],[[18,18],12],[[19,19],13],[[23,15],17],[[24,15],16],[[25,15],18],[[26,15],19],[[23,15],17],[[24,15],16],[[25,15],18],[[26,15],19],[27,27],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[17,17],17],[[18,18],18],[[],20],[[],22],[[],23],[[],16],[[],17],[[],24],[[],25],[[],26],[[],27],[[],18],[[],19],[20],[22],[24],[27],[18],[19],[20],[22],[24],[27],[18],[19],[23,21],[24,21],[25,21],[26,21],[[16,16],21],[[17,17],21],[[18,18],21],[[19,19],21],[[16,16],21],[[17,17],21],[[18,18],21],[[19,19],21],[[16,16],16],[[16,21],16],[[17,21],17],[[17,17],17],[[27,21],27],[[18,18],18],[[18,21],18],[[19,21],19],[[19,19],19],[[16,16],5],[[16,21],5],[[17,17],5],[[17,21],5],[[18,18],5],[[18,21],5],[[19,19],5],[[19,21],5],[[16,16],21],[[17,17],21],[[27,27],21],[[18,18],21],[[19,19],21],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[20,20],2],[[22,22],2],[[23,23],2],[[16,16],2],[[17,17],2],[[24,24],2],[[25,25],2],[[26,26],2],[[27,27],2],[[18,18],2],[[19,19],2],[16,16],[17,17],[18,18],[19,19],[[16,21],17],[[17,21],19],[[18,21],19],[16,16],[17,17],[18,18],[19,19],[[20,3],4],[[20,3],4],[[22,3],4],[[22,3],4],[[23,3],4],[[23,3],4],[[16,3],4],[[16,3],4],[[17,3],4],[[17,3],4],[[24,3],4],[[24,3],4],[[25,3],4],[[25,3],4],[[26,3],4],[[26,3],4],[[27,3],4],[[27,3],4],[[18,3],4],[[18,3],4],[[19,3],4],[[19,3],4],[16,16],[17,17],[18,18],[19,19],[-1,-1,[]],[-1,-1,[]],[20,23],[25,23],[-1,-1,[]],[-1,-1,[]],[[[41,[21]]],16],[[[5,[21,21]]],16],[18,17],[-1,-1,[]],[[[5,[16,21]]],17],[[[5,[21,21,21]]],17],[[[41,[21]]],17],[-1,-1,[]],[23,25],[-1,-1,[]],[20,25],[-1,-1,[]],[22,26],[-1,-1,[]],[[[5,[21,21,21]]],18],[[[5,[16,21]]],18],[17,18],[[[41,[21]]],18],[-1,-1,[]],[48,18],[19,18],[[[5,[16,21,21]]],19],[-1,-1,[]],[[[5,[18,21]]],19],[48,19],[[[5,[17,21]]],19],[[[5,[21,21,21,21]]],19],[[[5,[16,16]]],19],[27,19],[[[5,[21,18]]],19],[[[41,[21]]],19],[[[5,[21,17]]],19],[22,27],[21,20],[21,23],[21,16],[21,24],[21,25],[[21,16],20],[[[41,[21]]],16],[[[41,[21]]],17],[[[41,[21]]],27],[[[41,[21]]],18],[[[41,[21]]],19],[[17,21],22],[[17,21],23],[[17,21],25],[[17,21],26],[[17,21],27],[[16,16,16],20],[[18,18,18,18],22],[[17,17,17],23],[[16,16],24],[[18,18,18],25],[[19,19,19,19],26],[[[41,[21]]],20],[[[41,[21]]],22],[[[41,[21]]],23],[[[41,[21]]],24],[[[41,[21]]],25],[[[41,[21]]],26],[[[41,[[41,[21]]]]],20],[[[41,[[41,[21]]]]],22],[[[41,[[41,[21]]]]],23],[[[41,[[41,[21]]]]],24],[[[41,[[41,[21]]]]],25],[[[41,[[41,[21]]]]],26],[[[49,[21]]],20],[[[49,[21]]],22],[[[49,[21]]],23],[[[49,[21]]],24],[[[49,[21]]],25],[[[49,[21]]],26],[17,23],[16,24],[17,25],[19,26],[[1,21,21,21],23],[[1,21,21,21],25],[[1,21,21,21],26],[[1,21,21,21],27],[24,20],[24,23],[24,25],[[24,16],20],[23,20],[23,22],[23,24],[23,26],[23,27],[[23,17],22],[25,20],[25,24],[25,26],[25,27],[26,22],[26,23],[26,25],[26,27],[27,22],[27,23],[27,25],[27,26],[[17,17],27],[[16,16],27],[[17,17],27],[[27,17],22],[[27,17],26],[21,22],[21,23],[21,25],[21,26],[21,27],[21,22],[21,23],[21,25],[21,26],[21,27],[21,22],[21,23],[21,25],[21,26],[21,27],[16,20],[17,22],[16,23],[16,25],[17,26],[[16,21],24],[[16,21,16],20],[[16,21,16],23],[[16,21,16],25],[[17,27,17],22],[[17,27,17],26],[17,27],[[[49,[21]]],16],[[[49,[21]]],17],[[[49,[21]]],27],[[[49,[21]]],18],[[[49,[21]]],19],[16,20],[17,22],[16,23],[16,25],[17,26],[19,27],[[21,21,21,21],27],[[16,15]],[[17,15]],[[18,15]],[[19,15]],[[16,15]],[[17,15]],[[18,15]],[[19,15]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,20],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[20,2],[22,2],[23,2],[16,2],[17,2],[24,2],[25,2],[26,2],[27,2],[18,2],[19,2],[20,2],[22,2],[23,2],[16,2],[17,2],[24,2],[25,2],[26,2],[27,2],[18,2],[19,2],[16,9],[17,10],[18,12],[19,13],[27,2],[16,14],[17,14],[18,14],[19,14],[16,2],[17,2],[27,2],[18,2],[19,2],[16,21],[17,21],[27,21],[18,21],[19,21],[16,21],[17,21],[27,21],[18,21],[19,21],[16,21],[17,21],[27,21],[18,21],[19,21],[[16,16,21],16],[[17,17,21],17],[[27,27,21],27],[[18,18,21],18],[[19,19,21],19],[[17,17,17],22],[[17,17,17],26],[[17,17,17],22],[[17,17,17],26],[[17,17,17],22],[[17,17,17],26],[[17,17,17],22],[[17,17,17],26],[[16,16],24],[[17,17,17],23],[[18,18,18],25],[[19,19,19,19],26],0,0,[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[16,21],[17,21],[18,21],[19,21],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[16,21],[17,21],[18,21],[19,21],[[20,23]],[[20,25]],[[20,20]],[[22,26]],[[22,22]],[[23,18],18],[[23,17]],[[23,21]],[[23,23]],[[23,20]],[[16,16],16],[[16,21],16],[[17,21],17],[[17,17],17],[[24,24]],[[24,16]],[[24,21]],[[25,17],17],[[25,21]],[[25,25]],[[25,18]],[[25,20]],[[26,21]],[[26,19]],[[26,26]],[[26,22]],[[27,21],27],[[27,27],27],[[27,17]],[[27,18]],[[18,18],18],[[18,21],18],[[19,19],19],[[19,21],19],[[16,16,16],16],[[17,17,17],17],[[18,18,18],18],[[19,19,19],19],[[23,23],5],[[23,21],5],[[16,16],5],[[16,21],5],[[17,17],5],[[17,21],5],[[24,21],5],[[24,24],5],[[25,25],5],[[25,21],5],[[26,26],5],[[26,21],5],[[27,27],5],[[18,21],5],[[18,18],5],[[19,21],5],[[19,19],5],[[24,24],24],[[23,23],23],[[25,25],25],[[26,26],26],[[27,27],27],[[23,21],23],[[24,21],24],[[25,21],25],[[26,21],26],[[24,16],16],[[23,17],17],[[25,17],17],[[27,17],17],[[23,18],18],[[25,18],18],[[27,18],18],[[26,19],19],[23],[16,16],[17,17],[24],[25],[26],[27,27],[18,18],[19,19],[[21,21],16],[[21,21,21],17],[[21,21,21],18],[[21,21,21,21],19],[16,16],[17,17],[27,27],[18,18],[19,19],[16,16],[17,17],[18,18],[19,19],[[21,21,21,21,21,21],26],[[21,21,21,21,21,21],26],[[21,21,21,21,21,21],26],[16,16],[[16,16],21],[[21,21,21],26],[[21,21,21],26],[[21,21,21],26],[[21,21,21],26],[[21,21,21,21],26],[[21,21,21,21],26],[[21,21,21,21],26],[[16,21],16],[[17,21],17],[[18,21],18],[[19,21],19],[-1,20,50],[-1,22,50],[-1,23,50],[-1,23,50],[-1,16,50],[-1,16,50],[-1,17,50],[-1,17,50],[-1,24,50],[-1,24,50],[-1,25,50],[-1,25,50],[-1,26,50],[-1,26,50],[-1,27,50],[-1,27,50],[-1,18,50],[-1,18,50],[-1,19,50],[-1,19,50],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[26,17],17],[[21,21,21,21],27],[16,16],[17,17],[18,18],[19,19],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[16,16],16],[[16,21],16],[[17,21],17],[[17,17],17],[[18,21],18],[[18,18],18],[[19,21],19],[[19,19],19],[[16,21],5],[[16,16],5],[[17,17],5],[[17,21],5],[[18,21],5],[[18,18],5],[[19,21],5],[[19,19],5],[[16,16],16],[16,16],[17,17],[18,18],[19,19],[[23,15],17],[[24,15],16],[[25,15],18],[[26,15],19],[[9,16,16],16],[[10,17,17],17],[[12,18,18],18],[[13,19,19],19],[16,16],[17,17],[18,18],[19,19],[[27,27,21],27],[21,16],[21,17],[21,18],[21,19],[[23,23]],[[16,21],16],[[16,16],16],[[17,17],17],[[17,21],17],[[24,24]],[[25,25]],[[26,26]],[[27,27],27],[[18,18],18],[[18,21],18],[[19,21],19],[[19,19],19],[[23,23],5],[[16,21],5],[[16,16],5],[[17,21],5],[[17,17],5],[[24,24],5],[[25,25],5],[[26,26],5],[[18,18],5],[[18,21],5],[[19,19],5],[[19,21],5],[[24,24],24],[[23,23],23],[[25,25],25],[[26,26],26],[-1,23,50],[-1,23,50],[-1,16,50],[-1,16,50],[-1,17,50],[-1,17,50],[-1,24,50],[-1,24,50],[-1,25,50],[-1,25,50],[-1,26,50],[-1,26,50],[-1,27,50],[-1,27,50],[-1,18,50],[-1,18,50],[-1,19,50],[-1,19,50],[16,[[41,[21]]]],[17,[[41,[21]]]],[27,[[41,[21]]]],[18,[[41,[21]]]],[19,[[41,[21]]]],[27,[[5,[17,21]]]],[20,[[41,[21]]]],[22,[[41,[21]]]],[23,[[41,[21]]]],[24,[[41,[21]]]],[25,[[41,[21]]]],[26,[[41,[21]]]],[20,[[41,[[41,[21]]]]]],[22,[[41,[[41,[21]]]]]],[23,[[41,[[41,[21]]]]]],[24,[[41,[[41,[21]]]]]],[25,[[41,[[41,[21]]]]]],[26,[[41,[[41,[21]]]]]],[[27,1],[[5,[21,21,21]]]],[22,[[5,[17,27,17]]]],[26,[[5,[17,27,17]]]],[27,17],[[20,16],16],[[23,16],16],[[25,16],16],[[22,17],17],[[26,17],17],[[22,18],18],[[26,18],18],[[20,16],16],[[23,16],16],[[25,16],16],[[22,17],17],[[26,17],17],[[22,18],18],[[26,18],18],0,0,[23,23],[24,24],[25,25],[26,26],[16,16],[17,17],[18,18],[19,19],[17,16],[18,16],[19,17],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[16,[[51,[16]]]],[17,[[51,[17]]]],[18,[[51,[18]]]],[19,[[51,[19]]]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[21,21],16],[[21,21,21],17],[[21,21,21],18],[[21,21,21,21],19],0,[[20,[49,[21]]],5],[[22,[49,[21]]],5],[[23,[49,[21]]],5],[[24,[49,[21]]],5],[[25,[49,[21]]],5],[[26,[49,[21]]],5],[[16,[49,[21]]],5],[[17,[49,[21]]],5],[[27,[49,[21]]],5],[[18,[49,[21]]],5],[[19,[49,[21]]],5],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],0,0,0,0,0,[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[16,16],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[16,16],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[27,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],0,0,0,0,0,[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[16,16],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[16,16],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[16,17],[17,17],[18,18],[19,17],[19,19],[16,19],[17,19],[18,19],[19,19],[16,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],0,0,0,0,[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[19,17],[19,19],[19,19],[19,19],[19,19],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,16],[18,16],[19,16],[19,17],[19,19],[19,19],[19,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,17],[18,18],[19,17],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],[17,19],[18,19],[19,19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31,31],[32,32],[33,33],[[52,52,53],2],[[54,54,53],2],[[28,28,53],2],[[29,29,53],2],[[30,30,53],2],[[34,34,53],2],[[31,31,53],2],[[32,32,53],2],[[33,33,53],2],[[28,28]],[[29,29]],[[30,30]],[[34,34],34],[[31,53],31],[[31,31],31],[[32,53],32],[[32,32],32],[[33,33],33],[[33,53],33],[[28,28],5],[[29,29],5],[[30,30],5],[[31,53],5],[[31,31],5],[[32,53],5],[[32,32],5],[[33,53],5],[[33,33],5],[[28,28],28],[[29,29],29],[[30,30],30],[[34,34],53],[[31,31],53],[[32,32],53],[32,32],[32,[[5,[32,32]]]],[32,32],[34,27],[31,35],[32,36],[33,37],[31,38],[32,39],[33,40],[28,24],[29,23],[30,26],[28,[[41,[53]]]],[29,[[41,[53]]]],[30,[[41,[53]]]],[31,[[41,[53]]]],[32,[[41,[53]]]],[33,[[41,[53]]]],[28,[[41,[53]]]],[29,[[41,[53]]]],[30,[[41,[53]]]],[34,[[41,[53]]]],[31,[[41,[53]]]],[32,[[41,[53]]]],[33,[[41,[53]]]],[31,42],[32,43],[33,44],[31,45],[32,46],[33,47],[31,16],[32,17],[32,18],[33,19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,31],[32,32],[33,33],[[31,31,31],31],[[32,32,32],32],[[33,33,33],33],[[31,53,53],31],[[32,53,53],32],[[33,53,53],33],[[31,53],31],[[32,53],32],[[33,53],33],[[31,53],31],[[32,53],32],[[33,53],33],[52,52],[54,54],[28,28],[29,29],[30,30],[34,34],[31,31],[32,32],[33,33],[[31,31],9],[[32,32],10],[[33,33],11],[[31,31],9],[[32,32],10],[[33,33],11],[[31,31],9],[[32,32],10],[[33,33],11],[[31,31],9],[[32,32],10],[[33,33],11],[[31,31],9],[[32,32],10],[[33,33],11],[[31,31],9],[[32,32],10],[[33,33],11],[[28,15],31],[[29,15],32],[[30,15],33],[[28,15],31],[[29,15],32],[[30,15],33],[34,34],[[31,31],31],[[32,32],32],[[33,33],33],[[32,32],32],[[],52],[[],54],[[],28],[[],29],[[],30],[[],34],[[],31],[[],32],[[],33],[52],[54],[52],[54],[28,53],[29,53],[30,53],[[31,31],53],[[32,32],53],[[33,33],53],[[31,31],53],[[32,32],53],[[33,33],53],[[34,53],34],[[31,53],31],[[31,31],31],[[32,32],32],[[32,53],32],[[33,53],33],[[33,33],33],[[31,53],5],[[31,31],5],[[32,32],5],[[32,53],5],[[33,33],5],[[33,53],5],[[31,31],28],[[32,32,32],29],[[33,33,33,33],30],[[34,34],53],[[31,31],53],[[32,32],53],[[33,33],53],[[31,31],31],[[32,32],32],[[33,33],33],[[53,53,53,53],34],[[53,53],31],[[53,53,53],32],[[53,53,53,53],33],[[52,52],2],[[54,54],2],[[28,28],2],[[29,29],2],[[30,30],2],[[34,34],2],[[31,31],2],[[32,32],2],[[33,33],2],[31,31],[32,32],[33,33],[[31,53],32],[[32,53],33],[31,31],[32,32],[33,33],[[52,3],4],[[52,3],4],[[54,3],4],[[54,3],4],[[28,3],4],[[28,3],4],[[29,3],4],[[29,3],4],[[30,3],4],[[30,3],4],[[34,3],4],[[34,3],4],[[31,3],4],[[31,3],4],[[32,3],4],[[32,3],4],[[33,3],4],[[33,3],4],[31,31],[32,32],[33,33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[52,29],[54,30],[-1,-1,[]],[-1,-1,[]],[[[41,[53]]],31],[16,31],[45,31],[[[5,[53,53]]],31],[-1,-1,[]],[38,31],[17,32],[-1,-1,[]],[39,32],[[[41,[53]]],32],[[[5,[31,53]]],32],[46,32],[[[5,[53,53,53]]],32],[47,33],[34,33],[-1,-1,[]],[[[5,[53,53,53,53]]],33],[40,33],[[[5,[32,53]]],33],[[[5,[31,31]]],33],[[[5,[53,32]]],33],[[[41,[53]]],33],[[[5,[31,53,53]]],33],[19,33],[54,34],[53,52],[53,28],[53,29],[53,31],[[53,31],52],[[[41,[53]]],34],[[[41,[53]]],31],[[[41,[53]]],32],[[[41,[53]]],33],[[32,53],54],[[32,53],29],[[32,53],30],[[32,53],34],[[31,31,31],52],[[32,32,32,32],54],[[31,31],28],[[32,32,32],29],[[33,33,33,33],30],[[[41,[53]]],52],[[[41,[53]]],54],[[[41,[53]]],28],[[[41,[53]]],29],[[[41,[53]]],30],[[[41,[[41,[53]]]]],52],[[[41,[[41,[53]]]]],54],[[[41,[[41,[53]]]]],28],[[[41,[[41,[53]]]]],29],[[[41,[[41,[53]]]]],30],[[[49,[53]]],52],[[[49,[53]]],54],[[[49,[53]]],28],[[[49,[53]]],29],[[[49,[53]]],30],[31,28],[32,29],[33,30],[[1,53,53,53],29],[[1,53,53,53],30],[[1,53,53,53],34],[28,52],[28,29],[[28,31],52],[29,52],[29,54],[29,28],[29,30],[29,34],[[29,32],54],[30,54],[30,29],[30,34],[34,54],[34,29],[34,30],[[32,32],34],[[31,31],34],[[32,32],34],[[34,32],54],[[34,32],30],[53,54],[53,29],[53,30],[53,34],[53,54],[53,29],[53,30],[53,34],[53,54],[53,29],[53,30],[53,34],[31,52],[32,54],[31,29],[32,30],[[31,53],28],[[31,53,31],52],[[31,53,31],29],[[32,34,32],54],[[32,34,32],30],[32,34],[[[49,[53]]],34],[[[49,[53]]],31],[[[49,[53]]],32],[[[49,[53]]],33],[31,52],[32,54],[31,29],[32,30],[33,34],[[53,53,53,53],34],[[31,15]],[[32,15]],[[33,15]],[[31,15]],[[32,15]],[[33,15]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[52,52],[54,54],[28,28],[29,29],[30,30],[34,34],[52,2],[54,2],[28,2],[29,2],[30,2],[34,2],[31,2],[32,2],[33,2],[52,2],[54,2],[28,2],[29,2],[30,2],[34,2],[31,2],[32,2],[33,2],[31,9],[32,10],[33,11],[34,2],[31,14],[32,14],[33,14],[34,2],[31,2],[32,2],[33,2],[34,53],[31,53],[32,53],[33,53],[34,53],[31,53],[32,53],[33,53],[34,53],[31,53],[32,53],[33,53],[[34,34,53],34],[[31,31,53],31],[[32,32,53],32],[[33,33,53],33],[[32,32,32],54],[[32,32,32],30],[[32,32,32],54],[[32,32,32],30],[[32,32,32],54],[[32,32,32],30],[[32,32,32],54],[[32,32,32],30],0,0,[[31,31],31],[[32,32],32],[[33,33],33],[31,53],[32,53],[33,53],[[31,31],31],[[32,32],32],[[33,33],33],[31,53],[32,53],[33,53],[[52,52]],[[52,29]],[[54,54]],[[54,30]],[[28,28]],[[28,31]],[[28,53]],[[29,52]],[[29,29]],[[29,53]],[[29,32]],[[30,30]],[[30,53]],[[30,33]],[[30,54]],[[34,34],34],[[34,32]],[[34,53],34],[[31,31],31],[[31,53],31],[[32,32],32],[[32,53],32],[[33,53],33],[[33,33],33],[[31,31,31],31],[[32,32,32],32],[[33,33,33],33],[[28,28],5],[[28,53],5],[[29,29],5],[[29,53],5],[[30,30],5],[[30,53],5],[[34,34],5],[[31,31],5],[[31,53],5],[[32,32],5],[[32,53],5],[[33,53],5],[[33,33],5],[[28,28],28],[[29,29],29],[[30,30],30],[[34,34],34],[[28,53],28],[[29,53],29],[[30,53],30],[[28,31],31],[[29,32],32],[[34,32],32],[[30,33],33],[28],[29],[30],[34,34],[31,31],[32,32],[33,33],[[53,53],31],[[53,53,53],32],[[53,53,53,53],33],[34,34],[31,31],[32,32],[33,33],[31,31],[32,32],[33,33],[[53,53,53,53,53,53],30],[[53,53,53,53,53,53],30],[[53,53,53,53,53,53],30],[31,31],[[31,31],53],[[53,53,53],30],[[53,53,53],30],[[53,53,53],30],[[53,53,53],30],[[53,53,53,53],30],[[53,53,53,53],30],[[53,53,53,53],30],[[31,53],31],[[32,53],32],[[33,53],33],[-1,52,50],[-1,54,50],[-1,28,50],[-1,28,50],[-1,29,50],[-1,29,50],[-1,30,50],[-1,30,50],[-1,34,50],[-1,34,50],[-1,31,50],[-1,31,50],[-1,32,50],[-1,32,50],[-1,33,50],[-1,33,50],[[31,31],31],[[32,32],32],[[33,33],33],[[31,31],31],[[32,32],32],[[33,33],33],[[30,32],32],[31,31],[32,32],[33,33],[[31,31],31],[[32,32],32],[[33,33],33],[[31,31],31],[[32,32],32],[[33,33],33],[[31,53],31],[[31,31],31],[[32,32],32],[[32,53],32],[[33,53],33],[[33,33],33],[[31,31],5],[[31,53],5],[[32,32],5],[[32,53],5],[[33,53],5],[[33,33],5],[[31,31],31],[31,31],[32,32],[33,33],[[28,15],31],[[29,15],32],[[30,15],33],[[9,31,31],31],[[10,32,32],32],[[11,33,33],33],[31,31],[32,32],[33,33],[[34,34,53],34],[53,31],[53,32],[53,33],[[28,28]],[[29,29]],[[30,30]],[[34,34],34],[[31,53],31],[[31,31],31],[[32,53],32],[[32,32],32],[[33,53],33],[[33,33],33],[[28,28],5],[[29,29],5],[[30,30],5],[[31,31],5],[[31,53],5],[[32,32],5],[[32,53],5],[[33,53],5],[[33,33],5],[[28,28],28],[[29,29],29],[[30,30],30],[-1,28,50],[-1,28,50],[-1,29,50],[-1,29,50],[-1,30,50],[-1,30,50],[-1,34,50],[-1,34,50],[-1,31,50],[-1,31,50],[-1,32,50],[-1,32,50],[-1,33,50],[-1,33,50],[34,[[41,[53]]]],[31,[[41,[53]]]],[32,[[41,[53]]]],[33,[[41,[53]]]],[34,[[5,[32,53]]]],[52,[[41,[53]]]],[54,[[41,[53]]]],[28,[[41,[53]]]],[29,[[41,[53]]]],[30,[[41,[53]]]],[52,[[41,[[41,[53]]]]]],[54,[[41,[[41,[53]]]]]],[28,[[41,[[41,[53]]]]]],[29,[[41,[[41,[53]]]]]],[30,[[41,[[41,[53]]]]]],[[34,1],[[5,[53,53,53]]]],[54,[[5,[32,34,32]]]],[30,[[5,[32,34,32]]]],[34,32],[[52,31],31],[[29,31],31],[[54,32],32],[[30,32],32],[[52,31],31],[[29,31],31],[[54,32],32],[[30,32],32],0,0,[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[32,31],[33,32],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[31,[[51,[31]]]],[32,[[51,[32]]]],[33,[[51,[33]]]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,0,0,[[52,[49,[53]]],5],[[54,[49,[53]]],5],[[28,[49,[53]]],5],[[29,[49,[53]]],5],[[30,[49,[53]]],5],[[34,[49,[53]]],5],[[31,[49,[53]]],5],[[32,[49,[53]]],5],[[33,[49,[53]]],5],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],0,0,0,0,0,0,0,[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[31,31],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[31,31],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[34,32],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],0,0,0,0,0,0,0,[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[31,31],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[31,31],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[31,32],[32,32],[33,32],[33,33],[31,33],[32,33],[33,33],[31,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],0,0,0,0,0,[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[33,32],[33,33],[33,33],[33,33],[33,33],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,31],[33,31],[33,32],[33,33],[33,33],[33,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],[32,32],[33,32],[33,33],[32,33],[33,33],[32,33],[33,33],[32,33],[33,33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[38,38],[39,39],[40,40],[[38,38],38],[[38,55],38],[[39,55],39],[[39,39],39],[[40,55],40],[[40,40],40],[[38,38],5],[[38,55],5],[[39,39],5],[[39,55],5],[[40,55],5],[[40,40],5],[38,31],[39,32],[40,33],[38,35],[39,36],[40,37],[38,[[41,[55]]]],[39,[[41,[55]]]],[40,[[41,[55]]]],[38,[[41,[55]]]],[39,[[41,[55]]]],[40,[[41,[55]]]],[38,42],[39,43],[40,44],[38,45],[39,46],[40,47],[38,16],[39,17],[39,18],[40,19],[[38,38]],[[38,55]],[[39,55]],[[39,39]],[[40,55]],[[40,40]],[[38,55]],[[38,38]],[[39,39]],[[39,55]],[[40,55]],[[40,40]],[[38,38]],[[38,55]],[[39,39]],[[39,55]],[[40,55]],[[40,40]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[38,38,38],38],[[39,39,39],39],[[40,40,40],40],[38,38],[39,39],[40,40],[[38,38],9],[[39,39],10],[[40,40],11],[[38,38],9],[[39,39],10],[[40,40],11],[[38,38],9],[[39,39],10],[[40,40],11],[[38,38],9],[[39,39],10],[[40,40],11],[[38,38],9],[[39,39],10],[[40,40],11],[[38,38],9],[[39,39],10],[[40,40],11],[[39,39],39],[[],38],[[],39],[[],40],[[38,38],55],[[39,39],55],[[40,40],55],[[38,55],38],[[38,38],38],[[39,55],39],[[39,39],39],[[40,55],40],[[40,40],40],[[38,38],5],[[38,55],5],[[39,39],5],[[39,55],5],[[40,55],5],[[40,40],5],[[38,38],55],[[39,39],55],[[40,40],55],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],2],[[39,39],2],[[40,40],2],[[38,55],39],[[39,55],40],[[38,3],4],[[38,3],4],[[39,3],4],[[39,3],4],[[40,3],4],[[40,3],4],[[[5,[55,55]]],38],[[[41,[55]]],38],[-1,-1,[]],[[[41,[55]]],39],[[[5,[38,55]]],39],[[[5,[55,55,55]]],39],[-1,-1,[]],[[[5,[38,55,55]]],40],[[[41,[55]]],40],[[[5,[38,38]]],40],[[[5,[39,55]]],40],[-1,-1,[]],[[[5,[55,55,55,55]]],40],[[[5,[55,39]]],40],[[[41,[55]]],38],[[[41,[55]]],39],[[[41,[55]]],40],[[[49,[55]]],38],[[[49,[55]]],39],[[[49,[55]]],40],[[38,-1],5,6],[[39,-1],5,6],[[40,-1],5,6],[[38,15]],[[39,15]],[[40,15]],[[38,15]],[[39,15]],[[40,15]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,14],[39,14],[40,14],[[55,55],38],[[55,55,55],39],[[55,55,55,55],40],[38,55],[39,55],[40,55],[[38,38],38],[[39,39],39],[[40,40],40],[38,55],[39,55],[40,55],[[38,38],38],[[39,39],39],[[40,40],40],[38,55],[39,55],[40,55],[[38,38],38],[[38,55],38],[[39,39],39],[[39,55],39],[[40,55],40],[[40,40],40],[[38,55],5],[[38,38],5],[[39,55],5],[[39,39],5],[[40,40],5],[[40,55],5],[38,38],[39,39],[40,40],[[55,55],38],[[55,55,55],39],[[55,55,55,55],40],[38],[39],[40],[38,38],[[38,38],55],[-1,38,50],[-1,38,50],[-1,39,50],[-1,39,50],[-1,40,50],[-1,40,50],[[38,38],38],[[38,55],38],[[39,55],39],[[39,39],39],[[40,55],40],[[40,40],40],[[38,38],5],[[38,55],5],[[39,39],5],[[39,55],5],[[40,40],5],[[40,55],5],[[38,38],38],[[9,38,38],38],[[10,39,39],39],[[11,40,40],40],[[38,56]],[[38,55]],[[38,57]],[[38,58]],[[38,59]],[[38,60]],[[38,14]],[[38,45]],[[38,38]],[[38,61]],[[39,58]],[[39,14]],[[39,59]],[[39,60]],[[39,57]],[[39,61]],[[39,39]],[[39,56]],[[39,55]],[[39,46]],[[40,47]],[[40,55]],[[40,14]],[[40,57]],[[40,56]],[[40,40]],[[40,60]],[[40,59]],[[40,61]],[[40,58]],[[38,57]],[[38,61]],[[38,58]],[[38,60]],[[38,59]],[[38,14]],[[38,45]],[[38,55]],[[38,56]],[[38,38]],[[39,60]],[[39,59]],[[39,58]],[[39,39]],[[39,14]],[[39,46]],[[39,57]],[[39,55]],[[39,61]],[[39,56]],[[40,61]],[[40,59]],[[40,58]],[[40,47]],[[40,60]],[[40,55]],[[40,56]],[[40,40]],[[40,57]],[[40,14]],[38,38],[39,39],[40,40],[55,38],[55,39],[55,40],[[38,55],38],[[38,38],38],[[39,55],39],[[39,39],39],[[40,55],40],[[40,40],40],[[38,55],5],[[38,38],5],[[39,55],5],[[39,39],5],[[40,40],5],[[40,55],5],[-1,38,50],[-1,38,50],[-1,39,50],[-1,39,50],[-1,40,50],[-1,40,50],[38,[[41,[55]]]],[39,[[41,[55]]]],[40,[[41,[55]]]],[39,38],[40,39],[35,[[7,[38]]]],[42,[[7,[38]]]],[-1,[[7,[-2]]],[],[]],[45,[[7,[38]]]],[-1,[[7,[-2]]],[],[]],[43,[[7,[39]]]],[36,[[7,[39]]]],[46,[[7,[39]]]],[-1,[[7,[-2]]],[],[]],[44,[[7,[40]]]],[47,[[7,[40]]]],[37,[[7,[40]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,[[38,[49,[55]]],5],[[39,[49,[55]]],5],[[40,[49,[55]]],5],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],0,0,0,[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[38,38],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[38,38],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],0,0,0,[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[38,38],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[38,38],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[38,39],[39,39],[40,39],[40,40],[38,40],[39,40],[40,40],[38,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],0,0,[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[40,39],[40,40],[40,40],[40,40],[40,40],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,38],[40,38],[40,39],[40,40],[40,40],[40,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],[39,39],[40,39],[40,40],[39,40],[40,40],[39,40],[40,40],[39,40],[40,40],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[35,35],[36,36],[37,37],[[35,57],35],[[35,35],35],[[36,57],36],[[36,36],36],[[37,57],37],[[37,37],37],[[35,57],5],[[35,35],5],[[36,36],5],[[36,57],5],[[37,57],5],[[37,37],5],[35,31],[36,32],[37,33],[35,38],[36,39],[37,40],[35,[[41,[57]]]],[36,[[41,[57]]]],[37,[[41,[57]]]],[35,[[41,[57]]]],[36,[[41,[57]]]],[37,[[41,[57]]]],[35,42],[36,43],[37,44],[35,45],[36,46],[37,47],[35,16],[36,17],[36,18],[37,19],[[35,57]],[[35,35]],[[36,57]],[[36,36]],[[37,57]],[[37,37]],[[35,35]],[[35,57]],[[36,57]],[[36,36]],[[37,57]],[[37,37]],[[35,35]],[[35,57]],[[36,57]],[[36,36]],[[37,57]],[[37,37]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[35,35,35],35],[[36,36,36],36],[[37,37,37],37],[35,35],[36,36],[37,37],[[35,35],9],[[36,36],10],[[37,37],11],[[35,35],9],[[36,36],10],[[37,37],11],[[35,35],9],[[36,36],10],[[37,37],11],[[35,35],9],[[36,36],10],[[37,37],11],[[35,35],9],[[36,36],10],[[37,37],11],[[35,35],9],[[36,36],10],[[37,37],11],[[36,36],36],[[],35],[[],36],[[],37],[[35,35],57],[[36,36],57],[[37,37],57],[[35,35],35],[[35,57],35],[[36,57],36],[[36,36],36],[[37,37],37],[[37,57],37],[[35,35],5],[[35,57],5],[[36,57],5],[[36,36],5],[[37,57],5],[[37,37],5],[[35,35],57],[[36,36],57],[[37,37],57],[[35,35],35],[[36,36],36],[[37,37],37],[[35,35],2],[[36,36],2],[[37,37],2],[[35,57],36],[[36,57],37],[[35,3],4],[[35,3],4],[[36,3],4],[[36,3],4],[[37,3],4],[[37,3],4],[-1,-1,[]],[[[41,[57]]],35],[[[5,[57,57]]],35],[38,35],[-1,-1,[]],[39,36],[[[5,[57,57,57]]],36],[[[41,[57]]],36],[[[5,[35,57]]],36],[40,37],[-1,-1,[]],[[[5,[57,57,57,57]]],37],[[[5,[35,57,57]]],37],[[[5,[35,35]]],37],[[[5,[36,57]]],37],[[[5,[57,36]]],37],[[[41,[57]]],37],[[[41,[57]]],35],[[[41,[57]]],36],[[[41,[57]]],37],[[[49,[57]]],35],[[[49,[57]]],36],[[[49,[57]]],37],[[35,-1],5,6],[[36,-1],5,6],[[37,-1],5,6],[[57,57],35],[[57,57,57],36],[[57,57,57,57],37],[[35,15]],[[36,15]],[[37,15]],[[35,15]],[[36,15]],[[37,15]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,14],[36,14],[37,14],[35,57],[36,57],[37,57],[[35,35],35],[[36,36],36],[[37,37],37],[35,57],[36,57],[37,57],[[35,35],35],[[36,36],36],[[37,37],37],[35,57],[36,57],[37,57],[[35,35],35],[[35,57],35],[[36,57],36],[[36,36],36],[[37,37],37],[[37,57],37],[[35,35],5],[[35,57],5],[[36,36],5],[[36,57],5],[[37,37],5],[[37,57],5],[35,35],[36,36],[37,37],[[57,57],35],[[57,57,57],36],[[57,57,57,57],37],[35],[36],[37],[35,35],[[35,35],57],[-1,35,50],[-1,35,50],[-1,36,50],[-1,36,50],[-1,37,50],[-1,37,50],[[35,35],35],[[35,57],35],[[36,36],36],[[36,57],36],[[37,57],37],[[37,37],37],[[35,57],5],[[35,35],5],[[36,57],5],[[36,36],5],[[37,37],5],[[37,57],5],[[35,35],35],[[9,35,35],35],[[10,36,36],36],[[11,37,37],37],[[35,61]],[[35,45]],[[35,38]],[[35,55]],[[35,58]],[[35,57]],[[35,56]],[[35,60]],[[35,59]],[[35,14]],[[36,60]],[[36,59]],[[36,61]],[[36,56]],[[36,39]],[[36,57]],[[36,14]],[[36,58]],[[36,55]],[[36,46]],[[37,60]],[[37,57]],[[37,56]],[[37,40]],[[37,59]],[[37,55]],[[37,47]],[[37,14]],[[37,61]],[[37,58]],[[35,61]],[[35,59]],[[35,56]],[[35,45]],[[35,55]],[[35,14]],[[35,38]],[[35,58]],[[35,60]],[[35,57]],[[36,14]],[[36,61]],[[36,60]],[[36,56]],[[36,59]],[[36,55]],[[36,46]],[[36,57]],[[36,58]],[[36,39]],[[37,40]],[[37,47]],[[37,61]],[[37,14]],[[37,60]],[[37,59]],[[37,55]],[[37,57]],[[37,58]],[[37,56]],[35,35],[36,36],[37,37],[57,35],[57,36],[57,37],[[35,57],35],[[35,35],35],[[36,57],36],[[36,36],36],[[37,57],37],[[37,37],37],[[35,57],5],[[35,35],5],[[36,57],5],[[36,36],5],[[37,37],5],[[37,57],5],[-1,35,50],[-1,35,50],[-1,36,50],[-1,36,50],[-1,37,50],[-1,37,50],[35,[[41,[57]]]],[36,[[41,[57]]]],[37,[[41,[57]]]],[36,35],[37,36],[-1,[[7,[-2]]],[],[]],[42,[[7,[35]]]],[43,[[7,[36]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[44,[[7,[37]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,[[35,[49,[57]]],5],[[36,[49,[57]]],5],[[37,[49,[57]]],5],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],0,0,0,[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[35,35],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[35,35],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],0,0,0,[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[35,35],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[35,35],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[35,36],[36,36],[37,36],[37,37],[35,37],[36,37],[37,37],[35,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],0,0,[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[37,36],[37,37],[37,37],[37,37],[37,37],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,35],[37,35],[37,36],[37,37],[37,37],[37,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],[36,36],[37,36],[37,37],[36,37],[37,37],[36,37],[37,37],[36,37],[37,37],0,0,0,0,0,0,0,0,0,[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],[-1,[],[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,45],45],[[45,14],45],[[46,14],46],[[46,46],46],[[47,14],47],[[47,47],47],[[45,45],5],[[45,14],5],[[46,46],5],[[46,14],5],[[47,47],5],[[47,14],5],[45,31],[46,32],[47,33],[45,35],[46,36],[47,37],[45,38],[46,39],[47,40],[45,[[41,[14]]]],[46,[[41,[14]]]],[47,[[41,[14]]]],[45,[[41,[14]]]],[46,[[41,[14]]]],[47,[[41,[14]]]],[45,42],[46,43],[47,44],[45,16],[46,17],[46,18],[47,19],[[45,14]],[[45,45]],[[46,14]],[[46,46]],[[47,14]],[[47,47]],[[45,45]],[[45,14]],[[46,46]],[[46,14]],[[47,47]],[[47,14]],[[45,45]],[[45,14]],[[46,14]],[[46,46]],[[47,14]],[[47,47]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[45,45,45],45],[[46,46,46],46],[[47,47,47],47],[45,45],[46,46],[47,47],[[45,45],9],[[46,46],10],[[47,47],11],[[45,45],9],[[46,46],10],[[47,47],11],[[45,45],9],[[46,46],10],[[47,47],11],[[45,45],9],[[46,46],10],[[47,47],11],[[45,45],9],[[46,46],10],[[47,47],11],[[45,45],9],[[46,46],10],[[47,47],11],[[46,46],46],[[],45],[[],46],[[],47],[[45,45],45],[[45,14],45],[[46,14],46],[[46,46],46],[[47,14],47],[[47,47],47],[[45,14],5],[[45,45],5],[[46,14],5],[[46,46],5],[[47,47],5],[[47,14],5],[[45,45],14],[[46,46],14],[[47,47],14],[[45,45],45],[[46,46],46],[[47,47],47],[[45,45],2],[[46,46],2],[[47,47],2],[[45,14],46],[[46,14],47],[[45,3],4],[[45,3],4],[[46,3],4],[[46,3],4],[[47,3],4],[[47,3],4],[-1,-1,[]],[[[41,[14]]],45],[[[5,[14,14]]],45],[[[41,[14]]],46],[[[5,[14,14,14]]],46],[[[5,[45,14]]],46],[-1,-1,[]],[-1,-1,[]],[[[5,[45,45]]],47],[[[41,[14]]],47],[[[5,[14,46]]],47],[[[5,[14,14,14,14]]],47],[[[5,[45,14,14]]],47],[[[5,[46,14]]],47],[[[41,[14]]],45],[[[41,[14]]],46],[[[41,[14]]],47],[[[49,[14]]],45],[[[49,[14]]],46],[[[49,[14]]],47],[[45,-1],5,6],[[46,-1],5,6],[[47,-1],5,6],[[45,15]],[[46,15]],[[47,15]],[[45,15]],[[46,15]],[[47,15]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,14],[46,14],[47,14],[[45,45],45],[[46,46],46],[[47,47],47],[45,14],[46,14],[47,14],[[45,45],45],[[46,46],46],[[47,47],47],[45,14],[46,14],[47,14],[[45,45],45],[[45,14],45],[[46,14],46],[[46,46],46],[[47,47],47],[[47,14],47],[[45,14],5],[[45,45],5],[[46,46],5],[[46,14],5],[[47,14],5],[[47,47],5],[[14,14],45],[[14,14,14],46],[[14,14,14,14],47],[45],[46],[47],[-1,45,50],[-1,45,50],[-1,46,50],[-1,46,50],[-1,47,50],[-1,47,50],[[45,14],45],[[45,45],45],[[46,14],46],[[46,46],46],[[47,47],47],[[47,14],47],[[45,14],5],[[45,45],5],[[46,46],5],[[46,14],5],[[47,14],5],[[47,47],5],[[9,45,45],45],[[10,46,46],46],[[11,47,47],47],[[45,60]],[[45,38]],[[45,55]],[[45,59]],[[45,61]],[[45,56]],[[45,45]],[[45,58]],[[45,57]],[[45,14]],[[46,56]],[[46,39]],[[46,57]],[[46,59]],[[46,60]],[[46,58]],[[46,46]],[[46,14]],[[46,61]],[[46,55]],[[47,55]],[[47,60]],[[47,40]],[[47,58]],[[47,59]],[[47,47]],[[47,56]],[[47,14]],[[47,61]],[[47,57]],[[45,58]],[[45,38]],[[45,14]],[[45,56]],[[45,61]],[[45,59]],[[45,45]],[[45,60]],[[45,57]],[[45,55]],[[46,61]],[[46,59]],[[46,56]],[[46,58]],[[46,55]],[[46,60]],[[46,39]],[[46,14]],[[46,46]],[[46,57]],[[47,47]],[[47,57]],[[47,55]],[[47,58]],[[47,61]],[[47,40]],[[47,14]],[[47,56]],[[47,60]],[[47,59]],[14,45],[14,46],[14,47],[[45,14],45],[[45,45],45],[[46,46],46],[[46,14],46],[[47,14],47],[[47,47],47],[[45,14],5],[[45,45],5],[[46,14],5],[[46,46],5],[[47,47],5],[[47,14],5],[-1,45,50],[-1,45,50],[-1,46,50],[-1,46,50],[-1,47,50],[-1,47,50],[45,[[41,[14]]]],[46,[[41,[14]]]],[47,[[41,[14]]]],[46,45],[47,46],[42,[[7,[45]]]],[35,[[7,[45]]]],[38,[[7,[45]]]],[-1,[[7,[-2]]],[],[]],[43,[[7,[46]]]],[36,[[7,[46]]]],[-1,[[7,[-2]]],[],[]],[39,[[7,[46]]]],[37,[[7,[47]]]],[-1,[[7,[-2]]],[],[]],[44,[[7,[47]]]],[40,[[7,[47]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[14,14],45],[[14,14,14],46],[[14,14,14,14],47],0,[[45,[49,[14]]],5],[[46,[49,[14]]],5],[[47,[49,[14]]],5],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],0,0,0,[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[45,45],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[45,45],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],0,0,0,[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[45,45],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[45,45],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[45,46],[46,46],[47,46],[47,47],[45,47],[46,47],[47,47],[45,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],0,0,[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[47,46],[47,47],[47,47],[47,47],[47,47],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,45],[47,45],[47,46],[47,47],[47,47],[47,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],[46,46],[47,46],[47,47],[46,47],[47,47],[46,47],[47,47],[46,47],[47,47],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[42,58],42],[[42,42],42],[[43,58],43],[[43,43],43],[[44,44],44],[[44,58],44],[[42,58],5],[[42,42],5],[[43,43],5],[[43,58],5],[[44,58],5],[[44,44],5],[42,31],[43,32],[44,33],[42,35],[43,36],[44,37],[42,38],[43,39],[44,40],[42,[[41,[58]]]],[43,[[41,[58]]]],[44,[[41,[58]]]],[42,[[41,[58]]]],[43,[[41,[58]]]],[44,[[41,[58]]]],[42,45],[43,46],[44,47],[42,16],[43,17],[43,18],[44,19],[[42,42]],[[42,58]],[[43,43]],[[43,58]],[[44,58]],[[44,44]],[[42,42]],[[42,58]],[[43,43]],[[43,58]],[[44,44]],[[44,58]],[[42,42]],[[42,58]],[[43,43]],[[43,58]],[[44,44]],[[44,58]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[42,42,42],42],[[43,43,43],43],[[44,44,44],44],[42,42],[43,43],[44,44],[[42,42],9],[[43,43],10],[[44,44],11],[[42,42],9],[[43,43],10],[[44,44],11],[[42,42],9],[[43,43],10],[[44,44],11],[[42,42],9],[[43,43],10],[[44,44],11],[[42,42],9],[[43,43],10],[[44,44],11],[[42,42],9],[[43,43],10],[[44,44],11],[[43,43],43],[[],42],[[],43],[[],44],[[42,58],42],[[42,42],42],[[43,43],43],[[43,58],43],[[44,44],44],[[44,58],44],[[42,58],5],[[42,42],5],[[43,43],5],[[43,58],5],[[44,58],5],[[44,44],5],[[42,42],58],[[43,43],58],[[44,44],58],[[42,42],42],[[43,43],43],[[44,44],44],[[42,42],2],[[43,43],2],[[44,44],2],[[42,58],43],[[43,58],44],[[42,3],4],[[42,3],4],[[43,3],4],[[43,3],4],[[44,3],4],[[44,3],4],[-1,-1,[]],[[[41,[58]]],42],[[[5,[58,58]]],42],[45,42],[[[5,[58,58,58]]],43],[[[5,[42,58]]],43],[46,43],[-1,-1,[]],[[[41,[58]]],43],[[[5,[58,43]]],44],[[[41,[58]]],44],[-1,-1,[]],[47,44],[[[5,[42,42]]],44],[[[5,[58,58,58,58]]],44],[[[5,[42,58,58]]],44],[[[5,[43,58]]],44],[[[41,[58]]],42],[[[41,[58]]],43],[[[41,[58]]],44],[[[49,[58]]],42],[[[49,[58]]],43],[[[49,[58]]],44],[[42,-1],5,6],[[43,-1],5,6],[[44,-1],5,6],[[42,15]],[[43,15]],[[44,15]],[[42,15]],[[43,15]],[[44,15]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,58],[43,58],[44,58],[[42,42],42],[[43,43],43],[[44,44],44],[42,58],[43,58],[44,58],[[42,42],42],[[43,43],43],[[44,44],44],[42,58],[43,58],[44,58],[[42,42],42],[[42,58],42],[[43,43],43],[[43,58],43],[[44,58],44],[[44,44],44],[[42,42],5],[[42,58],5],[[43,58],5],[[43,43],5],[[44,44],5],[[44,58],5],[[58,58],42],[[58,58,58],43],[[58,58,58,58],44],[42],[43],[44],[-1,42,50],[-1,42,50],[-1,43,50],[-1,43,50],[-1,44,50],[-1,44,50],[[42,58],42],[[42,42],42],[[43,58],43],[[43,43],43],[[44,58],44],[[44,44],44],[[42,42],5],[[42,58],5],[[43,43],5],[[43,58],5],[[44,44],5],[[44,58],5],[[9,42,42],42],[[10,43,43],43],[[11,44,44],44],[[42,38]],[[42,61]],[[42,56]],[[42,57]],[[42,14]],[[42,45]],[[42,55]],[[42,59]],[[42,60]],[[42,58]],[[43,39]],[[43,57]],[[43,61]],[[43,55]],[[43,46]],[[43,58]],[[43,14]],[[43,59]],[[43,60]],[[43,56]],[[44,40]],[[44,58]],[[44,56]],[[44,57]],[[44,61]],[[44,14]],[[44,60]],[[44,55]],[[44,47]],[[44,59]],[[42,45]],[[42,38]],[[42,56]],[[42,60]],[[42,14]],[[42,57]],[[42,58]],[[42,55]],[[42,61]],[[42,59]],[[43,58]],[[43,57]],[[43,60]],[[43,14]],[[43,46]],[[43,59]],[[43,55]],[[43,61]],[[43,56]],[[43,39]],[[44,14]],[[44,47]],[[44,57]],[[44,59]],[[44,61]],[[44,58]],[[44,60]],[[44,56]],[[44,55]],[[44,40]],[58,42],[58,43],[58,44],[[42,58],42],[[42,42],42],[[43,58],43],[[43,43],43],[[44,58],44],[[44,44],44],[[42,42],5],[[42,58],5],[[43,43],5],[[43,58],5],[[44,58],5],[[44,44],5],[-1,42,50],[-1,42,50],[-1,43,50],[-1,43,50],[-1,44,50],[-1,44,50],[42,[[41,[58]]]],[43,[[41,[58]]]],[44,[[41,[58]]]],[43,42],[44,43],[35,[[7,[42]]]],[-1,[[7,[-2]]],[],[]],[36,[[7,[43]]]],[-1,[[7,[-2]]],[],[]],[37,[[7,[44]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[58,58],42],[[58,58,58],43],[[58,58,58,58],44],0,[[42,[49,[58]]],5],[[43,[49,[58]]],5],[[44,[49,[58]]],5],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],0,0,0,[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[42,42],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[42,42],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],0,0,0,[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[42,42],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[42,42],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[42,43],[43,43],[44,43],[44,44],[42,44],[43,44],[44,44],[42,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],0,0,[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[44,43],[44,44],[44,44],[44,44],[44,44],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,42],[44,42],[44,43],[44,44],[44,44],[44,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44],[43,43],[44,43],[44,44],[43,44],[44,44],[43,44],[44,44],[43,44],[44,44]],"c":[],"p":[[4,"EulerRot",0],[15,"bool"],[3,"Formatter",6925],[6,"Result",6925],[15,"tuple"],[8,"Hasher",6926],[4,"Result",6927],[3,"TypeId",6928],[3,"BVec2",30],[3,"BVec3",30],[3,"BVec4",30],[3,"BVec3A",30],[3,"BVec4A",30],[15,"u32"],[15,"usize"],[3,"Vec2",189],[3,"Vec3",189],[3,"Vec3A",189],[3,"Vec4",189],[3,"Affine2",189],[15,"f32"],[3,"Affine3A",189],[3,"Mat3",189],[3,"Mat2",189],[3,"Mat3A",189],[3,"Mat4",189],[3,"Quat",189],[3,"DMat2",1792],[3,"DMat3",1792],[3,"DMat4",1792],[3,"DVec2",1792],[3,"DVec3",1792],[3,"DVec4",1792],[3,"DQuat",1792],[3,"I64Vec2",3924],[3,"I64Vec3",3924],[3,"I64Vec4",3924],[3,"IVec2",3066],[3,"IVec3",3066],[3,"IVec4",3066],[15,"array"],[3,"U64Vec2",6100],[3,"U64Vec3",6100],[3,"U64Vec4",6100],[3,"UVec2",5272],[3,"UVec3",5272],[3,"UVec4",5272],[3,"__m128",6929],[15,"slice"],[8,"Iterator",6930],[4,"Option",6931],[3,"DAffine2",1792],[15,"f64"],[3,"DAffine3",1792],[15,"i32"],[15,"i16"],[15,"i64"],[15,"u64"],[15,"u8"],[15,"u16"],[15,"i8"],[8,"Vec3Swizzles",4779],[8,"Vec4Swizzles",4779],[8,"Vec2Swizzles",4779]],"b":[[115,"impl-Display-for-BVec2"],[116,"impl-Debug-for-BVec2"],[117,"impl-Debug-for-BVec3"],[118,"impl-Display-for-BVec3"],[119,"impl-Debug-for-BVec4"],[120,"impl-Display-for-BVec4"],[121,"impl-Debug-for-BVec3A"],[122,"impl-Display-for-BVec3A"],[123,"impl-Display-for-BVec4A"],[124,"impl-Debug-for-BVec4A"],[296,"impl-Add-for-Vec2"],[297,"impl-Add%3Cf32%3E-for-Vec2"],[298,"impl-Add%3Cf32%3E-for-Vec3"],[299,"impl-Add-for-Vec3"],[304,"impl-Add%3Cf32%3E-for-Vec3A"],[305,"impl-Add-for-Vec3A"],[306,"impl-Add-for-Vec4"],[307,"impl-Add%3Cf32%3E-for-Vec4"],[309,"impl-AddAssign%3Cf32%3E-for-Vec2"],[310,"impl-AddAssign-for-Vec2"],[311,"impl-AddAssign%3Cf32%3E-for-Vec3"],[312,"impl-AddAssign-for-Vec3"],[316,"impl-AddAssign%3Cf32%3E-for-Vec3A"],[317,"impl-AddAssign-for-Vec3A"],[318,"impl-AddAssign-for-Vec4"],[319,"impl-AddAssign%3Cf32%3E-for-Vec4"],[501,"impl-Div-for-Vec2"],[502,"impl-Div%3Cf32%3E-for-Vec2"],[503,"impl-Div%3Cf32%3E-for-Vec3"],[504,"impl-Div-for-Vec3"],[506,"impl-Div-for-Vec3A"],[507,"impl-Div%3Cf32%3E-for-Vec3A"],[508,"impl-Div%3Cf32%3E-for-Vec4"],[509,"impl-Div-for-Vec4"],[510,"impl-DivAssign-for-Vec2"],[511,"impl-DivAssign%3Cf32%3E-for-Vec2"],[512,"impl-DivAssign-for-Vec3"],[513,"impl-DivAssign%3Cf32%3E-for-Vec3"],[514,"impl-DivAssign-for-Vec3A"],[515,"impl-DivAssign%3Cf32%3E-for-Vec3A"],[516,"impl-DivAssign-for-Vec4"],[517,"impl-DivAssign%3Cf32%3E-for-Vec4"],[549,"impl-Debug-for-Affine2"],[550,"impl-Display-for-Affine2"],[551,"impl-Display-for-Affine3A"],[552,"impl-Debug-for-Affine3A"],[553,"impl-Debug-for-Mat3"],[554,"impl-Display-for-Mat3"],[555,"impl-Display-for-Vec2"],[556,"impl-Debug-for-Vec2"],[557,"impl-Display-for-Vec3"],[558,"impl-Debug-for-Vec3"],[559,"impl-Debug-for-Mat2"],[560,"impl-Display-for-Mat2"],[561,"impl-Display-for-Mat3A"],[562,"impl-Debug-for-Mat3A"],[563,"impl-Debug-for-Mat4"],[564,"impl-Display-for-Mat4"],[565,"impl-Display-for-Quat"],[566,"impl-Debug-for-Quat"],[567,"impl-Display-for-Vec3A"],[568,"impl-Debug-for-Vec3A"],[569,"impl-Display-for-Vec4"],[570,"impl-Debug-for-Vec4"],[577,"impl-From%3CAffine2%3E-for-Mat3"],[578,"impl-From%3CMat3A%3E-for-Mat3"],[581,"impl-From%3C%5Bf32;+2%5D%3E-for-Vec2"],[582,"impl-From%3C(f32,+f32)%3E-for-Vec2"],[583,"impl-From%3CVec3A%3E-for-Vec3"],[585,"impl-From%3C(Vec2,+f32)%3E-for-Vec3"],[586,"impl-From%3C(f32,+f32,+f32)%3E-for-Vec3"],[587,"impl-From%3C%5Bf32;+3%5D%3E-for-Vec3"],[589,"impl-From%3CMat3%3E-for-Mat3A"],[591,"impl-From%3CAffine2%3E-for-Mat3A"],[595,"impl-From%3C(f32,+f32,+f32)%3E-for-Vec3A"],[596,"impl-From%3C(Vec2,+f32)%3E-for-Vec3A"],[597,"impl-From%3CVec3%3E-for-Vec3A"],[598,"impl-From%3C%5Bf32;+3%5D%3E-for-Vec3A"],[600,"impl-From%3C__m128%3E-for-Vec3A"],[601,"impl-From%3CVec4%3E-for-Vec3A"],[602,"impl-From%3C(Vec2,+f32,+f32)%3E-for-Vec4"],[604,"impl-From%3C(Vec3A,+f32)%3E-for-Vec4"],[605,"impl-From%3C__m128%3E-for-Vec4"],[606,"impl-From%3C(Vec3,+f32)%3E-for-Vec4"],[607,"impl-From%3C(f32,+f32,+f32,+f32)%3E-for-Vec4"],[608,"impl-From%3C(Vec2,+Vec2)%3E-for-Vec4"],[609,"impl-From%3CQuat%3E-for-Vec4"],[610,"impl-From%3C(f32,+Vec3A)%3E-for-Vec4"],[611,"impl-From%3C%5Bf32;+4%5D%3E-for-Vec4"],[612,"impl-From%3C(f32,+Vec3)%3E-for-Vec4"],[840,"impl-Mul%3CMat3%3E-for-Affine2"],[841,"impl-Mul%3CMat3A%3E-for-Affine2"],[842,"impl-Mul-for-Affine2"],[843,"impl-Mul%3CMat4%3E-for-Affine3A"],[844,"impl-Mul-for-Affine3A"],[845,"impl-Mul%3CVec3A%3E-for-Mat3"],[846,"impl-Mul%3CVec3%3E-for-Mat3"],[847,"impl-Mul%3Cf32%3E-for-Mat3"],[848,"impl-Mul-for-Mat3"],[849,"impl-Mul%3CAffine2%3E-for-Mat3"],[850,"impl-Mul-for-Vec2"],[851,"impl-Mul%3Cf32%3E-for-Vec2"],[852,"impl-Mul%3Cf32%3E-for-Vec3"],[853,"impl-Mul-for-Vec3"],[854,"impl-Mul-for-Mat2"],[855,"impl-Mul%3CVec2%3E-for-Mat2"],[856,"impl-Mul%3Cf32%3E-for-Mat2"],[857,"impl-Mul%3CVec3%3E-for-Mat3A"],[858,"impl-Mul%3Cf32%3E-for-Mat3A"],[859,"impl-Mul-for-Mat3A"],[860,"impl-Mul%3CVec3A%3E-for-Mat3A"],[861,"impl-Mul%3CAffine2%3E-for-Mat3A"],[862,"impl-Mul%3Cf32%3E-for-Mat4"],[863,"impl-Mul%3CVec4%3E-for-Mat4"],[864,"impl-Mul-for-Mat4"],[865,"impl-Mul%3CAffine3A%3E-for-Mat4"],[866,"impl-Mul%3Cf32%3E-for-Quat"],[867,"impl-Mul-for-Quat"],[868,"impl-Mul%3CVec3%3E-for-Quat"],[869,"impl-Mul%3CVec3A%3E-for-Quat"],[870,"impl-Mul-for-Vec3A"],[871,"impl-Mul%3Cf32%3E-for-Vec3A"],[872,"impl-Mul-for-Vec4"],[873,"impl-Mul%3Cf32%3E-for-Vec4"],[878,"impl-MulAssign-for-Mat3"],[879,"impl-MulAssign%3Cf32%3E-for-Mat3"],[880,"impl-MulAssign-for-Vec2"],[881,"impl-MulAssign%3Cf32%3E-for-Vec2"],[882,"impl-MulAssign-for-Vec3"],[883,"impl-MulAssign%3Cf32%3E-for-Vec3"],[884,"impl-MulAssign%3Cf32%3E-for-Mat2"],[885,"impl-MulAssign-for-Mat2"],[886,"impl-MulAssign-for-Mat3A"],[887,"impl-MulAssign%3Cf32%3E-for-Mat3A"],[888,"impl-MulAssign-for-Mat4"],[889,"impl-MulAssign%3Cf32%3E-for-Mat4"],[891,"impl-MulAssign%3Cf32%3E-for-Vec3A"],[892,"impl-MulAssign-for-Vec3A"],[893,"impl-MulAssign%3Cf32%3E-for-Vec4"],[894,"impl-MulAssign-for-Vec4"],[952,"impl-Product%3C%26Mat3%3E-for-Mat3"],[953,"impl-Product-for-Mat3"],[954,"impl-Product-for-Vec2"],[955,"impl-Product%3C%26Vec2%3E-for-Vec2"],[956,"impl-Product%3C%26Vec3%3E-for-Vec3"],[957,"impl-Product-for-Vec3"],[958,"impl-Product-for-Mat2"],[959,"impl-Product%3C%26Mat2%3E-for-Mat2"],[960,"impl-Product-for-Mat3A"],[961,"impl-Product%3C%26Mat3A%3E-for-Mat3A"],[962,"impl-Product-for-Mat4"],[963,"impl-Product%3C%26Mat4%3E-for-Mat4"],[964,"impl-Product-for-Quat"],[965,"impl-Product%3C%26Quat%3E-for-Quat"],[966,"impl-Product%3C%26Vec3A%3E-for-Vec3A"],[967,"impl-Product-for-Vec3A"],[968,"impl-Product-for-Vec4"],[969,"impl-Product%3C%26Vec4%3E-for-Vec4"],[992,"impl-Rem-for-Vec2"],[993,"impl-Rem%3Cf32%3E-for-Vec2"],[994,"impl-Rem%3Cf32%3E-for-Vec3"],[995,"impl-Rem-for-Vec3"],[996,"impl-Rem%3Cf32%3E-for-Vec3A"],[997,"impl-Rem-for-Vec3A"],[998,"impl-Rem%3Cf32%3E-for-Vec4"],[999,"impl-Rem-for-Vec4"],[1000,"impl-RemAssign%3Cf32%3E-for-Vec2"],[1001,"impl-RemAssign-for-Vec2"],[1002,"impl-RemAssign-for-Vec3"],[1003,"impl-RemAssign%3Cf32%3E-for-Vec3"],[1004,"impl-RemAssign%3Cf32%3E-for-Vec3A"],[1005,"impl-RemAssign-for-Vec3A"],[1006,"impl-RemAssign%3Cf32%3E-for-Vec4"],[1007,"impl-RemAssign-for-Vec4"],[1031,"impl-Sub%3Cf32%3E-for-Vec2"],[1032,"impl-Sub-for-Vec2"],[1033,"impl-Sub-for-Vec3"],[1034,"impl-Sub%3Cf32%3E-for-Vec3"],[1039,"impl-Sub-for-Vec3A"],[1040,"impl-Sub%3Cf32%3E-for-Vec3A"],[1041,"impl-Sub%3Cf32%3E-for-Vec4"],[1042,"impl-Sub-for-Vec4"],[1044,"impl-SubAssign%3Cf32%3E-for-Vec2"],[1045,"impl-SubAssign-for-Vec2"],[1046,"impl-SubAssign%3Cf32%3E-for-Vec3"],[1047,"impl-SubAssign-for-Vec3"],[1051,"impl-SubAssign-for-Vec3A"],[1052,"impl-SubAssign%3Cf32%3E-for-Vec3A"],[1053,"impl-SubAssign-for-Vec4"],[1054,"impl-SubAssign%3Cf32%3E-for-Vec4"],[1059,"impl-Sum%3C%26Mat3%3E-for-Mat3"],[1060,"impl-Sum-for-Mat3"],[1061,"impl-Sum%3C%26Vec2%3E-for-Vec2"],[1062,"impl-Sum-for-Vec2"],[1063,"impl-Sum-for-Vec3"],[1064,"impl-Sum%3C%26Vec3%3E-for-Vec3"],[1065,"impl-Sum%3C%26Mat2%3E-for-Mat2"],[1066,"impl-Sum-for-Mat2"],[1067,"impl-Sum-for-Mat3A"],[1068,"impl-Sum%3C%26Mat3A%3E-for-Mat3A"],[1069,"impl-Sum%3C%26Mat4%3E-for-Mat4"],[1070,"impl-Sum-for-Mat4"],[1071,"impl-Sum-for-Quat"],[1072,"impl-Sum%3C%26Quat%3E-for-Quat"],[1073,"impl-Sum%3C%26Vec3A%3E-for-Vec3A"],[1074,"impl-Sum-for-Vec3A"],[1075,"impl-Sum%3C%26Vec4%3E-for-Vec4"],[1076,"impl-Sum-for-Vec4"],[1879,"impl-Add%3Cf64%3E-for-DVec2"],[1880,"impl-Add-for-DVec2"],[1881,"impl-Add%3Cf64%3E-for-DVec3"],[1882,"impl-Add-for-DVec3"],[1883,"impl-Add-for-DVec4"],[1884,"impl-Add%3Cf64%3E-for-DVec4"],[1888,"impl-AddAssign%3Cf64%3E-for-DVec2"],[1889,"impl-AddAssign-for-DVec2"],[1890,"impl-AddAssign%3Cf64%3E-for-DVec3"],[1891,"impl-AddAssign-for-DVec3"],[1892,"impl-AddAssign%3Cf64%3E-for-DVec4"],[1893,"impl-AddAssign-for-DVec4"],[2030,"impl-Div%3Cf64%3E-for-DVec2"],[2031,"impl-Div-for-DVec2"],[2032,"impl-Div-for-DVec3"],[2033,"impl-Div%3Cf64%3E-for-DVec3"],[2034,"impl-Div%3Cf64%3E-for-DVec4"],[2035,"impl-Div-for-DVec4"],[2036,"impl-DivAssign%3Cf64%3E-for-DVec2"],[2037,"impl-DivAssign-for-DVec2"],[2038,"impl-DivAssign-for-DVec3"],[2039,"impl-DivAssign%3Cf64%3E-for-DVec3"],[2040,"impl-DivAssign-for-DVec4"],[2041,"impl-DivAssign%3Cf64%3E-for-DVec4"],[2073,"impl-Display-for-DAffine2"],[2074,"impl-Debug-for-DAffine2"],[2075,"impl-Debug-for-DAffine3"],[2076,"impl-Display-for-DAffine3"],[2077,"impl-Display-for-DMat2"],[2078,"impl-Debug-for-DMat2"],[2079,"impl-Debug-for-DMat3"],[2080,"impl-Display-for-DMat3"],[2081,"impl-Display-for-DMat4"],[2082,"impl-Debug-for-DMat4"],[2083,"impl-Display-for-DQuat"],[2084,"impl-Debug-for-DQuat"],[2085,"impl-Debug-for-DVec2"],[2086,"impl-Display-for-DVec2"],[2087,"impl-Display-for-DVec3"],[2088,"impl-Debug-for-DVec3"],[2089,"impl-Display-for-DVec4"],[2090,"impl-Debug-for-DVec4"],[2102,"impl-From%3C%5Bf64;+2%5D%3E-for-DVec2"],[2103,"impl-From%3CVec2%3E-for-DVec2"],[2104,"impl-From%3CUVec2%3E-for-DVec2"],[2105,"impl-From%3C(f64,+f64)%3E-for-DVec2"],[2107,"impl-From%3CIVec2%3E-for-DVec2"],[2108,"impl-From%3CVec3%3E-for-DVec3"],[2110,"impl-From%3CIVec3%3E-for-DVec3"],[2111,"impl-From%3C%5Bf64;+3%5D%3E-for-DVec3"],[2112,"impl-From%3C(DVec2,+f64)%3E-for-DVec3"],[2113,"impl-From%3CUVec3%3E-for-DVec3"],[2114,"impl-From%3C(f64,+f64,+f64)%3E-for-DVec3"],[2115,"impl-From%3CUVec4%3E-for-DVec4"],[2116,"impl-From%3CDQuat%3E-for-DVec4"],[2118,"impl-From%3C(f64,+f64,+f64,+f64)%3E-for-DVec4"],[2119,"impl-From%3CIVec4%3E-for-DVec4"],[2120,"impl-From%3C(DVec3,+f64)%3E-for-DVec4"],[2121,"impl-From%3C(DVec2,+DVec2)%3E-for-DVec4"],[2122,"impl-From%3C(f64,+DVec3)%3E-for-DVec4"],[2123,"impl-From%3C%5Bf64;+4%5D%3E-for-DVec4"],[2124,"impl-From%3C(DVec2,+f64,+f64)%3E-for-DVec4"],[2125,"impl-From%3CVec4%3E-for-DVec4"],[2306,"impl-Mul-for-DAffine2"],[2307,"impl-Mul%3CDMat3%3E-for-DAffine2"],[2308,"impl-Mul-for-DAffine3"],[2309,"impl-Mul%3CDMat4%3E-for-DAffine3"],[2310,"impl-Mul-for-DMat2"],[2311,"impl-Mul%3CDVec2%3E-for-DMat2"],[2312,"impl-Mul%3Cf64%3E-for-DMat2"],[2313,"impl-Mul%3CDAffine2%3E-for-DMat3"],[2314,"impl-Mul-for-DMat3"],[2315,"impl-Mul%3Cf64%3E-for-DMat3"],[2316,"impl-Mul%3CDVec3%3E-for-DMat3"],[2317,"impl-Mul-for-DMat4"],[2318,"impl-Mul%3Cf64%3E-for-DMat4"],[2319,"impl-Mul%3CDVec4%3E-for-DMat4"],[2320,"impl-Mul%3CDAffine3%3E-for-DMat4"],[2321,"impl-Mul-for-DQuat"],[2322,"impl-Mul%3CDVec3%3E-for-DQuat"],[2323,"impl-Mul%3Cf64%3E-for-DQuat"],[2324,"impl-Mul-for-DVec2"],[2325,"impl-Mul%3Cf64%3E-for-DVec2"],[2326,"impl-Mul-for-DVec3"],[2327,"impl-Mul%3Cf64%3E-for-DVec3"],[2328,"impl-Mul%3Cf64%3E-for-DVec4"],[2329,"impl-Mul-for-DVec4"],[2333,"impl-MulAssign-for-DMat2"],[2334,"impl-MulAssign%3Cf64%3E-for-DMat2"],[2335,"impl-MulAssign-for-DMat3"],[2336,"impl-MulAssign%3Cf64%3E-for-DMat3"],[2337,"impl-MulAssign-for-DMat4"],[2338,"impl-MulAssign%3Cf64%3E-for-DMat4"],[2340,"impl-MulAssign-for-DVec2"],[2341,"impl-MulAssign%3Cf64%3E-for-DVec2"],[2342,"impl-MulAssign-for-DVec3"],[2343,"impl-MulAssign%3Cf64%3E-for-DVec3"],[2344,"impl-MulAssign%3Cf64%3E-for-DVec4"],[2345,"impl-MulAssign-for-DVec4"],[2391,"impl-Product-for-DMat2"],[2392,"impl-Product%3C%26DMat2%3E-for-DMat2"],[2393,"impl-Product-for-DMat3"],[2394,"impl-Product%3C%26DMat3%3E-for-DMat3"],[2395,"impl-Product-for-DMat4"],[2396,"impl-Product%3C%26DMat4%3E-for-DMat4"],[2397,"impl-Product-for-DQuat"],[2398,"impl-Product%3C%26DQuat%3E-for-DQuat"],[2399,"impl-Product%3C%26DVec2%3E-for-DVec2"],[2400,"impl-Product-for-DVec2"],[2401,"impl-Product%3C%26DVec3%3E-for-DVec3"],[2402,"impl-Product-for-DVec3"],[2403,"impl-Product%3C%26DVec4%3E-for-DVec4"],[2404,"impl-Product-for-DVec4"],[2421,"impl-Rem%3Cf64%3E-for-DVec2"],[2422,"impl-Rem-for-DVec2"],[2423,"impl-Rem-for-DVec3"],[2424,"impl-Rem%3Cf64%3E-for-DVec3"],[2425,"impl-Rem%3Cf64%3E-for-DVec4"],[2426,"impl-Rem-for-DVec4"],[2427,"impl-RemAssign-for-DVec2"],[2428,"impl-RemAssign%3Cf64%3E-for-DVec2"],[2429,"impl-RemAssign-for-DVec3"],[2430,"impl-RemAssign%3Cf64%3E-for-DVec3"],[2431,"impl-RemAssign%3Cf64%3E-for-DVec4"],[2432,"impl-RemAssign-for-DVec4"],[2454,"impl-Sub%3Cf64%3E-for-DVec2"],[2455,"impl-Sub-for-DVec2"],[2456,"impl-Sub%3Cf64%3E-for-DVec3"],[2457,"impl-Sub-for-DVec3"],[2458,"impl-Sub%3Cf64%3E-for-DVec4"],[2459,"impl-Sub-for-DVec4"],[2463,"impl-SubAssign-for-DVec2"],[2464,"impl-SubAssign%3Cf64%3E-for-DVec2"],[2465,"impl-SubAssign-for-DVec3"],[2466,"impl-SubAssign%3Cf64%3E-for-DVec3"],[2467,"impl-SubAssign%3Cf64%3E-for-DVec4"],[2468,"impl-SubAssign-for-DVec4"],[2472,"impl-Sum%3C%26DMat2%3E-for-DMat2"],[2473,"impl-Sum-for-DMat2"],[2474,"impl-Sum%3C%26DMat3%3E-for-DMat3"],[2475,"impl-Sum-for-DMat3"],[2476,"impl-Sum%3C%26DMat4%3E-for-DMat4"],[2477,"impl-Sum-for-DMat4"],[2478,"impl-Sum-for-DQuat"],[2479,"impl-Sum%3C%26DQuat%3E-for-DQuat"],[2480,"impl-Sum%3C%26DVec2%3E-for-DVec2"],[2481,"impl-Sum-for-DVec2"],[2482,"impl-Sum-for-DVec3"],[2483,"impl-Sum%3C%26DVec3%3E-for-DVec3"],[2484,"impl-Sum%3C%26DVec4%3E-for-DVec4"],[2485,"impl-Sum-for-DVec4"],[3108,"impl-Add-for-IVec2"],[3109,"impl-Add%3Ci32%3E-for-IVec2"],[3110,"impl-Add%3Ci32%3E-for-IVec3"],[3111,"impl-Add-for-IVec3"],[3112,"impl-Add%3Ci32%3E-for-IVec4"],[3113,"impl-Add-for-IVec4"],[3114,"impl-AddAssign-for-IVec2"],[3115,"impl-AddAssign%3Ci32%3E-for-IVec2"],[3116,"impl-AddAssign-for-IVec3"],[3117,"impl-AddAssign%3Ci32%3E-for-IVec3"],[3118,"impl-AddAssign%3Ci32%3E-for-IVec4"],[3119,"impl-AddAssign-for-IVec4"],[3142,"impl-BitAnd-for-IVec2"],[3143,"impl-BitAnd%3Ci32%3E-for-IVec2"],[3144,"impl-BitAnd%3Ci32%3E-for-IVec3"],[3145,"impl-BitAnd-for-IVec3"],[3146,"impl-BitAnd%3Ci32%3E-for-IVec4"],[3147,"impl-BitAnd-for-IVec4"],[3148,"impl-BitOr%3Ci32%3E-for-IVec2"],[3149,"impl-BitOr-for-IVec2"],[3150,"impl-BitOr-for-IVec3"],[3151,"impl-BitOr%3Ci32%3E-for-IVec3"],[3152,"impl-BitOr%3Ci32%3E-for-IVec4"],[3153,"impl-BitOr-for-IVec4"],[3154,"impl-BitXor-for-IVec2"],[3155,"impl-BitXor%3Ci32%3E-for-IVec2"],[3156,"impl-BitXor-for-IVec3"],[3157,"impl-BitXor%3Ci32%3E-for-IVec3"],[3158,"impl-BitXor%3Ci32%3E-for-IVec4"],[3159,"impl-BitXor-for-IVec4"],[3197,"impl-Div%3Ci32%3E-for-IVec2"],[3198,"impl-Div-for-IVec2"],[3199,"impl-Div%3Ci32%3E-for-IVec3"],[3200,"impl-Div-for-IVec3"],[3201,"impl-Div%3Ci32%3E-for-IVec4"],[3202,"impl-Div-for-IVec4"],[3203,"impl-DivAssign-for-IVec2"],[3204,"impl-DivAssign%3Ci32%3E-for-IVec2"],[3205,"impl-DivAssign-for-IVec3"],[3206,"impl-DivAssign%3Ci32%3E-for-IVec3"],[3207,"impl-DivAssign%3Ci32%3E-for-IVec4"],[3208,"impl-DivAssign-for-IVec4"],[3220,"impl-Debug-for-IVec2"],[3221,"impl-Display-for-IVec2"],[3222,"impl-Debug-for-IVec3"],[3223,"impl-Display-for-IVec3"],[3224,"impl-Display-for-IVec4"],[3225,"impl-Debug-for-IVec4"],[3226,"impl-From%3C(i32,+i32)%3E-for-IVec2"],[3227,"impl-From%3C%5Bi32;+2%5D%3E-for-IVec2"],[3229,"impl-From%3C%5Bi32;+3%5D%3E-for-IVec3"],[3230,"impl-From%3C(IVec2,+i32)%3E-for-IVec3"],[3231,"impl-From%3C(i32,+i32,+i32)%3E-for-IVec3"],[3233,"impl-From%3C(IVec2,+i32,+i32)%3E-for-IVec4"],[3234,"impl-From%3C%5Bi32;+4%5D%3E-for-IVec4"],[3235,"impl-From%3C(IVec2,+IVec2)%3E-for-IVec4"],[3236,"impl-From%3C(IVec3,+i32)%3E-for-IVec4"],[3238,"impl-From%3C(i32,+i32,+i32,+i32)%3E-for-IVec4"],[3239,"impl-From%3C(i32,+IVec3)%3E-for-IVec4"],[3279,"impl-Mul-for-IVec2"],[3280,"impl-Mul%3Ci32%3E-for-IVec2"],[3281,"impl-Mul-for-IVec3"],[3282,"impl-Mul%3Ci32%3E-for-IVec3"],[3283,"impl-Mul%3Ci32%3E-for-IVec4"],[3284,"impl-Mul-for-IVec4"],[3285,"impl-MulAssign%3Ci32%3E-for-IVec2"],[3286,"impl-MulAssign-for-IVec2"],[3287,"impl-MulAssign%3Ci32%3E-for-IVec3"],[3288,"impl-MulAssign-for-IVec3"],[3289,"impl-MulAssign-for-IVec4"],[3290,"impl-MulAssign%3Ci32%3E-for-IVec4"],[3302,"impl-Product-for-IVec2"],[3303,"impl-Product%3C%26IVec2%3E-for-IVec2"],[3304,"impl-Product%3C%26IVec3%3E-for-IVec3"],[3305,"impl-Product-for-IVec3"],[3306,"impl-Product-for-IVec4"],[3307,"impl-Product%3C%26IVec4%3E-for-IVec4"],[3308,"impl-Rem-for-IVec2"],[3309,"impl-Rem%3Ci32%3E-for-IVec2"],[3310,"impl-Rem%3Ci32%3E-for-IVec3"],[3311,"impl-Rem-for-IVec3"],[3312,"impl-Rem%3Ci32%3E-for-IVec4"],[3313,"impl-Rem-for-IVec4"],[3314,"impl-RemAssign-for-IVec2"],[3315,"impl-RemAssign%3Ci32%3E-for-IVec2"],[3316,"impl-RemAssign-for-IVec3"],[3317,"impl-RemAssign%3Ci32%3E-for-IVec3"],[3318,"impl-RemAssign-for-IVec4"],[3319,"impl-RemAssign%3Ci32%3E-for-IVec4"],[3324,"impl-Shl%3Ci16%3E-for-IVec2"],[3325,"impl-Shl%3Ci32%3E-for-IVec2"],[3326,"impl-Shl%3Ci64%3E-for-IVec2"],[3327,"impl-Shl%3Cu64%3E-for-IVec2"],[3328,"impl-Shl%3Cu8%3E-for-IVec2"],[3329,"impl-Shl%3Cu16%3E-for-IVec2"],[3330,"impl-Shl%3Cu32%3E-for-IVec2"],[3331,"impl-Shl%3CUVec2%3E-for-IVec2"],[3332,"impl-Shl-for-IVec2"],[3333,"impl-Shl%3Ci8%3E-for-IVec2"],[3334,"impl-Shl%3Cu64%3E-for-IVec3"],[3335,"impl-Shl%3Cu32%3E-for-IVec3"],[3336,"impl-Shl%3Cu8%3E-for-IVec3"],[3337,"impl-Shl%3Cu16%3E-for-IVec3"],[3338,"impl-Shl%3Ci64%3E-for-IVec3"],[3339,"impl-Shl%3Ci8%3E-for-IVec3"],[3340,"impl-Shl-for-IVec3"],[3341,"impl-Shl%3Ci16%3E-for-IVec3"],[3342,"impl-Shl%3Ci32%3E-for-IVec3"],[3343,"impl-Shl%3CUVec3%3E-for-IVec3"],[3344,"impl-Shl%3CUVec4%3E-for-IVec4"],[3345,"impl-Shl%3Ci32%3E-for-IVec4"],[3346,"impl-Shl%3Cu32%3E-for-IVec4"],[3347,"impl-Shl%3Ci64%3E-for-IVec4"],[3348,"impl-Shl%3Ci16%3E-for-IVec4"],[3349,"impl-Shl-for-IVec4"],[3350,"impl-Shl%3Cu16%3E-for-IVec4"],[3351,"impl-Shl%3Cu8%3E-for-IVec4"],[3352,"impl-Shl%3Ci8%3E-for-IVec4"],[3353,"impl-Shl%3Cu64%3E-for-IVec4"],[3354,"impl-Shr%3Ci64%3E-for-IVec2"],[3355,"impl-Shr%3Ci8%3E-for-IVec2"],[3356,"impl-Shr%3Cu64%3E-for-IVec2"],[3357,"impl-Shr%3Cu16%3E-for-IVec2"],[3358,"impl-Shr%3Cu8%3E-for-IVec2"],[3359,"impl-Shr%3Cu32%3E-for-IVec2"],[3360,"impl-Shr%3CUVec2%3E-for-IVec2"],[3361,"impl-Shr%3Ci32%3E-for-IVec2"],[3362,"impl-Shr%3Ci16%3E-for-IVec2"],[3363,"impl-Shr-for-IVec2"],[3364,"impl-Shr%3Cu16%3E-for-IVec3"],[3365,"impl-Shr%3Cu8%3E-for-IVec3"],[3366,"impl-Shr%3Cu64%3E-for-IVec3"],[3367,"impl-Shr-for-IVec3"],[3368,"impl-Shr%3Cu32%3E-for-IVec3"],[3369,"impl-Shr%3CUVec3%3E-for-IVec3"],[3370,"impl-Shr%3Ci64%3E-for-IVec3"],[3371,"impl-Shr%3Ci32%3E-for-IVec3"],[3372,"impl-Shr%3Ci8%3E-for-IVec3"],[3373,"impl-Shr%3Ci16%3E-for-IVec3"],[3374,"impl-Shr%3Ci8%3E-for-IVec4"],[3375,"impl-Shr%3Cu8%3E-for-IVec4"],[3376,"impl-Shr%3Cu64%3E-for-IVec4"],[3377,"impl-Shr%3CUVec4%3E-for-IVec4"],[3378,"impl-Shr%3Cu16%3E-for-IVec4"],[3379,"impl-Shr%3Ci32%3E-for-IVec4"],[3380,"impl-Shr%3Ci16%3E-for-IVec4"],[3381,"impl-Shr-for-IVec4"],[3382,"impl-Shr%3Ci64%3E-for-IVec4"],[3383,"impl-Shr%3Cu32%3E-for-IVec4"],[3390,"impl-Sub%3Ci32%3E-for-IVec2"],[3391,"impl-Sub-for-IVec2"],[3392,"impl-Sub%3Ci32%3E-for-IVec3"],[3393,"impl-Sub-for-IVec3"],[3394,"impl-Sub%3Ci32%3E-for-IVec4"],[3395,"impl-Sub-for-IVec4"],[3396,"impl-SubAssign%3Ci32%3E-for-IVec2"],[3397,"impl-SubAssign-for-IVec2"],[3398,"impl-SubAssign%3Ci32%3E-for-IVec3"],[3399,"impl-SubAssign-for-IVec3"],[3400,"impl-SubAssign-for-IVec4"],[3401,"impl-SubAssign%3Ci32%3E-for-IVec4"],[3402,"impl-Sum%3C%26IVec2%3E-for-IVec2"],[3403,"impl-Sum-for-IVec2"],[3404,"impl-Sum-for-IVec3"],[3405,"impl-Sum%3C%26IVec3%3E-for-IVec3"],[3406,"impl-Sum%3C%26IVec4%3E-for-IVec4"],[3407,"impl-Sum-for-IVec4"],[3413,"impl-TryFrom%3CI64Vec2%3E-for-IVec2"],[3414,"impl-TryFrom%3CU64Vec2%3E-for-IVec2"],[3416,"impl-TryFrom%3CUVec2%3E-for-IVec2"],[3418,"impl-TryFrom%3CU64Vec3%3E-for-IVec3"],[3419,"impl-TryFrom%3CI64Vec3%3E-for-IVec3"],[3420,"impl-TryFrom%3CUVec3%3E-for-IVec3"],[3422,"impl-TryFrom%3CU64Vec4%3E-for-IVec4"],[3423,"impl-TryFrom%3CUVec4%3E-for-IVec4"],[3424,"impl-TryFrom%3CI64Vec4%3E-for-IVec4"],[3966,"impl-Add%3Ci64%3E-for-I64Vec2"],[3967,"impl-Add-for-I64Vec2"],[3968,"impl-Add%3Ci64%3E-for-I64Vec3"],[3969,"impl-Add-for-I64Vec3"],[3970,"impl-Add%3Ci64%3E-for-I64Vec4"],[3971,"impl-Add-for-I64Vec4"],[3972,"impl-AddAssign%3Ci64%3E-for-I64Vec2"],[3973,"impl-AddAssign-for-I64Vec2"],[3974,"impl-AddAssign-for-I64Vec3"],[3975,"impl-AddAssign%3Ci64%3E-for-I64Vec3"],[3976,"impl-AddAssign%3Ci64%3E-for-I64Vec4"],[3977,"impl-AddAssign-for-I64Vec4"],[4000,"impl-BitAnd%3Ci64%3E-for-I64Vec2"],[4001,"impl-BitAnd-for-I64Vec2"],[4002,"impl-BitAnd%3Ci64%3E-for-I64Vec3"],[4003,"impl-BitAnd-for-I64Vec3"],[4004,"impl-BitAnd%3Ci64%3E-for-I64Vec4"],[4005,"impl-BitAnd-for-I64Vec4"],[4006,"impl-BitOr-for-I64Vec2"],[4007,"impl-BitOr%3Ci64%3E-for-I64Vec2"],[4008,"impl-BitOr%3Ci64%3E-for-I64Vec3"],[4009,"impl-BitOr-for-I64Vec3"],[4010,"impl-BitOr%3Ci64%3E-for-I64Vec4"],[4011,"impl-BitOr-for-I64Vec4"],[4012,"impl-BitXor-for-I64Vec2"],[4013,"impl-BitXor%3Ci64%3E-for-I64Vec2"],[4014,"impl-BitXor%3Ci64%3E-for-I64Vec3"],[4015,"impl-BitXor-for-I64Vec3"],[4016,"impl-BitXor%3Ci64%3E-for-I64Vec4"],[4017,"impl-BitXor-for-I64Vec4"],[4055,"impl-Div-for-I64Vec2"],[4056,"impl-Div%3Ci64%3E-for-I64Vec2"],[4057,"impl-Div%3Ci64%3E-for-I64Vec3"],[4058,"impl-Div-for-I64Vec3"],[4059,"impl-Div-for-I64Vec4"],[4060,"impl-Div%3Ci64%3E-for-I64Vec4"],[4061,"impl-DivAssign-for-I64Vec2"],[4062,"impl-DivAssign%3Ci64%3E-for-I64Vec2"],[4063,"impl-DivAssign%3Ci64%3E-for-I64Vec3"],[4064,"impl-DivAssign-for-I64Vec3"],[4065,"impl-DivAssign%3Ci64%3E-for-I64Vec4"],[4066,"impl-DivAssign-for-I64Vec4"],[4078,"impl-Debug-for-I64Vec2"],[4079,"impl-Display-for-I64Vec2"],[4080,"impl-Display-for-I64Vec3"],[4081,"impl-Debug-for-I64Vec3"],[4082,"impl-Display-for-I64Vec4"],[4083,"impl-Debug-for-I64Vec4"],[4085,"impl-From%3C%5Bi64;+2%5D%3E-for-I64Vec2"],[4086,"impl-From%3C(i64,+i64)%3E-for-I64Vec2"],[4087,"impl-From%3CIVec2%3E-for-I64Vec2"],[4089,"impl-From%3CIVec3%3E-for-I64Vec3"],[4090,"impl-From%3C(i64,+i64,+i64)%3E-for-I64Vec3"],[4091,"impl-From%3C%5Bi64;+3%5D%3E-for-I64Vec3"],[4092,"impl-From%3C(I64Vec2,+i64)%3E-for-I64Vec3"],[4093,"impl-From%3CIVec4%3E-for-I64Vec4"],[4095,"impl-From%3C(i64,+i64,+i64,+i64)%3E-for-I64Vec4"],[4096,"impl-From%3C(I64Vec2,+i64,+i64)%3E-for-I64Vec4"],[4097,"impl-From%3C(I64Vec2,+I64Vec2)%3E-for-I64Vec4"],[4098,"impl-From%3C(I64Vec3,+i64)%3E-for-I64Vec4"],[4099,"impl-From%3C(i64,+I64Vec3)%3E-for-I64Vec4"],[4100,"impl-From%3C%5Bi64;+4%5D%3E-for-I64Vec4"],[4140,"impl-Mul-for-I64Vec2"],[4141,"impl-Mul%3Ci64%3E-for-I64Vec2"],[4142,"impl-Mul%3Ci64%3E-for-I64Vec3"],[4143,"impl-Mul-for-I64Vec3"],[4144,"impl-Mul-for-I64Vec4"],[4145,"impl-Mul%3Ci64%3E-for-I64Vec4"],[4146,"impl-MulAssign-for-I64Vec2"],[4147,"impl-MulAssign%3Ci64%3E-for-I64Vec2"],[4148,"impl-MulAssign-for-I64Vec3"],[4149,"impl-MulAssign%3Ci64%3E-for-I64Vec3"],[4150,"impl-MulAssign-for-I64Vec4"],[4151,"impl-MulAssign%3Ci64%3E-for-I64Vec4"],[4163,"impl-Product%3C%26I64Vec2%3E-for-I64Vec2"],[4164,"impl-Product-for-I64Vec2"],[4165,"impl-Product%3C%26I64Vec3%3E-for-I64Vec3"],[4166,"impl-Product-for-I64Vec3"],[4167,"impl-Product-for-I64Vec4"],[4168,"impl-Product%3C%26I64Vec4%3E-for-I64Vec4"],[4169,"impl-Rem-for-I64Vec2"],[4170,"impl-Rem%3Ci64%3E-for-I64Vec2"],[4171,"impl-Rem-for-I64Vec3"],[4172,"impl-Rem%3Ci64%3E-for-I64Vec3"],[4173,"impl-Rem%3Ci64%3E-for-I64Vec4"],[4174,"impl-Rem-for-I64Vec4"],[4175,"impl-RemAssign%3Ci64%3E-for-I64Vec2"],[4176,"impl-RemAssign-for-I64Vec2"],[4177,"impl-RemAssign%3Ci64%3E-for-I64Vec3"],[4178,"impl-RemAssign-for-I64Vec3"],[4179,"impl-RemAssign-for-I64Vec4"],[4180,"impl-RemAssign%3Ci64%3E-for-I64Vec4"],[4185,"impl-Shl%3Ci8%3E-for-I64Vec2"],[4186,"impl-Shl%3CUVec2%3E-for-I64Vec2"],[4187,"impl-Shl%3CIVec2%3E-for-I64Vec2"],[4188,"impl-Shl%3Ci32%3E-for-I64Vec2"],[4189,"impl-Shl%3Cu64%3E-for-I64Vec2"],[4190,"impl-Shl%3Ci64%3E-for-I64Vec2"],[4191,"impl-Shl%3Ci16%3E-for-I64Vec2"],[4192,"impl-Shl%3Cu16%3E-for-I64Vec2"],[4193,"impl-Shl%3Cu8%3E-for-I64Vec2"],[4194,"impl-Shl%3Cu32%3E-for-I64Vec2"],[4195,"impl-Shl%3Cu16%3E-for-I64Vec3"],[4196,"impl-Shl%3Cu8%3E-for-I64Vec3"],[4197,"impl-Shl%3Ci8%3E-for-I64Vec3"],[4198,"impl-Shl%3Ci16%3E-for-I64Vec3"],[4199,"impl-Shl%3CIVec3%3E-for-I64Vec3"],[4200,"impl-Shl%3Ci64%3E-for-I64Vec3"],[4201,"impl-Shl%3Cu32%3E-for-I64Vec3"],[4202,"impl-Shl%3Cu64%3E-for-I64Vec3"],[4203,"impl-Shl%3Ci32%3E-for-I64Vec3"],[4204,"impl-Shl%3CUVec3%3E-for-I64Vec3"],[4205,"impl-Shl%3Cu16%3E-for-I64Vec4"],[4206,"impl-Shl%3Ci64%3E-for-I64Vec4"],[4207,"impl-Shl%3Ci16%3E-for-I64Vec4"],[4208,"impl-Shl%3CIVec4%3E-for-I64Vec4"],[4209,"impl-Shl%3Cu8%3E-for-I64Vec4"],[4210,"impl-Shl%3Ci32%3E-for-I64Vec4"],[4211,"impl-Shl%3CUVec4%3E-for-I64Vec4"],[4212,"impl-Shl%3Cu32%3E-for-I64Vec4"],[4213,"impl-Shl%3Ci8%3E-for-I64Vec4"],[4214,"impl-Shl%3Cu64%3E-for-I64Vec4"],[4215,"impl-Shr%3Ci8%3E-for-I64Vec2"],[4216,"impl-Shr%3Cu8%3E-for-I64Vec2"],[4217,"impl-Shr%3Ci16%3E-for-I64Vec2"],[4218,"impl-Shr%3CUVec2%3E-for-I64Vec2"],[4219,"impl-Shr%3Ci32%3E-for-I64Vec2"],[4220,"impl-Shr%3Cu32%3E-for-I64Vec2"],[4221,"impl-Shr%3CIVec2%3E-for-I64Vec2"],[4222,"impl-Shr%3Cu64%3E-for-I64Vec2"],[4223,"impl-Shr%3Cu16%3E-for-I64Vec2"],[4224,"impl-Shr%3Ci64%3E-for-I64Vec2"],[4225,"impl-Shr%3Cu32%3E-for-I64Vec3"],[4226,"impl-Shr%3Ci8%3E-for-I64Vec3"],[4227,"impl-Shr%3Cu16%3E-for-I64Vec3"],[4228,"impl-Shr%3Ci16%3E-for-I64Vec3"],[4229,"impl-Shr%3Cu8%3E-for-I64Vec3"],[4230,"impl-Shr%3Ci32%3E-for-I64Vec3"],[4231,"impl-Shr%3CUVec3%3E-for-I64Vec3"],[4232,"impl-Shr%3Ci64%3E-for-I64Vec3"],[4233,"impl-Shr%3Cu64%3E-for-I64Vec3"],[4234,"impl-Shr%3CIVec3%3E-for-I64Vec3"],[4235,"impl-Shr%3CIVec4%3E-for-I64Vec4"],[4236,"impl-Shr%3CUVec4%3E-for-I64Vec4"],[4237,"impl-Shr%3Ci8%3E-for-I64Vec4"],[4238,"impl-Shr%3Cu32%3E-for-I64Vec4"],[4239,"impl-Shr%3Cu16%3E-for-I64Vec4"],[4240,"impl-Shr%3Cu8%3E-for-I64Vec4"],[4241,"impl-Shr%3Ci32%3E-for-I64Vec4"],[4242,"impl-Shr%3Ci64%3E-for-I64Vec4"],[4243,"impl-Shr%3Cu64%3E-for-I64Vec4"],[4244,"impl-Shr%3Ci16%3E-for-I64Vec4"],[4251,"impl-Sub%3Ci64%3E-for-I64Vec2"],[4252,"impl-Sub-for-I64Vec2"],[4253,"impl-Sub%3Ci64%3E-for-I64Vec3"],[4254,"impl-Sub-for-I64Vec3"],[4255,"impl-Sub%3Ci64%3E-for-I64Vec4"],[4256,"impl-Sub-for-I64Vec4"],[4257,"impl-SubAssign%3Ci64%3E-for-I64Vec2"],[4258,"impl-SubAssign-for-I64Vec2"],[4259,"impl-SubAssign%3Ci64%3E-for-I64Vec3"],[4260,"impl-SubAssign-for-I64Vec3"],[4261,"impl-SubAssign-for-I64Vec4"],[4262,"impl-SubAssign%3Ci64%3E-for-I64Vec4"],[4263,"impl-Sum%3C%26I64Vec2%3E-for-I64Vec2"],[4264,"impl-Sum-for-I64Vec2"],[4265,"impl-Sum%3C%26I64Vec3%3E-for-I64Vec3"],[4266,"impl-Sum-for-I64Vec3"],[4267,"impl-Sum%3C%26I64Vec4%3E-for-I64Vec4"],[4268,"impl-Sum-for-I64Vec4"],[5299,"impl-Add-for-UVec2"],[5300,"impl-Add%3Cu32%3E-for-UVec2"],[5301,"impl-Add%3Cu32%3E-for-UVec3"],[5302,"impl-Add-for-UVec3"],[5303,"impl-Add%3Cu32%3E-for-UVec4"],[5304,"impl-Add-for-UVec4"],[5305,"impl-AddAssign-for-UVec2"],[5306,"impl-AddAssign%3Cu32%3E-for-UVec2"],[5307,"impl-AddAssign-for-UVec3"],[5308,"impl-AddAssign%3Cu32%3E-for-UVec3"],[5309,"impl-AddAssign-for-UVec4"],[5310,"impl-AddAssign%3Cu32%3E-for-UVec4"],[5333,"impl-BitAnd%3Cu32%3E-for-UVec2"],[5334,"impl-BitAnd-for-UVec2"],[5335,"impl-BitAnd%3Cu32%3E-for-UVec3"],[5336,"impl-BitAnd-for-UVec3"],[5337,"impl-BitAnd%3Cu32%3E-for-UVec4"],[5338,"impl-BitAnd-for-UVec4"],[5339,"impl-BitOr-for-UVec2"],[5340,"impl-BitOr%3Cu32%3E-for-UVec2"],[5341,"impl-BitOr-for-UVec3"],[5342,"impl-BitOr%3Cu32%3E-for-UVec3"],[5343,"impl-BitOr-for-UVec4"],[5344,"impl-BitOr%3Cu32%3E-for-UVec4"],[5345,"impl-BitXor-for-UVec2"],[5346,"impl-BitXor%3Cu32%3E-for-UVec2"],[5347,"impl-BitXor%3Cu32%3E-for-UVec3"],[5348,"impl-BitXor-for-UVec3"],[5349,"impl-BitXor%3Cu32%3E-for-UVec4"],[5350,"impl-BitXor-for-UVec4"],[5385,"impl-Div-for-UVec2"],[5386,"impl-Div%3Cu32%3E-for-UVec2"],[5387,"impl-Div%3Cu32%3E-for-UVec3"],[5388,"impl-Div-for-UVec3"],[5389,"impl-Div%3Cu32%3E-for-UVec4"],[5390,"impl-Div-for-UVec4"],[5391,"impl-DivAssign%3Cu32%3E-for-UVec2"],[5392,"impl-DivAssign-for-UVec2"],[5393,"impl-DivAssign%3Cu32%3E-for-UVec3"],[5394,"impl-DivAssign-for-UVec3"],[5395,"impl-DivAssign-for-UVec4"],[5396,"impl-DivAssign%3Cu32%3E-for-UVec4"],[5408,"impl-Debug-for-UVec2"],[5409,"impl-Display-for-UVec2"],[5410,"impl-Display-for-UVec3"],[5411,"impl-Debug-for-UVec3"],[5412,"impl-Debug-for-UVec4"],[5413,"impl-Display-for-UVec4"],[5415,"impl-From%3C%5Bu32;+2%5D%3E-for-UVec2"],[5416,"impl-From%3C(u32,+u32)%3E-for-UVec2"],[5417,"impl-From%3C%5Bu32;+3%5D%3E-for-UVec3"],[5418,"impl-From%3C(u32,+u32,+u32)%3E-for-UVec3"],[5419,"impl-From%3C(UVec2,+u32)%3E-for-UVec3"],[5422,"impl-From%3C(UVec2,+UVec2)%3E-for-UVec4"],[5423,"impl-From%3C%5Bu32;+4%5D%3E-for-UVec4"],[5424,"impl-From%3C(u32,+UVec3)%3E-for-UVec4"],[5425,"impl-From%3C(u32,+u32,+u32,+u32)%3E-for-UVec4"],[5426,"impl-From%3C(UVec2,+u32,+u32)%3E-for-UVec4"],[5427,"impl-From%3C(UVec3,+u32)%3E-for-UVec4"],[5461,"impl-Mul-for-UVec2"],[5462,"impl-Mul%3Cu32%3E-for-UVec2"],[5463,"impl-Mul%3Cu32%3E-for-UVec3"],[5464,"impl-Mul-for-UVec3"],[5465,"impl-Mul-for-UVec4"],[5466,"impl-Mul%3Cu32%3E-for-UVec4"],[5467,"impl-MulAssign%3Cu32%3E-for-UVec2"],[5468,"impl-MulAssign-for-UVec2"],[5469,"impl-MulAssign-for-UVec3"],[5470,"impl-MulAssign%3Cu32%3E-for-UVec3"],[5471,"impl-MulAssign%3Cu32%3E-for-UVec4"],[5472,"impl-MulAssign-for-UVec4"],[5479,"impl-Product-for-UVec2"],[5480,"impl-Product%3C%26UVec2%3E-for-UVec2"],[5481,"impl-Product-for-UVec3"],[5482,"impl-Product%3C%26UVec3%3E-for-UVec3"],[5483,"impl-Product-for-UVec4"],[5484,"impl-Product%3C%26UVec4%3E-for-UVec4"],[5485,"impl-Rem%3Cu32%3E-for-UVec2"],[5486,"impl-Rem-for-UVec2"],[5487,"impl-Rem%3Cu32%3E-for-UVec3"],[5488,"impl-Rem-for-UVec3"],[5489,"impl-Rem-for-UVec4"],[5490,"impl-Rem%3Cu32%3E-for-UVec4"],[5491,"impl-RemAssign%3Cu32%3E-for-UVec2"],[5492,"impl-RemAssign-for-UVec2"],[5493,"impl-RemAssign-for-UVec3"],[5494,"impl-RemAssign%3Cu32%3E-for-UVec3"],[5495,"impl-RemAssign%3Cu32%3E-for-UVec4"],[5496,"impl-RemAssign-for-UVec4"],[5500,"impl-Shl%3Cu16%3E-for-UVec2"],[5501,"impl-Shl%3CIVec2%3E-for-UVec2"],[5502,"impl-Shl%3Ci32%3E-for-UVec2"],[5503,"impl-Shl%3Cu8%3E-for-UVec2"],[5504,"impl-Shl%3Ci8%3E-for-UVec2"],[5505,"impl-Shl%3Ci16%3E-for-UVec2"],[5506,"impl-Shl-for-UVec2"],[5507,"impl-Shl%3Cu64%3E-for-UVec2"],[5508,"impl-Shl%3Ci64%3E-for-UVec2"],[5509,"impl-Shl%3Cu32%3E-for-UVec2"],[5510,"impl-Shl%3Ci16%3E-for-UVec3"],[5511,"impl-Shl%3CIVec3%3E-for-UVec3"],[5512,"impl-Shl%3Ci64%3E-for-UVec3"],[5513,"impl-Shl%3Cu8%3E-for-UVec3"],[5514,"impl-Shl%3Cu16%3E-for-UVec3"],[5515,"impl-Shl%3Cu64%3E-for-UVec3"],[5516,"impl-Shl-for-UVec3"],[5517,"impl-Shl%3Cu32%3E-for-UVec3"],[5518,"impl-Shl%3Ci8%3E-for-UVec3"],[5519,"impl-Shl%3Ci32%3E-for-UVec3"],[5520,"impl-Shl%3Ci32%3E-for-UVec4"],[5521,"impl-Shl%3Cu16%3E-for-UVec4"],[5522,"impl-Shl%3CIVec4%3E-for-UVec4"],[5523,"impl-Shl%3Cu64%3E-for-UVec4"],[5524,"impl-Shl%3Cu8%3E-for-UVec4"],[5525,"impl-Shl-for-UVec4"],[5526,"impl-Shl%3Ci16%3E-for-UVec4"],[5527,"impl-Shl%3Cu32%3E-for-UVec4"],[5528,"impl-Shl%3Ci8%3E-for-UVec4"],[5529,"impl-Shl%3Ci64%3E-for-UVec4"],[5530,"impl-Shr%3Cu64%3E-for-UVec2"],[5531,"impl-Shr%3CIVec2%3E-for-UVec2"],[5532,"impl-Shr%3Cu32%3E-for-UVec2"],[5533,"impl-Shr%3Ci16%3E-for-UVec2"],[5534,"impl-Shr%3Ci8%3E-for-UVec2"],[5535,"impl-Shr%3Cu8%3E-for-UVec2"],[5536,"impl-Shr-for-UVec2"],[5537,"impl-Shr%3Cu16%3E-for-UVec2"],[5538,"impl-Shr%3Ci64%3E-for-UVec2"],[5539,"impl-Shr%3Ci32%3E-for-UVec2"],[5540,"impl-Shr%3Ci8%3E-for-UVec3"],[5541,"impl-Shr%3Cu8%3E-for-UVec3"],[5542,"impl-Shr%3Ci16%3E-for-UVec3"],[5543,"impl-Shr%3Cu64%3E-for-UVec3"],[5544,"impl-Shr%3Ci32%3E-for-UVec3"],[5545,"impl-Shr%3Cu16%3E-for-UVec3"],[5546,"impl-Shr%3CIVec3%3E-for-UVec3"],[5547,"impl-Shr%3Cu32%3E-for-UVec3"],[5548,"impl-Shr-for-UVec3"],[5549,"impl-Shr%3Ci64%3E-for-UVec3"],[5550,"impl-Shr-for-UVec4"],[5551,"impl-Shr%3Ci64%3E-for-UVec4"],[5552,"impl-Shr%3Ci32%3E-for-UVec4"],[5553,"impl-Shr%3Cu64%3E-for-UVec4"],[5554,"impl-Shr%3Ci8%3E-for-UVec4"],[5555,"impl-Shr%3CIVec4%3E-for-UVec4"],[5556,"impl-Shr%3Cu32%3E-for-UVec4"],[5557,"impl-Shr%3Ci16%3E-for-UVec4"],[5558,"impl-Shr%3Cu16%3E-for-UVec4"],[5559,"impl-Shr%3Cu8%3E-for-UVec4"],[5563,"impl-Sub%3Cu32%3E-for-UVec2"],[5564,"impl-Sub-for-UVec2"],[5565,"impl-Sub-for-UVec3"],[5566,"impl-Sub%3Cu32%3E-for-UVec3"],[5567,"impl-Sub%3Cu32%3E-for-UVec4"],[5568,"impl-Sub-for-UVec4"],[5569,"impl-SubAssign%3Cu32%3E-for-UVec2"],[5570,"impl-SubAssign-for-UVec2"],[5571,"impl-SubAssign%3Cu32%3E-for-UVec3"],[5572,"impl-SubAssign-for-UVec3"],[5573,"impl-SubAssign-for-UVec4"],[5574,"impl-SubAssign%3Cu32%3E-for-UVec4"],[5575,"impl-Sum-for-UVec2"],[5576,"impl-Sum%3C%26UVec2%3E-for-UVec2"],[5577,"impl-Sum-for-UVec3"],[5578,"impl-Sum%3C%26UVec3%3E-for-UVec3"],[5579,"impl-Sum%3C%26UVec4%3E-for-UVec4"],[5580,"impl-Sum-for-UVec4"],[5586,"impl-TryFrom%3CU64Vec2%3E-for-UVec2"],[5587,"impl-TryFrom%3CI64Vec2%3E-for-UVec2"],[5588,"impl-TryFrom%3CIVec2%3E-for-UVec2"],[5590,"impl-TryFrom%3CU64Vec3%3E-for-UVec3"],[5591,"impl-TryFrom%3CI64Vec3%3E-for-UVec3"],[5593,"impl-TryFrom%3CIVec3%3E-for-UVec3"],[5594,"impl-TryFrom%3CI64Vec4%3E-for-UVec4"],[5596,"impl-TryFrom%3CU64Vec4%3E-for-UVec4"],[5597,"impl-TryFrom%3CIVec4%3E-for-UVec4"],[6127,"impl-Add%3Cu64%3E-for-U64Vec2"],[6128,"impl-Add-for-U64Vec2"],[6129,"impl-Add%3Cu64%3E-for-U64Vec3"],[6130,"impl-Add-for-U64Vec3"],[6131,"impl-Add-for-U64Vec4"],[6132,"impl-Add%3Cu64%3E-for-U64Vec4"],[6133,"impl-AddAssign%3Cu64%3E-for-U64Vec2"],[6134,"impl-AddAssign-for-U64Vec2"],[6135,"impl-AddAssign-for-U64Vec3"],[6136,"impl-AddAssign%3Cu64%3E-for-U64Vec3"],[6137,"impl-AddAssign%3Cu64%3E-for-U64Vec4"],[6138,"impl-AddAssign-for-U64Vec4"],[6161,"impl-BitAnd-for-U64Vec2"],[6162,"impl-BitAnd%3Cu64%3E-for-U64Vec2"],[6163,"impl-BitAnd-for-U64Vec3"],[6164,"impl-BitAnd%3Cu64%3E-for-U64Vec3"],[6165,"impl-BitAnd%3Cu64%3E-for-U64Vec4"],[6166,"impl-BitAnd-for-U64Vec4"],[6167,"impl-BitOr-for-U64Vec2"],[6168,"impl-BitOr%3Cu64%3E-for-U64Vec2"],[6169,"impl-BitOr-for-U64Vec3"],[6170,"impl-BitOr%3Cu64%3E-for-U64Vec3"],[6171,"impl-BitOr-for-U64Vec4"],[6172,"impl-BitOr%3Cu64%3E-for-U64Vec4"],[6173,"impl-BitXor-for-U64Vec2"],[6174,"impl-BitXor%3Cu64%3E-for-U64Vec2"],[6175,"impl-BitXor-for-U64Vec3"],[6176,"impl-BitXor%3Cu64%3E-for-U64Vec3"],[6177,"impl-BitXor-for-U64Vec4"],[6178,"impl-BitXor%3Cu64%3E-for-U64Vec4"],[6213,"impl-Div%3Cu64%3E-for-U64Vec2"],[6214,"impl-Div-for-U64Vec2"],[6215,"impl-Div-for-U64Vec3"],[6216,"impl-Div%3Cu64%3E-for-U64Vec3"],[6217,"impl-Div-for-U64Vec4"],[6218,"impl-Div%3Cu64%3E-for-U64Vec4"],[6219,"impl-DivAssign%3Cu64%3E-for-U64Vec2"],[6220,"impl-DivAssign-for-U64Vec2"],[6221,"impl-DivAssign-for-U64Vec3"],[6222,"impl-DivAssign%3Cu64%3E-for-U64Vec3"],[6223,"impl-DivAssign%3Cu64%3E-for-U64Vec4"],[6224,"impl-DivAssign-for-U64Vec4"],[6236,"impl-Display-for-U64Vec2"],[6237,"impl-Debug-for-U64Vec2"],[6238,"impl-Debug-for-U64Vec3"],[6239,"impl-Display-for-U64Vec3"],[6240,"impl-Display-for-U64Vec4"],[6241,"impl-Debug-for-U64Vec4"],[6243,"impl-From%3C%5Bu64;+2%5D%3E-for-U64Vec2"],[6244,"impl-From%3C(u64,+u64)%3E-for-U64Vec2"],[6245,"impl-From%3CUVec2%3E-for-U64Vec2"],[6246,"impl-From%3C(u64,+u64,+u64)%3E-for-U64Vec3"],[6247,"impl-From%3C(U64Vec2,+u64)%3E-for-U64Vec3"],[6248,"impl-From%3CUVec3%3E-for-U64Vec3"],[6250,"impl-From%3C%5Bu64;+3%5D%3E-for-U64Vec3"],[6251,"impl-From%3C(u64,+U64Vec3)%3E-for-U64Vec4"],[6252,"impl-From%3C%5Bu64;+4%5D%3E-for-U64Vec4"],[6254,"impl-From%3CUVec4%3E-for-U64Vec4"],[6255,"impl-From%3C(U64Vec2,+U64Vec2)%3E-for-U64Vec4"],[6256,"impl-From%3C(u64,+u64,+u64,+u64)%3E-for-U64Vec4"],[6257,"impl-From%3C(U64Vec2,+u64,+u64)%3E-for-U64Vec4"],[6258,"impl-From%3C(U64Vec3,+u64)%3E-for-U64Vec4"],[6292,"impl-Mul-for-U64Vec2"],[6293,"impl-Mul%3Cu64%3E-for-U64Vec2"],[6294,"impl-Mul-for-U64Vec3"],[6295,"impl-Mul%3Cu64%3E-for-U64Vec3"],[6296,"impl-Mul%3Cu64%3E-for-U64Vec4"],[6297,"impl-Mul-for-U64Vec4"],[6298,"impl-MulAssign-for-U64Vec2"],[6299,"impl-MulAssign%3Cu64%3E-for-U64Vec2"],[6300,"impl-MulAssign%3Cu64%3E-for-U64Vec3"],[6301,"impl-MulAssign-for-U64Vec3"],[6302,"impl-MulAssign-for-U64Vec4"],[6303,"impl-MulAssign%3Cu64%3E-for-U64Vec4"],[6310,"impl-Product%3C%26U64Vec2%3E-for-U64Vec2"],[6311,"impl-Product-for-U64Vec2"],[6312,"impl-Product%3C%26U64Vec3%3E-for-U64Vec3"],[6313,"impl-Product-for-U64Vec3"],[6314,"impl-Product-for-U64Vec4"],[6315,"impl-Product%3C%26U64Vec4%3E-for-U64Vec4"],[6316,"impl-Rem%3Cu64%3E-for-U64Vec2"],[6317,"impl-Rem-for-U64Vec2"],[6318,"impl-Rem%3Cu64%3E-for-U64Vec3"],[6319,"impl-Rem-for-U64Vec3"],[6320,"impl-Rem%3Cu64%3E-for-U64Vec4"],[6321,"impl-Rem-for-U64Vec4"],[6322,"impl-RemAssign-for-U64Vec2"],[6323,"impl-RemAssign%3Cu64%3E-for-U64Vec2"],[6324,"impl-RemAssign-for-U64Vec3"],[6325,"impl-RemAssign%3Cu64%3E-for-U64Vec3"],[6326,"impl-RemAssign-for-U64Vec4"],[6327,"impl-RemAssign%3Cu64%3E-for-U64Vec4"],[6331,"impl-Shl%3CIVec2%3E-for-U64Vec2"],[6332,"impl-Shl%3Ci8%3E-for-U64Vec2"],[6333,"impl-Shl%3Ci16%3E-for-U64Vec2"],[6334,"impl-Shl%3Ci64%3E-for-U64Vec2"],[6335,"impl-Shl%3Cu32%3E-for-U64Vec2"],[6336,"impl-Shl%3CUVec2%3E-for-U64Vec2"],[6337,"impl-Shl%3Ci32%3E-for-U64Vec2"],[6338,"impl-Shl%3Cu8%3E-for-U64Vec2"],[6339,"impl-Shl%3Cu16%3E-for-U64Vec2"],[6340,"impl-Shl%3Cu64%3E-for-U64Vec2"],[6341,"impl-Shl%3CIVec3%3E-for-U64Vec3"],[6342,"impl-Shl%3Ci64%3E-for-U64Vec3"],[6343,"impl-Shl%3Ci8%3E-for-U64Vec3"],[6344,"impl-Shl%3Ci32%3E-for-U64Vec3"],[6345,"impl-Shl%3CUVec3%3E-for-U64Vec3"],[6346,"impl-Shl%3Cu64%3E-for-U64Vec3"],[6347,"impl-Shl%3Cu32%3E-for-U64Vec3"],[6348,"impl-Shl%3Cu8%3E-for-U64Vec3"],[6349,"impl-Shl%3Cu16%3E-for-U64Vec3"],[6350,"impl-Shl%3Ci16%3E-for-U64Vec3"],[6351,"impl-Shl%3CIVec4%3E-for-U64Vec4"],[6352,"impl-Shl%3Cu64%3E-for-U64Vec4"],[6353,"impl-Shl%3Ci16%3E-for-U64Vec4"],[6354,"impl-Shl%3Ci64%3E-for-U64Vec4"],[6355,"impl-Shl%3Ci8%3E-for-U64Vec4"],[6356,"impl-Shl%3Cu32%3E-for-U64Vec4"],[6357,"impl-Shl%3Cu16%3E-for-U64Vec4"],[6358,"impl-Shl%3Ci32%3E-for-U64Vec4"],[6359,"impl-Shl%3CUVec4%3E-for-U64Vec4"],[6360,"impl-Shl%3Cu8%3E-for-U64Vec4"],[6361,"impl-Shr%3CUVec2%3E-for-U64Vec2"],[6362,"impl-Shr%3CIVec2%3E-for-U64Vec2"],[6363,"impl-Shr%3Ci16%3E-for-U64Vec2"],[6364,"impl-Shr%3Cu16%3E-for-U64Vec2"],[6365,"impl-Shr%3Cu32%3E-for-U64Vec2"],[6366,"impl-Shr%3Ci64%3E-for-U64Vec2"],[6367,"impl-Shr%3Cu64%3E-for-U64Vec2"],[6368,"impl-Shr%3Ci32%3E-for-U64Vec2"],[6369,"impl-Shr%3Ci8%3E-for-U64Vec2"],[6370,"impl-Shr%3Cu8%3E-for-U64Vec2"],[6371,"impl-Shr%3Cu64%3E-for-U64Vec3"],[6372,"impl-Shr%3Ci64%3E-for-U64Vec3"],[6373,"impl-Shr%3Cu16%3E-for-U64Vec3"],[6374,"impl-Shr%3Cu32%3E-for-U64Vec3"],[6375,"impl-Shr%3CUVec3%3E-for-U64Vec3"],[6376,"impl-Shr%3Cu8%3E-for-U64Vec3"],[6377,"impl-Shr%3Ci32%3E-for-U64Vec3"],[6378,"impl-Shr%3Ci8%3E-for-U64Vec3"],[6379,"impl-Shr%3Ci16%3E-for-U64Vec3"],[6380,"impl-Shr%3CIVec3%3E-for-U64Vec3"],[6381,"impl-Shr%3Cu32%3E-for-U64Vec4"],[6382,"impl-Shr%3CUVec4%3E-for-U64Vec4"],[6383,"impl-Shr%3Ci64%3E-for-U64Vec4"],[6384,"impl-Shr%3Cu8%3E-for-U64Vec4"],[6385,"impl-Shr%3Ci8%3E-for-U64Vec4"],[6386,"impl-Shr%3Cu64%3E-for-U64Vec4"],[6387,"impl-Shr%3Cu16%3E-for-U64Vec4"],[6388,"impl-Shr%3Ci16%3E-for-U64Vec4"],[6389,"impl-Shr%3Ci32%3E-for-U64Vec4"],[6390,"impl-Shr%3CIVec4%3E-for-U64Vec4"],[6394,"impl-Sub%3Cu64%3E-for-U64Vec2"],[6395,"impl-Sub-for-U64Vec2"],[6396,"impl-Sub%3Cu64%3E-for-U64Vec3"],[6397,"impl-Sub-for-U64Vec3"],[6398,"impl-Sub%3Cu64%3E-for-U64Vec4"],[6399,"impl-Sub-for-U64Vec4"],[6400,"impl-SubAssign-for-U64Vec2"],[6401,"impl-SubAssign%3Cu64%3E-for-U64Vec2"],[6402,"impl-SubAssign-for-U64Vec3"],[6403,"impl-SubAssign%3Cu64%3E-for-U64Vec3"],[6404,"impl-SubAssign%3Cu64%3E-for-U64Vec4"],[6405,"impl-SubAssign-for-U64Vec4"],[6406,"impl-Sum%3C%26U64Vec2%3E-for-U64Vec2"],[6407,"impl-Sum-for-U64Vec2"],[6408,"impl-Sum-for-U64Vec3"],[6409,"impl-Sum%3C%26U64Vec3%3E-for-U64Vec3"],[6410,"impl-Sum-for-U64Vec4"],[6411,"impl-Sum%3C%26U64Vec4%3E-for-U64Vec4"]],"a":{"cross":[938,2378,3301,4162],"determinant":[938,2378,3301,4162],"magnitude":[790,791,792,793,794,2268,2269,2270,2271],"magnitude2":[800,801,802,803,804,2276,2277,2278,2279,3264,3265,3266,4125,4126,4127,5446,5447,5448,6277,6278,6279],"mix":[805,806,807,808,809,2280,2281,2282,2283],"scale":[654,655,656,657,2160,2161,2162],"wedge":[938,2378,3301,4162]}},\
"heck":{"doc":"<strong>heck</strong> is a case conversion library.","t":"DDDDDDDDDDDKIIIIIIIIIIILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKKKLLLLLLLLKKKLLLLLLLLLLLLLLLLLLLLLLLL","n":["AsKebabCase","AsLowerCamelCase","AsPascalCase","AsShoutyKebabCase","AsShoutySnakeCase","AsShoutySnekCase","AsSnakeCase","AsSnekCase","AsTitleCase","AsTrainCase","AsUpperCamelCase","TO_SHOUTY_SNEK_CASE","ToKebabCase","ToLowerCamelCase","ToPascalCase","ToShoutyKebabCase","ToShoutySnakeCase","ToShoutySnekCase","ToSnakeCase","ToSnekCase","ToTitleCase","ToTrainCase","ToUpperCamelCase","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","to_kebab_case","to_lower_camel_case","to_pascal_case","to_shouty_kebab_case","to_shouty_snake_case","to_snake_case","to_snek_case","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_title_case","to_train_case","to_upper_camel_case","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"heck"],[105,"core::fmt"],[106,"core::fmt"],[107,"alloc::string"],[108,"core::result"],[109,"core::any"]],"d":["This wrapper performs a kebab case conversion in …","This wrapper performs a lower camel case conversion in …","This wrapper performs a upper camel case conversion in …","This wrapper performs a kebab case conversion in …","This wrapper performs a shouty snake  case conversion in …","This wrapper performs a shouty snake  case conversion in …","This wrapper performs a snake case conversion in …","This wrapper performs a snake case conversion in …","This wrapper performs a title case conversion in …","This wrapper performs a train case conversion in …","This wrapper performs a upper camel case conversion in …","CONVERT THIS TYPE TO SNEK CASE.","This trait defines a kebab case conversion.","This trait defines a lower camel case conversion.","ToPascalCase is an alias for ToUpperCamelCase. See …","This trait defines a shouty kebab case conversion.","This trait defines a shouty snake case conversion.","Oh heck, ToShoutySnekCase is an alias for …","This trait defines a snake case conversion.","Oh heck, SnekCase is an alias for ToSnakeCase. See …","This trait defines a title case conversion.","This trait defines a train case conversion.","This trait defines an upper camel case conversion.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this type to kebab case.","Convert this type to lower camel case.","Convert this type to upper camel case.","Convert this type to shouty kebab case.","Convert this type to shouty snake case.","Convert this type to snake case.","Convert this type to snek case.","","","","","","","","","Convert this type to title case.","Convert this type to Train-Case.","Convert this type to upper camel case.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,1,6,7,8,9,10,11,12,1,6,7,8,9,10,11,12,1,6,7,8,9,10,11,12,1,6,7,8,9,10,11,12,1,6,7,8,9,10,11,12,17,18,19,20,21,22,23,1,6,7,8,9,10,11,12,24,25,26,1,6,7,8,9,10,11,12,1,6,7,8,9,10,11,12,1,6,7,8,9,10,11,12],"f":[0,0,0,0,0,0,0,0,0,0,0,[-1,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]],2],3,[[5,[4]]]],[[[6,[-1]],2],3,[[5,[4]]]],[[[7,[-1]],2],3,[[5,[4]]]],[[[8,[-1]],2],3,[[5,[4]]]],[[[9,[-1]],2],3,[[5,[4]]]],[[[10,[-1]],2],3,[[5,[4]]]],[[[11,[-1]],2],3,[[5,[4]]]],[[[12,[-1]],2],3,[[5,[4]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]]],"c":[],"p":[[3,"AsKebabCase",0],[3,"Formatter",105],[6,"Result",105],[15,"str"],[8,"AsRef",106],[3,"AsLowerCamelCase",0],[3,"AsShoutyKebabCase",0],[3,"AsShoutySnakeCase",0],[3,"AsSnakeCase",0],[3,"AsTitleCase",0],[3,"AsTrainCase",0],[3,"AsUpperCamelCase",0],[3,"String",107],[4,"Result",108],[3,"TypeId",109],[8,"ToShoutySnekCase",0],[8,"ToKebabCase",0],[8,"ToLowerCamelCase",0],[8,"ToPascalCase",0],[8,"ToShoutyKebabCase",0],[8,"ToShoutySnakeCase",0],[8,"ToSnakeCase",0],[8,"ToSnekCase",0],[8,"ToTitleCase",0],[8,"ToTrainCase",0],[8,"ToUpperCamelCase",0]],"b":[]},\
"hyperion_arch":{"doc":"","t":"AAFFFAAAFFAFAAAFDLLMLLLLLLLLLMFMLLLDLLLLLLLLLAMAMFLLALLLAMLDDLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMMDLLLLLLLLLLLLLLHHFFFFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDDLLLLLLLLLLLLLLLLLMLLLMLLLLLLLFFFFFFNDNDNDNDNNNNNNEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLDDRSDDIDSRRDRRRMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMKLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLDMMMMMLLLLLLLLLFLLFMLLLLMMFDLLLLLLFLLLMLLLMRRRHRNNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["context","cpu","dbg_cpu","done","init","int","paging","pmm","rng_seed","spin_loop","stack","stack_pages","syscall","tls","vmm","wake_cpus","Context","borrow","borrow_mut","cr3","deref","deref_mut","drop","fmt","from","init","into","invalid","new","rsp","switch","syscall_stack","try_from","try_into","type_id","CpuState","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","gdt","gdt","idt","idt","init","init","into","ints","to_owned","try_from","try_into","tss","tss","type_id","Gdt","SegmentSelectors","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","kernel_code","kernel_data","load","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_code","user_data","Idt","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","load","new","try_from","try_into","type_id","GP_FAULT_HANDLER","PAGE_FAULT_HANDLER","alignment_check","bound_range_exceeded","breakpoint","debug","device_not_available","divide_error","double_fault","general_protection_fault","invalid_opcode","invalid_tss","machine_check","non_maskable_interrupt","other","overflow","page_fault","security_exception","segment_not_present","simd_floating_point","stack_segment_fault","virtualization","vmm_communication_exception","x87_floating_point","int_handler_100","int_handler_101","int_handler_102","int_handler_103","int_handler_104","int_handler_105","int_handler_106","int_handler_107","int_handler_108","int_handler_109","int_handler_110","int_handler_111","int_handler_112","int_handler_113","int_handler_114","int_handler_115","int_handler_116","int_handler_117","int_handler_118","int_handler_119","int_handler_120","int_handler_121","int_handler_122","int_handler_123","int_handler_124","int_handler_125","int_handler_126","int_handler_127","int_handler_128","int_handler_129","int_handler_130","int_handler_131","int_handler_132","int_handler_133","int_handler_134","int_handler_135","int_handler_136","int_handler_137","int_handler_138","int_handler_139","int_handler_140","int_handler_141","int_handler_142","int_handler_143","int_handler_144","int_handler_145","int_handler_146","int_handler_147","int_handler_148","int_handler_149","int_handler_150","int_handler_151","int_handler_152","int_handler_153","int_handler_154","int_handler_155","int_handler_156","int_handler_157","int_handler_158","int_handler_159","int_handler_160","int_handler_161","int_handler_162","int_handler_163","int_handler_164","int_handler_165","int_handler_166","int_handler_167","int_handler_168","int_handler_169","int_handler_170","int_handler_171","int_handler_172","int_handler_173","int_handler_174","int_handler_175","int_handler_176","int_handler_177","int_handler_178","int_handler_179","int_handler_180","int_handler_181","int_handler_182","int_handler_183","int_handler_184","int_handler_185","int_handler_186","int_handler_187","int_handler_188","int_handler_189","int_handler_190","int_handler_191","int_handler_192","int_handler_193","int_handler_194","int_handler_195","int_handler_196","int_handler_197","int_handler_198","int_handler_199","int_handler_200","int_handler_201","int_handler_202","int_handler_203","int_handler_204","int_handler_205","int_handler_206","int_handler_207","int_handler_208","int_handler_209","int_handler_210","int_handler_211","int_handler_212","int_handler_213","int_handler_214","int_handler_215","int_handler_216","int_handler_217","int_handler_218","int_handler_219","int_handler_220","int_handler_221","int_handler_222","int_handler_223","int_handler_224","int_handler_225","int_handler_226","int_handler_227","int_handler_228","int_handler_229","int_handler_230","int_handler_231","int_handler_232","int_handler_233","int_handler_234","int_handler_235","int_handler_236","int_handler_237","int_handler_238","int_handler_239","int_handler_240","int_handler_241","int_handler_242","int_handler_243","int_handler_244","int_handler_245","int_handler_246","int_handler_247","int_handler_248","int_handler_249","int_handler_250","int_handler_251","int_handler_252","int_handler_253","int_handler_254","int_handler_255","int_handler_32","int_handler_33","int_handler_34","int_handler_35","int_handler_36","int_handler_37","int_handler_38","int_handler_39","int_handler_40","int_handler_41","int_handler_42","int_handler_43","int_handler_44","int_handler_45","int_handler_46","int_handler_47","int_handler_48","int_handler_49","int_handler_50","int_handler_51","int_handler_52","int_handler_53","int_handler_54","int_handler_55","int_handler_56","int_handler_57","int_handler_58","int_handler_59","int_handler_60","int_handler_61","int_handler_62","int_handler_63","int_handler_64","int_handler_65","int_handler_66","int_handler_67","int_handler_68","int_handler_69","int_handler_70","int_handler_71","int_handler_72","int_handler_73","int_handler_74","int_handler_75","int_handler_76","int_handler_77","int_handler_78","int_handler_79","int_handler_80","int_handler_81","int_handler_82","int_handler_83","int_handler_84","int_handler_85","int_handler_86","int_handler_87","int_handler_88","int_handler_89","int_handler_90","int_handler_91","int_handler_92","int_handler_93","int_handler_94","int_handler_95","int_handler_96","int_handler_97","int_handler_98","int_handler_99","Tss","TssStacks","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","inner","into","into","new","stacks","take_interrupt_stack","try_from","try_from","try_into","try_into","type_id","type_id","are_enabled","debug","disable","enable","wait","without","FrameNotPresent","Level1","Level1","Level2","Level2","Level3","Level3","Level4","Size1GiB","Size1GiB","Size2MiB","Size2MiB","Size4KiB","Size4KiB","WalkTableIterResult","WalkTableResult","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_pml4","init","init","init","init","init","init","into","into","into","into","into","into","iter","iter","iter","iter","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Pfa","allocate_frame","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","AddressSpace","KernelStack","MAX_STACK_COUNT","PAGE_FLAGS","Stack","StackLimitHit","StackType","Stacks","TY","USER_HEAP_TOP","USER_STACK_TOP","UserStack","VIRT_STACK_PAGES","VIRT_STACK_SIZE","VIRT_STACK_SIZE_ALL","base_alloc","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cleanup","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","eq","eq","extent_4k_pages","extra_alloc","fmt","fmt","fmt","fmt","free","from","from","from","from","from","from","grow","guard_page","init","init","init","init","init","init","init","into","into","into","into","into","into","kernel_stacks","limit_4k_pages","new","new","new","page_fault","page_map","region","region","region","take","take_kernel_stack_lazy","take_kernel_stack_prealloc","take_lazy","take_prealloc","take_user_stack_lazy","take_user_stack_prealloc","to_owned","to_owned","to_owned","to_owned","top","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","user_stacks","with_limit","SyscallRegs","arg0","arg1","arg2","arg3","arg4","borrow","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","from","init","init","into","set_handler","syscall_id","to_string","try_from","try_into","type_id","user_instr_ptr","user_stack_ptr","userland","ThreadLocalStorage","borrow","borrow_mut","deref","deref_mut","drop","from","init","init","init","into","kernel_stack","try_from","try_into","type_id","user_stack","CURRENT_ADDRESS_SPACE","HIGHER_HALF_DIRECT_MAPPING","KERNEL_EXECUTABLE","KERNEL_EXECUTABLE_MAPS","KERNEL_STACKS","MapToError","NotAligned","Overflow","PageMap","TryMapSizedError","activate","borrow","borrow","borrow_mut","borrow_mut","cr3","current","debug","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","init","init","into","into","is_active","is_mapped","map","new","page_fault","phys_to_virt","try_from","try_from","try_into","try_into","type_id","type_id","unmap","virt_to_phys"],"q":[[0,"hyperion_arch"],[16,"hyperion_arch::context"],[35,"hyperion_arch::cpu"],[59,"hyperion_arch::cpu::gdt"],[94,"hyperion_arch::cpu::idt"],[109,"hyperion_arch::cpu::ints"],[133,"hyperion_arch::cpu::ints::other"],[357,"hyperion_arch::cpu::tss"],[388,"hyperion_arch::int"],[394,"hyperion_arch::paging"],[485,"hyperion_arch::pmm"],[498,"hyperion_arch::stack"],[627,"hyperion_arch::syscall"],[654,"hyperion_arch::tls"],[670,"hyperion_arch::vmm"],[715,"x86_64::addr"],[716,"core::ops::range"],[717,"core::fmt"],[718,"core::fmt"],[719,"core::any"],[720,"x86_64::structures::idt"],[721,"x86_64::structures::idt"],[722,"core::ops::function"],[723,"x86_64::structures::paging::page_table"],[724,"core::iter::traits::iterator"],[725,"x86_64::structures::paging::frame"],[726,"core::fmt"],[727,"core::cmp"],[728,"hyperion_mem::vmm"],[729,"hyperion_mem::vmm"],[730,"core::mem::maybe_uninit"],[731,"x86_64::structures::paging::page"],[732,"x86_64::structures::paging::page_table"]],"d":["","","","","","","","","","","","","","","<code>PageMap</code> is the Page Table Manager","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Safety","","","Safety","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","PT (Page Table)","","PD (Page Directory)","","PDP (Page Directory Pointer)","","PML4 (Level 4 Page Map)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","also the max thread count per process","","stacks have a guard page to trigger the page fault","","","","","","the first frame of the stack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","size of the stack in 4k pages, used in PageFault stack …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","won’t allocate the stack, this only makes sure the guard …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","limit how much the stack is allowed to grow, in 4k pages …","","","","","","","","","Safety","","","","","","","","","","","the location of where the top of the stack is mapped in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","init <code>syscall</code> and <code>sysret</code>","","Calls <code>U::from(self)</code>.","","","","","","","","","Safety","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","level 3 entries 510 and 511 in level 4 entry 511","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,7,7,7,0,13,13,13,13,13,13,13,13,13,0,13,0,13,0,13,13,0,13,13,13,0,13,13,0,0,15,14,15,14,14,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,14,14,15,15,14,15,14,15,14,15,14,14,14,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,20,16,20,16,16,20,16,20,16,20,16,20,16,20,16,20,16,16,20,16,16,20,16,20,16,20,16,20,0,0,0,0,0,0,54,0,55,0,55,0,55,0,54,55,54,55,54,55,0,0,54,55,25,26,27,28,54,55,25,26,27,28,54,55,25,26,27,28,54,55,25,26,27,28,54,55,25,26,27,28,25,26,27,28,54,55,25,26,27,28,25,54,55,25,26,27,28,54,55,25,26,27,28,25,26,27,28,54,55,25,26,27,28,54,55,25,26,27,28,54,55,25,26,27,28,0,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,34,0,0,0,0,34,0,0,0,0,0,0,33,40,42,36,37,33,39,40,42,36,37,33,39,33,36,37,33,39,36,37,33,39,40,40,42,36,37,33,39,40,42,36,37,33,39,40,42,36,37,33,39,36,37,33,33,33,36,37,33,39,40,40,42,36,37,33,39,33,33,40,42,36,37,33,33,39,40,42,36,37,33,39,42,33,40,42,33,33,42,34,36,37,40,42,42,40,40,42,42,36,37,33,39,33,40,42,36,37,33,39,40,42,36,37,33,39,40,42,36,37,33,39,42,33,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,45,45,0,45,45,45,45,45,45,45,0,0,47,47,47,47,47,47,0,47,47,47,47,47,47,47,47,0,0,0,0,0,49,49,49,0,0,11,11,49,11,49,11,11,11,11,49,11,49,11,49,49,11,49,11,49,11,49,11,11,11,11,11,11,11,49,11,49,11,49,11,11],"f":[0,0,[[],1],[[],2],[[],1],0,0,0,[[],3],[[],1],0,[[],[[5,[4]]]],0,0,0,[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,1],[[7,8],[[10,[1,9]]]],[-1,-1,[]],[[],6],[-1,-2,[],[]],[11,7],[[11,4],7],0,[[7,7],1],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,12,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[13,13],[[-1,-2],1,[],[]],[6,-1,[]],[6,-1,[]],[6,1],[[13,8],[[10,[1,9]]]],[-1,-1,[]],0,0,0,0,[[],1],[[],6],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,0,[-1,12,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,14],[[-1,-2],1,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,1],[6,1],[[15,8],[[10,[1,9]]]],[[14,8],[[10,[1,9]]]],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[15,1],[16,15],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,1],[[17,8],[[10,[1,9]]]],[-1,-1,[]],[[],6],[-1,-2,[],[]],[17,1],[16,17],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,12,[]],0,0,[[18,3],1],[18,1],[18,1],[18,1],[18,1],[18,1],[[18,3],2],[[18,3],1],[18,1],[[18,3],1],[18,2],[18,1],0,[18,1],[[18,19],1],[[18,3],1],[[18,3],1],[18,1],[[18,3],1],[18,1],[[18,3],1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],16],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,1],[6,1],[[16,8],[[10,[1,9]]]],[[20,8],[[10,[1,9]]]],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],16],0,[20,[[22,[21]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[[],23],[[],1],[[],1],[[],1],[[],1],[-1,-2,24,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[[25,8],[[10,[1,9]]]],[[26,8],[[10,[1,9]]]],[[27,8],[[10,[1,9]]]],[[28,8],[[10,[1,9]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[29,25],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,[[0,[30]]]],[26,[[0,[30]]]],[27,[[0,[30]]]],[28,[[0,[30]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],0,[31,[[22,[32]]]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,1],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,12,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[-1]],11],1,[34,35]],[36,36],[37,37],[[[33,[-1]]],[[33,[-1]]],38],[39,39],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],[[40,[-1]]],[34,35]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[[36,36],23],[[37,37],23],[[[33,[-1]],[33,[-1]]],23,41],0,0,[[36,8],[[10,[1,9]]]],[[37,8],[[10,[1,9]]]],[[[33,[-1]],8],[[10,[1,9]]],35],[[39,8],[[10,[1,9]]]],[[[40,[-1]],[33,[-1]]],1,[34,35]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[33,[-1]],11,3],[[10,[1,39]]],[34,35]],[[[33,[-1]]],4,[34,35]],[[],6],[[],6],[[],6],[[],6],[[[33,[-1]],11],1,[34,35]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],[[40,[-1]]],[34,35]],[11,42],[4,[[33,[-1]]],[34,35]],[[[33,[-1]],11,3],[[10,[43,44]]],[34,35]],0,[[],[[5,[3]]]],[[],[[5,[3]]]],[[],[[5,[3]]]],[[[40,[-1]]],[[33,[-1]]],[34,35]],[42,[[33,[36]]]],[[42,3],[[33,[36]]]],[[[40,[-1]],11],[[33,[-1]]],[34,35]],[[[40,[-1]],11,3],[[33,[-1]]],[34,35]],[42,[[33,[37]]]],[[42,3],[[33,[37]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],0,[[4,3],[[33,[-1]]],[34,35]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],45],[6,-1,[]],[6,-1,[]],[6,1],[[45,8],[[10,[1,9]]]],[[45,8],[[10,[1,9]]]],[-1,-1,[]],[14,1],[[],6],[-1,-2,[],[]],[[],1],0,[-1,46,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,12,[]],0,0,[[4,4,3,3],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,1],[-1,-1,[]],[47,1],[[[48,[47]]],47],[[],6],[-1,-2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,12,[]],0,0,0,0,0,0,0,0,0,0,0,[11,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,32],[[],11],[11,1],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,1],[6,1],[[[49,[-1]],8],[[10,[1,9]]],[35,50]],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[11,23],[[11,[5,[4]],51],23],[[11,[5,[4]],52,51],1],[[],11],[[11,4,53],[[10,[43,44]]]],[[11,52],4],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[[11,[5,[4]]],1],[[11,4],[[22,[52]]]]],"c":[],"p":[[15,"tuple"],[15,"never"],[15,"u64"],[3,"VirtAddr",715],[3,"Range",716],[15,"usize"],[3,"Context",16],[3,"Formatter",717],[3,"Error",717],[4,"Result",718],[3,"PageMap",670],[3,"TypeId",719],[3,"CpuState",35],[3,"SegmentSelectors",59],[3,"Gdt",59],[3,"Tss",357],[3,"Idt",94],[3,"InterruptStackFrame",720],[3,"PageFaultErrorCode",720],[3,"TssStacks",357],[15,"u16"],[4,"Option",721],[15,"bool"],[8,"FnOnce",722],[3,"Level4",394],[3,"Level3",394],[3,"Level2",394],[3,"Level1",394],[3,"PageTable",723],[8,"Iterator",724],[3,"Pfa",485],[3,"PhysFrame",725],[3,"Stack",498],[8,"StackType",498],[8,"Debug",717],[3,"KernelStack",498],[3,"UserStack",498],[8,"Clone",726],[3,"StackLimitHit",498],[3,"Stacks",498],[8,"PartialEq",727],[3,"AddressSpace",498],[3,"NotHandled",728],[3,"Handled",728],[3,"SyscallRegs",627],[3,"String",729],[3,"ThreadLocalStorage",654],[19,"MaybeUninit",730],[4,"TryMapSizedError",670],[8,"PageSize",731],[3,"PageTableFlags",723],[3,"PhysAddr",715],[4,"Privilege",728],[4,"WalkTableResult",394],[4,"WalkTableIterResult",394]],"b":[[639,"impl-Display-for-SyscallRegs"],[640,"impl-Debug-for-SyscallRegs"]]},\
"hyperion_arch_x86_64":{"doc":"","t":"AAFFFAAAFFAFAAAFDLLMLLLLLLLLLMFMLLLDLLLLLLLLLAMAMFLLALLLAMLDDLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMMDLLLLLLLLLLLLLLHHFFFFFFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDDLLLLLLLLLLLLLLLLLMLLLMLLLLLLLFFFFFFNDNDNDNDNNNNNNEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLDDRSDDIDSRRDRRRMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMKLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLDMMMMMLLLLLLLLLFLLFMLLLLMMFDLLLLLLFLLLMLLLMRRRHRNNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["context","cpu","dbg_cpu","done","init","int","paging","pmm","rng_seed","spin_loop","stack","stack_pages","syscall","tls","vmm","wake_cpus","Context","borrow","borrow_mut","cr3","deref","deref_mut","drop","fmt","from","init","into","invalid","new","rsp","switch","syscall_stack","try_from","try_into","type_id","CpuState","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","gdt","gdt","idt","idt","init","init","into","ints","to_owned","try_from","try_into","tss","tss","type_id","Gdt","SegmentSelectors","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","kernel_code","kernel_data","load","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_code","user_data","Idt","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","load","new","try_from","try_into","type_id","GP_FAULT_HANDLER","PAGE_FAULT_HANDLER","alignment_check","bound_range_exceeded","breakpoint","debug","device_not_available","divide_error","double_fault","general_protection_fault","invalid_opcode","invalid_tss","machine_check","non_maskable_interrupt","other","overflow","page_fault","security_exception","segment_not_present","simd_floating_point","stack_segment_fault","virtualization","vmm_communication_exception","x87_floating_point","int_handler_100","int_handler_101","int_handler_102","int_handler_103","int_handler_104","int_handler_105","int_handler_106","int_handler_107","int_handler_108","int_handler_109","int_handler_110","int_handler_111","int_handler_112","int_handler_113","int_handler_114","int_handler_115","int_handler_116","int_handler_117","int_handler_118","int_handler_119","int_handler_120","int_handler_121","int_handler_122","int_handler_123","int_handler_124","int_handler_125","int_handler_126","int_handler_127","int_handler_128","int_handler_129","int_handler_130","int_handler_131","int_handler_132","int_handler_133","int_handler_134","int_handler_135","int_handler_136","int_handler_137","int_handler_138","int_handler_139","int_handler_140","int_handler_141","int_handler_142","int_handler_143","int_handler_144","int_handler_145","int_handler_146","int_handler_147","int_handler_148","int_handler_149","int_handler_150","int_handler_151","int_handler_152","int_handler_153","int_handler_154","int_handler_155","int_handler_156","int_handler_157","int_handler_158","int_handler_159","int_handler_160","int_handler_161","int_handler_162","int_handler_163","int_handler_164","int_handler_165","int_handler_166","int_handler_167","int_handler_168","int_handler_169","int_handler_170","int_handler_171","int_handler_172","int_handler_173","int_handler_174","int_handler_175","int_handler_176","int_handler_177","int_handler_178","int_handler_179","int_handler_180","int_handler_181","int_handler_182","int_handler_183","int_handler_184","int_handler_185","int_handler_186","int_handler_187","int_handler_188","int_handler_189","int_handler_190","int_handler_191","int_handler_192","int_handler_193","int_handler_194","int_handler_195","int_handler_196","int_handler_197","int_handler_198","int_handler_199","int_handler_200","int_handler_201","int_handler_202","int_handler_203","int_handler_204","int_handler_205","int_handler_206","int_handler_207","int_handler_208","int_handler_209","int_handler_210","int_handler_211","int_handler_212","int_handler_213","int_handler_214","int_handler_215","int_handler_216","int_handler_217","int_handler_218","int_handler_219","int_handler_220","int_handler_221","int_handler_222","int_handler_223","int_handler_224","int_handler_225","int_handler_226","int_handler_227","int_handler_228","int_handler_229","int_handler_230","int_handler_231","int_handler_232","int_handler_233","int_handler_234","int_handler_235","int_handler_236","int_handler_237","int_handler_238","int_handler_239","int_handler_240","int_handler_241","int_handler_242","int_handler_243","int_handler_244","int_handler_245","int_handler_246","int_handler_247","int_handler_248","int_handler_249","int_handler_250","int_handler_251","int_handler_252","int_handler_253","int_handler_254","int_handler_255","int_handler_32","int_handler_33","int_handler_34","int_handler_35","int_handler_36","int_handler_37","int_handler_38","int_handler_39","int_handler_40","int_handler_41","int_handler_42","int_handler_43","int_handler_44","int_handler_45","int_handler_46","int_handler_47","int_handler_48","int_handler_49","int_handler_50","int_handler_51","int_handler_52","int_handler_53","int_handler_54","int_handler_55","int_handler_56","int_handler_57","int_handler_58","int_handler_59","int_handler_60","int_handler_61","int_handler_62","int_handler_63","int_handler_64","int_handler_65","int_handler_66","int_handler_67","int_handler_68","int_handler_69","int_handler_70","int_handler_71","int_handler_72","int_handler_73","int_handler_74","int_handler_75","int_handler_76","int_handler_77","int_handler_78","int_handler_79","int_handler_80","int_handler_81","int_handler_82","int_handler_83","int_handler_84","int_handler_85","int_handler_86","int_handler_87","int_handler_88","int_handler_89","int_handler_90","int_handler_91","int_handler_92","int_handler_93","int_handler_94","int_handler_95","int_handler_96","int_handler_97","int_handler_98","int_handler_99","Tss","TssStacks","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","inner","into","into","new","stacks","take_interrupt_stack","try_from","try_from","try_into","try_into","type_id","type_id","are_enabled","debug","disable","enable","wait","without","FrameNotPresent","Level1","Level1","Level2","Level2","Level3","Level3","Level4","Size1GiB","Size1GiB","Size2MiB","Size2MiB","Size4KiB","Size4KiB","WalkTableIterResult","WalkTableResult","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_pml4","init","init","init","init","init","init","into","into","into","into","into","into","iter","iter","iter","iter","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Pfa","allocate_frame","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","AddressSpace","KernelStack","MAX_STACK_COUNT","PAGE_FLAGS","Stack","StackLimitHit","StackType","Stacks","TY","USER_HEAP_TOP","USER_STACK_TOP","UserStack","VIRT_STACK_PAGES","VIRT_STACK_SIZE","VIRT_STACK_SIZE_ALL","base_alloc","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cleanup","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","eq","eq","extent_4k_pages","extra_alloc","fmt","fmt","fmt","fmt","free","from","from","from","from","from","from","grow","guard_page","init","init","init","init","init","init","init","into","into","into","into","into","into","kernel_stacks","limit_4k_pages","new","new","new","page_fault","page_map","region","region","region","take","take_kernel_stack_lazy","take_kernel_stack_prealloc","take_lazy","take_prealloc","take_user_stack_lazy","take_user_stack_prealloc","to_owned","to_owned","to_owned","to_owned","top","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","user_stacks","with_limit","SyscallRegs","arg0","arg1","arg2","arg3","arg4","borrow","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","from","init","init","into","set_handler","syscall_id","to_string","try_from","try_into","type_id","user_instr_ptr","user_stack_ptr","userland","ThreadLocalStorage","borrow","borrow_mut","deref","deref_mut","drop","from","init","init","init","into","kernel_stack","try_from","try_into","type_id","user_stack","CURRENT_ADDRESS_SPACE","HIGHER_HALF_DIRECT_MAPPING","KERNEL_EXECUTABLE","KERNEL_EXECUTABLE_MAPS","KERNEL_STACKS","MapToError","NotAligned","Overflow","PageMap","TryMapSizedError","activate","borrow","borrow","borrow_mut","borrow_mut","cr3","current","debug","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","init","init","into","into","is_active","is_mapped","map","new","page_fault","phys_to_virt","try_from","try_from","try_into","try_into","type_id","type_id","unmap","virt_to_phys"],"q":[[0,"hyperion_arch_x86_64"],[16,"hyperion_arch_x86_64::context"],[35,"hyperion_arch_x86_64::cpu"],[59,"hyperion_arch_x86_64::cpu::gdt"],[94,"hyperion_arch_x86_64::cpu::idt"],[109,"hyperion_arch_x86_64::cpu::ints"],[133,"hyperion_arch_x86_64::cpu::ints::other"],[357,"hyperion_arch_x86_64::cpu::tss"],[388,"hyperion_arch_x86_64::int"],[394,"hyperion_arch_x86_64::paging"],[485,"hyperion_arch_x86_64::pmm"],[498,"hyperion_arch_x86_64::stack"],[627,"hyperion_arch_x86_64::syscall"],[654,"hyperion_arch_x86_64::tls"],[670,"hyperion_arch_x86_64::vmm"],[715,"x86_64::addr"],[716,"core::ops::range"],[717,"core::fmt"],[718,"core::fmt"],[719,"core::any"],[720,"x86_64::structures::idt"],[721,"x86_64::structures::idt"],[722,"core::ops::function"],[723,"x86_64::structures::paging::page_table"],[724,"core::iter::traits::iterator"],[725,"x86_64::structures::paging::page"],[726,"x86_64::structures::paging::frame"],[727,"core::fmt"],[728,"core::cmp"],[729,"hyperion_mem::vmm"],[730,"alloc::string"],[731,"core::mem::maybe_uninit"],[732,"x86_64::structures::paging::page"]],"d":["","","","","","","","","","","","","","","<code>PageMap</code> is the Page Table Manager","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Safety","","","Safety","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","PT (Page Table)","","PD (Page Directory)","","PDP (Page Directory Pointer)","","PML4 (Level 4 Page Map)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","also the max thread count per process","","stacks have a guard page to trigger the page fault","","","","","","the first frame of the stack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","size of the stack in 4k pages, used in PageFault stack …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","won’t allocate the stack, this only makes sure the guard …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","limit how much the stack is allowed to grow, in 4k pages …","","","","","","","","","Safety","","","","","","","","","","","the location of where the top of the stack is mapped in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","init <code>syscall</code> and <code>sysret</code>","","Calls <code>U::from(self)</code>.","","","","","","","","","Safety","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","level 3 entries 510 and 511 in level 4 entry 511","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,7,7,7,0,13,13,13,13,13,13,13,13,13,0,13,0,13,0,13,13,0,13,13,13,0,13,13,0,0,15,14,15,14,14,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,14,14,15,15,14,15,14,15,14,15,14,14,14,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,20,16,20,16,16,20,16,20,16,20,16,20,16,20,16,20,16,16,20,16,16,20,16,20,16,20,16,20,0,0,0,0,0,0,54,0,55,0,55,0,55,0,54,55,54,55,54,55,0,0,54,55,25,26,27,28,54,55,25,26,27,28,54,55,25,26,27,28,54,55,25,26,27,28,54,55,25,26,27,28,25,26,27,28,54,55,25,26,27,28,25,54,55,25,26,27,28,54,55,25,26,27,28,25,26,27,28,54,55,25,26,27,28,54,55,25,26,27,28,54,55,25,26,27,28,0,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,35,0,0,0,0,35,0,0,0,0,0,0,34,41,43,37,38,34,40,41,43,37,38,34,40,34,37,38,34,40,37,38,34,40,41,41,43,37,38,34,40,41,43,37,38,34,40,41,43,37,38,34,40,37,38,34,34,34,37,38,34,40,41,41,43,37,38,34,40,34,34,41,43,37,38,34,34,40,41,43,37,38,34,40,43,34,41,43,34,34,43,35,37,38,41,43,43,41,41,43,43,37,38,34,40,34,41,43,37,38,34,40,41,43,37,38,34,40,41,43,37,38,34,40,43,34,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,45,45,0,45,45,45,45,45,45,45,0,0,47,47,47,47,47,47,0,47,47,47,47,47,47,47,47,0,0,0,0,0,49,49,49,0,0,10,10,49,10,49,10,10,10,10,49,10,49,10,49,49,10,49,10,49,10,49,10,10,10,10,10,10,10,49,10,49,10,49,10,10],"f":[0,0,[[],1],[[],2],[[],1],0,0,0,[[],3],[[],1],0,[[],[[5,[4]]]],0,0,0,[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,1],[[7,8],9],[-1,-1,[]],[[],6],[-1,-2,[],[]],[10,7],[[10,4],7],0,[[7,7],1],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[13,13],[[-1,-2],1,[],[]],[6,-1,[]],[6,-1,[]],[6,1],[[13,8],9],[-1,-1,[]],0,0,0,0,[[],1],[[],6],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],0,0,[-1,12,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,14],[[-1,-2],1,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,1],[6,1],[[15,8],9],[[14,8],9],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[15,1],[16,15],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,1],[[17,8],9],[-1,-1,[]],[[],6],[-1,-2,[],[]],[17,1],[16,17],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],0,0,[[18,3],1],[18,1],[18,1],[18,1],[18,1],[18,1],[[18,3],2],[[18,3],1],[18,1],[[18,3],1],[18,2],[18,1],0,[18,1],[[18,19],1],[[18,3],1],[[18,3],1],[18,1],[[18,3],1],[18,1],[[18,3],1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],16],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,1],[6,1],[[16,8],9],[[20,8],9],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],16],0,[20,[[22,[21]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[[],23],[[],1],[[],1],[[],1],[[],1],[-1,-2,24,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[[25,8],9],[[26,8],9],[[27,8],9],[[28,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[29,25],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,[[0,[30]]]],[26,[[0,[30]]]],[27,[[0,[30]]]],[28,[[0,[30]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],0,[31,[[22,[[33,[32]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,1],[-1,-1,[]],[[],6],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1]],10],1,[35,36]],[37,37],[38,38],[[[34,[-1]]],[[34,[-1]]],39],[40,40],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],[[41,[-1]]],[35,36]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[[37,37],23],[[38,38],23],[[[34,[-1]],[34,[-1]]],23,42],0,0,[[37,8],9],[[38,8],9],[[[34,[-1]],8],9,36],[[40,8],9],[[[41,[-1]],[34,[-1]]],1,[35,36]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[34,[-1]],10,3],[[11,[1,40]]],[35,36]],[[[34,[-1]]],4,[35,36]],[[],6],[[],6],[[],6],[[],6],[[],6],[[[34,[-1]],10],1,[35,36]],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],[[41,[-1]]],[35,36]],[10,43],[4,[[34,[-1]]],[35,36]],[[[34,[-1]],10,3],44,[35,36]],0,[[],[[5,[3]]]],[[],[[5,[3]]]],[[],[[5,[3]]]],[[[41,[-1]]],[[34,[-1]]],[35,36]],[43,[[34,[37]]]],[[43,3],[[34,[37]]]],[[[41,[-1]],10],[[34,[-1]]],[35,36]],[[[41,[-1]],10,3],[[34,[-1]]],[35,36]],[43,[[34,[38]]]],[[43,3],[[34,[38]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],0,[[4,3],[[34,[-1]]],[35,36]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],45],[6,-1,[]],[6,-1,[]],[6,1],[[45,8],9],[[45,8],9],[-1,-1,[]],[14,1],[[],6],[-1,-2,[],[]],[[],1],0,[-1,46,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],0,0,[[4,4,3,3],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[6,-1,[]],[6,-1,[]],[6,1],[-1,-1,[]],[47,1],[[[48,[47]]],47],[[],6],[-1,-2,[],[]],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],0,0,0,0,0,0,0,0,0,0,0,[10,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,33],[[],10],[10,1],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,1],[6,1],[[[49,[-1]],8],9,[36,50]],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[10,23],[[10,[5,[4]],51],23],[[10,[5,[4]],52,51],1],[[],10],[[10,4,53],44],[[10,52],4],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[[10,[5,[4]]],1],[[10,4],[[22,[52]]]]],"c":[],"p":[[15,"tuple"],[15,"never"],[15,"u64"],[3,"VirtAddr",715],[3,"Range",716],[15,"usize"],[3,"Context",16],[3,"Formatter",717],[6,"Result",717],[3,"PageMap",670],[4,"Result",718],[3,"TypeId",719],[3,"CpuState",35],[3,"SegmentSelectors",59],[3,"Gdt",59],[3,"Tss",357],[3,"Idt",94],[3,"InterruptStackFrame",720],[3,"PageFaultErrorCode",720],[3,"TssStacks",357],[15,"u16"],[4,"Option",721],[15,"bool"],[8,"FnOnce",722],[3,"Level4",394],[3,"Level3",394],[3,"Level2",394],[3,"Level1",394],[3,"PageTable",723],[8,"Iterator",724],[3,"Pfa",485],[4,"Size4KiB",725],[3,"PhysFrame",726],[3,"Stack",498],[8,"StackType",498],[8,"Debug",717],[3,"KernelStack",498],[3,"UserStack",498],[8,"Clone",727],[3,"StackLimitHit",498],[3,"Stacks",498],[8,"PartialEq",728],[3,"AddressSpace",498],[6,"PageFaultResult",729],[3,"SyscallRegs",627],[3,"String",730],[3,"ThreadLocalStorage",654],[19,"MaybeUninit",731],[4,"TryMapSizedError",670],[8,"PageSize",725],[3,"PageTableFlags",723],[3,"PhysAddr",715],[4,"Privilege",729],[4,"WalkTableResult",394],[4,"WalkTableIterResult",394]],"b":[[639,"impl-Debug-for-SyscallRegs"],[640,"impl-Display-for-SyscallRegs"]]},\
"hyperion_atomic_map":{"doc":"","t":"DLLLLLLLLLLLLLLLL","n":["AtomicMap","borrow","borrow_mut","drop","from","get","insert","into","is_empty","iter","keys","len","new","try_from","try_into","type_id","values"],"q":[[0,"hyperion_atomic_map"],[17,"core::option"],[18,"core::cmp"],[19,"core::iter::traits::iterator"],[20,"core::result"],[21,"core::any"]],"d":["","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],2,[],[]],[-1,-1,[]],[[[1,[-1,-2]],-1],[[3,[-2]]],4,[]],[[[1,[-1,-2]],-1,-2],2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],5,[],[]],[[[1,[-1,-2]]],[[0,[6]]],[],[]],[[[1,[-1,-2]]],[[0,[6]]],[],[]],[[[1,[-1,-2]]],7,[],[]],[[],[[1,[-1,-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[[1,[-1,-2]]],[[0,[6]]],[],[]]],"c":[],"p":[[3,"AtomicMap",0],[15,"tuple"],[4,"Option",17],[8,"PartialEq",18],[15,"bool"],[8,"Iterator",19],[15,"usize"],[4,"Result",20],[3,"TypeId",21]],"b":[]},\
"hyperion_backtrace":{"doc":"","t":"EGNNNDNNNFLLLLLLLLLLMLLFFFFFMFMLLLLLLLFF","n":["BacktraceError","BacktraceResult","ElfNotLoaded","ElfParse","Err","FrameInfo","Inner","NoSymtabOrStrtab","Ok","base_ptr","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","from","from","instr_ptr","into","into","kernel_base","print_backtrace","print_backtrace_from","print_symtab","symbol","symbol_name","symbol_noerr","symbol_offs","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwind_stack","unwind_stack_from"],"q":[[0,"hyperion_backtrace"],[40,"x86_64::addr"],[41,"core::fmt"],[42,"core::fmt"],[43,"core::any"],[44,"core::ops::function"]],"d":["","","","","Contains the error value","","","","Contains the success value","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Safety","","returns the <code>symbol_name + offset</code> for the provided …","","","","","","","","","","","","Safety"],"i":[0,0,4,4,13,0,4,4,13,0,4,2,4,2,2,2,4,2,4,2,2,4,2,0,0,0,0,0,2,0,2,2,4,2,4,2,4,2,0,0],"f":[0,0,0,0,0,0,0,0,0,[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],3,[],[]],[[4,5],6],[[2,5],6],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[],3],[1,3],[[],[[8,[3,4]]]],[7,[[8,[[3,[9,10]],4]]]],0,[7,2],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,3,12],[[1,-1],3,12]],"c":[],"p":[[3,"VirtAddr",40],[3,"FrameInfo",0],[15,"tuple"],[4,"BacktraceError",0],[3,"Formatter",41],[6,"Result",41],[15,"u64"],[4,"Result",42],[15,"str"],[15,"usize"],[3,"TypeId",43],[8,"FnMut",44],[6,"BacktraceResult",0]],"b":[]},\
"hyperion_bitmap":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLL","n":["Bitmap","borrow","borrow_mut","default","fill","fmt","from","get","into","is_empty","iter","iter_bytes","iter_false","iter_true","len","new","set","try_from","try_into","type_id"],"q":[[0,"hyperion_bitmap"],[20,"core::fmt"],[21,"core::fmt"],[22,"core::iter::traits::iterator"],[23,"core::result"],[24,"core::any"]],"d":["","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","iterator over indexes of 0 bits","iterator over indexes of 1 bits","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[1,2],3],[[1,4],5],[-1,-1,[]],[[1,6],[[7,[2]]]],[-1,-2,[],[]],[1,2],[1,[[0,[8]]]],[1,[[0,[8]]]],[1,[[0,[8]]]],[1,[[0,[8]]]],[1,6],[[[10,[9]]],1],[[1,6,2],[[7,[3]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]]],"c":[],"p":[[3,"Bitmap",0],[15,"bool"],[15,"tuple"],[3,"Formatter",20],[6,"Result",20],[15,"usize"],[4,"Option",21],[8,"Iterator",22],[15,"u8"],[15,"slice"],[4,"Result",23],[3,"TypeId",24]],"b":[]},\
"hyperion_boot":{"doc":"","t":"HHAFFFFFFFFFFFFFDLLLLMLLLLFLMLLMLLLLM","n":["BOOT_STACK_SIZE","NAME","args","boot_cpu","cmdline","cpu_count","framebuffer","hhdm_offset","init","kernel_file","lapics","memmap","phys_addr","rsdp","smp_init","virt_addr","Arguments","borrow","borrow_mut","clone","clone_into","cmdline","default","eq","fmt","from","get","get","had_unrecognized","into","parse","serial_log_level","to_owned","try_from","try_into","type_id","video_log_level"],"q":[[0,"hyperion_boot"],[16,"hyperion_boot::args"],[37,"hyperion_boot_interface::smp"],[38,"core::option"],[39,"hyperion_boot_interface::framebuffer"],[40,"core::iter::traits::iterator"],[41,"core::fmt"],[42,"core::fmt"],[43,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11],"f":[0,0,0,[[],1],[[],[[3,[2]]]],[[],4],[[],[[3,[5]]]],[[],6],[[],7],[[],[[3,[[9,[8]]]]]],[[],[[0,[10]]]],[[],[[0,[10]]]],[[],4],[[],[[3,[7]]]],[[],7],[[],4],0,[-1,-2,[],[]],[-1,-2,[],[]],[11,11],[[-1,-2],7,[],[]],0,[[],11],[[11,11],12],[[11,13],14],[-1,-1,[]],[[],11],[[],11],0,[-1,-2,[],[]],[2,11],0,[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],0],"c":[],"p":[[3,"Cpu",37],[15,"str"],[4,"Option",38],[15,"usize"],[3,"FramebufferCreateInfo",39],[15,"u64"],[15,"tuple"],[15,"u8"],[15,"slice"],[8,"Iterator",40],[3,"Arguments",16],[15,"bool"],[3,"Formatter",41],[6,"Result",41],[4,"Result",42],[3,"TypeId",43]],"b":[]},\
"hyperion_boot_interface":{"doc":"","t":"NDNDNDENMLLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMLMMLLLLLLLLMLLLLM","n":["BootloaderReclaimable","Cpu","Framebuffer","FramebufferCreateInfo","KernelAndModules","Memmap","Memtype","Usable","base","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","clone","clone","clone","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","height","into","into","into","into","is_boot","is_bootloader_reclaimable","is_bootloader_reclaimable","is_framebuffer","is_framebuffer","is_kernel_and_modules","is_kernel_and_modules","is_usable","is_usable","len","local_apic_id","new","pitch","processor_id","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","width"],"q":[[0,"hyperion_boot_interface"],[65,"core::fmt"],[66,"core::fmt"],[67,"core::any"]],"d":["","","","","","","","","physical address memory region base (bottom)","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the memtype is <code>BootloaderReclaimable</code>.","Returns <code>true</code> if the memtype is <code>BootloaderReclaimable</code>.","Returns <code>true</code> if the memtype is <code>Framebuffer</code>.","Returns <code>true</code> if the memtype is <code>Framebuffer</code>.","Returns <code>true</code> if the memtype is <code>KernelAndModules</code>.","Returns <code>true</code> if the memtype is <code>KernelAndModules</code>.","Returns <code>true</code> if the memtype is <code>Usable</code>.","Returns <code>true</code> if the memtype is <code>Usable</code>.","length of the memory region (top - bottom)","","","","","","","","","","","","","","","","","",""],"i":[2,0,2,0,2,0,0,2,1,10,1,2,3,10,1,2,3,10,1,2,3,1,2,3,1,2,3,3,10,1,2,3,10,10,1,2,3,3,1,2,1,2,1,2,1,2,1,3,3,10,3,10,1,2,3,10,1,2,3,1,10,1,2,3,10],"f":[0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[2,2],[3,3],[[1,1],4],[[2,2],4],[[3,3],4],[[1,5],6],[[2,5],6],[[3,5],6],[[3,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,4],[1,4],[2,4],[1,4],[2,4],[1,4],[2,4],[1,4],[2,4],0,0,[[7,7],3],0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0],"c":[],"p":[[3,"Memmap",0],[4,"Memtype",0],[3,"Cpu",0],[15,"bool"],[3,"Formatter",65],[6,"Result",65],[15,"u32"],[4,"Result",66],[3,"TypeId",67],[3,"FramebufferCreateInfo",0]],"b":[[26,"impl-Debug-for-Cpu"],[27,"impl-Display-for-Cpu"]]},\
"hyperion_boot_limine":{"doc":"","t":"HHCFFFFFFFFFFFFF","n":["BOOT_STACK_SIZE","NAME","_print","boot_cpu","cmdline","cpu_count","framebuffer","hhdm_offset","init","kernel_file","lapics","memmap","phys_addr","rsdp","smp_init","virt_addr"],"q":[[0,"hyperion_boot_limine"],[16,"hyperion_boot_interface::smp"],[17,"core::option"],[18,"hyperion_boot_interface::framebuffer"],[19,"core::iter::traits::iterator"]],"d":["","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,[[],1],[[],[[3,[2]]]],[[],4],[[],[[3,[5]]]],[[],6],[[],7],[[],[[3,[[9,[8]]]]]],[[],[[0,[10]]]],[[],[[0,[10]]]],[[],4],[[],[[3,[7]]]],[[],7],[[],4]],"c":[],"p":[[3,"Cpu",16],[15,"str"],[4,"Option",17],[15,"usize"],[3,"FramebufferCreateInfo",18],[15,"u64"],[15,"tuple"],[15,"u8"],[15,"slice"],[8,"Iterator",19]],"b":[]},\
"hyperion_checked":{"doc":"","t":"IIQQKK","n":["CheckedAdd","CheckedSub","Output","Output","checked_add","checked_sub"],"q":[[0,"hyperion_checked"],[6,"core::option"]],"d":["","","","","",""],"i":[0,0,2,3,2,3],"f":[0,0,0,0,[[-1,-2],1,[],[]],[[-1,-2],1,[],[]]],"c":[],"p":[[4,"Option",6],[8,"CheckedAdd",0],[8,"CheckedSub",0]],"b":[]},\
"hyperion_clock":{"doc":"","t":"IDKLLLLLLLFLLKLFKLLLL","n":["ClockSource","NopClock","_apic_sleep_simple_blocking","_apic_sleep_simple_blocking","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","nanosecond_now","nanosecond_now","set_source_picker","trigger_interrupt_at","trigger_interrupt_at","try_from","try_into","type_id"],"q":[[0,"hyperion_clock"],[21,"core::ops::function"],[22,"core::result"],[23,"core::any"]],"d":["","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,6,4,4,4,4,4,4,4,0,4,4,6,4,0,6,4,4,4,4],"f":[0,0,[[-1,1,2],3,[]],[[4,1,2],3],[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[5,-1,[]],[5,3],[-1,-1,[]],[[],6],[[],5],[-1,-2,[],[]],[-1,7,[]],[4,7],[[],3],[[-1,7],3,[]],[[4,7],3],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]]],"c":[],"p":[[15,"u16"],[8,"FnMut",21],[15,"tuple"],[3,"NopClock",0],[15,"usize"],[8,"ClockSource",0],[15,"u128"],[4,"Result",22],[3,"TypeId",23]],"b":[]},\
"hyperion_color":{"doc":"","t":"SSDSSSLLMLLLLLLLLLLLMLLMLLL","n":["BLACK","BLUE","Color","GREEN","RED","WHITE","as_arr","as_u32","b","borrow","borrow_mut","clone","default","eq","fmt","from","from_hex","from_hex_bytes","from_hex_bytes_2","from_u32","g","into","new","r","try_from","try_into","type_id"],"q":[[0,"hyperion_color"],[27,"core::fmt"],[28,"core::fmt"],[29,"core::result"],[30,"core::any"]],"d":["","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","",""],"i":[1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,[1,[[3,[2]]]],[1,4],0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[],1],[[1,1],5],[[1,6],7],[-1,-1,[]],[8,[[9,[1]]]],[[[10,[2]]],[[9,[1]]]],[[[3,[2]]],1],[4,1],0,[-1,-2,[],[]],[[2,2,2],1],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]]],"c":[],"p":[[3,"Color",0],[15,"u8"],[15,"array"],[15,"u32"],[15,"bool"],[3,"Formatter",27],[6,"Result",27],[15,"str"],[4,"Option",28],[15,"slice"],[4,"Result",29],[3,"TypeId",30]],"b":[]},\
"hyperion_cpu_id":{"doc":"","t":"DLLFFLLFLLLLLL","n":["Tls","borrow","borrow_mut","cpu_count","cpu_id","deref","from","init","inner","into","new","try_from","try_into","type_id"],"q":[[0,"hyperion_cpu_id"],[14,"core::cell"],[15,"core::ops::function"],[16,"core::result"],[17,"core::any"]],"d":["","","","<code>cpu_id()</code> &lt; <code>cpu_count()</code>","technically UB to read before a call to <code>init</code> on this CPU","","Returns the argument unchanged.","initialize <code>cpu_id</code>","","Calls <code>U::from(self)</code>.","","","",""],"i":[0,2,2,0,0,2,2,0,2,2,2,2,2,2],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[[2,[-1]]],[],[]],[-1,-1,[]],[[],3],[[[2,[-1]]],[[5,[[4,[-1]]]]],[]],[-1,-2,[],[]],[-1,[[2,[-2]]],6,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]]],"c":[],"p":[[15,"usize"],[3,"Tls",0],[15,"tuple"],[3,"SyncUnsafeCell",14],[15,"slice"],[8,"FnMut",15],[4,"Result",16],[3,"TypeId",17]],"b":[]},\
"hyperion_defer":{"doc":"","t":"DLLLLLLLLLL","n":["Defer","borrow","borrow_mut","drop","from","into","new","take","try_from","try_into","type_id"],"q":[[0,"hyperion_defer"],[11,"core::ops::function"],[12,"core::result"],[13,"core::any"]],"d":["","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],2,3],[-1,-1,[]],[-1,-2,[],[]],[-1,[[1,[-1]]],3],[[[1,[-1]]],-1,3],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]]],"c":[],"p":[[3,"Defer",0],[15,"tuple"],[8,"FnOnce",11],[4,"Result",12],[3,"TypeId",13]],"b":[]},\
"hyperion_driver_acpi":{"doc":"","t":"EENNNNNNDDDDEDNNNDALLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAFLLLLLLLLLLLLLLLLLLALALLLLLLLFAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRHDDDRDMLLLLLLLLLLLLLLLLLLLLLLLMLLLLFFLMLLLLLLLFLLLLLLLLLLLLLMLMMMMMMMMLLLMLLMMMMMMLLLLLLLLLLLLLGNDDDHDDEDDNDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHDDDMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMLLLLLLLLLLLLMNHDENLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLNNNNHDENLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLHDENLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLL","n":["AcpiOem","AcpiVersion","Bochs","InvalidChecksum","InvalidRevision","InvalidSignature","InvalidStructure","Other","RawSdtHeader","ReadOnly","ReadWrite","Reserved","SdtError","StructUnpacker","Utf8Error","V1","V2","WriteOnly","apic","backtrack","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checksum_of","checksum_of_slice","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","hpet","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","ioapic","left","madt","new","next","next_unchecked","now_at","parse","read","read","read_unaligned_volatile","rsdp","rsdt","skip","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpack","write","write","APIC_CALIBRATION_MICROS","APIC_PERIOD_MULT","APIC_TIMER_HANDLER","ApicId","ApicRegs","ApicTls","IRQ_APIC_SPURIOUS","Lapic","arbitration_priority","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","current","current","current_mut","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","destination_format","drop","drop","drop","drop","enable","enable_timer","eoi","eoi","eq","fmt","fmt","from","from","from","from","get_apic_regs","hash","init","init","init","init","inner","into","into","into","into","is_ioapic_compatible","iter","lapic","lapic_id","lapic_mut","lapic_ver","logical_destination","lvt_error","lvt_lint_0","lvt_lint_1","lvt_perf_mon_counters","lvt_thermal_sensor","lvt_timer","new","new","partial_cmp","processor_priority","regs","regs_mut","remote_read","spurious_interrupt_vector","task_priority","timer_current","timer_divide","timer_init","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","CounterValue","DoesntExist","GeneralCaps","GeneralConfig","GeneralInterruptStatus","HPET","Hpet","HpetDevice","HpetError","HpetRegs","RawHpetBits","Sdt","TimerN","TimerNConfigAndCaps","TimerNHandle","_apic_sleep_simple_blocking","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caps","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","comparator_count","comparator_value","config","config_and_caps","count_size_cap","counter_size","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable","femtos","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","fsb_enable","fsb_int_del_cap","handler","init","init","init","init","init","init","init","init","init","init","init","init","init","int_ack","int_enable","int_route","int_route_cap","int_trigger","interrupt_status","into","into","into","into","into","into","into","into","into","into","into","leg_rt","leg_rt_cap","legacy_replacement","len","main_counter_value","micros","millis","minutes","mode","nanos","nanos_to_deadline","nanos_to_ticks_i","nanos_to_ticks_u","nanosecond_now","next_timer","now_bytes","num_tim_cap","period","period","periodic_int_cap","picos","read","reserved","rev_id","seconds","set_comparator_count","set_comparator_value","set_config","set_config_and_caps","set_count_size_cap","set_counter_size","set_enable","set_fsb_enable","set_fsb_int_del_cap","set_int_enable","set_int_route","set_int_route_cap","set_int_trigger","set_interrupt_status","set_leg_rt","set_leg_rt_cap","set_legacy_replacement","set_main_counter_value","set_mode","set_num_tim_cap","set_period","set_periodic_int_cap","set_reserved","set_rev_id","set_size_cap","set_value_set","set_vendor_id","size_cap","sleep_until","ticks_to_nanos_i","ticks_to_nanos_u","timer_n_int_status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trigger_interrupt_at","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_init","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_set","vendor_id","write","IO_APICS","IoApic","IoApicInfo","IoApicRegs","addr","any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","fmt","fmt","from","from","from","gsi_base","id","init","init","init","init","into","into","into","iter","register_select_register","set_irq","set_irq_any","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","window_register","DoesntExist","MADT","Madt","MadtError","Sdt","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","from","from","from","init","init","init","into","into","io_apics","local_apic_addr","to_owned","to_owned","try_from","try_from","try_init","try_into","try_into","type_id","type_id","InvalidChecksum","InvalidRevision","InvalidSignature","NoRsdp","RSDP","Rsdp","RsdpError","Utf8Error","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","extended","fmt","fmt","from","from","from","get","init","init","init","into","into","ptr","to_owned","to_owned","try_from","try_from","try_init","try_into","try_into","type_id","type_id","RSDT","Rsdt","RsdtError","SdtHeader","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","extended","find_table","fmt","fmt","from","from","from","from","get","init","init","init","into","into","iter","iter_headers","to_owned","to_owned","try_from","try_from","try_init","try_into","try_into","type_id","type_id"],"q":[[0,"hyperion_driver_acpi"],[173,"hyperion_driver_acpi::apic"],[270,"hyperion_driver_acpi::hpet"],[521,"hyperion_driver_acpi::ioapic"],[574,"hyperion_driver_acpi::madt"],[616,"hyperion_driver_acpi::rsdp"],[661,"hyperion_driver_acpi::rsdt"],[704,"core::fmt"],[705,"core::fmt"],[706,"hyperion_static_str"],[707,"core::str::error"],[708,"core::option"],[709,"core::result"],[710,"core::any"],[711,"core::cmp"],[712,"spin::rwlock"],[713,"spin"],[714,"core::hash"],[715,"core::iter::traits::iterator"],[716,"core::ops::function"],[717,"hyperion_vfs::error"],[718,"spin::mutex"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bitwise checksum:","bitwise checksum:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Safety","High Precision Event Timer","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Multiple APIC Descriptor Table","Safety","","Safety","","","","","Safety","Root System Description Pointer","Root/eXtended System Descriptor Table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Table 10-1 Local APIC Register Address Map","","","","","","","","","","","","","","","","","apic id of this processor","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Safety","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","has 64 bit mode capability?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","enable HPET","theoretical max u96 sized output","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","front side bus interrupt mapping enabled","has front side bus interrupt mapping capability?","","","","","","","","","","","","","","","handles a timer interrupt","enable interrupts","I/O APIC routing [<code>int_route_cap</code>]","interrupt routing capability","interrupt trigger mode 0 = edge-triggered 1 = …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","legacy replacement mapping","has legacy replacement mapping capability?","","","","theoretical max u67 sized output","theoretical max u57 sized output","theoretical max u41 sized output","active mode 0 = one-shot (non-peridic) 1 = periodic","theoretical max u77 sized output","<code>nanos</code> is nanos from now","","","","","","number of timers - 1","HPET counter period in femtoseconds","main counter tick period in femtoseconds","has periodic mode capability?","theoretical max u87 sized output","","","implementation revision ID","theoretical max u47 sized output","","","","","has 64 bit mode capability?","","enable HPET","front side bus interrupt mapping enabled","has front side bus interrupt mapping capability?","enable interrupts","I/O APIC routing [<code>int_route_cap</code>]","interrupt routing capability","interrupt trigger mode 0 = edge-triggered 1 = …","","legacy replacement mapping","has legacy replacement mapping capability?","","","active mode 0 = one-shot (non-peridic) 1 = periodic","number of timers - 1","main counter tick period in femtoseconds","has periodic mode capability?","","implementation revision ID","has 64 bit mode capability?","write to periodic timer’s accumulator","PCI vendor ID","has 64 bit mode capability?","non blocking sleep, this triggers an interrupt after <code>dur</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","write to periodic timer’s accumulator","PCI vendor ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","register selector","","","","","","","","","","","","","register data","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Root/eXtended System Description Pointer","","","","","","","","","","","","","","","","","","<code>ptr</code> is XSDT pointer instead of RSDT pointer","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","a physical address of the Root/eXtended System Descriptor …","","","","","","","","","","RSDT/XSDT","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,6,9,9,9,9,6,0,0,0,0,0,0,9,7,7,0,0,1,11,16,17,18,6,7,8,9,1,11,16,17,18,6,7,8,9,1,0,0,6,7,8,9,1,6,7,8,9,1,11,16,17,18,6,7,8,9,1,11,16,17,18,6,7,8,9,1,11,16,17,18,6,7,8,9,1,6,7,8,9,1,11,16,17,18,6,7,8,9,1,11,16,17,18,6,6,7,8,9,9,1,1,0,0,11,16,17,18,6,7,8,9,1,11,16,17,18,6,7,8,9,1,0,1,0,1,1,1,1,8,11,16,0,0,0,1,6,7,8,9,1,11,16,17,18,6,7,7,8,9,1,11,16,17,18,6,7,8,9,1,11,16,17,18,6,7,8,9,1,1,16,17,0,0,0,0,0,0,0,0,31,30,27,25,31,30,27,25,31,25,25,25,27,25,27,30,30,27,25,31,30,27,25,31,31,30,27,25,31,0,0,27,31,25,25,31,30,27,25,31,0,25,30,27,25,31,25,30,27,25,31,25,25,25,31,25,31,31,31,31,31,31,31,31,30,25,25,31,27,27,31,31,31,31,31,31,25,30,27,25,31,30,27,25,31,30,27,25,31,0,39,0,0,0,0,0,0,0,0,0,39,0,0,0,36,50,36,48,44,46,39,38,40,41,42,43,50,36,48,44,46,39,38,40,41,42,43,36,39,38,40,41,42,43,39,38,40,41,42,43,43,44,36,44,38,43,50,36,48,44,46,46,39,38,40,41,42,43,50,36,48,44,46,46,39,38,40,41,42,43,50,36,48,44,46,46,39,38,40,41,42,43,40,36,36,48,44,46,39,38,40,41,42,43,50,36,48,44,46,39,39,38,40,41,42,43,41,41,44,50,36,36,48,44,44,46,39,38,40,41,42,43,36,41,41,41,41,36,50,36,48,44,46,39,38,40,41,42,43,40,38,43,50,36,36,36,36,41,36,36,36,36,36,36,36,38,36,38,41,36,50,43,38,36,43,44,36,44,38,43,40,41,41,41,41,41,41,36,40,38,43,36,41,38,38,41,43,38,41,41,38,41,44,36,36,42,39,38,40,41,42,43,36,50,36,48,44,46,39,38,40,41,42,43,36,50,36,48,44,46,39,38,40,41,42,43,50,36,48,44,46,39,38,40,41,42,43,41,38,50,0,0,0,0,55,53,53,56,55,53,56,55,55,55,53,56,55,53,56,55,53,56,55,55,56,55,53,56,55,55,55,53,53,56,55,53,56,55,53,56,53,53,55,53,56,55,53,56,55,53,56,55,56,58,0,0,0,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,57,58,58,57,57,58,57,58,57,57,57,58,57,58,57,57,58,57,58,60,60,60,60,0,0,0,60,59,60,59,60,59,60,59,60,59,60,59,60,59,60,59,59,59,60,59,60,60,59,59,59,60,59,60,59,59,60,59,60,59,59,60,59,60,0,0,0,62,61,62,61,62,61,62,61,62,61,62,61,62,61,62,61,61,61,62,61,62,62,62,61,61,61,62,61,62,61,61,61,62,61,62,61,61,62,61,62],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,4,[]],[[[5,[-1]]],4,[]],[6,6],[7,7],[8,8],[9,9],[1,1],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[[6,6],10],[[7,7],10],[[8,8],10],[[9,9],10],[[1,2],3],[[[11,[-1]],12],13,[14,15]],[[[16,[-1]],12],13,[14,15]],[[[17,[-1]],12],13,[14,15]],[[[18,[-1]],12],13,[14,15]],[[6,12],13],[[7,12],13],[[8,12],13],[[9,12],13],[[1,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[20,9],[-1,-1,[]],[-1,-1,[]],[[],1],0,[[],3],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,2],0,[[4,2],1],[[1,10],[[21,[-1]]],15],[[1,10],-1,15],[1,4],[[1,[21,[[22,[4]]]]],[[23,[8,9]]]],[[[11,[-1]]],-1,[]],[[[16,[-1]]],-1,[]],[[],-1,15],0,0,[[1,2],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[4,[[23,[7]]]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[[1,10],[[23,[-1,9]]],15],[[[16,[-1]],-1],3,[]],[[[17,[-1]],-1],3,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,25],[[-1,-2],3,[],[]],[[25,25],26],[[],[[28,[27]]]],[[],25],[[],[[29,[27]]]],[[[30,[-1]]],[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],0,[2,3],[2,3],[2,3],[2,3],[[],3],[[[29,[27]]],3],[27,3],0,[[25,25],10],[[25,12],13],[[31,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],31],[[25,-1],3,32],[[],2],[[],2],[[],2],[[],2],[25,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,10],[[],[[0,[34]]]],[25,[[28,[27]]]],0,[25,[[29,[27]]]],0,0,0,0,0,0,0,0,[-1,[[30,[-2]]],35,[]],[33,25],[[25,25],[[21,[26]]]],0,[27,31],[27,31],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[36,37,35],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,38],[39,39],[38,38],[40,40],[41,41],[42,42],[43,43],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[43,4],[44,45],[36,40],[44,41],[38,10],[43,10],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[46],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[46],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[2,3],[2,3],[46,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[40,10],[36,47],[[36,12],13],[[48,12],13],[[44,12],13],[[46,12],13],[[39,12],13],[[38,12],13],[[40,12],13],[[41,12],13],[[42,12],13],[[43,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[41,49],[41,49],[44,25],[[],2],[[],2],[[],36],[[],2],[44,3],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[36,3],[41,10],[41,49],[41,49],[41,10],[36,42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,10],[38,10],[43,10],[50,2],[36,45],[36,47],[36,49],[36,49],[41,10],[36,47],[[36,49],49],[[36,51],51],[[36,49],49],[36,47],[36,46],[36,[[22,[4]]]],[38,49],[36,33],[38,49],[41,10],[36,47],[[50,2,[5,[4]]],[[52,[2]]]],[43,10],[38,49],[36,49],[[43,4],3],[[44,45],3],[[36,40],3],[[44,41],3],[[38,10],3],[[43,10],3],[[40,10],3],[[41,49],3],[[41,49],3],[[41,10],3],[[41,49],3],[[41,49],3],[[41,10],3],[[36,42],3],[[40,10],3],[[38,10],3],[[43,10],3],[[36,45],3],[[41,10],3],[[38,49],3],[[38,49],3],[[41,10],3],[[43,10],3],[[38,49],3],[[41,10],3],[[41,10],3],[[38,49],3],[41,10],[[44,49],3],[[36,51],51],[[36,49],49],[[42,2],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[36,47],3],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[[],[[23,[36,39]]]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[41,10],[38,49],[[50,2,[5,[4]]],[[52,[2]]]],0,0,0,0,0,[[],[[21,[[54,[53]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[55,55],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[2,3],[[55,55],10],[[56,12],13],[[55,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[55,53],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[0,[34]]]],0,[[53,4,25,4],3],[[53,4,4],25],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,57],[58,58],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[57,57],10],[[58,58],10],[[57,12],13],[[58,12],13],[-1,-1,[]],[9,58],[-1,-1,[]],[[],57],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[[],[[23,[57,58]]]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,59],[60,60],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[[59,59],10],0,[[59,12],13],[[60,12],13],[-1,-1,[]],[-1,-1,[]],[20,60],[[],59],[[],2],[[],59],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[[],[[23,[59,60]]]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[61,61],[62,62],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],0,[[61,[22,[4]]],[[21,[[3,[8,1]]]]]],[[61,12],13],[[62,12],13],[-1,-1,[]],[-1,-1,[]],[9,62],[20,62],[[],61],[[],2],[[],61],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[61,[[0,[34]]]],[61,[[0,[34]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[[],[[23,[61,62]]]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]]],"c":[],"p":[[3,"StructUnpacker",0],[15,"usize"],[15,"tuple"],[15,"u8"],[15,"slice"],[4,"AcpiOem",0],[4,"AcpiVersion",0],[3,"RawSdtHeader",0],[4,"SdtError",0],[15,"bool"],[3,"ReadOnly",0],[3,"Formatter",704],[6,"Result",704],[8,"Debug",704],[8,"Copy",705],[3,"ReadWrite",0],[3,"WriteOnly",0],[3,"Reserved",0],[3,"StaticStr",706],[3,"Utf8Error",707],[4,"Option",708],[15,"array"],[4,"Result",709],[3,"TypeId",710],[3,"ApicId",173],[4,"Ordering",711],[3,"Lapic",173],[3,"RwLockReadGuard",712],[6,"RwLockWriteGuard",713],[3,"ApicTls",173],[3,"ApicRegs",173],[8,"Hasher",714],[15,"u32"],[8,"Iterator",715],[8,"FnMut",716],[3,"Hpet",270],[15,"u16"],[3,"GeneralCaps",270],[4,"HpetError",270],[3,"GeneralConfig",270],[3,"TimerNConfigAndCaps",270],[3,"GeneralInterruptStatus",270],[3,"RawHpetBits",270],[3,"TimerN",270],[6,"CounterValue",270],[3,"TimerNHandle",270],[15,"u128"],[3,"HpetRegs",270],[15,"u64"],[3,"HpetDevice",270],[15,"i64"],[6,"IoResult",717],[3,"IoApic",521],[3,"MutexGuard",718],[3,"IoApicInfo",521],[3,"IoApicRegs",521],[3,"Madt",574],[4,"MadtError",574],[3,"Rsdp",616],[4,"RsdpError",616],[3,"Rsdt",661],[4,"RsdtError",661]],"b":[[685,"impl-From%3CSdtError%3E-for-RsdtError"],[686,"impl-From%3CUtf8Error%3E-for-RsdtError"]]},\
"hyperion_driver_framebuffer":{"doc":"","t":"DLLLLLLLLLLLLLLLL","n":["FboDevice","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","len","read","try_from","try_into","type_id","with","with_mut","write"],"q":[[0,"hyperion_driver_framebuffer"],[17,"hyperion_vfs::error"],[18,"core::result"],[19,"core::any"],[20,"core::ops::function"]],"d":["","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[-1,-1,[]],[[],1],[-1,-2,[],[]],[3,1],[[3,1,[5,[4]]],[[6,[1]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,9,[]],[-1,-2,9,[]],[[3,1,[5,[4]]],[[6,[1]]]]],"c":[],"p":[[15,"usize"],[15,"tuple"],[3,"FboDevice",0],[15,"u8"],[15,"slice"],[6,"IoResult",17],[4,"Result",18],[3,"TypeId",19],[8,"FnOnce",20]],"b":[]},\
"hyperion_driver_pic":{"doc":"","t":"HDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["PICS","Pic","Pics","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","disable","drop","drop","enable","end_of_interrupt","from","from","init","init","init","into","into","mask","new","read_pit_count","try_from","try_from","try_into","try_into","type_id","type_id","unmask"],"q":[[0,"hyperion_driver_pic"],[33,"core::result"],[34,"core::any"]],"d":["","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,2,7,2,7,2,7,2,7,2,2,7,2,2,2,7,2,2,7,2,7,2,2,2,2,7,2,7,2,7,2],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[2,3],[1,3],[1,3],[2,3],[[2,4],3],[-1,-1,[]],[-1,-1,[]],[[],1],[2,3],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[[2,4],3],[[],2],[[],3],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[[2,4],3]],"c":[],"p":[[15,"usize"],[3,"Pics",0],[15,"tuple"],[15,"u8"],[4,"Result",33],[3,"TypeId",34],[3,"Pic",0]],"b":[]},\
"hyperion_driver_pit":{"doc":"","t":"HDLLLLLLLLLLLLLLLL","n":["PIT","Pit","_apic_simple_pit_wait","_apic_sleep_simple_blocking","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","nanosecond_now","new","trigger_interrupt_at","try_from","try_into","type_id"],"q":[[0,"hyperion_driver_pit"],[18,"core::ops::function"],[19,"core::ops::function"],[20,"core::any"]],"d":["","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,[[1,2,-1],3,4],[[1,5,6],3],[-1,-2,[],[]],[-1,-2,[],[]],[7,-1,[]],[7,-1,[]],[7,3],[-1,-1,[]],[[],7],[-1,-2,[],[]],[1,8],[[],1],[[1,8],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]]],"c":[],"p":[[3,"Pit",0],[15,"u32"],[15,"tuple"],[8,"FnOnce",18],[15,"u16"],[8,"FnMut",18],[15,"usize"],[15,"u128"],[4,"Result",19],[3,"TypeId",20]],"b":[]},\
"hyperion_driver_ps2":{"doc":"","t":"AAFF","n":["keyboard","mouse","init","init"],"q":[[0,"hyperion_driver_ps2"],[2,"hyperion_driver_ps2::keyboard"],[3,"hyperion_driver_ps2::mouse"]],"d":["","","",""],"i":[0,0,0,0],"f":[0,0,[[],1],[[],1]],"c":[],"p":[[15,"tuple"]],"b":[]},\
"hyperion_driver_qemu":{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[],"b":[]},\
"hyperion_driver_rtc":{"doc":"","t":"RHHDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CUR_YEAR","RTC","RTC_CENTURY_REG","Rtc","RtcDevice","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","enable_ints","from","from","init","init","init_clock","int_ack","into","into","len","new","now","now_bytes","read","try_from","try_from","try_into","try_into","type_id","type_id","write"],"q":[[0,"hyperion_driver_rtc"],[37,"time::offset_date_time"],[38,"core::option"],[39,"hyperion_vfs::error"],[40,"core::result"],[41,"core::any"]],"d":["","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,4,1,4,1,1,4,1,4,1,4,1,1,4,1,4,1,1,1,4,4,1,1,1,4,1,4,1,4,1,4,4],"f":[0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,-1,[]],[2,3],[2,3],[1,3],[-1,-1,[]],[-1,-1,[]],[[],2],[[],2],[1,3],[1,3],[-1,-2,[],[]],[-1,-2,[],[]],[4,2],[[],1],[1,[[6,[5]]]],[1,[[8,[7]]]],[[4,2,[9,[7]]],[[10,[2]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[[4,2,[9,[7]]],[[10,[2]]]]],"c":[],"p":[[3,"Rtc",0],[15,"usize"],[15,"tuple"],[3,"RtcDevice",0],[3,"OffsetDateTime",37],[4,"Option",38],[15,"u8"],[15,"array"],[15,"slice"],[6,"IoResult",39],[4,"Result",40],[3,"TypeId",41]],"b":[]},\
"hyperion_drivers":{"doc":"","t":"CCFFC","n":["acpi","fbo","lazy_install_early","lazy_install_late","rtc"],"q":[[0,"hyperion_drivers"]],"d":["","","","",""],"i":[0,0,0,0,0],"f":[0,0,[[],1],[[],1],0],"c":[],"p":[[15,"tuple"]],"b":[]},\
"hyperion_escape":{"doc":"","t":"AANNNEDNNNLLLLLLLLLLLLLLLLLDILLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["decode","encode","BgColor","Byte","Bytes","DecodedPart","EscapeDecoder","FgColor","None","Reset","borrow","borrow","borrow_mut","borrow_mut","clear","from","from","into","into","new","next","try_from","try_from","try_into","try_into","type_id","type_id","EncodedPart","EscapeEncoder","borrow","borrow_mut","clone","clone_into","color_to_code","default","fmt","fmt","fmt","from","from","from","into","reset_after","to_owned","to_string","true_black","true_blue","true_cyan","true_darkgrey","true_green","true_grey","true_lightgrey","true_magenta","true_red","true_white","true_yellow","try_from","try_into","type_id","with_escape_code","with_reset"],"q":[[0,"hyperion_escape"],[2,"hyperion_escape::decode"],[27,"hyperion_escape::encode"],[61,"core::result"],[62,"core::any"],[63,"core::clone"],[64,"core::marker"],[65,"hyperion_color"],[66,"alloc::sync"],[67,"core::fmt"],[68,"core::fmt"]],"d":["","","","","Null terminated","","foreground color can be changed like this: …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,0,2,2,2,0,0,2,2,2,1,2,1,2,1,1,2,1,2,1,1,1,2,1,2,1,2,0,0,6,6,6,6,0,6,6,6,6,6,6,6,6,21,6,6,21,21,21,21,21,21,21,21,21,21,21,6,6,6,21,6],"f":[0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[1,3],2],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],[[6,[-1]]],[7,8]],[[-1,-2],9,[],[]],[10,[[12,[11]]]],[[],[[6,[9]]]],[[[6,[-1]],13],14,15],[[[6,[-1]],13],14,16],[[[6,[-1]],13],14,17],[18,-1,[]],[-1,-1,[]],[-1,[[6,[-1]]],[]],[-1,-2,[],[]],[-1,[[6,[-1]]],[]],[-1,-2,[],[]],[-1,19,[]],[-1,[[6,[-1]]],[]],[-1,[[6,[-1]]],[]],[-1,[[6,[-1]]],[]],[-1,[[6,[-1]]],[]],[-1,[[6,[-1]]],[]],[-1,[[6,[-1]]],[]],[-1,[[6,[-1]]],[]],[-1,[[6,[-1]]],[]],[-1,[[6,[-1]]],[]],[-1,[[6,[-1]]],[]],[-1,[[6,[-1]]],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[[-1,11],[[6,[-1]]],[]],[[[6,[-1]],20],[[6,[-1]]],[]]],"c":[],"p":[[3,"EscapeDecoder",2],[4,"DecodedPart",2],[15,"u8"],[4,"Result",61],[3,"TypeId",62],[3,"EncodedPart",27],[8,"Clone",63],[8,"Sized",64],[15,"tuple"],[3,"Color",65],[15,"str"],[3,"Arc",66],[3,"Formatter",67],[6,"Result",67],[8,"Display",67],[8,"LowerHex",67],[8,"Debug",67],[15,"never"],[3,"String",68],[15,"bool"],[8,"EscapeEncoder",27]],"b":[[35,"impl-Display-for-EncodedPart%3C\'_,+T%3E"],[36,"impl-LowerHex-for-EncodedPart%3C\'_,+T%3E"],[37,"impl-Debug-for-EncodedPart%3C\'_,+T%3E"]]},\
"hyperion_framebuffer":{"doc":"","t":"AAAHDDLLLLLLLLLLLLLLLLLLLMLMLLLMLLLLLLLLLMF","n":["font","framebuffer","logger","FONT","Framebuffer","FramebufferInfo","ascii_char","borrow","borrow","borrow_mut","borrow_mut","buf_mut","clear","clone","clone_into","default","deref","deref_mut","eq","fill","fmt","fmt","from","from","get","height","info","info","into","into","new","pitch","pixel","scroll","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","width","_print"],"q":[[0,"hyperion_framebuffer"],[3,"hyperion_framebuffer::font"],[4,"hyperion_framebuffer::framebuffer"],[42,"hyperion_framebuffer::logger"],[43,"hyperion_color"],[44,"core::fmt"],[45,"core::fmt"],[46,"core::option"],[47,"core::result"],[48,"core::any"],[49,"core::fmt"]],"d":["","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,8,1,8,1,1,8,8,8,1,1,8,1,1,8,1,8,1,8,1,1,1,8,1,8,1,1,8,1,8,1,8,1,8,8,0],"f":[0,0,0,0,0,0,[[1,2,2,3,4,4],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[6,[3]]]],[1,7],[8,8],[[-1,-2],7,[],[]],[[],8],[1],[1],[[8,8],5],[[1,2,2,2,2,4],7],[[1,9],10],[[8,9],10],[-1,-1,[]],[-1,-1,[]],[[],[[12,[[11,[1]]]]]],0,[1,8],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[3]],8],1],0,[[1,2,2,4],7],[[1,2],7],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],0,[15,7]],"c":[],"p":[[3,"Framebuffer",4],[15,"usize"],[15,"u8"],[3,"Color",43],[15,"bool"],[15,"slice"],[15,"tuple"],[3,"FramebufferInfo",4],[3,"Formatter",44],[6,"Result",44],[6,"Mutex",45],[4,"Option",46],[4,"Result",47],[3,"TypeId",48],[3,"Arguments",44]],"b":[]},\
"hyperion_futures":{"doc":"","t":"AAAAAFFFFFDLLLLLLLLLLLLFLLLLLDDDDLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLMDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLL","n":["executor","keyboard","mpmc","task","timer","pop_task","push_task","run_once","run_tasks","spawn","KeyboardEvents","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","keyboard_events","poll_next","to_owned","try_from","try_into","type_id","Receiver","Recv","RecvStream","Sender","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_future","poll","poll_next","race_stream","recv","send","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll_next","try_recv","type_id","type_id","type_id","type_id","Future","None","Process","Task","TaskContext","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_future","from_process","init","init","into","into","poll","schedule","try_from","try_from","try_into","try_into","type_id","type_id","wake_by_ref","inner","Sleep","SleepUntil","Ticks","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_future","into_future","new","new","poll","poll","poll_next","sleep","sleep_until","ticks","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"hyperion_futures"],[5,"hyperion_futures::executor"],[10,"hyperion_futures::keyboard"],[29,"hyperion_futures::mpmc"],[94,"hyperion_futures::task"],[126,"hyperion_futures::task::TaskContext"],[127,"hyperion_futures::timer"],[185,"alloc::sync"],[186,"core::option"],[187,"core::future::future"],[188,"core::marker"],[189,"core::fmt"],[190,"core::fmt"],[191,"core::task::wake"],[192,"core::task::poll"],[193,"core::result"],[194,"core::any"],[195,"core::clone"],[196,"hyperion_instant"],[197,"time::duration"]],"d":["","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","A kernel task","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","async sleep duration","async sleep until deadline","async sleep repeat","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,0,8,8,8,8,8,0,0,0,0,20,21,17,18,20,21,17,18,0,17,18,17,18,20,21,17,18,20,21,17,18,20,21,17,17,18,18,20,21,17,18,20,21,17,18,20,21,17,18,20,20,21,18,18,17,17,18,20,21,17,18,20,21,17,18,21,18,20,21,17,18,27,27,27,0,0,1,27,1,27,1,27,1,27,1,27,1,27,1,1,1,27,1,27,1,1,1,27,1,27,1,27,1,28,0,0,0,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,22,23,22,23,22,23,24,0,0,0,22,23,24,22,23,24,22,23,24,22,23,24],"f":[0,0,0,0,0,[[],[[3,[[2,[1]]]]]],[[[2,[1]]],4],[[],[[3,[4]]]],[[],5],[-1,4,[6,7]],0,[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[[-1,-2],4,[],[]],[[],8],[9,-1,[]],[9,-1,[]],[9,4],[[8,10],11],[-1,-1,[]],[[],9],[-1,-2,[],[]],[[],8],[[[12,[8]],13],[[14,[3]]]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[4,[[17,[-1]],[18,[-1]]]]],[]],[[[17,[-1]]],[[17,[-1]]],19],[[[18,[-1]]],[[18,[-1]]],19],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,4],[9,4],[9,4],[[[17,[-1]]],4,[]],[9,4],[[[18,[-1]]],4,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],9],[[],9],[[],9],[[],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[[[12,[[20,[-1]]]],13],14,[]],[[[12,[[21,[-1]]]],13],[[14,[3]]],[]],[[[18,[-1]]],[[21,[-1]]],[]],[[[18,[-1]]],[[20,[-1]]],[]],[[[17,[-1]],-1],[[3,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[[12,[-1]],13],[[14,[[3,[15]]]]],[]],[[[18,[-1]]],[[3,[-1]]],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,4],[9,4],[-1,-1,[]],[-1,-1,[]],[-1,1,[6,7]],[[],4],[[],9],[[],9],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[1]]],4],[[[2,[1]]],4],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[[[2,[1]]],4],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[22,22],[23,23],[24,24],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,4],[9,4],[9,4],[[22,10],11],[[23,10],11],[[24,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],9],[[],9],[[],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[25,22],[26,23],[[[12,[22]],13],14],[[[12,[23]],13],14],[[[12,[24]],13],[[14,[3]]]],[26,23],[25,22],[26,24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]]],"c":[],"p":[[3,"Task",94],[3,"Arc",185],[4,"Option",186],[15,"tuple"],[15,"never"],[8,"Future",187],[8,"Send",188],[3,"KeyboardEvents",10],[15,"usize"],[3,"Formatter",189],[6,"Result",189],[3,"Pin",190],[3,"Context",191],[4,"Poll",192],[4,"Result",193],[3,"TypeId",194],[3,"Sender",29],[3,"Receiver",29],[8,"Clone",195],[3,"Recv",29],[3,"RecvStream",29],[3,"SleepUntil",127],[3,"Sleep",127],[3,"Ticks",127],[3,"Instant",196],[3,"Duration",197],[4,"TaskContext",94],[13,"Future",126]],"b":[]},\
"hyperion_instant":{"doc":"","t":"DSLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Instant","ZERO","add","borrow","borrow_mut","checked_add","checked_sub","checked_sub","clone","clone_into","cmp","deref","deref_mut","drop","elapsed","eq","fmt","from","init","into","is_reached","nanosecond","new","now","partial_cmp","sub","sub","to_owned","try_from","try_into","type_id"],"q":[[0,"hyperion_instant"],[31,"time::duration"],[32,"core::option"],[33,"core::cmp"],[34,"core::fmt"],[35,"core::fmt"],[36,"core::any"]],"d":["","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,[[1,2]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2],3],[[1,2],3],[[1,1],3],[1,1],[[-1,-2],4,[],[]],[[1,1],5],[6,-1,[]],[6,-1,[]],[6,4],[1,2],[[1,1],7],[[1,8],9],[-1,-1,[]],[[],6],[-1,-2,[],[]],[1,7],[1,10],[10,1],[[],1],[[1,1],[[3,[5]]]],[[1,2]],[[1,1]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]]],"c":[],"p":[[3,"Instant",0],[3,"Duration",31],[4,"Option",32],[15,"tuple"],[4,"Ordering",33],[15,"usize"],[15,"bool"],[3,"Formatter",34],[6,"Result",34],[15,"u128"],[4,"Result",35],[3,"TypeId",36]],"b":[[6,"impl-CheckedSub%3CDuration%3E-for-Instant"],[7,"impl-CheckedSub-for-Instant"],[25,"impl-Sub%3CDuration%3E-for-Instant"],[26,"impl-Sub-for-Instant"]]},\
"hyperion_int_safe_lazy":{"doc":"Lazy initialized value that doesn’t get initialized with …","t":"DLLLLLLLLLLLLL","n":["IntSafeLazy","as_mut_ptr","borrow","borrow_mut","default","fmt","from","get","get_force","into","new","try_from","try_into","type_id"],"q":[[0,"hyperion_int_safe_lazy"],[14,"core::default"],[15,"core::fmt"],[16,"core::fmt"],[17,"core::ops::function"],[18,"core::result"],[19,"core::any"]],"d":["","Retrieves a mutable pointer to the inner data.","","","Creates a new lazy value using <code>Default</code> as the initializing …","","Returns the argument unchanged.","This is the interrupt safe method for retrieving the value …","This is not the interrupt safe method for retrieving the …","Calls <code>U::from(self)</code>.","Creates a new lazy value with the given initializing …","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[[1,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[1,[-1]]],2],[[[1,[-1,-2]],3],4,5,[]],[-1,-1,[]],[[[1,[-1,-2]]],[[6,[-1]]],[],7],[[[1,[-1,-2]]],-1,[],7],[-1,-2,[],[]],[-1,[[1,[-2,-1]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]]],"c":[],"p":[[3,"IntSafeLazy",0],[8,"Default",14],[3,"Formatter",15],[6,"Result",15],[8,"Debug",15],[4,"Option",16],[8,"FnOnce",17],[4,"Result",18],[3,"TypeId",19]],"b":[]},\
"hyperion_interrupts":{"doc":"","t":"NHHRHHEDNNLLLLLLLFLLLLLLFLLLLFLLFLLLLFFFLLLLLLLLL","n":["Apic","INT_ALLOCATOR","INT_CONTROLLER","INT_COUNT","INT_EOI_HANDLER","INT_HANDLERS","IntController","IntHandler","None","Pic","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","default_handler","deref","deref","deref_mut","deref_mut","drop","drop","end_of_interrupt","eq","fmt","from","from","handler","init","init","interrupt_handler","into","into","load","new","set_any_interrupt_handler","set_interrupt_handler","set_interrupt_handler_if_free","store","store_if_free","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"hyperion_interrupts"],[49,"core::fmt"],[50,"core::fmt"],[51,"core::ops::function"],[52,"core::result"],[53,"core::any"]],"d":["‘Advanced Programmable Interrupt Timer’","","","","","","","","","The legacy ‘Programmable Interrupt Timer’","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[1,0,0,0,0,0,0,0,1,1,8,1,8,1,1,1,1,0,8,1,8,1,8,1,0,1,1,8,1,0,8,1,0,8,1,8,8,0,0,0,8,8,1,8,1,8,1,8,1],"f":[0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[],1],[3,2],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[3,2],[[1,1],5],[[1,6],7],[-1,-1,[]],[-1,-1,[]],[3,8],[[],4],[[],4],[3,2],[-1,-2,[],[]],[-1,-2,[],[]],[8],[[],8],[-1,[[9,[3]]],10],[3,2],[3,5],[8,2],[8,5],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]]],"c":[],"p":[[4,"IntController",0],[15,"tuple"],[15,"u8"],[15,"usize"],[15,"bool"],[3,"Formatter",49],[6,"Result",49],[3,"IntHandler",0],[4,"Option",50],[8,"Fn",51],[4,"Result",52],[3,"TypeId",53]],"b":[]},\
"hyperion_kernel":{"doc":"Hyperion","t":"FAAFDDLLLLLFFLLLLLLFMMLLLLLLFFFFFFFMFFFFFFFFFFFFLLLLLLLLFF","n":["_start","panic","syscall","panic_handler","File","ProcessExtra","as_any","borrow","borrow","borrow_mut","borrow_mut","call_id","close","deref","deref","deref_mut","deref_mut","drop","drop","exit","file_ref","files","from","from","init","init","into","into","log","map_vfs_err_to_syscall_err","nanosleep","nanosleep_until","open","palloc","pfree","position","process_ext_with","pthread_spawn","read","read_slice_parts","read_untrusted_bytes","read_untrusted_bytes_mut","read_untrusted_str","recv","rename","send","syscall","timestamp","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write","yield_now"],"q":[[0,"hyperion_kernel"],[3,"hyperion_kernel::panic"],[4,"hyperion_kernel::syscall"],[58,"core::panic::panic_info"],[59,"core::any"],[60,"hyperion_arch_x86_64::syscall"],[61,"hyperion_syscall::err"],[62,"core::ops::function"],[63,"hyperion_vfs::error"],[64,"hyperion_syscall::err"],[65,"x86_64::addr"],[66,"core::result"],[67,"core::any"]],"d":["","","","","","","","","","","","","close a file","","","","","","","exit and kill the current process","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","print a string to logs","","sleep at least arg0 nanoseconds","sleep at least until the nanosecond arg0 happens","open a file","allocate physical pages and map them to virtual memory","free allocated physical pages","","","spawn a new thread","read bytes from a file","","","","","recv data from this process input channel","rename the current process","send data to an input channel of a process","","get the number of nanoseconds after boot","","","","","","","","","write bytes into a file","give the processor back to the kernel temporarily"],"i":[0,0,0,0,0,0,3,3,20,3,20,0,0,3,20,3,20,3,20,0,20,3,3,20,3,20,3,20,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,3,20,3,20,3,20,3,20,0,0],"f":[[[],1],0,0,[2,1],0,0,[3,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,5],[[9,[[7,[6]],8]]],10],[5,[[7,[6]]]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,9],[6,9],[5,[[7,[6]]]],0,0,[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[5,[[7,[6]]]],[11,12],[5,[[7,[6]]]],[5,[[7,[6]]]],[5,[[7,[6]]]],[5,[[7,[6]]]],[5,[[7,[6]]]],0,[13,3],[5,[[7,[6]]]],[5,[[7,[6]]]],[[14,14],[[7,[[9,[15,6]]]]]],[[14,14],[[7,[[17,[16]]]]]],[[14,14],[[7,[[17,[16]]]]]],[[14,14],[[7,[8]]]],[5,[[7,[6]]]],[5,[[7,[6]]]],[5,[[7,[6]]]],[5,9],[5,[[7,[6]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,[[7,[6]]]],[5,[[7,[6]]]]],"c":[],"p":[[15,"never"],[3,"PanicInfo",58],[3,"ProcessExtra",4],[8,"Any",59],[3,"SyscallRegs",60],[15,"usize"],[6,"Result",61],[15,"str"],[15,"tuple"],[8,"FnOnce",62],[4,"IoError",63],[3,"Error",61],[3,"Process",64],[15,"u64"],[3,"VirtAddr",65],[15,"u8"],[15,"slice"],[4,"Result",66],[3,"TypeId",59],[3,"File",4]],"b":[]},\
"hyperion_kernel_info":{"doc":"","t":"HHHHH","n":["BUILD_REV","BUILD_TIME","NAME","SPLASH","VERSION"],"q":[[0,"hyperion_kernel_info"]],"d":["","","","",""],"i":[0,0,0,0,0],"f":[0,0,0,0,0],"c":[],"p":[],"b":[]},\
"hyperion_keyboard":{"doc":"","t":"HAFFFFFFFNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLM","n":["LAZY","event","force_init_queue","layouts","next_keyboard_event","provide_keyboard_event","provide_raw_keyboard_event","set_layout","wait_keyboard_event","A","Apps","ArrowDown","ArrowLeft","ArrowRight","ArrowUp","B","Backspace","C","Calculator","CapsLock","D","Delete","E","ElementState","End","Escape","F","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","G","H","Home","I","Insert","J","K","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyCode","KeyboardEvent","L","LAlt","LControl","LShift","LWin","M","Mute","N","NextTrack","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadDivide","NumpadEnter","NumpadLock","NumpadMultiply","NumpadPeriod","NumpadSubtract","O","Oem1","Oem10","Oem11","Oem12","Oem13","Oem2","Oem3","Oem4","Oem5","Oem6","Oem7","Oem8","Oem9","OemComma","OemMinus","OemPeriod","OemPlus","P","PageDown","PageUp","PauseBreak","Play","PowerOnTestOk","PressHold","PressRelease","PrevTrack","PrintScreen","Q","R","RAlt2","RAltGr","RControl","RControl2","RShift","RWin","Release","Return","S","ScrollLock","Spacebar","Stop","SysRq","T","Tab","TooManyKeys","U","V","VolumeDown","VolumeUp","W","WWWHome","X","Y","Z","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","keycode","partial_cmp","state","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unicode"],"q":[[0,"hyperion_keyboard"],[9,"hyperion_keyboard::event"],[192,"core::option"],[193,"core::task::wake"],[194,"core::task::poll"],[195,"core::cmp"],[196,"core::fmt"],[197,"core::fmt"],[198,"core::any"]],"d":["","","","","","","","","","Letters, Middle Row #1","The ‘Apps’ key (aka ‘Menu’ or ‘Right-Click’)","The down-arrow in the inverted-T","The left-arrow in the inverted-T","The right-arrow in the inverted-T","The up-arrow in the inverted-T","Letters, Bottom Row #5","Backspace","Letters, Bottom Row #3","Multi-media keys - Open Calculator","Caps Lock","Letters, Middle Row #3","The Delete key - bottom Left of the Extended Block","Letters, Top Row #3","","The End key - bottom Middle of the Extended Block","Top Left of the Keyboard","Letters, Middle Row #4","Function Key F1","Function Key F10","Function Key F11","Function Key F12","Function Key F2","Function Key F3","Function Key F4","Function Key F5","Function Key F6","Function Key F7","Function Key F8","Function Key F9","Letters, Middle Row #5","Letters, Middle Row #6","Top Middle of the Extended Block","Letters, Top Row #8","Top Left of the Extended Block","Letters, Middle Row #7","Letters, Middle Row #8","Number Line, Digit 0","Number Line, Digit 1","Number Line, Digit 2","Number Line, Digit 3","Number Line, Digit 4","Number Line, Digit 5","Number Line, Digit 6","Number Line, Digit 7","Number Line, Digit 8","Number Line, Digit 9","Keycodes that can be generated by a keyboard.","","Letters, Middle Row #9","The left-hand Alt key","The left-hand Control key","Left Shift","The left-hand ‘Windows’ key","Letters, Bottom Row #7","Multi-media keys - Volume Mute Toggle","Letters, Bottom Row #6","Multi-media keys - Next Track","The Numpad 0/Insert Key","Numpad 1/End Key","Numpad 2/Arrow Down Key","Numpad 3/Page Down Key","The Numpad 4/Left Arrow key","The Numpad 5 Key","The Numpad 6/Right Arrow key","The Numpad 7/Home key","The Numpad 8/Up Arrow key","The Numpad 9/Page Up key","The Numpad Add/Plus key","The Numpad Divide (or Slash) key","Numpad Enter","The Num Lock key","The Numpad Multiple (or Star) key","The Numppad Period/Delete Key","The Numpad Subtract (or Minus) key","Letters, Top Row #9","The US ANSI Semicolon/Colon key","Extra JIS key (0x79)","Extra JIS key (0x70)","Extra JIS symbol key (0x73)","Extra JIS symbol key (0x7D)","US ANSI <code>/?</code> Key","The US ANSI Single-Quote/At key","US ANSI Left-Square-Bracket key","US ANSI Backslash Key / UK ISO Backslash Key","US ANSI Right-Square-Bracket key","The UK/ISO Hash/Tilde key (ISO layout only)","Symbol key to the left of <code>Key1</code>","Extra JIS key (0x7B)","US ANSI <code>,&lt;</code> key","US Minus/Underscore Key (right of ‘Key0’)","US ANSI <code>.&gt;</code> Key","US Equals/Plus Key (right of ‘OemMinus’)","Letters, Top Row #10","The Page Down key - -bottom Right of the Extended Block","Top Right of the Extended Block","The Pause/Break key","Multi-media keys - Play","Sent when the keyboard boots","","","Multi-media keys - Previous Track","The Print Screen Key","Letters, Top Row #1","Letters, Top Row #4","Used as a ‘hidden’ Right Alt Key (Print Screen = RAlt2 …","The right-hand AltGr key","The right-hand Control key","Used as a ‘hidden’ Right Control Key (Pause = …","Right Shift","The right-hand Win key","","The Return Key","Letters, Middle Row #2","The Scroll Lock key","The Space Bar","Multi-media keys - Stop","The Sys Req key (you get this keycode with Alt + …","Letters, Top Row #5","The Tab Key","Sent by the keyboard when too many keys are pressed","Letters, Top Row #7","Letters, Bottom Row #4","Multi-media keys - Increase Volume","Multi-media keys - Decrease Volume","Letters, Top Row #2","Multi-media keys - Open Browser","Letters, Bottom Row #2","Letters, Top Row #6","Letters, Bottom Row #1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,4,9,10,4,9,10,4,9,10,4,9,10,10,4,9,10,4,9,10,4,9,10,4,9,10,4,9,10,4,9,10,4,9,10,4,9,10,4,10,4,4,9,10,4,9,10,4,9,10,4,9,10,4],"f":[0,0,[[],1],[[],[[3,[2]]]],[[],[[5,[4]]]],[4,1],[6,1],[2,[[5,[1]]]],[7,[[8,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,4],[9,9],[10,10],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[10,10],11],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,1],[12,1],[12,1],[[4,4],13],[[9,9],13],[[10,10],13],[[4,14],15],[[9,14],15],[[10,14],[[17,[1,16]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],12],[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[10,10],[[5,[11]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0],"c":[],"p":[[15,"tuple"],[15,"str"],[15,"slice"],[3,"KeyboardEvent",9],[4,"Option",192],[15,"u8"],[3,"Context",193],[4,"Poll",194],[4,"ElementState",9],[4,"KeyCode",9],[4,"Ordering",195],[15,"usize"],[15,"bool"],[3,"Formatter",196],[6,"Result",196],[3,"Error",196],[4,"Result",197],[3,"TypeId",198]],"b":[]},\
"hyperion_kshell":{"doc":"","t":"NENNNNNNGLLLLLLLLLLLLLLFAALALLLLLMMMMDLLLLLLLLLLLLLLLLFDLLLMLLLLLLLLLLLMLLLLLLL","n":["Err","Error","InsecurePrng","IoError","NamelessFile","Ok","Other","Parse","Result","as_error_source","backtrace","borrow","borrow_mut","cause","deref","deref_mut","description","drop","fmt","fmt","from","init","into","kshell","shell","snake","source","term","to_string","try_from","try_into","type_id","vzip","msg","resource","source","source","Shell","borrow","borrow_mut","deref","deref_mut","drop","from","init","init","input","into","into_inner","new","try_from","try_into","type_id","vzip","snake_game","Term","borrow","borrow_mut","clear","cursor","cursor_prev","default","deref","deref_mut","drop","flush","from","init","into","new","read_at","size","try_from","try_into","type_id","vzip","write_byte","write_bytes","write_str"],"q":[[0,"hyperion_kshell"],[33,"hyperion_kshell::Error"],[37,"hyperion_kshell::shell"],[54,"hyperion_kshell::snake"],[55,"hyperion_kshell::term"],[79,"snafu::no_std_error"],[80,"snafu::backtrace_inert"],[81,"core::option"],[82,"core::fmt"],[83,"core::fmt"],[84,"core::result"],[85,"core::any"],[86,"hyperion_keyboard::event"]],"d":["Contains the error value","","","","","Contains the success value","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[16,0,2,2,2,16,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,2,0,2,2,2,2,2,19,20,20,21,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15],"f":[0,0,0,0,0,0,0,0,0,[-1,1,[]],[2,[[4,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[2,[[4,[1]]]],[5,-1,[]],[5,-1,[]],[2,6],[5,7],[[2,8],9],[[2,8],9],[-1,-1,[]],[[],5],[-1,-2,[],[]],[[],7],0,0,[2,[[4,[1]]]],0,[-1,10,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[5,-1,[]],[5,7],[-1,-1,[]],[13,7],[[],5],[[13,14],[[4,[7]]]],[-1,-2,[],[]],[13,15],[15,13],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],[15,[[16,[7]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[15,7],0,[15,7],[[],15],[5,-1,[]],[5,-1,[]],[5,7],[15,7],[-1,-1,[]],[[],5],[-1,-2,[],[]],[[],15],[[15,[7,[5,5]]],17],0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],[[15,17],7],[[15,[18,[17]]],7],[[15,6],9]],"c":[],"p":[[8,"Error",79],[4,"Error",0],[3,"Backtrace",80],[4,"Option",81],[15,"usize"],[15,"str"],[15,"tuple"],[3,"Formatter",82],[6,"Result",82],[3,"String",83],[4,"Result",84],[3,"TypeId",85],[3,"Shell",37],[3,"KeyboardEvent",86],[3,"Term",55],[6,"Result",0],[15,"u8"],[15,"slice"],[13,"Other",33],[13,"IoError",33],[13,"Parse",33]],"b":[[18,"impl-Display-for-Error"],[19,"impl-Debug-for-Error"]]},\
"hyperion_loader":{"doc":"","t":"DLLLLLLLLLLLLLLFLLL","n":["Loader","borrow","borrow_mut","debug","deref","deref_mut","drop","enter_userland","from","init","init_stack","into","load","load_segment","new","push","try_from","try_into","type_id"],"q":[[0,"hyperion_loader"],[19,"core::option"],[20,"x86_64::addr"],[21,"elf::segment"],[22,"core::marker"],[23,"core::result"],[24,"core::any"]],"d":["","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","push items to the stack","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[3,-1,[]],[3,-1,[]],[3,2],[[1,[5,[4]]],[[6,[2]]]],[-1,-1,[]],[[],3],[[[5,[4]]],7],[-1,-2,[],[]],[1,2],[[1,8],2],[[[5,[9]]],1],[[7,-1],2,10],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]]],"c":[],"p":[[3,"Loader",0],[15,"tuple"],[15,"usize"],[15,"str"],[15,"slice"],[4,"Option",19],[3,"VirtAddr",20],[3,"ProgramHeader",21],[15,"u8"],[8,"Sized",22],[4,"Result",23],[3,"TypeId",24]],"b":[]},\
"hyperion_log":{"doc":"","t":"SSNNNEINNNLLLLLOLLOLLOLKOLLKOOKFLOLLLO","n":["ALL","DEFAULT","Debug","Error","Info","LogLevel","Logger","None","Trace","Warn","borrow","borrow_mut","clone","clone_into","cmp","debug","default","eq","error","fmt","from","info","into","is_enabled","log","parse","partial_cmp","print","print","println","proc_name","set_logger","to_owned","trace","try_from","try_into","type_id","warn"],"q":[[0,"hyperion_log"],[38,"core::cmp"],[39,"core::fmt"],[40,"core::fmt"],[41,"core::fmt"],[42,"core::result"],[43,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,11,0,1,1,11,0,0,11,0,1,0,1,1,1,0],"f":[0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[1,1],3],0,[[],1],[[1,1],4],0,[[1,5],6],[-1,-1,[]],0,[-1,-2,[],[]],[[-1,1],4,[]],0,[7,[[8,[1]]]],[[1,1],[[8,[3]]]],[[-1,1,9],2,[]],0,0,[-1,[[8,[[10,[7]]]]],[]],[11,2],[-1,-2,[],[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],0],"c":[],"p":[[4,"LogLevel",0],[15,"tuple"],[4,"Ordering",38],[15,"bool"],[3,"Formatter",39],[6,"Result",39],[15,"str"],[4,"Option",40],[3,"Arguments",39],[4,"Cow",41],[8,"Logger",0],[4,"Result",42],[3,"TypeId",43]],"b":[]},\
"hyperion_log_multi":{"doc":"","t":"FFF","n":["init_logger","set_fbo","set_qemu"],"q":[[0,"hyperion_log_multi"],[3,"hyperion_log"]],"d":["","",""],"i":[0,0,0],"f":[[[],1],[2,1],[2,1]],"c":[],"p":[[15,"tuple"],[4,"LogLevel",3]],"b":[]},\
"hyperion_macros":{"doc":"","t":"OOOOOOO","n":["array","bmp_to_font","build_rev","build_time","gen_int_handlers","get_int_handlers","rtc_year"],"q":[[0,"hyperion_macros"]],"d":["","","","","","",""],"i":[0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0],"c":[],"p":[],"b":[]},\
"hyperion_mem":{"doc":"","t":"OFFFAAFAHDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNGIENKLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLKKKKKLLLLLLLLLLLLKK","n":["debug_phys_addr","force_init_allocator","from_higher_half","is_higher_half","pmm","slab","to_higher_half","vmm","PFA","PageFrame","PageFrameAllocator","alloc","allocate","allocations","as_bytes","as_bytes_mut","bitmap_len","borrow","borrow","borrow_mut","borrow_mut","byte_len","deallocate","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","free","free_mem","from","from","init","init","into","into","is_empty","leak","len","new","physical_addr","reserved_mem","to_string","total_mem","try_from","try_from","try_into","try_into","type_id","type_id","usable_mem","used_mem","virtual_addr","Slab","SlabAllocator","SlabAllocatorStats","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","free","free","from","from","from","get_slab","init","init","init","into","into","into","new","new","next_block","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Err","Handled","Kernel","NotHandled","Ok","PageFaultResult","PageMapImpl","Privilege","User","activate","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","current","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","is_mapped","map","new","page_fault","phys_to_virt","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unmap","virt_to_phys"],"q":[[0,"hyperion_mem"],[8,"hyperion_mem::pmm"],[56,"hyperion_mem::slab"],[102,"hyperion_mem::vmm"],[168,"x86_64::addr"],[169,"x86_64::addr"],[170,"core::ptr::non_null"],[171,"core::alloc"],[172,"core::result"],[173,"core::iter::traits::iterator"],[174,"core::fmt"],[175,"core::fmt"],[176,"core::any"],[177,"spin"],[178,"core::option"],[179,"core::ops::range"],[180,"x86_64::structures::paging::page_table"]],"d":["","","","","Physical memory management","Slab allocator","","","","","","Alloc pages","","","","","","","","","","number of bytes","","","","","","","","","","Free up pages","Currently free usable memory in bytes","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Leak the PageFrame to get a static mut ref to it","number of pages","Safety","physical address of the first page","Reserved memory in bytes","","System total memory in bytes","","","","","","","System usable memory in bytes","Currently used usable memory in bytes","","","","","","","","","","","","","","","","","","","","","","","","Safety","Safety","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Contains the error value","","","","Contains the success value","inversed to make <code>?</code> more useful","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,6,6,6,8,8,6,6,8,6,8,8,6,6,8,6,8,6,8,6,8,6,6,6,8,6,8,6,8,8,8,8,8,8,6,6,6,6,8,6,8,6,8,6,6,8,0,0,0,20,21,20,21,22,20,21,22,20,20,21,22,20,21,22,20,21,22,22,20,21,20,21,22,20,20,21,22,20,21,22,20,21,21,20,21,22,20,21,22,20,21,22,30,0,25,0,30,0,0,0,25,31,25,26,27,25,26,27,25,26,27,25,26,27,31,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,31,31,31,31,31,25,26,27,25,26,27,25,26,27,25,26,27,31,31],"f":[0,[[],1],[2,3],[4,5],0,0,[3,2],0,0,0,0,[[6,7],8],[[6,9],[[14,[[12,[[11,[10]]]],13]]]],[6,[[0,[15]]]],[8,[[11,[10]]]],[8,[[11,[10]]]],[6,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,7],[[6,[12,[10]],9],1],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[[6,16],17],[[8,16],17],[[6,8],1],[6,7],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[8,5],[8,[[11,[10]]]],[8,7],[[3,7],8],[8,3],[6,7],[-1,18,[]],[6,7],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[6,7],[6,7],[8,2],0,0,0,[[20,7],2],[[21,22],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],20],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[[22,16],17],[[20,2],1],[[21,22,2],1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[20,7],[[24,[[23,[21]]]]]],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],20],[[10,7],21],[[21,22],2],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,25],[26,26],[27,27],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[[25,25],5],[[26,26],5],[[27,27],5],[[25,16],17],[[26,16],17],[[27,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[28,[2]],29],5,[]],[[-1,[28,[2]],3,29],1,[]],[[],-1,[]],[[-1,2,25],30,[]],[[-1,3],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[-1,[28,[2]]],1,[]],[[-1,2],[[24,[3]]],[]]],"c":[],"p":[[15,"tuple"],[3,"VirtAddr",168],[3,"PhysAddr",168],[15,"u64"],[15,"bool"],[3,"PageFrameAllocator",8],[15,"usize"],[3,"PageFrame",8],[3,"Layout",169],[15,"u8"],[15,"slice"],[3,"NonNull",170],[3,"AllocError",171],[4,"Result",172],[8,"Iterator",173],[3,"Formatter",174],[6,"Result",174],[3,"String",175],[3,"TypeId",176],[3,"SlabAllocator",56],[3,"Slab",56],[3,"SlabAllocatorStats",56],[6,"RwLock",177],[4,"Option",178],[4,"Privilege",102],[3,"Handled",102],[3,"NotHandled",102],[3,"Range",179],[3,"PageTableFlags",180],[6,"PageFaultResult",102],[8,"PageMapImpl",102]],"b":[]},\
"hyperion_num_postfix":{"doc":"","t":"SSIDLLLLLLLLLLL","n":["NUM_1000","NUM_1024","NumberPostfix","NumberPostfixed","borrow","borrow_mut","fmt","fmt","from","into","postfix","postfix_binary","try_from","try_into","type_id"],"q":[[0,"hyperion_num_postfix"],[15,"core::fmt"],[16,"core::fmt"],[17,"core::any"]],"d":["","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[8,8,0,0,1,1,1,1,1,1,8,8,1,1,1],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]],2],3,4],[[[1,[-1]],2],3,5],[-1,-1,[]],[-1,-2,[],[]],[-1,[[1,[-1]]],[]],[-1,[[1,[-1]]],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]]],"c":[],"p":[[3,"NumberPostfixed",0],[3,"Formatter",15],[6,"Result",15],[8,"Display",15],[8,"Debug",15],[4,"Result",16],[3,"TypeId",17],[8,"NumberPostfix",0]],"b":[[6,"impl-Display-for-NumberPostfixed%3CT%3E"],[7,"impl-Debug-for-NumberPostfixed%3CT%3E"]]},\
"hyperion_random":{"doc":"","t":"IIIIQILKLKLLLLFFKKFLLLKLK","n":["CryptoRng","Fill","Rng","RngCore","Seed","SeedableRng","fill","fill_bytes","from_rng","from_seed","gen","gen_bool","gen_range","gen_ratio","next_fast_rng","next_secure_rng","next_u32","next_u64","provide_entropy","sample","sample_iter","seed_from_u64","try_fill","try_fill","try_fill_bytes"],"q":[[0,"hyperion_random"],[25,"core::marker"],[26,"rand_core::error"],[27,"core::result"],[28,"rand::distributions::uniform"],[29,"rand::distributions::uniform"],[30,"rand_chacha::chacha"],[31,"rand::distributions::distribution"],[32,"rand::distributions::distribution"]],"d":["A marker trait used to indicate that an <code>RngCore</code> or …","Types which may be filled with random data","An automatically-implemented extension trait on <code>RngCore</code> …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> with random data.","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","Return a random value supporting the <code>Standard</code> distribution.","Return a bool with a probability <code>p</code> of being true.","Generate a random value in the given range.","Return a bool with a probability of <code>numerator/denominator</code> …","","","Return the next random <code>u32</code>.","Return the next random <code>u64</code>.","","Sample a new value, using the given distribution.","Create an iterator that generates values using the given …","Create a new PRNG using a <code>u64</code> seed.","Fill self with random data","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> entirely with random data."],"i":[0,0,0,0,21,0,20,8,21,21,20,20,20,20,0,0,8,8,0,20,20,21,2,20,8],"f":[0,0,0,0,0,0,[[-1,-2],1,[],[2,3]],[[-1,[5,[4]]],1,[]],[-1,[[7,[-2,6]]],8,[]],[[],-1,[]],[-1,-2,[],[]],[[-1,9],10,[]],[[-1,-3],-2,[],11,[[12,[-2]]]],[[-1,13,13],10,[]],[[],14],[[],[[16,[15]]]],[-1,13,[]],[-1,17,[]],[[[5,[4]]],1],[[-1,-3],-2,[],[],[[18,[-2]]]],[[-1,-3],[[19,[-3,-1,-2]]],3,[],[[18,[-2]]]],[17,-1,[]],[[-1,-2],[[7,[1,6]]],[],[20,3]],[[-1,-2],[[7,[1,6]]],[],[2,3]],[[-1,[5,[4]]],[[7,[1,6]]],[]]],"c":[],"p":[[15,"tuple"],[8,"Fill",0],[8,"Sized",25],[15,"u8"],[15,"slice"],[3,"Error",26],[4,"Result",27],[8,"RngCore",0],[15,"f64"],[15,"bool"],[8,"SampleUniform",28],[8,"SampleRange",28],[15,"u32"],[3,"ChaCha8Rng",29],[3,"ChaCha20Rng",29],[4,"Option",30],[15,"u64"],[8,"Distribution",31],[3,"DistIter",31],[8,"Rng",0],[8,"SeedableRng",0]],"b":[]},\
"hyperion_sample_elf":{"doc":"","t":"DHDFFFLLLLLLLLLLLMLLALFFLOFLLLLLLLDDIDFLLLLLLMMLLMLLLLMLLLMLLFKLLLLLLLLLL","n":["CliArgs","GLOBAL_ALLOC","PageAlloc","_print","_start","_thread_entry","alloc","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","dealloc","fmt","from","from","hyperion_cli_args_ptr","into","into","io","iter","main","panic_handler","pop","println","spawn","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","BufReader","Guard","Read","SimpleIpcInputChannel","append_to_string","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buf","buf","consume","drop","end","fill_buf","from","from","from","inner","into","into","into","len","new","read_line","read_until","recv","recv","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"hyperion_sample_elf"],[34,"hyperion_sample_elf::io"],[73,"core::fmt"],[74,"core::alloc::layout"],[75,"core::fmt"],[76,"core::clone"],[77,"core::iter::traits::double_ended"],[78,"core::panic::panic_info"],[79,"core::marker"],[80,"core::ops::function"],[81,"core::marker"],[82,"core::any"],[83,"alloc::string"],[84,"alloc::vec"]],"d":["","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,5,5,8,5,8,8,8,5,8,5,8,8,5,8,0,8,0,0,8,0,0,8,5,8,5,8,5,8,0,0,0,0,0,26,21,23,26,21,23,21,23,21,23,21,21,26,21,23,21,26,21,23,23,21,21,0,22,26,26,21,23,26,21,23,26,21,23],"f":[0,0,0,[1,2],[3,4],[[3,3],4],[[5,6],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[[-1,-2],2,[],[]],[[5,7,6],2],[[8,9],10],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[8,[[0,[11,12,13]]]],[8,2],[14,4],[3,-1,15],0,[-1,2,[16,17]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],0,0,0,0,[[20,-1],[[18,[3,20]]],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[21,[-1]],3],2,22],[23,2],0,[[[21,[-1]]],[[18,[[24,[7]],20]]],22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[21,[-1]]],22],[[[21,[-1]],20],[[18,[3,20]]],22],[[[21,[-1]],7,[25,[7]]],[[18,[3,20]]],22],[[-1,[24,[7]]],[[18,[3,20]]],[]],[[26,[24,[7]]],[[18,[3,20]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]]],"c":[],"p":[[3,"Arguments",73],[15,"tuple"],[15,"usize"],[15,"never"],[3,"PageAlloc",0],[3,"Layout",74],[15,"u8"],[3,"CliArgs",0],[3,"Formatter",73],[6,"Result",73],[8,"Iterator",75],[8,"Clone",76],[8,"DoubleEndedIterator",77],[3,"PanicInfo",78],[8,"Sized",79],[8,"FnOnce",80],[8,"Send",79],[4,"Result",81],[3,"TypeId",82],[3,"String",83],[3,"BufReader",34],[8,"Read",34],[3,"Guard",34],[15,"slice"],[3,"Vec",84],[3,"SimpleIpcInputChannel",34]],"b":[]},\
"hyperion_scheduler":{"doc":"","t":"HHDLLALLLLAFFLLAALLFFFFFFFAFFFFFLAFLLLFFEDNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFFFDLLMLLLLLLLLLFFFFMLLLMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLFLLLLFLLLFNHDDDINNNHHHHDDEMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMMLLLLLLMMFLMMMLFLLLLLLLLLLLLLLLLLLLLLLLLM","n":["READY","RUNNING","TakeOnce","borrow","borrow_mut","cleanup","deref","deref_mut","drop","from","futex","idle","init","init","into","ipc","lock","new","none","process","recv","recv_to","rename","running","schedule","send","sleep","sleep","sleep_until","spawn","spawn_userspace","stop","take","task","task","try_from","try_into","type_id","yield_now","yield_now_wait","Cleanup","CleanupTask","Drop","Ready","SimpleIpcWait","Sleep","Wait","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","init","init","into","into","run","run","task","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","addr","deadline","val","cleanup","wait","wake","SimpleIpc","borrow","borrow_mut","channel","default","deref","deref_mut","drop","fmt","from","init","into","new","recv","recv_to","send","start_waiting","tail","try_from","try_into","type_id","waiting","Mutex","MutexGuard","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","init","init","into","into","lock","new","try_from","try_from","try_into","try_into","type_id","type_id","SleepingTask","borrow","borrow_mut","cmp","deref","deref_mut","drop","eq","finished","from","init","into","partial_cmp","push","try_from","try_into","type_id","wake_up_completed","Dropping","PROCESSES","PageAllocs","Pid","Process","ProcessExt","Ready","Running","Sleeping","TASKS_DROPPING","TASKS_READY","TASKS_RUNNING","TASKS_SLEEPING","Task","TaskInner","TaskState","address_space","allocs","as_any","as_str","bitmap","bootloader","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","ext","find","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","heap_bottom","init","init","init","init","init","init","into","into","into","into","into","into","is_dropping","is_ready","is_running","is_sleeping","job","kernel_stack","name","nanos","new","new","new_any","next","num","partial_cmp","pid","process","processes","ptr_eq","should_terminate","simple_ipc","state","swap_state","switch_because","thread","thread_any","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","user_stack"],"q":[[0,"hyperion_scheduler"],[40,"hyperion_scheduler::cleanup"],[76,"hyperion_scheduler::cleanup::Cleanup"],[79,"hyperion_scheduler::futex"],[82,"hyperion_scheduler::ipc"],[104,"hyperion_scheduler::lock"],[134,"hyperion_scheduler::sleep"],[152,"hyperion_scheduler::task"],[293,"core::iter::traits::iterator"],[294,"core::convert"],[295,"alloc::sync"],[296,"alloc::borrow"],[297,"core::result"],[298,"time::duration"],[299,"hyperion_instant"],[300,"core::ops::function"],[301,"core::marker"],[302,"core::option"],[303,"core::any"],[304,"core::fmt"],[305,"core::fmt"],[306,"core::ptr::non_null"],[307,"core::marker"],[308,"core::cmp"],[309,"spin::mutex"],[310,"core::any"],[311,"core::hash"],[312,"alloc::boxed"],[313,"alloc::vec"],[314,"alloc::string"]],"d":["","","","","","","","","","Returns the argument unchanged.","","","init this processors scheduling","","Calls <code>U::from(self)</code>.","","","","","","","","","","spawn a new process running this closure or a function or …","","","","","","spawn a new thread in the currently running process","destroy the current thread and switch to another thread","","","","","","","switch to another thread","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","post switch cleanup","if the value at <code>addr</code> is eq <code>val</code>, go to sleep","wake up threads waiting for events on this <code>addr</code>","simple P2P 2-copy IPC channel","","","the actual data channel","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","the latest half consumed chunk of data","","","","task waiting list when the channel is empty and processes …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Warning","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","A process, each process can have multiple ‘tasks’ …","","","","","","","","","","","","process address space","a store for all allocated (and mapped) physical pages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","extra process info added by the kernel (like file …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","process heap beginning, the end of the user process","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the task state is <code>Dropping</code>.","Returns <code>true</code> if the task state is <code>Ready</code>.","Returns <code>true</code> if the task state is <code>Running</code>.","Returns <code>true</code> if the task state is <code>Sleeping</code>.","thread_entry runs this function once, and stops the …","lazy initialized kernel-space stack, also used when …","process name","cpu time this process (all tasks) has used in nanoseconds","","","","","","","process id","a shared process ref, multiple tasks can point to the same …","","","","naïve PID based IPC","task state, ‘is the task waiting or what?’","","","","","","","","","","","","","","","","","","","","","","","","","","","lazy initialized user-space stack"],"i":[0,0,0,7,7,0,7,7,7,7,0,0,0,7,7,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,7,7,7,0,0,0,0,24,24,24,24,24,27,24,27,24,24,24,27,24,27,24,27,24,24,27,24,27,24,27,24,27,24,24,24,27,24,27,24,27,24,49,50,49,0,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,0,0,0,0,30,30,30,30,30,0,0,34,31,34,31,34,31,31,34,31,31,34,31,31,31,34,31,34,31,34,31,34,34,34,31,34,31,34,31,0,35,35,35,35,35,35,35,0,35,35,35,35,0,35,35,35,0,41,0,0,0,0,0,41,41,41,0,0,0,0,0,0,0,8,8,51,41,42,5,8,44,42,15,5,41,8,44,42,15,5,41,15,5,41,15,5,41,15,42,8,44,44,42,15,5,5,41,8,44,42,15,5,41,8,8,44,44,42,15,5,41,15,41,8,15,42,15,15,41,8,44,42,15,5,5,41,15,8,8,44,42,15,5,41,8,44,42,15,5,41,41,41,41,41,44,44,8,8,15,5,5,15,15,15,8,44,0,5,8,8,44,5,0,5,5,15,5,41,15,8,44,42,15,5,41,8,44,42,15,5,41,8,44,42,15,5,41,44],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[1,-1,[]],[1,-1,[]],[1,2],[-1,-1,[]],0,[[],[[0,[3]]]],[-1,4,[[6,[5]]]],[[],1],[-1,-2,[],[]],0,0,[-1,[[7,[-1]]],[]],[[],[[7,[-1]]],[]],[[],[[9,[8]]]],[[],[[12,[[11,[10]]]]]],[[[11,[10]]],1],[[[12,[13]]],2],[[],14],[-1,15,[[6,[5]]]],[[15,[12,[[11,[10]]]]],[[16,[2,13]]]],0,[17,2],[18,2],[-1,2,[19,20]],[[21,21],2],[[],4],[[[7,[-1]]],[[22,[-1]]],[]],0,[[],5],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,23,[]],[[],2],[[],2],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,24],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[[24,25],26],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[27,2],[[24,5],2],[[24,5],27],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],0,0,0,[[[29,[28]],1,5],2],[[[29,[28]],1],2],[[[29,[28]],1],2],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],30],[1,-1,[]],[1,-1,[]],[1,2],[[30,25],26],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[],30],[[],[[12,[[11,[10]]]]]],[[[11,[10]]],1],[[15,[12,[[11,[10]]]]],[[16,[2,13]]]],[5,2],0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,23,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[[[31,[-1]]],[],32],[1,-1,[]],[1,-1,[]],[[[31,[-1]]],[],32],[1,-1,[]],[1,2],[1,2],[[[31,[-1]]],2,32],[[[31,[-1]],25],26,[33,32]],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[-1]]],[[31,[-1]]],32],[-1,[[34,[-1]]],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[35,35],36],[1,-1,[]],[1,-1,[]],[1,2],[[35,35],14],[[[22,[[39,[[38,[[37,[35]]]]]]]]],[[0,[3]]]],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[35,35],[[22,[36]]]],[[18,5],2],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,23,[]],[[[22,[[39,[[38,[[37,[35]]]]]]]]],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,40,[]],[41,13],[42,[[39,[43]]]],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,15],[5,5],[41,41],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[15,15],36],[[],42],[1,-1,[]],[44],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[5],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[8,2],[1,2],[44,2],[1,2],[1,2],[1,2],[1,2],[[15,15],14],[[41,41],14],0,[15,[[22,[[9,[8]]]]]],[[42,25],26],[[15,25],26],[[15,25],26],[[41,25],26],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,5,[19,20]],[-1,-1,[]],[-1,-1,[]],[[15,-1],2,45],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,14],[41,14],[41,14],[41,14],0,0,0,0,[1,15],[-1,5,[19,20]],[[[46,[19]],[12,[13]]],5],[[],15],[15,1],[[15,15],[[22,[36]]]],0,0,[[],[[47,[[9,[8]]]]]],[[5,5],14],0,0,0,[[5,41],41],[[5,41,24],2],[[5,-1],5,[19,20]],[[5,[46,[19]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,48,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0],"c":[],"p":[[15,"usize"],[15,"tuple"],[8,"Iterator",293],[15,"never"],[3,"Task",152],[8,"Into",294],[3,"TakeOnce",0],[3,"Process",152],[3,"Arc",295],[15,"u8"],[15,"slice"],[4,"Cow",296],[15,"str"],[15,"bool"],[3,"Pid",152],[4,"Result",297],[3,"Duration",298],[3,"Instant",299],[8,"FnOnce",300],[8,"Send",301],[15,"u64"],[4,"Option",302],[3,"TypeId",303],[4,"Cleanup",40],[3,"Formatter",304],[6,"Result",304],[3,"CleanupTask",40],[3,"AtomicUsize",305],[3,"NonNull",306],[3,"SimpleIpc",82],[3,"MutexGuard",104],[8,"Sized",301],[8,"Debug",304],[3,"Mutex",104],[3,"SleepingTask",134],[4,"Ordering",307],[3,"Reverse",307],[3,"BinaryHeap",308],[3,"MutexGuard",309],[8,"Any",303],[4,"TaskState",152],[3,"PageAllocs",152],[3,"Bitmap",310],[3,"TaskInner",152],[8,"Hasher",311],[3,"Box",312],[3,"Vec",313],[3,"String",314],[13,"Wait",76],[13,"Sleep",76],[8,"ProcessExt",152]],"b":[[221,"impl-Debug-for-Pid"],[222,"impl-Display-for-Pid"]]},\
"hyperion_static_str":{"doc":"","t":"DLLLLLLLLLLLLLLLLLL","n":["StaticStr","as_bytes","as_str","as_str_checked","borrow","borrow_mut","clone","deref","eq","fmt","fmt","from","from_utf8","from_utf8_unchecked","hash","into","try_from","try_into","type_id"],"q":[[0,"hyperion_static_str"],[19,"core::str::error"],[20,"core::result"],[21,"core::fmt"],[22,"core::fmt"],[23,"core::any"]],"d":["","","","","","","","","","","","Returns the argument unchanged.","","Safety","","Calls <code>U::from(self)</code>.","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[1,[[3,[2]]]],[1,4],[1,[[6,[4,5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[1],[[1,1],7],[[1,8],9],[[1,8],9],[-1,-1,[]],[[[10,[2]]],[[6,[1,5]]]],[[[10,[2]]],1],[[1,-1],11,12],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,13,[]]],"c":[],"p":[[3,"StaticStr",0],[15,"u8"],[15,"slice"],[15,"str"],[3,"Utf8Error",19],[4,"Result",20],[15,"bool"],[3,"Formatter",21],[6,"Result",21],[15,"array"],[15,"tuple"],[8,"Hasher",22],[3,"TypeId",23]],"b":[[9,"impl-Display-for-StaticStr%3CSIZE%3E"],[10,"impl-Debug-for-StaticStr%3CSIZE%3E"]]},\
"hyperion_sync":{"doc":"","t":"OADDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["once","spinlock","Mutex","MutexGuard","UNLOCKED","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from","get_mut","init","init","into","into","lock","new","try_from","try_from","try_into","try_into","try_lock","type_id","type_id"],"q":[[0,"hyperion_sync"],[2,"hyperion_sync::spinlock"],[36,"core::marker"],[37,"core::result"],[38,"core::option"],[39,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,6,2,6,2,6,2,2,6,2,2,6,2,2,6,6,6,2,6,6,2,6,2,6,6,6,2,6,2,6,6,2],"f":[0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[[[2,[-1]]],[],3],[1,-1,[]],[1,-1,[]],[[[2,[-1]]],[],3],[1,-1,[]],[1,4],[[[2,[-1]]],4,3],[1,4],[5,-1,[]],[-1,-1,[]],[-1,[[6,[-1]]],[]],[-1,-1,[]],[[[6,[-1]]],-1,3],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],[[2,[-1]]],3],[-1,[[6,[-1]]],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[6,[-1]]],[[8,[[2,[-1]]]]],3],[-1,9,[]],[-1,9,[]]],"c":[],"p":[[15,"usize"],[3,"MutexGuard",2],[8,"Sized",36],[15,"tuple"],[15,"never"],[3,"Mutex",2],[4,"Result",37],[4,"Option",38],[3,"TypeId",39]],"b":[]},\
"hyperion_syscall":{"doc":"","t":"FAFAFFFFFFFFFFFFFFFFFFFFSSNDSSSSSSSSSSSSNSGSSLLLLLLLLLLLLLLLLLSSSDDDDSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["close","err","exit","fs","log","nanosleep","nanosleep_until","open","palloc","pfree","pthread_spawn","read","recv","rename","send","syscall_0","syscall_1","syscall_2","syscall_3","syscall_4","syscall_5","timestamp","write","yield_now","ALREADY_EXISTS","BAD_FILE_DESCRIPTOR","Err","Error","FILESYSTEM_ERROR","INTERRUPTED","INVALID_ADDRESS","INVALID_ALLOC","INVALID_FLAGS","INVALID_UTF8","NOT_A_DIRECTORY","NOT_A_FILE","NOT_FOUND","NO_SUCH_PROCESS","OUT_OF_MEMORY","OUT_OF_VIRTUAL_MEMORY","Ok","PERMISSION_DENIED","Result","UNEXPECTED_EOF","WRITE_ZERO","as_str","borrow","borrow_mut","clone","cmp","decode","encode","eq","fmt","fmt","from","hash","into","partial_cmp","try_from","try_into","type_id","APPEND","CREATE","CREATE_NEW","File","FileDesc","FileOpenFlags","OpenOptions","READ","READ_WRITE","TRUNC","WRITE","all","append","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","close","cmp","cmp","complement","contains","create","create_new","difference","drop","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into","into","into","into_inner","into_iter","is_all","is_empty","iter","iter_names","new","new","not","open","open","partial_cmp","partial_cmp","read","read","remove","set","sub","sub_assign","symmetric_difference","toggle","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","write","write"],"q":[[0,"hyperion_syscall"],[24,"hyperion_syscall::err"],[62,"hyperion_syscall::fs"],[166,"core::ptr::non_null"],[167,"core::option"],[168,"core::cmp"],[169,"core::fmt"],[170,"core::fmt"],[171,"core::result"],[172,"core::any"],[173,"core::iter::traits::collect"],[174,"bitflags::iter"],[175,"bitflags::iter"]],"d":["close a file","","exit the process with a code","","print a string into kernel logs","context switch from this process and switch back when <code>nanos</code>…","context switch from this process and switch back when …","open a file","allocate physical pages and map to heap","deallocate physical pages and unmap from heap","spawn a new pthread for the same process","read from a file","read data from a PID based single naïve IPC channel","rename the current process","send data to a PID based single naïve IPC channel","Safety","Safety","Safety","Safety","Safety","Safety","u128 nanoseconds since boot","write into a file","context switch from this process, no guarantees about …","","","Contains the error value","","","","","","","","","","","","","","Contains the success value","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","writes append to the file","create file if it doesn’t already exist","create file if it doesn’t already exist and err if it …","","","","","open file with read caps","open file with read and write caps","truncate file on open (if the file already existed)","open file with write caps","Get a flags value with all known bits set.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","","The intersection of a source flags value with the …","","Get a flags value with all bits unset.","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Safety","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Safety","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,3,0,15,15,15,15,15,15,15,15,15,15,15,15,3,15,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,8,8,8,0,0,0,0,8,8,8,8,8,23,8,8,8,8,8,8,8,8,24,23,1,8,24,23,1,8,1,8,24,1,8,8,8,23,23,8,24,8,1,8,8,1,8,8,8,8,8,24,23,1,8,8,8,8,8,8,8,8,8,8,24,23,1,8,24,8,8,8,8,8,24,23,8,24,23,1,8,24,23,8,8,8,8,8,8,23,24,23,1,8,24,23,1,8,24,23,1,8,8,24,23],"f":[[1,[[3,[2]]]],0,[4,5],0,[6,[[3,[2]]]],[7,2],[7,2],[[6,8,9],[[3,[1]]]],[9,[[3,[[12,[[11,[10]]]]]]]],[[[11,[10]],9],[[3,[2]]]],[9,2],[[1,[13,[10]]],[[3,[9]]]],[[[13,[10]]],[[3,[9]]]],[6,[[3,[2]]]],[[7,[13,[10]]],[[3,[2]]]],[9,[[3,[9]]]],[[9,9],[[3,[9]]]],[[9,9,9],[[3,[9]]]],[[9,9,9,9],[[3,[9]]]],[[9,9,9,9,9],[[3,[9]]]],[[9,9,9,9,9,9],[[3,[9]]]],[[],[[3,[14]]]],[[1,[13,[10]]],[[3,[9]]]],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,6],[-1,-2,[],[]],[-1,-2,[],[]],[15,15],[[15,15],16],[9,[[3,[9]]]],[[[3,[9]]],9],[[15,15],17],[[15,18],19],[[15,18],19],[-1,-1,[]],[[15,-1],2,20],[-1,-2,[],[]],[[15,15],[[12,[16]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],0,0,0,0,0,0,0,0,0,0,0,[[],8],[[23,17],23],[[8,8],8],[[8,8],2],[[8,8],8],[[8,8],2],[8,9],[8,9],[[8,8],8],[[8,8],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[8,8],[24,[[3,[2]]]],[[1,1],16],[[8,8],16],[8,8],[[8,8],17],[[23,17],23],[[23,17],23],[[8,8],8],[24,2],[[],8],[[1,1],17],[[8,8],17],[[8,-1],2,25],[[1,18],19],[[8,18],19],[[8,18],19],[[8,18],19],[[8,18],19],[[8,18],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,[[12,[8]]]],[9,8],[9,8],[9,8],[-1,8,25],[6,[[12,[8]]]],[[8,8],2],[[8,8],8],[[8,8],17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,1],[8],[8,17],[8,17],[8,[[26,[8]]]],[8,[[27,[8]]]],[1,24],[[],23],[8,8],[6,[[3,[24]]]],[[23,6],[[3,[24]]]],[[1,1],[[12,[16]]]],[[8,8],[[12,[16]]]],[[24,[13,[10]]],[[3,[9]]]],[[23,17],23],[[8,8],2],[[8,8,17],2],[[8,8],8],[[8,8],2],[[8,8],8],[[8,8],2],[[23,17],23],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[8,8],8],[[24,[13,[10]]],[[3,[9]]]],[[23,17],23]],"c":[],"p":[[3,"FileDesc",62],[15,"tuple"],[6,"Result",24],[15,"i64"],[15,"never"],[15,"str"],[15,"u64"],[3,"FileOpenFlags",62],[15,"usize"],[15,"u8"],[3,"NonNull",166],[4,"Option",167],[15,"slice"],[15,"u128"],[3,"Error",24],[4,"Ordering",168],[15,"bool"],[3,"Formatter",169],[6,"Result",169],[8,"Hasher",170],[4,"Result",171],[3,"TypeId",172],[3,"OpenOptions",62],[3,"File",62],[8,"IntoIterator",173],[3,"Iter",174],[3,"IterNames",174]],"b":[[53,"impl-Display-for-Error"],[54,"impl-Debug-for-Error"],[79,"impl-FileOpenFlags"],[80,"impl-Flags-for-FileOpenFlags"],[107,"impl-Binary-for-FileOpenFlags"],[108,"impl-Octal-for-FileOpenFlags"],[109,"impl-UpperHex-for-FileOpenFlags"],[110,"impl-LowerHex-for-FileOpenFlags"],[111,"impl-Debug-for-FileOpenFlags"],[117,"impl-Flags-for-FileOpenFlags"],[118,"impl-FileOpenFlags"]]},\
"hyperion_timer":{"doc":"","t":"HHDLLLMLLLLLLLLLFLLLM","n":["TIMER_DEADLINES","TIMER_HANDLER","TimerWaker","borrow","borrow_mut","cmp","deadline","deref","deref_mut","drop","eq","fmt","from","init","into","partial_cmp","provide_sleep_wake","try_from","try_into","type_id","waker"],"q":[[0,"hyperion_timer"],[21,"core::cmp"],[22,"core::fmt"],[23,"core::fmt"],[24,"core::result"],[25,"core::any"]],"d":["","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","interrupt provided wakeup to a sleep","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],2],0,[3,-1,[]],[3,-1,[]],[3,4],[[1,1],5],[[1,6],7],[-1,-1,[]],[[],3],[-1,-2,[],[]],[[1,1],[[8,[2]]]],[[],4],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],0],"c":[],"p":[[3,"TimerWaker",0],[4,"Ordering",21],[15,"usize"],[15,"tuple"],[15,"bool"],[3,"Formatter",22],[6,"Result",22],[4,"Option",23],[4,"Result",24],[3,"TypeId",25]],"b":[]},\
"hyperion_vfs":{"doc":"","t":"FAAFFFFFCAACAIIKKLKKKLFKLNNNNEGNNNNNNNLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLMLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLGNNGEGGGLLLLLLLLLLLLLL","n":["create_device","device","error","get_dir","get_file","get_node","get_root","install_dev","open","path","ramdisk","read_dir","tree","DirectoryDevice","FileDevice","create_node","get_node","is_empty","len","nodes","read","read_exact","set_io_device_loader","write","write_exact","AlreadyExists","Err","FilesystemError","Interrupted","IoError","IoResult","IsADirectory","NotADirectory","NotFound","Ok","PermissionDenied","UnexpectedEOF","WriteZero","as_error_source","backtrace","borrow","borrow_mut","cause","deref","deref_mut","description","drop","fmt","fmt","from","init","into","msg","source","to_string","try_from","try_into","type_id","Path","PathBuf","as_ref","as_ref","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","drop","eq","file_name","fmt","fmt","from","from","from","from_str","init","into","is_absolute","is_dir","is_file","iter","join","join","new","parent","pop","set","split","to_absolute","to_owned","to_owned","try_from","try_into","type_id","type_id","Directory","File","borrow","borrow","borrow_mut","borrow_mut","children","create_node","deref","deref","deref_mut","deref_mut","drop","drop","from","from","get_node","init","init","into","into","len","name","new","new_empty","new_ref","nodes","parent","read","root","try_from","try_from","try_into","try_into","type_id","type_id","write","DirRef","Directory","File","FileRef","Node","Root","WeakDirRef","WeakFileRef","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","init","into","to_owned","try_from","try_into","type_id"],"q":[[0,"hyperion_vfs"],[13,"hyperion_vfs::device"],[25,"hyperion_vfs::error"],[58,"hyperion_vfs::path"],[102,"hyperion_vfs::ramdisk"],[139,"hyperion_vfs::tree"],[161,"core::convert"],[162,"alloc::sync"],[163,"snafu::no_std_error"],[164,"snafu::backtrace_inert"],[165,"core::option"],[166,"core::fmt"],[167,"core::fmt"],[168,"core::result"],[169,"core::any"],[170,"core::iter::traits::iterator"],[171,"alloc::borrow"],[172,"core::convert"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the error value","","","","","","","","Contains the success value","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","a directory with 0 or more files, like <code>/home/</code>","a normal file, like <code>/etc/fstab</code>","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,9,9,31,9,9,0,9,9,16,4,16,16,0,0,16,16,16,4,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,5,24,5,5,24,24,5,24,24,24,24,24,24,24,24,5,5,24,5,24,24,5,24,24,5,5,5,5,5,24,24,5,24,24,5,5,5,24,24,24,5,24,0,0,28,27,28,27,27,27,28,27,28,27,28,27,28,27,27,28,27,28,27,28,27,27,28,27,27,27,28,27,28,27,28,27,28,27,28,0,8,8,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8],"f":[[[-1,1,2],[[4,[3]]],[[6,[5]]]],0,0,[[-1,1],[[4,[7]]],[[6,[5]]]],[[-1,1,1],[[4,[2]]],[[6,[5]]]],[[-1,1],[[4,[8]]],[[6,[5]]]],[[],8],[[-1,-2],3,[[6,[5]]],9],0,0,0,0,0,0,0,[[-1,10,8],[[4,[3]]],[]],[[-1,10],[[4,[8]]],[]],[-1,1,[]],[-1,11,[]],[-1,[[4,[[12,[[13,[[12,[10]]]]]]]]],[]],[[-1,11,[13,[14]]],[[4,[11]]],[]],[[-1,11,[13,[14]]],[[4,[3]]],[]],[[],3],[[-1,11,[13,[14]]],[[4,[11]]],[]],[[-1,11,[13,[14]]],[[4,[3]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,15,[]],[16,[[18,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[16,[[18,[15]]]],[11,-1,[]],[11,-1,[]],[16,10],[11,3],[[16,19],20],[[16,19],20],[-1,-1,[]],[[],11],[-1,-2,[],[]],[16,10],[16,[[18,[15]]]],[-1,21,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],0,0,[5,5],[24,5],[5,10],[-1,-2,[],[]],[24,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,24],[[-1,-2],3,[],[]],[24],[11,-1,[]],[11,-1,[]],[11,3],[[24,24],1],[5,[[18,[10]]]],[[5,19],20],[[24,19],20],[10,5],[5,24],[-1,-1,[]],[10,5],[[],11],[-1,-2,[],[]],[5,1],[5,1],[5,1],[5,[[0,[25]]]],[[5,-1],24,[[6,[5]]]],[[24,10],24],[-1,24,[[6,[5]]]],[5,[[18,[5]]]],[24,24],[[24,-1],24,[[6,[5]]]],[5,[[18,[[3,[5,10]]]]]],[[5,5],[[26,[5]]]],[5],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[27,10,8],[[4,[3]]]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,3],[11,3],[-1,-1,[]],[-1,-1,[]],[[27,10],[[4,[8]]]],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[28,11],0,[-1,27,[[29,[[12,[10]]]]]],[[],2],[-1,7,[[29,[[12,[10]]]]]],[27,[[4,[[12,[[13,[[12,[10]]]]]]]]]],0,[[28,11,[13,[14]]],[[4,[11]]]],[[],30],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[[28,11,[13,[14]]],[[4,[11]]]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[[-1,-2],3,[],[]],[11,-1,[]],[11,-1,[]],[11,3],[-1,-1,[]],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]]],"c":[],"p":[[15,"bool"],[6,"FileRef",139],[15,"tuple"],[6,"IoResult",25],[3,"Path",58],[8,"AsRef",161],[6,"DirRef",139],[4,"Node",139],[8,"FileDevice",13],[15,"str"],[15,"usize"],[3,"Arc",162],[15,"slice"],[15,"u8"],[8,"Error",163],[4,"IoError",25],[3,"Backtrace",164],[4,"Option",165],[3,"Formatter",166],[6,"Result",166],[3,"String",167],[4,"Result",168],[3,"TypeId",169],[3,"PathBuf",58],[8,"Iterator",170],[4,"Cow",171],[3,"Directory",102],[3,"File",102],[8,"Into",161],[6,"Root",139],[8,"DirectoryDevice",13]],"b":[[47,"impl-Display-for-IoError"],[48,"impl-Debug-for-IoError"]]},\
"iana_time_zone":{"doc":"get the IANA time zone for the current system","t":"NENNLLLLLLFLLLLLL","n":["FailedParsingString","GetTimezoneError","IoError","OsError","borrow","borrow_mut","fmt","fmt","from","from","get_timezone","into","source","to_string","try_from","try_into","type_id"],"q":[[0,"iana_time_zone"],[17,"core::fmt"],[18,"core::fmt"],[19,"core::fmt"],[20,"alloc::string"],[21,"core::error"],[22,"core::option"],[23,"core::any"]],"d":["Failed to parse","Error types","Wrapped IO error","Platform-specific error from the operating system","","","","","Returns the argument unchanged.","","Get the current IANA time zone as a string.","Calls <code>U::from(self)</code>.","","","","",""],"i":[1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[1,2],[[5,[3,4]]]],[[1,2],6],[-1,-1,[]],[7,1],[[],[[5,[8,1]]]],[-1,-2,[],[]],[1,[[10,[9]]]],[-1,8,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,11,[]]],"c":[],"p":[[4,"GetTimezoneError",0],[3,"Formatter",17],[15,"tuple"],[3,"Error",17],[4,"Result",18],[6,"Result",17],[3,"Error",19],[3,"String",20],[8,"Error",21],[4,"Option",22],[3,"TypeId",23]],"b":[[6,"impl-Display-for-GetTimezoneError"],[7,"impl-Debug-for-GetTimezoneError"]]},\
"itertools":{"doc":"Extra iterator adaptors, functions and macros.","t":"NNENEENNEINNNNNNEINNNIENNNFLLLFLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLFOLLLLLLLFLLLLFLFLLLLLLLLFLLLLLFLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLFLLFLFLLLLLLLLLLLLLLLLLOLLLLLLFOLLLLLLLLLLLLLLLLLLLLLLLLFFLLFLFLLLFKLLLLLLLLLLLLLLFLLLLLLLLLFLLLKLLLLLLLLLLLLLFLLFLFFFLLLLLLLLLLLLLLALLLALLLLLLLLLLLLLLLLLLLLLLFLLLLLFFLLDDGDGGGGDDDDDDDDGDDGGGGDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLI","n":["Both","Continue","Diff","Done","Either","EitherOrBoth","First","FirstMismatch","FoldWhile","Itertools","Last","Left","Left","Longer","Middle","MinMax","MinMaxResult","MultiUnzip","NoElements","OneElement","Only","PeekingNext","Position","Right","Right","Shorter","all","all","all_equal","all_equal_value","any","any","as_deref","as_deref_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_pin_mut","as_pin_ref","as_ref","as_ref","as_ref","as_ref","as_ref","assert_equal","at_most_one","batching","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","both","cartesian_product","chain","chain","circular_tuple_windows","clone","clone","clone","clone","clone","clone_from","cloned","cmp","coalesce","collect","collect_tuple","concat","concat","cons_tuples","contains","count","dedup","dedup_by","dedup_by_with_count","dedup_with_count","deref","deref_mut","diff_with","dropping","dropping_back","either","either_into","either_with","enumerate","eq","eq","eq","eq","eq","equal","exactly_one","expect_left","expect_right","extend","factor_err","factor_first","factor_none","factor_ok","factor_second","filter_map_ok","filter_ok","find","find_map","find_or_first","find_or_last","find_position","flatten_ok","flip","flip","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold1","fold_ok","fold_options","fold_results","fold_while","for_each","foreach","format","format_with","from","from","from","from","from","from","from","has_left","has_right","hash","hash","insert_both","insert_left","insert_right","interleave","interleave","interleave_shortest","intersperse","intersperse","intersperse_with","intersperse_with","into","into","into","into","into","into","into","into","into_future","into_inner","into_inner","into_iter","into_iter","into_left","into_option","into_right","iproduct","is_both","is_done","is_left","is_left","is_right","is_right","iterate","izip","just_left","just_right","last","left","left","left_and_then","left_and_then","left_or","left_or_default","left_or_else","left_or_insert","left_or_insert_with","len","map","map_any","map_either","map_either_with","map_into","map_left","map_left","map_ok","map_results","map_right","map_right","max","merge","merge","merge_by","merge_join_by","merge_join_by","min","minmax","minmax_by","minmax_by_key","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multizip","next","next_back","next_tuple","nth","or","or_default","or_else","pad_using","partial_cmp","partition","partition","partition_map","partition_result","peeking_next","peeking_take_while","poll","position","position_max","position_max_by","position_max_by_key","position_min","position_min_by","position_min_by_key","position_minmax","position_minmax_by","position_minmax_by_key","positions","process_results","process_results","product1","put_back","reduce","repeat_call","repeat_n","rev","rfind","rfold","right","right","right_and_then","right_and_then","right_or","right_or_default","right_or_else","right_or_insert","right_or_insert_with","set_from","size_hint","step","structs","sum1","take_while_inclusive","take_while_ref","traits","tree_fold1","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tuple_combinations","tuple_windows","tuples","type_id","type_id","type_id","type_id","type_id","type_id","unfold","unwrap_left","unwrap_right","update","while_some","with_position","zip","zip_eq","zip_eq","zip_longest","Batching","CircularTupleWindows","Coalesce","ConsTuples","Dedup","DedupBy","DedupByWithCount","DedupWithCount","ExactlyOneError","FilterMapOk","FilterOk","FlattenOk","Format","FormatWith","Interleave","InterleaveShortest","Intersperse","IntersperseWith","Iterate","MapInto","MapOk","MapResults","Merge","MergeBy","MergeJoinBy","PadUsing","PeekingTakeWhile","Positions","ProcessResults","Product","PutBack","RepeatCall","RepeatN","Step","TakeWhileInclusive","TakeWhileRef","TupleBuffer","TupleCombinations","TupleWindows","Tuples","Unfold","Update","WhileSome","WithPosition","Zip","ZipEq","ZipLongest","all","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","collect","collect","collect","count","count","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_buffer","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_parts","last","last","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","new","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","peeking_next","peeking_next","put_back","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","state","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_value","HomogeneousTuple"],"q":[[0,"itertools"],[320,"itertools::structs"],[1258,"itertools::traits"],[1259,"core::iter::traits::collect"],[1260,"core::ops::function"],[1261,"core::iter::traits::iterator"],[1262,"core::marker"],[1263,"core::option"],[1264,"core::result"],[1265,"core::ops::deref"],[1266,"core::ops::deref"],[1267,"core::pin"],[1268,"core::convert"],[1269,"core::clone"],[1270,"core::iter::traits::exact_size"],[1271,"core::iter::adapters::cloned"],[1272,"core::cmp"],[1273,"core::cmp"],[1274,"core::ops::function"],[1275,"core::fmt"],[1276,"core::iter::traits::collect"],[1277,"core::hash"],[1278,"core::cmp"],[1279,"core::task::poll"],[1280,"core::future::future"],[1281,"core::iter::traits::accum"],[1282,"core::iter::adapters::rev"],[1283,"core::iter::traits::accum"],[1284,"core::iter::adapters::zip"]],"d":["Both values are present.","Continue folding with this value","A type returned by the <code>diff_with</code> function.","Fold is complete and will return this value","The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","Value that either holds a single A or B, or both.","This is the first element.","The index of the first non-matching element along with …","An enum used for controlling the execution of <code>fold_while</code>.","An <code>Iterator</code> blanket implementation that provides extra …","This is the last element.","A value of type <code>L</code>.","Only the left value of type <code>A</code> is present.","The total number of elements that were in <code>I</code> along with the …","This is neither the first nor the last element.","More than one element in the iterator, the first element …","<code>MinMaxResult</code> is an enum returned by <code>minmax</code>.","An iterator that can be unzipped into multiple collections.","Empty iterator","Iterator with one element, so the minimum and maximum are …","This is the only element.","An iterator that allows peeking at an element before …","The first component of the value yielded by <code>WithPosition</code>. …","A value of type <code>R</code>.","Only the right value of type <code>B</code> is present.","The total number of elements that were in <code>J</code> along with the …","Test whether the predicate holds for all elements in the …","","Check whether all elements compare equal.","If there are elements and they are all equal, return a …","Test whether the predicate holds for any elements in the …","","Converts from <code>&amp;EitherOrBoth&lt;A, B&gt;</code> to <code>EitherOrBoth&lt;&amp;_, &amp;_&gt;</code> …","Converts from <code>&amp;mut EitherOrBoth&lt;A, B&gt;</code> to …","","Convert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.","","","Converts from <code>&amp;mut EitherOrBoth&lt;A, B&gt;</code> to …","Convert <code>Pin&lt;&amp;mut Either&lt;L, R&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;L, R&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;L&gt;, Pin&lt;&amp;R&gt;&gt;</code>, …","","","","Convert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.","Converts from <code>&amp;EitherOrBoth&lt;A, B&gt;</code> to <code>EitherOrBoth&lt;&amp;A, &amp;B&gt;</code>.","Assert that two iterables produce equal sequences, with …","If the iterator yields no elements, Ok(None) will be …","A “meta iterator adaptor”. Its closure receives a …","","","","","","","","","","","","","If <code>Both</code>, return <code>Some</code> containing the left and right values. …","Return an iterator adaptor that iterates over the …","Takes two iterables and creates a new iterator over both …","Chain zero or more iterators together into one sequence.","Return an iterator over all windows, wrapping back to the …","","","","","","","Create an iterator that clones each element from &amp;T to T","","Return an iterator adaptor that uses the passed-in closure …","","Collects all items from the iterator into a tuple of a …","Combine all an iterator’s elements into one element by …","Combine all an iterator’s elements into one element by …","Create an iterator that maps for example iterators of …","Returns <code>true</code> if the given item is present in this iterator.","","Remove duplicates from sections of consecutive identical …","Remove duplicates from sections of consecutive identical …","Remove duplicates from sections of consecutive identical …","Remove duplicates from sections of consecutive identical …","","","Compares every element yielded by both <code>i</code> and <code>j</code> with the …","Consume the first <code>n</code> elements from the iterator eagerly, …","Consume the last <code>n</code> elements from the iterator eagerly, and …","Apply one of two functions depending on contents, unifying …","Convert the contained value into <code>T</code>","Like <code>either</code>, but provide some context to whichever of the …","Iterate <code>iterable</code> with a running index.","","","","","","Return <code>true</code> if both iterables produce equal sequences …","If the iterator yields exactly one element, that element …","Returns the left value","Returns the right value","","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Factors out <code>None</code> from an <code>Either</code> of <code>Option</code>.","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Return an iterator adaptor that filters and transforms …","Return an iterator adaptor that filters every <code>Result::Ok</code> …","","","Find the value of the first element satisfying a predicate …","Find the value of the first element satisfying a predicate …","Find the position and value of the first element …","Return an iterator adaptor that flattens every <code>Result::Ok</code> …","Convert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.","Convert <code>EitherOrBoth&lt;A, B&gt;</code> to <code>EitherOrBoth&lt;B, A&gt;</code>.","","","","","","","Perform a fold operation over the iterable.","","Accumulator of the elements in the iterator.","Fold <code>Result</code> values from an iterator.","Fold <code>Option</code> values from an iterator.","See <code>.fold_ok()</code>.","An iterator method that applies a function, producing a …","","Run the closure <code>f</code> eagerly on each element of the iterator.","Format all iterator elements, separated by <code>sep</code>.","Format all iterator elements, separated by <code>sep</code>.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If <code>Left</code>, or <code>Both</code>, return true. Otherwise, return false.","If <code>Right</code>, or <code>Both</code>, return true, otherwise, return false.","","","Set <code>self</code> to <code>Both(..)</code>, containing the specified left and …","Sets the <code>left</code> value of this instance, and returns a …","Sets the <code>right</code> value of this instance, and returns a …","Create an iterator that interleaves elements in <code>i</code> and <code>j</code>.","Alternate elements from two iterators until both have run …","Alternate elements from two iterators until at least one …","Iterate <code>iterable</code> with a particular value inserted between …","An iterator adaptor to insert a particular value between …","Iterate <code>iterable</code> with a particular value created by a …","An iterator adaptor to insert a particular value created …","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Extract the value of an either over two equivalent types.","Return the value in the continue or done.","Convert the inner value to an iterator.","","If <code>Left</code> or <code>Both</code>, return the left value. Otherwise, convert …","<code>into_option</code> creates an <code>Option</code> of type <code>(T, T)</code>. The returned …","If <code>Right</code> or <code>Both</code>, return the right value. Otherwise, …","Create an iterator over the “cartesian product” of …","If <code>Both</code>, return true. Otherwise, return false.","Return true if <code>self</code> is <code>Done</code>, false if it is <code>Continue</code>.","Return true if the value is the <code>Left</code> variant.","If <code>Left</code>, return true. Otherwise, return false. Exclusive …","Return true if the value is the <code>Right</code> variant.","If <code>Right</code>, return true. Otherwise, return false. Exclusive …","Creates a new iterator that infinitely applies function to …","Create an iterator running multiple iterators in lockstep.","If <code>Left</code>, return <code>Some</code> with the left value. If <code>Right</code> or <code>Both</code>…","If <code>Right</code>, return <code>Some</code> with the right value. If <code>Left</code> or <code>Both</code>…","","Convert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.","If <code>Left</code>, or <code>Both</code>, return <code>Some</code> with the left value. …","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value <code>a</code> in <code>Left(a)</code> or …","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","Returns a mutable reference to the left value. If the left …","If the left value is not present, replace it the value …","","Map <code>f</code> over the contained value and return the result in the","Apply the functions <code>f</code> and <code>g</code> on the value <code>a</code> and <code>b</code> …","Apply the functions <code>f</code> and <code>g</code> to the <code>Left</code> and <code>Right</code> variants …","Similar to [<code>map_either</code>], with an added context <code>ctx</code> …","Convert each item of the iterator using the <code>Into</code> trait.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value <code>a</code> in <code>Left(a)</code> or …","Return an iterator adaptor that applies the provided …","See <code>.map_ok()</code>.","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Apply the function <code>f</code> on the value <code>b</code> in <code>Right(b)</code> or …","Return the maximum value of the iterable.","Create an iterator that merges elements in <code>i</code> and <code>j</code>.","Return an iterator adaptor that merges the two base …","Return an iterator adaptor that merges the two base …","Return an iterator adaptor that merge-joins items from the …","Create an iterator that merges items from both this and …","Return the minimum value of the iterable.","Return the minimum and maximum elements in the iterator.","Return the minimum and maximum element of an iterator, as …","Return the minimum and maximum element of an iterator, as …","Converts an iterator of tuples into a tuple of containers.","Unzip this iterator into multiple collections.","","","","","","","","","","","","","","Converts an iterator of tuples into a tuple of containers.","An iterator that generalizes <em>.zip()</em> and allows running …","","","Advances the iterator and returns the next items grouped …","","Returns a tuple consisting of the <code>l</code> and <code>r</code> in <code>Both(l, r)</code>, …","Returns a tuple consisting of the <code>l</code> and <code>r</code> in <code>Both(l, r)</code>, …","Returns a tuple consisting of the <code>l</code> and <code>r</code> in <code>Both(l, r)</code>, …","Return an iterator adaptor that pads the sequence to a …","","Partition a sequence using predicate <code>pred</code> so that elements …","","Collect all iterator elements into one of two partitions. …","Partition a sequence of <code>Result</code>s into one list of all the <code>Ok</code>…","Pass a reference to the next iterator element to the …","Return an iterator adaptor that borrows from this iterator …","","","Return the position of the maximum element in the iterator.","Return the position of the maximum element in the …","Return the position of the maximum element in the …","Return the position of the minimum element in the iterator.","Return the position of the minimum element in the …","Return the position of the minimum element in the …","Return the positions of the minimum and maximum elements in","Return the postions of the minimum and maximum elements of …","Return the postions of the minimum and maximum elements of …","Return an iterator adaptor that yields the indices of all …","“Lift” a function of the values of an iterator so that …","“Lift” a function of the values of the current …","Iterate over the entire iterator and multiply all the …","Create an iterator where you can put back a single item","Return either value of left, right, or apply a function <code>f</code> …","An iterator source that produces elements indefinitely by …","Create an iterator that produces <code>n</code> repetitions of <code>element</code>.","Iterate <code>iterable</code> in reverse.","","","Convert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.","If <code>Right</code>, or <code>Both</code>, return <code>Some</code> with the right value. …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Apply the function <code>f</code> on the value <code>b</code> in <code>Right(b)</code> or …","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","Returns a mutable reference to the right value. If the …","If the right value is not present, replace it the value …","Assign to each reference in <code>self</code> from the <code>from</code> iterator, …","","Return an iterator adaptor that steps <code>n</code> elements in the …","The concrete iterator types.","Iterate over the entire iterator and add all the elements.","Returns an iterator adaptor that consumes elements while …","Return an iterator adaptor that borrows from a <code>Clone</code>-able …","Traits helpful for using certain <code>Itertools</code> methods in …","Accumulate the elements in the iterator in a tree-like …","","","","","","","","","","","","","Return an iterator adaptor that iterates over the …","Return an iterator over all contiguous windows producing …","Return an iterator that groups the items in tuples of a …","","","","","","","Creates a new unfold source with the specified closure as …","Returns the left value","Returns the right value","Return an iterator adaptor that applies a mutating function","Return an iterator adaptor that filters <code>Option&lt;A&gt;</code> iterator …","Return an iterator adaptor that combines each element with …","Converts the arguments to iterators and zips them.","Iterate <code>i</code> and <code>j</code> in lock step.","Create an iterator which iterates over both this and the …","Create an iterator which iterates over both this and the …","A “meta iterator adaptor”. Its closure receives a …","An iterator over all windows, wrapping back to the first …","An iterator adaptor that may join together adjacent …","An iterator that maps an iterator of tuples like …","An iterator adaptor that removes repeated duplicates.","An iterator adaptor that removes repeated duplicates, …","An iterator adaptor that removes repeated duplicates, …","An iterator adaptor that removes repeated duplicates, …","Iterator returned for the error case of …","An iterator adapter to filter and apply a transformation …","An iterator adapter to filter values within a nested …","An iterator adaptor that flattens <code>Result::Ok</code> values and …","Format all iterator elements lazily, separated by <code>sep</code>.","Format all iterator elements lazily, separated by <code>sep</code>.","An iterator adaptor that alternates elements from two …","An iterator adaptor that alternates elements from the two …","An iterator adaptor to insert a particular value between …","An iterator adaptor to insert a particular value created …","An iterator that infinitely applies function to value and …","An iterator adapter to apply <code>Into</code> conversion to each …","An iterator adapter to apply a transformation within a …","See <code>MapOk</code>.","An iterator adaptor that merges the two base iterators in …","An iterator adaptor that merges the two base iterators in …","An iterator adaptor that merge-joins items from the two …","An iterator adaptor that pads a sequence to a minimum …","An iterator adaptor that takes items while a closure …","An iterator adapter to get the positions of each element …","An iterator that produces only the <code>T</code> values as long as the …","An iterator adaptor that iterates over the cartesian …","An iterator adaptor that allows putting back a single item …","See <code>repeat_call</code> for more information.","An iterator that produces <em>n</em> repetitions of an element.","An iterator adaptor that steps a number elements in the …","An iterator adaptor that consumes elements while the given …","An iterator adaptor that borrows from a <code>Clone</code>-able iterator","An iterator over a incomplete tuple.","An iterator to iterate through all combinations in a <code>Clone</code>…","An iterator over all contiguous windows that produces …","An iterator that groups the items in tuples of a specific …","See <code>unfold</code> for more information.","An iterator adapter to apply a mutating function to each …","An iterator adaptor that filters <code>Option&lt;A&gt;</code> iterator …","An iterator adaptor that wraps each element in an <code>Position</code>.","See <code>multizip</code> for more information.","An iterator which iterates two other iterators …","An iterator which iterates two other iterators …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return a buffer with the produced items that was not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Split the <code>PutBack</code> into its partsreate a new <code>TakeWhileInclusive</code> from an iterator and a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Put back a single value to the front of the iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal state that will be passed to the closure on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","put back value <code>value</code> (builder method)","Implemented for homogeneous tuples of size up to 12."],"i":[10,27,0,27,0,0,26,41,0,0,26,4,10,41,26,25,0,0,25,25,26,0,0,4,10,41,0,4,103,103,0,4,10,10,4,4,4,4,10,4,4,4,4,4,4,10,0,103,103,4,41,10,25,26,27,4,41,10,25,26,27,10,103,0,0,103,4,10,25,26,27,4,0,4,103,4,103,0,103,0,103,4,103,103,103,103,4,4,0,103,103,4,4,4,0,4,10,25,26,27,0,103,4,4,4,4,4,4,4,4,103,103,4,4,103,103,103,103,4,10,4,4,10,25,26,27,0,4,103,103,103,103,103,4,103,103,103,4,4,41,10,25,26,27,10,10,4,10,10,10,10,0,103,103,0,103,0,103,4,4,41,10,10,25,26,27,4,4,27,4,4,10,25,10,0,10,27,4,10,4,10,0,0,10,10,4,4,10,4,10,4,4,4,10,10,4,4,10,4,4,103,4,10,103,103,4,10,0,0,103,103,0,103,0,103,103,103,0,71,4,4,4,4,4,4,4,4,4,4,4,4,4,103,0,4,4,103,4,10,10,10,103,4,0,4,103,103,76,103,4,4,103,103,103,103,103,103,103,103,103,103,0,103,103,0,10,0,0,0,4,4,4,10,4,10,4,4,4,10,10,103,4,103,0,103,103,103,0,103,4,41,10,25,26,27,4,41,10,25,26,27,103,103,103,4,41,10,25,26,27,0,4,4,103,103,103,0,0,103,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,69,89,49,51,57,56,70,75,88,97,60,61,82,20,19,86,96,90,50,80,95,34,18,63,73,102,84,83,94,64,101,92,91,22,99,100,72,69,89,49,51,57,56,70,75,88,97,60,61,82,20,19,86,96,90,50,80,95,34,18,63,73,102,84,83,94,64,101,92,91,22,99,100,72,69,51,57,56,70,97,60,61,82,20,19,86,96,90,50,80,95,34,18,63,73,84,83,94,64,101,92,91,22,99,100,72,49,50,95,70,82,69,89,49,51,57,56,56,56,56,56,56,56,56,56,70,75,88,60,61,82,20,19,86,96,90,50,80,95,34,18,18,63,73,102,84,83,94,64,101,92,91,22,99,100,72,49,82,20,50,95,34,34,34,34,34,34,34,34,34,34,63,102,69,89,49,51,57,56,70,75,88,97,60,61,82,20,19,86,96,90,50,80,95,34,18,63,73,102,84,83,94,64,101,92,91,22,99,100,72,72,72,72,72,72,72,72,72,72,72,72,72,69,89,49,51,57,56,70,75,88,97,60,61,82,20,19,86,96,90,50,80,95,34,18,63,73,102,84,83,94,64,101,92,91,22,99,100,72,92,69,89,49,51,70,75,88,97,60,61,82,20,19,86,96,90,50,80,95,34,18,63,73,102,84,83,94,64,101,92,91,22,99,100,72,82,70,82,69,69,69,69,69,69,69,69,69,69,69,69,69,89,89,89,89,89,89,89,89,89,89,89,89,89,70,70,70,70,70,70,70,70,70,70,70,70,70,75,75,75,75,75,75,75,75,75,75,75,75,75,88,88,88,88,88,88,88,88,88,88,88,88,88,97,60,60,60,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,61,61,61,82,82,82,82,82,82,82,82,82,82,82,82,82,20,19,19,19,19,19,19,19,19,19,19,19,19,19,86,86,86,86,86,86,86,86,86,86,86,86,86,96,96,96,96,96,96,96,96,96,96,96,96,96,90,90,90,90,90,90,90,90,90,90,90,90,90,95,95,95,95,95,95,95,95,95,95,95,95,95,34,34,34,34,34,34,34,34,34,34,34,34,34,18,18,18,18,18,18,18,18,18,18,18,18,18,63,63,63,63,63,63,63,63,63,63,63,63,63,73,73,73,73,73,73,73,73,73,73,73,73,73,102,102,102,102,102,102,102,102,102,102,102,102,102,84,84,84,84,84,84,84,84,84,84,84,84,84,83,83,83,83,83,83,83,83,83,83,83,83,83,94,94,94,94,94,94,94,94,94,94,94,94,94,64,64,64,64,64,64,64,64,64,64,64,64,64,101,101,101,101,101,101,101,101,101,101,101,101,101,92,92,92,92,92,92,92,92,92,92,92,92,92,22,22,22,22,22,22,22,22,22,22,22,22,22,99,72,72,72,72,72,72,72,72,72,72,72,72,72,88,69,89,49,51,70,75,88,97,60,61,82,20,19,86,96,90,50,80,95,34,34,34,34,34,34,34,34,34,34,18,63,73,102,84,83,94,64,101,92,91,22,99,100,72,72,72,72,72,72,72,72,72,72,72,72,51,80,95,34,34,34,34,34,34,34,34,34,34,73,84,100,72,72,72,72,72,72,72,72,72,72,72,72,70,82,75,82,82,69,89,49,51,70,75,88,97,60,61,82,20,86,96,50,80,95,34,34,34,34,34,34,34,34,34,34,18,63,73,102,84,83,64,101,99,100,72,72,72,72,72,72,72,72,72,72,72,72,94,69,89,49,51,57,56,70,75,88,97,60,61,82,20,19,86,96,90,50,80,95,34,18,63,73,102,84,83,94,64,101,92,91,22,99,100,72,69,89,49,51,57,56,70,75,88,97,60,61,82,20,19,86,96,90,50,80,95,34,18,63,73,102,84,83,94,64,101,92,91,22,99,100,72,69,89,49,51,57,56,70,75,88,97,60,61,82,20,19,86,96,90,50,80,95,34,18,63,73,102,84,83,94,64,101,92,91,22,99,100,72,82,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-2],1,2,3],[[[4,[-1,-2]],-3],1,5,5,3],[-1,1,6],[-1,[[9,[[8,[7]]]]],6],[[-1,-2],1,2,3],[[[4,[-1,-2]],-3],1,5,5,3],[[[10,[-1,-2]]],10,11,11],[[[10,[-1,-2]]],10,12,12],[[[4,[-1,-2]]],13,[[14,[13]]],[[14,[13]]]],[[[4,[-1,-2]]],[[4,[-1,-2]]],[],[]],[[[4,[-2,-3]]],-1,[],[[14,[-1]]],[[14,[-1]]]],[[[4,[-2,-3]]],[[15,[-1]]],[],[[14,[[15,[-1]]]]],[[14,[[15,[-1]]]]]],[[[10,[-1,-2]]],[[10,[-1,-2]]],[],[]],[[[16,[[4,[-1,-2]]]]],[[4,[[16,[-1]],[16,[-2]]]]],[],[]],[[[16,[[4,[-1,-2]]]]],[[4,[[16,[-1]],[16,[-2]]]]],[],[]],[[[4,[-2,-3]]],[[15,[-1]]],[],[[17,[[15,[-1]]]]],[[17,[[15,[-1]]]]]],[[[4,[-2,-3]]],-1,[],[[17,[-1]]],[[17,[-1]]]],[[[4,[-1,-2]]],13,[[17,[13]]],[[17,[13]]]],[[[4,[-1,-2]]],[[4,[-1,-2]]],[],[]],[[[10,[-1,-2]]],[[10,[-1,-2]]],[],[]],[[-1,-2],7,2,2],[-1,[[9,[8,[18,[-1]]]]],6],[[-1,-2],[[19,[-1,-2]]],6,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1,-2]]],[[8,[[7,[-1,-2]]]]],[],[]],[[-1,-2],[[20,[-1]]],6,2],[[-1,-2],21,2,2],0,[-1,[[22,[-1,-2]]],[6,23,5,24],[0,23]],[[[4,[-1,-2]]],[[4,[-1,-2]]],23,23],[[[10,[-1,-2]]],[[10,[-1,-2]]],23,23],[[[25,[-1]]],[[25,[-1]]],23],[26,26],[[[27,[-1]]],[[27,[-1]]],23],[[[4,[-1,-2]],[4,[-1,-2]]],7,23,23],[-1,28,2],[[[4,[-1,-2]],[4,[-1,-2]]],29,30,30],[[-1,-2],[[31,[-1,-2]]],6,3],[[[4,[-1,-2]]],-3,5,5,32],[-1,[[8,[-2]]],[6,5],33],[-1,[],2],[-1,[],6],[-1,[[34,[-2]]],2,[]],[[-1,-2],1,6,35],[[[4,[-1,-2]]],36,5,5],[-1,[[37,[-1]]],6],[[-1,-2],[[38,[-1,-2]]],6,3],[[-1,-2],[[39,[-1,-2]]],6,3],[-1,[[40,[-1]]],6],[[[4,[-1,-2]]],[],11,11],[[[4,[-1,-2]]],[],12,12],[[-1,-2,-3],[[8,[41]]],2,2,42],[[-1,36],-1,6],[[-1,36],-1,[6,43]],[[[4,[-1,-2]],-3,-4],-5,[],[],44,44,[]],[[[4,[-2,-3]]],-1,[],[[45,[-1]]],[[45,[-1]]]],[[[4,[-1,-2]],-3,-4,-5],-6,[],[],[],44,44,[]],[-1,46,2],[[[4,[-1,-2]],[4,[-1,-2]]],1,35,35],[[[10,[-1,-2]],[10,[-1,-2]]],1,35,35],[[[25,[-1]],[25,[-1]]],1,35],[[26,26],1],[[[27,[-1]],[27,[-1]]],1,35],[[-1,-2],1,2,2],[-1,[[9,[[18,[-1]]]]],6],[[[4,[-1,-2]],13],-1,[],47],[[[4,[-1,-2]],13],-2,47,[]],[[[4,[-2,-3]],-4],7,[],[[48,[-1]]],[[48,[-1]]],2],[[[4,[[9,[-1,-2]],[9,[-3,-2]]]]],[[9,[[4,[-1,-3]],-2]]],[],[],[]],[[[4,[[7,[-1,-2]],[7,[-1,-3]]]]],[[7,[-1,[4,[-2,-3]]]]],[],[],[]],[[[4,[[8,[-1]],[8,[-2]]]]],[[8,[[4,[-1,-2]]]]],[],[]],[[[4,[[9,[-1,-2]],[9,[-1,-3]]]]],[[9,[-1,[4,[-2,-3]]]]],[],[],[]],[[[4,[[7,[-1,-2]],[7,[-3,-2]]]]],[[7,[[4,[-1,-3]],-2]]],[],[],[]],[[-1,-2],[[49,[-1,-2]]],[5,6],3],[[-1,-2],[[50,[-1,-2]]],[5,6],3],[[[4,[-1,-2]],-3],8,5,5,3],[[[4,[-1,-2]],-3],[[8,[-4]]],5,5,3,[]],[[-1,-2],8,6,3],[[-1,-2],8,6,3],[[-1,-2],[[8,[[7,[36]]]]],[],3],[-1,[[51,[-1,-2,-3]]],[5,6],2,[]],[[[4,[-1,-2]]],[[4,[-2,-1]]],[],[]],[[[10,[-1,-2]]],[[10,[-2,-1]]],[],[]],[[[4,[-1,-2]],52],[[9,[7,53]]],47,47],[[[4,[-1,-2]],52],[[9,[7,53]]],54,54],[[[10,[-1,-2]],52],55,47,47],[[[25,[-1]],52],55,47],[[26,52],55],[[[27,[-1]],52],55,47],[[-1,-2,-3],-2,2,[],3],[[[4,[-1,-2]],-3,-4],-3,5,5,[],3],[[-1,-2],8,6,3],[[-1,-2,-3],[[9,[-2,-4]]],5,[],3,[]],[[-1,-2,-3],[[8,[-2]]],5,[],3],[[-1,-2,-3],[[9,[-2,-4]]],5,[],3,[]],[[-1,-2,-3],[[27,[-2]]],6,[],3],[[[4,[-1,-2]],-3],7,5,5,3],[[-1,-2],7,6,3],[[-1,13],[[56,[-1]]],6],[[-1,13,-2],[[57,[-1,-2]]],6,3],[-1,-1,[]],[[[9,[-1,-2]]],[[4,[-2,-1]]],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[10,[-1,-2]]],1,[],[]],[[[10,[-1,-2]]],1,[],[]],[[[4,[-1,-2]],-3],7,58,58,59],[[[10,[-1,-2]],-3],7,58,58,59],[[[10,[-1,-2]],-1,-2],[[7,[-1,-2]]],[],[]],[[[10,[-1,-2]],-1],-1,[],[]],[[[10,[-1,-2]],-2],-2,[],[]],[[-1,-2],60,2,2],[[-1,-2],[[60,[-1]]],6,2],[[-1,-2],[[61,[-1]]],6,2],[-1,62,2],[-1,[[62,[-1]]],6],[[-1,-2],[[63,[-2]]],2,3],[[-1,-2],[[63,[-1,-2]]],6,3],[-1,-2,[],[]],[[[4,[-1,-2]]],[[9,[-2,-1]]],[],[]],[-1,-2,[],[]],[[[10,[-1,-2]]],[[8,[[4,[-1,-2]]]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[[[4,[-1,-1]]],-1,[]],[[[27,[-1]]],-1,[]],[[[4,[-1,-2]]],4,2,2],[-1,-2,[],[]],[[[10,[-1,-2]]],-1,[],[[45,[-1]]]],[[[25,[-1]]],[[8,[[7,[-1,-1]]]]],23],[[[10,[-2,-1]]],-1,[],[[45,[-1]]]],0,[[[10,[-1,-2]]],1,[],[]],[[[27,[-1]]],1,[]],[[[4,[-1,-2]]],1,[],[]],[[[10,[-1,-2]]],1,[],[]],[[[4,[-1,-2]]],1,[],[]],[[[10,[-1,-2]]],1,[],[]],[[-1,-2],[[64,[-1,-2]]],[],3],0,[[[10,[-1,-2]]],[[8,[-1]]],[],[]],[[[10,[-1,-2]]],[[8,[-2]]],[],[]],[[[4,[-1,-2]]],8,5,5],[[[4,[-1,-2]]],[[8,[-1]]],[],[]],[[[10,[-1,-2]]],[[8,[-1]]],[],[]],[[[4,[-1,-2]],-3],[[4,[-4,-2]]],[],[],44,[]],[[[10,[-1,-2]],-3],[[10,[-4,-2]]],[],[],44,[]],[[[4,[-1,-2]],-1],-1,[],[]],[[[4,[-1,-2]]],-1,65,[]],[[[4,[-1,-2]],-3],-1,[],[],44],[[[10,[-1,-2]],-1],-1,[],[]],[[[10,[-1,-2]],-3],-1,[],[],44],[[[4,[-1,-2]]],36,24,24],[[[4,[-1,-1]],-2],[[4,[-3,-3]]],[],44,[]],[[[10,[-1,-2]],-3,-4],[[10,[-5,-6]]],[],[],44,44,[],[]],[[[4,[-1,-2]],-3,-4],[[4,[-5,-6]]],[],[],44,44,[],[]],[[[4,[-1,-2]],-3,-4,-5],[[4,[-6,-7]]],[],[],[],44,44,[],[]],[-1,[[66,[-1,-2]]],6,[]],[[[4,[-1,-2]],-3],[[4,[-4,-2]]],[],[],44,[]],[[[10,[-1,-2]],-3],[[10,[-4,-2]]],[],[],44,[]],[[-1,-2],[[67,[-1,-2]]],[5,6],3],[[-1,-2],[[67,[-1,-2]]],[5,6],3],[[[4,[-1,-2]],-3],[[4,[-1,-4]]],[],[],44,[]],[[[10,[-1,-2]],-3],[[10,[-1,-4]]],[],[],44,[]],[-1,8,2],[[-1,-2],68,2,2],[[-1,-2],[[68,[-1]]],6,2],[[-1,-2,-3],[[69,[-1,-3]]],6,2,3],[[-1,-2,-3],[[70,[-3]]],2,2,3],[[-1,-2,-3],[[70,[-1,-3]]],6,2,3],[-1,8,2],[-1,25,6],[[-1,-2],25,6,3],[[-1,-2],25,6,3],[-1,-2,2,[]],[-1,-2,[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-2,-1,[],[6,[71,[-1]]]],[-1,[[72,[-2]]],[],[]],[[[4,[-1,-2]]],8,5,5],[[[4,[-1,-2]]],8,43,43],[-1,[[8,[-2]]],[6,5],33],[[[4,[-1,-2]],36],8,5,5],[[[10,[-1,-2]],-1,-2],[[7,[-1,-2]]],[],[]],[[[10,[-1,-2]]],[[7,[-1,-2]]],65,65],[[[10,[-1,-2]],-3,-4],[[7,[-1,-2]]],[],[],44,44],[[-1,36,-2],[[73,[-1,-2]]],6,3],[[[4,[-1,-2]],[4,[-1,-2]]],[[8,[29]]],74,74],[[-1,-2],36,2,3],[[[4,[-1,-2]],-3],[[7,[-4,-4]]],5,5,3,[65,48]],[[-1,-2],[[7,[-4,-6]]],6,3,[],[65,[48,[-3]]],[],[65,[48,[-5]]]],[-1,[[7,[-3,-5]]],[5,6],[],[65,[48,[-2]]],[],[65,[48,[-4]]]],[[-1,-2],8,6,44],[[-1,-2],[[75,[-1,-2]]],[6,76],3],[[[16,[[4,[-1,-2]]]],77],78,79,79],[[[4,[-1,-2]],-3],[[8,[36]]],5,5,3],[-1,[[8,[36]]],6],[[-1,-2],[[8,[36]]],6,3],[[-1,-2],[[8,[36]]],6,3],[-1,[[8,[36]]],6],[[-1,-2],[[8,[36]]],6,3],[[-1,-2],[[8,[36]]],6,3],[-1,[[25,[36]]],6],[[-1,-2],[[25,[36]]],6,3],[[-1,-2],[[25,[36]]],6,3],[[-1,-2],[[80,[-1,-2]]],6,3],[[-1,-2],[[9,[-3,-4]]],2,44,[],[]],[[-1,-2],[[9,[-3,-4]]],[5,6],44,[],[]],[-1,[[8,[-2]]],6,81],[-1,82,2],[[[10,[-1,-1]],-2],-1,[],44],[-1,[[83,[-1]]],3],[[-1,36],[[84,[-1]]],23],[-1,85,2],[[[4,[-1,-2]],-3],8,43,43,3],[[[4,[-1,-2]],-3,-4],-3,43,43,[],3],[[[4,[-1,-2]]],[[8,[-2]]],[],[]],[[[10,[-1,-2]]],[[8,[-2]]],[],[]],[[[4,[-1,-2]],-3],[[4,[-1,-4]]],[],[],44,[]],[[[10,[-1,-2]],-3],[[10,[-1,-4]]],[],[],44,[]],[[[4,[-1,-2]],-2],-2,[],[]],[[[4,[-1,-2]]],-2,[],65],[[[4,[-1,-2]],-3],-2,[],[],44],[[[10,[-1,-2]],-2],-2,[],[]],[[[10,[-1,-2]],-3],-2,[],[],44],[[-1,-2],36,5,2],[[[4,[-1,-2]]],[[7,[36,[8,[36]]]]],5,5],[[-1,36],[[86,[-1]]],6],0,[-1,[[8,[-2]]],6,87],[[-1,-2],[[88,[-1,-2]]],6,3],[[-1,-2],[[89,[-1,-2]]],23,3],0,[[-1,-2],8,6,3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[90,[-1,-2]]],[6,23],[[0,[-1]]]],[-1,[[91,[-1,-2]]],[6,5],33],[-1,[[92,[-1,-2]]],[6,5],33],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[[-1,-2],[[94,[-1,-2]]],[],3],[[[4,[-1,-2]]],-1,[],47],[[[4,[-1,-2]]],-2,47,[]],[[-1,-2],[[95,[-1,-2]]],6,3],[-1,[[96,[-1]]],[6,5]],[-1,[[97,[-1]]],6],[[-1,-2],98,2,2],[[-1,-2],99,2,2],[[-1,-2],[[99,[-1]]],6,2],[[-1,-2],[[100,[-1]]],6,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[82,[-1]],-2],1,5,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[69,[-1,-2,-3]]],[[69,[-1,-2,-3]]],5,5,23],[[[51,[-1,-2,-3]]],[[51,[-1,-2,-3]]],[5,23],2,[]],[[[57,[-1,-2]]],[[57,[-1,-2]]],[],[]],[[[56,[-1]]],[[56,[-1]]],23],[[[70,[-1,-2,-3]]],[[70,[-1,-2,-3]]],5,5,23],[[[97,[-1]]],[[97,[-1]]],[23,5]],[[[60,[-1,-2]]],[[60,[-1,-2]]],23,23],[[[61,[-1,-2]]],[[61,[-1,-2]]],[5,23],[5,23]],[[[82,[-1]]],[[82,[-1]]],[5,23]],[[[20,[-1,-2]]],[[20,[-1,-2]]],[5,23],23],[[[19,[-1,-2]]],[[19,[-1,-2]]],23,23],[[[86,[-1]]],[[86,[-1]]],23],[[[96,[-1]]],[[96,[-1]]],23],[[[90,[-1,-2]]],[[90,[-1,-2]]],[5,23],[[0,[-1]],23]],[[[50,[-1,-2]]],[[50,[-1,-2]]],23,23],[[[80,[-1,-2]]],[[80,[-1,-2]]],23,23],[[[95,[-1,-2]]],[[95,[-1,-2]]],23,23],[[[34,[-1,-2]]],[[34,[-1,-2]]],[23,5],[]],[[[18,[-1]]],[[18,[-1]]],[5,23]],[[[63,[-1,-2]]],[[63,[-1,-2]]],[5,23],23],[[[73,[-1,-2]]],[[73,[-1,-2]]],23,23],[[[84,[-1]]],[[84,[-1]]],23],[[[83,[-1]]],[[83,[-1]]],23],[[[94,[-1,-2]]],[[94,[-1,-2]]],23,23],[[[64,[-1,-2]]],[[64,[-1,-2]]],23,23],[[[101,[-1]]],[[101,[-1]]],[33,23]],[[[92,[-1,-2]]],[[92,[-1,-2]]],[5,23],[33,23]],[[[91,[-1,-2]]],[[91,[-1,-2]]],[5,23],[33,23]],[[[22,[-1,-2]]],[[22,[-1,-2]]],[5,23,23],[0,23,23]],[[[99,[-1,-2]]],[[99,[-1,-2]]],23,23],[[[100,[-1,-2]]],[[100,[-1,-2]]],23,23],[[[72,[-1]]],[[72,[-1]]],23],[[[49,[-1,-2]]],-3,5,3,32],[[[50,[-1,-2]]],-3,5,3,32],[[[95,[-1,-2]]],-3,5,3,32],[[[70,[-1,-2,-3]]],36,5,5,3],[[[82,[-1]]],36,5],[[[69,[-1,-2,-3]],52],55,[5,47],[5,47],[]],[[[89,[-1,-2]],52],55,[5,47],[]],[[[49,[-1,-2]],52],55,47,[]],[[[51,[-1,-2,-3]],52],55,[5,47],2,[]],[[[57,[-1,-2]],52],55,5,3],[[[56,[-1]],52],55,5],[[[56,[-1]],52],55,5],[[[56,[-1]],52],55,5],[[[56,[-1]],52],55,5],[[[56,[-1]],52],55,5],[[[56,[-1]],52],55,5],[[[56,[-1]],52],55,5],[[[56,[-1]],52],55,5],[[[56,[-1]],52],55,5],[[[70,[-1,-2,-3]],52],55,[5,47],[5,47],[]],[[[75,[-1,-2]],52],55,[5,47],[]],[[[88,[-1,-2]],52],55,[5,47],[]],[[[60,[-1,-2]],52],55,47,47],[[[61,[-1,-2]],52],55,[5,47],[5,47]],[[[82,[-1]],52],55,[5,47]],[[[20,[-1,-2]],52],55,[5,47],47],[[[19,[-1,-2]],52],55,47,[]],[[[86,[-1]],52],55,47],[[[96,[-1]],52],55,47],[[[90,[-1,-2]],52],55,[5,47],[[0,[-1]],47]],[[[50,[-1,-2]],52],55,47,[]],[[[80,[-1,-2]],52],55,47,[]],[[[95,[-1,-2]],52],55,47,[]],[[[34,[-1,-2]],52],55,[5,47],47],[[[18,[-1]],52],55,[5,47]],[[[18,[-1]],52],55,5],[[[63,[-1,-2]],52],55,[5,47],47],[[[73,[-1,-2]],52],55,47,[]],[[[102,[-1,-2]],52],55,47,47],[[[84,[-1]],52],55,47],[[[83,[-1]],52],55,[]],[[[94,[-1,-2]],52],55,47,[]],[[[64,[-1,-2]],52],55,47,[]],[[[101,[-1]],52],55,[33,47]],[[[92,[-1,-2]],52],55,[5,47],[33,47]],[[[91,[-1,-2]],52],55,[5,47],[33,47]],[[[22,[-1,-2]],52],55,[5,23,47],[0,23,47]],[[[99,[-1,-2]],52],55,47,47],[[[100,[-1,-2]],52],55,47,47],[[[72,[-1]],52],55,47],[[[49,[-1,-2]],-3,-4],-3,5,3,[],3],[[[82,[-1]],-2,-3],-2,5,[],3],[[[20,[-1,-2]],-3,-4],-3,5,[23,5],[],3],[[[50,[-1,-2]],-3,-4],-3,5,3,[],3],[[[95,[-1,-2]],-3,-4],-3,5,3,[],3],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6]],-7]]]],-8,-9],-8,5,[],[],[],[],[],[],[],3],[[[34,[-1,[7,[[7,[-2,-3,-4,-5]],-6]]]],-7,-8],-7,5,[],[],[],[],[],[],3],[[[34,[-1,[7,[[7,[-2,-3]],-4]]]],-5,-6],-5,5,[],[],[],[],3],[[[34,[-1,[7,[[7,[-2,-3,-4]],-5]]]],-6,-7],-6,5,[],[],[],[],[],3],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7]],-8]]]],-9,-10],-9,5,[],[],[],[],[],[],[],[],3],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]],-13]]]],-14,-15],-14,5,[],[],[],[],[],[],[],[],[],[],[],[],[],3],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8]],-9]]]],-10,-11],-10,5,[],[],[],[],[],[],[],[],[],3],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]],-10]]]],-11,-12],-11,5,[],[],[],[],[],[],[],[],[],[],3],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]],-12]]]],-13,-14],-13,5,[],[],[],[],[],[],[],[],[],[],[],[],3],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]],-11]]]],-12,-13],-12,5,[],[],[],[],[],[],[],[],[],[],[],3],[[[63,[-1,-2]],-3,-4],-3,5,0,[],3],[[[102,[-1,-2]],-3,-4],-3,5,[],[],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[[72,[7]]],2,2,2,2,2,2,2,2,2,2],[[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[[72,[7]]],2,2,2,2,2,2,2,2,2,2,2],[-1,-1,[]],[[[7,[-1,-2]]],[[72,[7]]],2,2],[[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[[72,[7]]],2,2,2,2,2,2,2,2,2,2,2,2],[[[7,[-1,-2,-3,-4,-5,-6,-7,-8]]],[[72,[7]]],2,2,2,2,2,2,2,2],[[[7,[-1,-2,-3]]],[[72,[7]]],2,2,2],[[[7,[-1]]],[[72,[7]]],2],[[[7,[-1,-2,-3,-4,-5,-6]]],[[72,[7]]],2,2,2,2,2,2],[[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9]]],[[72,[7]]],2,2,2,2,2,2,2,2,2],[[[7,[-1,-2,-3,-4,-5]]],[[72,[7]]],2,2,2,2,2],[[[7,[-1,-2,-3,-4,-5,-6,-7]]],[[72,[7]]],2,2,2,2,2,2,2],[[[7,[-1,-2,-3,-4]]],[[72,[7]]],2,2,2,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[92,[-1,-2]]],[[101,[-2]]],5,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[82,[-1]]],[[7,[8,-1]]],5],[[[70,[-1,-2,-3]]],8,5,5,3],[[[82,[-1]]],8,5],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7]]],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[],[],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[],[],[],[],[],[],[],[],[],[],[]],[-1,7,[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]]],[],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3]]],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6,-7,-8]]],[],[],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4]]],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5,-6]]],[],[],[],[],[],[]],[-1,[[7,[-2,-3,-4,-5]]],[],[],[],[],[]],[[-1,-2],[[88,[-1,-2]]],5,3],[[[69,[-1,-2,-3]]],8,5,5,0],[[[89,[-1,-2]]],8,[5,23],3],[[[49,[-1,-2]]],8,5,3],[[[51,[-1,-2,-3]]],8,5,2,[]],[[[70,[-1,-2,-3]]],8,5,5,3],[[[75,[-1,-2]]],8,76,3],[[[88,[-1,-2]]],8,5,3],[[[97,[-1]]],8,5],[[[60,[-1,-2]]],8,5,5],[[[61,[-1,-2]]],8,5,5],[[[82,[-1]]],8,5],[[[20,[-1,-2]]],8,5,[23,5]],[[[19,[-1,-2]]],8,5,3],[[[86,[-1]]],8,5],[[[96,[-1]]],8,5],[[[90,[-1,-2]]],8,5,[[0,[-1]]]],[[[50,[-1,-2]]],8,5,3],[[[80,[-1,-2]]],8,5,3],[[[95,[-1,-2]]],8,5,3],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]],-13]]]]],8,5,[],[],[],[],[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]],-11]]]]],8,5,[],[],[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4]],-5]]]]],8,5,[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8]],-9]]]]],8,5,[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]],-12]]]]],8,5,[],[],[],[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]],-10]]]]],8,5,[],[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6]],-7]]]]],8,5,[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3]],-4]]]]],8,5,[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7]],-8]]]]],8,5,[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5]],-6]]]]],8,5,[],[],[],[],[]],[[[18,[-1]]],8,5],[[[63,[-1,-2]]],8,5,0],[[[73,[-1,-2]]],8,5,3],[[[102,[-1,-2]]],8,5,[]],[[[84,[-1]]],8,23],[[[83,[-1]]],8,3],[[[94,[-1,-2]]],8,[],3],[[[64,[-1,-2]]],8,[],3],[[[101,[-1]]],8,33],[[[92,[-1,-2]]],8,5,33],[[[91,[-1,-2]]],8,5,[33,23]],[[[22,[-1,-2]]],8,[5,23],[0,23]],[[[99,[-1,-2]]],8,5,5],[[[100,[-1,-2]]],8,5,5],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10]]]]],8,5,5,5,5,5,5,5,5,5,5],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8]]]]],8,5,5,5,5,5,5,5,5],[[[72,[[7,[-1,-2,-3,-4,-5,-6]]]]],8,5,5,5,5,5,5],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]]]],8,5,5,5,5,5,5,5,5,5,5,5],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7]]]]],8,5,5,5,5,5,5,5],[[[72,[[7,[-1,-2]]]]],8,5,5],[[[72,[[7,[-1,-2,-3]]]]],8,5,5,5],[[[72,[[7,[-1,-2,-3,-4]]]]],8,5,5,5,5],[[[72,[[7,[-1]]]]],8,5],[[[72,[[7,[-1,-2,-3,-4,-5]]]]],8,5,5,5,5,5],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]]]],8,5,5,5,5,5,5,5,5,5,5,5,5],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9]]]]],8,5,5,5,5,5,5,5,5,5],[[[51,[-1,-2,-3]]],8,43,2,[]],[[[80,[-1,-2]]],8,[43,24],3],[[[95,[-1,-2]]],8,43,3],[[[34,[-1,[7,[[7,[-2,-3]],-4]]]]],8,43,[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8]],-9]]]]],8,43,[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4]],-5]]]]],8,43,[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]],-11]]]]],8,43,[],[],[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5]],-6]]]]],8,43,[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]],-13]]]]],8,43,[],[],[],[],[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]],-12]]]]],8,43,[],[],[],[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6]],-7]]]]],8,43,[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]],-10]]]]],8,43,[],[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7]],-8]]]]],8,43,[],[],[],[],[],[],[]],[[[73,[-1,-2]]],8,[43,24],3],[[[84,[-1]]],8,23],[[[100,[-1,-2]]],8,[43,24],[43,24]],[[[72,[[7,[-1]]]]],8,[43,24]],[[[72,[[7,[-1,-2,-3,-4,-5,-6]]]]],8,[43,24],[43,24],[43,24],[43,24],[43,24],[43,24]],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]]]],8,[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24]],[[[72,[[7,[-1,-2,-3,-4]]]]],8,[43,24],[43,24],[43,24],[43,24]],[[[72,[[7,[-1,-2]]]]],8,[43,24],[43,24]],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9]]]]],8,[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24]],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7]]]]],8,[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24]],[[[72,[[7,[-1,-2,-3,-4,-5]]]]],8,[43,24],[43,24],[43,24],[43,24],[43,24]],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10]]]]],8,[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24]],[[[72,[[7,[-1,-2,-3]]]]],8,[43,24],[43,24],[43,24]],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8]]]]],8,[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24]],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]]]],8,[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24],[43,24]],[[[70,[-1,-2,-3]],36],8,5,5,3],[[[82,[-1]],36],8,5],[[[75,[-1,-2]],-3],8,76,3,44],[[[82,[-1]],-2],8,5,44],[[[82,[-1]]],7,5],[[[69,[-1,-2,-3]]],[[7,[36,[8,[36]]]]],5,5,0],[[[89,[-1,-2]]],[[7,[36,[8,[36]]]]],[5,23],3],[[[49,[-1,-2]]],[[7,[36,[8,[36]]]]],5,3],[[[51,[-1,-2,-3]]],[[7,[36,[8,[36]]]]],5,2,[]],[[[70,[-1,-2,-3]]],[[7,[36,[8,[36]]]]],5,5,3],[[[75,[-1,-2]]],[[7,[36,[8,[36]]]]],76,3],[[[88,[-1,-2]]],[[7,[36,[8,[36]]]]],5,3],[[[97,[-1]]],[[7,[36,[8,[36]]]]],5],[[[60,[-1,-2]]],[[7,[36,[8,[36]]]]],5,5],[[[61,[-1,-2]]],[[7,[36,[8,[36]]]]],5,5],[[[82,[-1]]],[[7,[36,[8,[36]]]]],5],[[[20,[-1,-2]]],[[7,[36,[8,[36]]]]],5,[23,5]],[[[86,[-1]]],[[7,[36,[8,[36]]]]],5],[[[96,[-1]]],[[7,[36,[8,[36]]]]],5],[[[50,[-1,-2]]],[[7,[36,[8,[36]]]]],5,3],[[[80,[-1,-2]]],[[7,[36,[8,[36]]]]],5,3],[[[95,[-1,-2]]],[[7,[36,[8,[36]]]]],5,3],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]],-12]]]]],[[7,[36,[8,[36]]]]],5,[],[],[],[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7]],-8]]]]],[[7,[36,[8,[36]]]]],5,[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10]],-11]]]]],[[7,[36,[8,[36]]]]],5,[],[],[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4]],-5]]]]],[[7,[36,[8,[36]]]]],5,[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9]],-10]]]]],[[7,[36,[8,[36]]]]],5,[],[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8]],-9]]]]],[[7,[36,[8,[36]]]]],5,[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5]],-6]]]]],[[7,[36,[8,[36]]]]],5,[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]],-13]]]]],[[7,[36,[8,[36]]]]],5,[],[],[],[],[],[],[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3,-4,-5,-6]],-7]]]]],[[7,[36,[8,[36]]]]],5,[],[],[],[],[],[]],[[[34,[-1,[7,[[7,[-2,-3]],-4]]]]],[[7,[36,[8,[36]]]]],5,[],[],[]],[[[18,[-1]]],[[7,[36,[8,[36]]]]],5],[[[63,[-1,-2]]],[[7,[36,[8,[36]]]]],5,0],[[[73,[-1,-2]]],[[7,[36,[8,[36]]]]],5,3],[[[102,[-1,-2]]],[[7,[36,[8,[36]]]]],5,[]],[[[84,[-1]]],[[7,[36,[8,[36]]]]],23],[[[83,[-1]]],[[7,[36,[8,[36]]]]],3],[[[64,[-1,-2]]],[[7,[36,[8,[36]]]]],[],3],[[[101,[-1]]],[[7,[36,[8,[36]]]]],33],[[[99,[-1,-2]]],[[7,[36,[8,[36]]]]],5,5],[[[100,[-1,-2]]],[[7,[36,[8,[36]]]]],5,5],[[[72,[[7,[-1,-2]]]]],[[7,[36,[8,[36]]]]],5,5],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7]]]]],[[7,[36,[8,[36]]]]],5,5,5,5,5,5,5],[[[72,[[7,[-1,-2,-3,-4,-5]]]]],[[7,[36,[8,[36]]]]],5,5,5,5,5],[[[72,[[7,[-1,-2,-3,-4]]]]],[[7,[36,[8,[36]]]]],5,5,5,5],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10]]]]],[[7,[36,[8,[36]]]]],5,5,5,5,5,5,5,5,5,5],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]]]],[[7,[36,[8,[36]]]]],5,5,5,5,5,5,5,5,5,5,5],[[[72,[[7,[-1]]]]],[[7,[36,[8,[36]]]]],5],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9]]]]],[[7,[36,[8,[36]]]]],5,5,5,5,5,5,5,5,5],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8]]]]],[[7,[36,[8,[36]]]]],5,5,5,5,5,5,5,5],[[[72,[[7,[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]]]],[[7,[36,[8,[36]]]]],5,5,5,5,5,5,5,5,5,5,5,5],[[[72,[[7,[-1,-2,-3]]]]],[[7,[36,[8,[36]]]]],5,5,5],[[[72,[[7,[-1,-2,-3,-4,-5,-6]]]]],[[7,[36,[8,[36]]]]],5,5,5,5,5,5],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[-1,93,[]],[[[82,[-1]]],[[82,[-1]]],5],0],"c":[128,131,134,204,266,282,316,341,351,353],"p":[[15,"bool"],[8,"IntoIterator",1259],[8,"FnMut",1260],[4,"Either",0],[8,"Iterator",1261],[8,"Sized",1262],[15,"tuple"],[4,"Option",1263],[4,"Result",1264],[4,"EitherOrBoth",0],[8,"Deref",1265],[8,"DerefMut",1265],[15,"str"],[8,"AsMut",1266],[15,"slice"],[3,"Pin",1267],[8,"AsRef",1266],[3,"ExactlyOneError",320],[3,"Batching",320],[3,"Product",320],[3,"Chain",1268],[3,"CircularTupleWindows",320],[8,"Clone",1269],[8,"ExactSizeIterator",1270],[4,"MinMaxResult",0],[4,"Position",0],[4,"FoldWhile",0],[3,"Cloned",1271],[4,"Ordering",1272],[8,"Ord",1272],[6,"Coalesce",320],[8,"FromIterator",1259],[8,"HomogeneousTuple",1258],[3,"ConsTuples",320],[8,"PartialEq",1272],[15,"usize"],[6,"Dedup",320],[6,"DedupBy",320],[6,"DedupByWithCount",320],[6,"DedupWithCount",320],[4,"Diff",0],[8,"Fn",1260],[8,"DoubleEndedIterator",1273],[8,"FnOnce",1260],[8,"Into",1266],[3,"Enumerate",1274],[8,"Debug",1275],[8,"Extend",1259],[3,"FilterMapOk",320],[3,"FilterOk",320],[3,"FlattenOk",320],[3,"Formatter",1275],[3,"Error",1275],[8,"Display",1275],[6,"Result",1275],[3,"Format",320],[3,"FormatWith",320],[8,"Hash",1276],[8,"Hasher",1276],[3,"Interleave",320],[3,"InterleaveShortest",320],[6,"Intersperse",320],[3,"IntersperseWith",320],[3,"Iterate",320],[8,"Default",1277],[6,"MapInto",320],[6,"MapOk",320],[6,"Merge",320],[3,"MergeBy",320],[3,"MergeJoinBy",320],[8,"MultiUnzip",0],[3,"Zip",320],[3,"PadUsing",320],[8,"PartialOrd",1272],[3,"PeekingTakeWhile",320],[8,"PeekingNext",0],[3,"Context",1278],[4,"Poll",1279],[8,"Future",1280],[3,"Positions",320],[8,"Product",1281],[3,"PutBack",320],[3,"RepeatCall",320],[3,"RepeatN",320],[3,"Rev",1282],[3,"Step",320],[8,"Sum",1281],[3,"TakeWhileInclusive",320],[3,"TakeWhileRef",320],[3,"TupleCombinations",320],[3,"TupleWindows",320],[3,"Tuples",320],[3,"TypeId",1283],[3,"Unfold",320],[3,"Update",320],[3,"WhileSome",320],[3,"WithPosition",320],[3,"Zip",1284],[3,"ZipEq",320],[3,"ZipLongest",320],[3,"TupleBuffer",320],[3,"ProcessResults",320],[8,"Itertools",0]],"b":[[34,"impl-AsMut%3Cstr%3E-for-Either%3CL,+R%3E"],[35,"impl-Either%3CL,+R%3E"],[36,"impl-AsMut%3CTarget%3E-for-Either%3CL,+R%3E"],[37,"impl-AsMut%3C%5BTarget%5D%3E-for-Either%3CL,+R%3E"],[41,"impl-AsRef%3C%5BTarget%5D%3E-for-Either%3CL,+R%3E"],[42,"impl-AsRef%3CTarget%3E-for-Either%3CL,+R%3E"],[43,"impl-AsRef%3Cstr%3E-for-Either%3CL,+R%3E"],[44,"impl-Either%3CL,+R%3E"],[120,"impl-Debug-for-Either%3CL,+R%3E"],[121,"impl-Display-for-Either%3CL,+R%3E"],[484,"impl-LowerExp-for-Format%3C\'a,+I%3E"],[485,"impl-LowerHex-for-Format%3C\'a,+I%3E"],[486,"impl-UpperExp-for-Format%3C\'a,+I%3E"],[487,"impl-Binary-for-Format%3C\'a,+I%3E"],[488,"impl-UpperHex-for-Format%3C\'a,+I%3E"],[489,"impl-Pointer-for-Format%3C\'a,+I%3E"],[490,"impl-Octal-for-Format%3C\'a,+I%3E"],[491,"impl-Debug-for-Format%3C\'a,+I%3E"],[492,"impl-Display-for-Format%3C\'a,+I%3E"],[508,"impl-Debug-for-ExactlyOneError%3CI%3E"],[509,"impl-Display-for-ExactlyOneError%3CI%3E"],[529,"impl-Iterator-for-ConsTuples%3CIter,+((H,+I,+J,+K,+L),+X)%3E"],[530,"impl-Iterator-for-ConsTuples%3CIter,+((I,+J,+K,+L),+X)%3E"],[531,"impl-Iterator-for-ConsTuples%3CIter,+((K,+L),+X)%3E"],[532,"impl-Iterator-for-ConsTuples%3CIter,+((J,+K,+L),+X)%3E"],[533,"impl-Iterator-for-ConsTuples%3CIter,+((G,+H,+I,+J,+K,+L),+X)%3E"],[534,"impl-Iterator-for-ConsTuples%3CIter,+((B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[535,"impl-Iterator-for-ConsTuples%3CIter,+((F,+G,+H,+I,+J,+K,+L),+X)%3E"],[536,"impl-Iterator-for-ConsTuples%3CIter,+((E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[537,"impl-Iterator-for-ConsTuples%3CIter,+((C,+D,+E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[538,"impl-Iterator-for-ConsTuples%3CIter,+((D,+E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[577,"impl-From%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J)%3E-for-Zip%3C(%3CA+as+IntoIterator%3E::IntoIter,+%3CB+as+IntoIterator%3E::IntoIter,+%3CC+as+IntoIterator%3E::IntoIter,+%3CD+as+IntoIterator%3E::IntoIter,+%3CE+as+IntoIterator%3E::IntoIter,+%3CF+as+IntoIterator%3E::IntoIter,+%3CG+as+IntoIterator%3E::IntoIter,+%3CH+as+IntoIterator%3E::IntoIter,+%3CI+as+IntoIterator%3E::IntoIter,+%3CJ+as+IntoIterator%3E::IntoIter)%3E"],[578,"impl-From%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K)%3E-for-Zip%3C(%3CA+as+IntoIterator%3E::IntoIter,+%3CB+as+IntoIterator%3E::IntoIter,+%3CC+as+IntoIterator%3E::IntoIter,+%3CD+as+IntoIterator%3E::IntoIter,+%3CE+as+IntoIterator%3E::IntoIter,+%3CF+as+IntoIterator%3E::IntoIter,+%3CG+as+IntoIterator%3E::IntoIter,+%3CH+as+IntoIterator%3E::IntoIter,+%3CI+as+IntoIterator%3E::IntoIter,+%3CJ+as+IntoIterator%3E::IntoIter,+%3CK+as+IntoIterator%3E::IntoIter)%3E"],[580,"impl-From%3C(A,+B)%3E-for-Zip%3C(%3CA+as+IntoIterator%3E::IntoIter,+%3CB+as+IntoIterator%3E::IntoIter)%3E"],[581,"impl-From%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)%3E-for-Zip%3C(%3CA+as+IntoIterator%3E::IntoIter,+%3CB+as+IntoIterator%3E::IntoIter,+%3CC+as+IntoIterator%3E::IntoIter,+%3CD+as+IntoIterator%3E::IntoIter,+%3CE+as+IntoIterator%3E::IntoIter,+%3CF+as+IntoIterator%3E::IntoIter,+%3CG+as+IntoIterator%3E::IntoIter,+%3CH+as+IntoIterator%3E::IntoIter,+%3CI+as+IntoIterator%3E::IntoIter,+%3CJ+as+IntoIterator%3E::IntoIter,+%3CK+as+IntoIterator%3E::IntoIter,+%3CL+as+IntoIterator%3E::IntoIter)%3E"],[582,"impl-From%3C(A,+B,+C,+D,+E,+F,+G,+H)%3E-for-Zip%3C(%3CA+as+IntoIterator%3E::IntoIter,+%3CB+as+IntoIterator%3E::IntoIter,+%3CC+as+IntoIterator%3E::IntoIter,+%3CD+as+IntoIterator%3E::IntoIter,+%3CE+as+IntoIterator%3E::IntoIter,+%3CF+as+IntoIterator%3E::IntoIter,+%3CG+as+IntoIterator%3E::IntoIter,+%3CH+as+IntoIterator%3E::IntoIter)%3E"],[583,"impl-From%3C(A,+B,+C)%3E-for-Zip%3C(%3CA+as+IntoIterator%3E::IntoIter,+%3CB+as+IntoIterator%3E::IntoIter,+%3CC+as+IntoIterator%3E::IntoIter)%3E"],[584,"impl-From%3C(A,)%3E-for-Zip%3C(%3CA+as+IntoIterator%3E::IntoIter,)%3E"],[585,"impl-From%3C(A,+B,+C,+D,+E,+F)%3E-for-Zip%3C(%3CA+as+IntoIterator%3E::IntoIter,+%3CB+as+IntoIterator%3E::IntoIter,+%3CC+as+IntoIterator%3E::IntoIter,+%3CD+as+IntoIterator%3E::IntoIter,+%3CE+as+IntoIterator%3E::IntoIter,+%3CF+as+IntoIterator%3E::IntoIter)%3E"],[586,"impl-From%3C(A,+B,+C,+D,+E,+F,+G,+H,+I)%3E-for-Zip%3C(%3CA+as+IntoIterator%3E::IntoIter,+%3CB+as+IntoIterator%3E::IntoIter,+%3CC+as+IntoIterator%3E::IntoIter,+%3CD+as+IntoIterator%3E::IntoIter,+%3CE+as+IntoIterator%3E::IntoIter,+%3CF+as+IntoIterator%3E::IntoIter,+%3CG+as+IntoIterator%3E::IntoIter,+%3CH+as+IntoIterator%3E::IntoIter,+%3CI+as+IntoIterator%3E::IntoIter)%3E"],[587,"impl-From%3C(A,+B,+C,+D,+E)%3E-for-Zip%3C(%3CA+as+IntoIterator%3E::IntoIter,+%3CB+as+IntoIterator%3E::IntoIter,+%3CC+as+IntoIterator%3E::IntoIter,+%3CD+as+IntoIterator%3E::IntoIter,+%3CE+as+IntoIterator%3E::IntoIter)%3E"],[588,"impl-From%3C(A,+B,+C,+D,+E,+F,+G)%3E-for-Zip%3C(%3CA+as+IntoIterator%3E::IntoIter,+%3CB+as+IntoIterator%3E::IntoIter,+%3CC+as+IntoIterator%3E::IntoIter,+%3CD+as+IntoIterator%3E::IntoIter,+%3CE+as+IntoIterator%3E::IntoIter,+%3CF+as+IntoIterator%3E::IntoIter,+%3CG+as+IntoIterator%3E::IntoIter)%3E"],[589,"impl-From%3C(A,+B,+C,+D)%3E-for-Zip%3C(%3CA+as+IntoIterator%3E::IntoIter,+%3CB+as+IntoIterator%3E::IntoIter,+%3CC+as+IntoIterator%3E::IntoIter,+%3CD+as+IntoIterator%3E::IntoIter)%3E"],[1027,"impl-Iterator-for-ConsTuples%3CIter,+((B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1028,"impl-Iterator-for-ConsTuples%3CIter,+((D,+E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1029,"impl-Iterator-for-ConsTuples%3CIter,+((J,+K,+L),+X)%3E"],[1030,"impl-Iterator-for-ConsTuples%3CIter,+((F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1031,"impl-Iterator-for-ConsTuples%3CIter,+((C,+D,+E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1032,"impl-Iterator-for-ConsTuples%3CIter,+((E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1033,"impl-Iterator-for-ConsTuples%3CIter,+((H,+I,+J,+K,+L),+X)%3E"],[1034,"impl-Iterator-for-ConsTuples%3CIter,+((K,+L),+X)%3E"],[1035,"impl-Iterator-for-ConsTuples%3CIter,+((G,+H,+I,+J,+K,+L),+X)%3E"],[1036,"impl-Iterator-for-ConsTuples%3CIter,+((I,+J,+K,+L),+X)%3E"],[1051,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J)%3E"],[1052,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H)%3E"],[1053,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E,+F)%3E"],[1054,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K)%3E"],[1055,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G)%3E"],[1056,"impl-Iterator-for-Zip%3C(A,+B)%3E"],[1057,"impl-Iterator-for-Zip%3C(A,+B,+C)%3E"],[1058,"impl-Iterator-for-Zip%3C(A,+B,+C,+D)%3E"],[1059,"impl-Iterator-for-Zip%3C(A,)%3E"],[1060,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E)%3E"],[1061,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)%3E"],[1062,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H,+I)%3E"],[1066,"impl-DoubleEndedIterator-for-ConsTuples%3CIter,+((K,+L),+X)%3E"],[1067,"impl-DoubleEndedIterator-for-ConsTuples%3CIter,+((F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1068,"impl-DoubleEndedIterator-for-ConsTuples%3CIter,+((J,+K,+L),+X)%3E"],[1069,"impl-DoubleEndedIterator-for-ConsTuples%3CIter,+((D,+E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1070,"impl-DoubleEndedIterator-for-ConsTuples%3CIter,+((I,+J,+K,+L),+X)%3E"],[1071,"impl-DoubleEndedIterator-for-ConsTuples%3CIter,+((B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1072,"impl-DoubleEndedIterator-for-ConsTuples%3CIter,+((C,+D,+E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1073,"impl-DoubleEndedIterator-for-ConsTuples%3CIter,+((H,+I,+J,+K,+L),+X)%3E"],[1074,"impl-DoubleEndedIterator-for-ConsTuples%3CIter,+((E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1075,"impl-DoubleEndedIterator-for-ConsTuples%3CIter,+((G,+H,+I,+J,+K,+L),+X)%3E"],[1079,"impl-DoubleEndedIterator-for-Zip%3C(A,)%3E"],[1080,"impl-DoubleEndedIterator-for-Zip%3C(A,+B,+C,+D,+E,+F)%3E"],[1081,"impl-DoubleEndedIterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K)%3E"],[1082,"impl-DoubleEndedIterator-for-Zip%3C(A,+B,+C,+D)%3E"],[1083,"impl-DoubleEndedIterator-for-Zip%3C(A,+B)%3E"],[1084,"impl-DoubleEndedIterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H,+I)%3E"],[1085,"impl-DoubleEndedIterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G)%3E"],[1086,"impl-DoubleEndedIterator-for-Zip%3C(A,+B,+C,+D,+E)%3E"],[1087,"impl-DoubleEndedIterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J)%3E"],[1088,"impl-DoubleEndedIterator-for-Zip%3C(A,+B,+C)%3E"],[1089,"impl-DoubleEndedIterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H)%3E"],[1090,"impl-DoubleEndedIterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)%3E"],[1113,"impl-Iterator-for-ConsTuples%3CIter,+((C,+D,+E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1114,"impl-Iterator-for-ConsTuples%3CIter,+((G,+H,+I,+J,+K,+L),+X)%3E"],[1115,"impl-Iterator-for-ConsTuples%3CIter,+((D,+E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1116,"impl-Iterator-for-ConsTuples%3CIter,+((J,+K,+L),+X)%3E"],[1117,"impl-Iterator-for-ConsTuples%3CIter,+((E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1118,"impl-Iterator-for-ConsTuples%3CIter,+((F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1119,"impl-Iterator-for-ConsTuples%3CIter,+((I,+J,+K,+L),+X)%3E"],[1120,"impl-Iterator-for-ConsTuples%3CIter,+((B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L),+X)%3E"],[1121,"impl-Iterator-for-ConsTuples%3CIter,+((H,+I,+J,+K,+L),+X)%3E"],[1122,"impl-Iterator-for-ConsTuples%3CIter,+((K,+L),+X)%3E"],[1133,"impl-Iterator-for-Zip%3C(A,+B)%3E"],[1134,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G)%3E"],[1135,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E)%3E"],[1136,"impl-Iterator-for-Zip%3C(A,+B,+C,+D)%3E"],[1137,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J)%3E"],[1138,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K)%3E"],[1139,"impl-Iterator-for-Zip%3C(A,)%3E"],[1140,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H,+I)%3E"],[1141,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H)%3E"],[1142,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)%3E"],[1143,"impl-Iterator-for-Zip%3C(A,+B,+C)%3E"],[1144,"impl-Iterator-for-Zip%3C(A,+B,+C,+D,+E,+F)%3E"]]},\
"libm":{"doc":"libm in pure Rust","t":"DFLLFFLLFFLLFFLLFFLLFLLFFFLLFLLFLLFFLLFFLLFFLLFFLLFFLLFLLFFFLLFLLFFLLFFFLLFFLLFFLLFFLLFFLLFFLLFFLLFFLLFFLLFLFLLFFLLFLFLLFFLLFFLLFFLLFFLLFLLFFFLLFLLFFLLFFLLFFFLLFFLLFFLLFFLLFFLLFFLLFFLLFFLLFFLLFLLFFFLLFFLLFFLLFFLLFFLLFFLLFLLLFLLFFLLFFLLF","n":["Libm","acos","acos","acos","acosf","acosh","acosh","acosh","acoshf","asin","asin","asin","asinf","asinh","asinh","asinh","asinhf","atan","atan","atan","atan2","atan2","atan2","atan2f","atanf","atanh","atanh","atanh","atanhf","borrow","borrow_mut","cbrt","cbrt","cbrt","cbrtf","ceil","ceil","ceil","ceilf","copysign","copysign","copysign","copysignf","cos","cos","cos","cosf","cosh","cosh","cosh","coshf","erf","erf","erf","erfc","erfc","erfc","erfcf","erff","exp","exp","exp","exp10","exp10","exp10","exp10f","exp2","exp2","exp2","exp2f","expf","expm1","expm1","expm1","expm1f","fabs","fabs","fabs","fabsf","fdim","fdim","fdim","fdimf","floor","floor","floor","floorf","fma","fma","fma","fmaf","fmax","fmax","fmax","fmaxf","fmin","fmin","fmin","fminf","fmod","fmod","fmod","fmodf","frexp","frexp","frexp","frexpf","from","hypot","hypot","hypot","hypotf","ilogb","ilogb","ilogb","ilogbf","into","j0","j0","j0","j0f","j1","j1","j1","j1f","jn","jn","jn","jnf","ldexp","ldexp","ldexp","ldexpf","lgamma","lgamma","lgamma","lgamma_r","lgamma_r","lgamma_r","lgammaf","lgammaf_r","log","log","log","log10","log10","log10","log10f","log1p","log1p","log1p","log1pf","log2","log2","log2","log2f","logf","modf","modf","modf","modff","nextafter","nextafter","nextafter","nextafterf","pow","pow","pow","powf","remainder","remainder","remainder","remainderf","remquo","remquo","remquo","remquof","rint","rint","rint","rintf","round","round","round","roundf","scalbn","scalbn","scalbn","scalbnf","sin","sin","sin","sincos","sincos","sincos","sincosf","sinf","sinh","sinh","sinh","sinhf","sqrt","sqrt","sqrt","sqrtf","tan","tan","tan","tanf","tanh","tanh","tanh","tanhf","tgamma","tgamma","tgamma","tgammaf","trunc","trunc","trunc","truncf","try_from","try_into","type_id","y0","y0","y0","y0f","y1","y1","y1","y1f","yn","yn","yn","ynf"],"q":[[0,"libm"],[236,"core::result"],[237,"core::any"]],"d":["Generic helper for libm functions, abstracting over f32 …","Arccosine (f64)","","","Arccosine (f32)","Inverse hyperbolic cosine (f64)","","","Inverse hyperbolic cosine (f32)","Arcsine (f64)","","","Arcsine (f32)","Inverse hyperbolic sine (f64)","","","Inverse hyperbolic sine (f32)","Arctangent (f64)","","","Arctangent of y/x (f64)","","","Arctangent of y/x (f32)","Arctangent (f32)","Inverse hyperbolic tangent (f64)","","","Inverse hyperbolic tangent (f32)","","","Computes the cube root of the argument.","","","Cube root (f32)","Ceil (f64)","","","Ceil (f32)","Sign of Y, magnitude of X (f64)","","","Sign of Y, magnitude of X (f32)","","","","","Hyperbolic cosine (f64)","","","Hyperbolic cosine (f64)","Error function (f64)","","","Complementary error function (f64)","","","Complementary error function (f32)","Error function (f32)","Exponential, base <em>e</em> (f64)","","","","","","","Exponential, base 2 (f64)","","","Exponential, base 2 (f32)","Exponential, base <em>e</em> (f32)","Exponential, base <em>e</em>, of x-1 (f64)","","","Exponential, base <em>e</em>, of x-1 (f32)","Absolute value (magnitude) (f64) Calculates the absolute …","","","Absolute value (magnitude) (f32) Calculates the absolute …","Positive difference (f64)","","","Positive difference (f32)","Floor (f64)","","","Floor (f32)","Floating multiply add (f64)","","","Floating multiply add (f32)","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,7,7,0,0,0,7,7,0,7,7,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,7,7,0,0,0,7,7,0,7,7,0,0,7,7,0,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,7,0,7,7,0,0,7,7,0,7,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,7,7,0,0,0,7,7,0,7,7,0,0,7,7,0,0,7,7,0,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,7,7,0,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,0,7,7,0,7,7,7,0,7,7,0,0,7,7,0,0,7,7,0],"f":[0,[1,1],[1,1],[2,2],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[1,1],[2,2],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[2,2],[1,1],[2,2],[1,1],[2,2],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[1,1],[2,2],[2,2],[1,1],[2,2],[1,1],[2,2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[1,1],[2,2],[1,1],[2,2],[1,1],[1,1],[2,2],[2,2],[1,1],[2,2],[1,1],[1,1],[1,1],[2,2],[2,2],[2,2],[1,1],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[1,1],[2,2],[1,1],[2,2],[[1,1,1],1],[[2,2,2],2],[[1,1,1],1],[[2,2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[1,[[4,[1,3]]]],[2,[[4,[2,3]]]],[1,[[4,[1,3]]]],[2,[[4,[2,3]]]],[-1,-1,[]],[[1,1],1],[[1,1],1],[[2,2],2],[[2,2],2],[1,3],[1,3],[2,3],[2,3],[-1,-2,[],[]],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[[3,1],1],[[3,2],2],[[3,1],1],[[3,2],2],[[1,3],1],[[2,3],2],[[1,3],1],[[2,3],2],[1,1],[1,1],[2,2],[1,[[4,[1,3]]]],[2,[[4,[2,3]]]],[1,[[4,[1,3]]]],[2,2],[2,[[4,[2,3]]]],[1,1],[1,1],[2,2],[1,1],[1,1],[2,2],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[2,2],[1,[[4,[1,1]]]],[2,[[4,[2,2]]]],[1,[[4,[1,1]]]],[2,[[4,[2,2]]]],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],1],[[2,2],2],[[1,1],[[4,[1,3]]]],[[2,2],[[4,[2,3]]]],[[1,1],[[4,[1,3]]]],[[2,2],[[4,[2,3]]]],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[[1,3],1],[[2,3],2],[[1,3],1],[[2,3],2],[1,1],[1,1],[2,2],[1,[[4,[1,1]]]],[1,[[4,[1,1]]]],[2,[[4,[2,2]]]],[2,[[4,[2,2]]]],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[1,1],[2,2],[[3,1],1],[[3,2],2],[[3,1],1],[[3,2],2]],"c":[],"p":[[15,"f64"],[15,"f32"],[15,"i32"],[15,"tuple"],[4,"Result",236],[3,"TypeId",237],[3,"Libm",0]],"b":[[2,"impl-Libm%3Cf64%3E"],[3,"impl-Libm%3Cf32%3E"],[6,"impl-Libm%3Cf32%3E"],[7,"impl-Libm%3Cf64%3E"],[10,"impl-Libm%3Cf32%3E"],[11,"impl-Libm%3Cf64%3E"],[14,"impl-Libm%3Cf32%3E"],[15,"impl-Libm%3Cf64%3E"],[18,"impl-Libm%3Cf64%3E"],[19,"impl-Libm%3Cf32%3E"],[21,"impl-Libm%3Cf64%3E"],[22,"impl-Libm%3Cf32%3E"],[26,"impl-Libm%3Cf32%3E"],[27,"impl-Libm%3Cf64%3E"],[32,"impl-Libm%3Cf64%3E"],[33,"impl-Libm%3Cf32%3E"],[36,"impl-Libm%3Cf32%3E"],[37,"impl-Libm%3Cf64%3E"],[40,"impl-Libm%3Cf32%3E"],[41,"impl-Libm%3Cf64%3E"],[44,"impl-Libm%3Cf32%3E"],[45,"impl-Libm%3Cf64%3E"],[48,"impl-Libm%3Cf64%3E"],[49,"impl-Libm%3Cf32%3E"],[52,"impl-Libm%3Cf32%3E"],[53,"impl-Libm%3Cf64%3E"],[55,"impl-Libm%3Cf64%3E"],[56,"impl-Libm%3Cf32%3E"],[60,"impl-Libm%3Cf64%3E"],[61,"impl-Libm%3Cf32%3E"],[63,"impl-Libm%3Cf32%3E"],[64,"impl-Libm%3Cf64%3E"],[67,"impl-Libm%3Cf32%3E"],[68,"impl-Libm%3Cf64%3E"],[72,"impl-Libm%3Cf32%3E"],[73,"impl-Libm%3Cf64%3E"],[76,"impl-Libm%3Cf32%3E"],[77,"impl-Libm%3Cf64%3E"],[80,"impl-Libm%3Cf32%3E"],[81,"impl-Libm%3Cf64%3E"],[84,"impl-Libm%3Cf32%3E"],[85,"impl-Libm%3Cf64%3E"],[88,"impl-Libm%3Cf32%3E"],[89,"impl-Libm%3Cf64%3E"],[92,"impl-Libm%3Cf32%3E"],[93,"impl-Libm%3Cf64%3E"],[96,"impl-Libm%3Cf32%3E"],[97,"impl-Libm%3Cf64%3E"],[100,"impl-Libm%3Cf32%3E"],[101,"impl-Libm%3Cf64%3E"],[104,"impl-Libm%3Cf32%3E"],[105,"impl-Libm%3Cf64%3E"],[109,"impl-Libm%3Cf64%3E"],[110,"impl-Libm%3Cf32%3E"],[113,"impl-Libm%3Cf64%3E"],[114,"impl-Libm%3Cf32%3E"],[118,"impl-Libm%3Cf32%3E"],[119,"impl-Libm%3Cf64%3E"],[122,"impl-Libm%3Cf32%3E"],[123,"impl-Libm%3Cf64%3E"],[126,"impl-Libm%3Cf32%3E"],[127,"impl-Libm%3Cf64%3E"],[130,"impl-Libm%3Cf32%3E"],[131,"impl-Libm%3Cf64%3E"],[134,"impl-Libm%3Cf64%3E"],[135,"impl-Libm%3Cf32%3E"],[137,"impl-Libm%3Cf32%3E"],[138,"impl-Libm%3Cf64%3E"],[142,"impl-Libm%3Cf64%3E"],[143,"impl-Libm%3Cf32%3E"],[145,"impl-Libm%3Cf64%3E"],[146,"impl-Libm%3Cf32%3E"],[149,"impl-Libm%3Cf32%3E"],[150,"impl-Libm%3Cf64%3E"],[153,"impl-Libm%3Cf32%3E"],[154,"impl-Libm%3Cf64%3E"],[158,"impl-Libm%3Cf32%3E"],[159,"impl-Libm%3Cf64%3E"],[162,"impl-Libm%3Cf32%3E"],[163,"impl-Libm%3Cf64%3E"],[166,"impl-Libm%3Cf32%3E"],[167,"impl-Libm%3Cf64%3E"],[170,"impl-Libm%3Cf32%3E"],[171,"impl-Libm%3Cf64%3E"],[174,"impl-Libm%3Cf32%3E"],[175,"impl-Libm%3Cf64%3E"],[178,"impl-Libm%3Cf32%3E"],[179,"impl-Libm%3Cf64%3E"],[182,"impl-Libm%3Cf32%3E"],[183,"impl-Libm%3Cf64%3E"],[186,"impl-Libm%3Cf32%3E"],[187,"impl-Libm%3Cf64%3E"],[190,"impl-Libm%3Cf64%3E"],[191,"impl-Libm%3Cf32%3E"],[193,"impl-Libm%3Cf64%3E"],[194,"impl-Libm%3Cf32%3E"],[198,"impl-Libm%3Cf32%3E"],[199,"impl-Libm%3Cf64%3E"],[202,"impl-Libm%3Cf32%3E"],[203,"impl-Libm%3Cf64%3E"],[206,"impl-Libm%3Cf32%3E"],[207,"impl-Libm%3Cf64%3E"],[210,"impl-Libm%3Cf32%3E"],[211,"impl-Libm%3Cf64%3E"],[214,"impl-Libm%3Cf32%3E"],[215,"impl-Libm%3Cf64%3E"],[218,"impl-Libm%3Cf32%3E"],[219,"impl-Libm%3Cf64%3E"],[225,"impl-Libm%3Cf32%3E"],[226,"impl-Libm%3Cf64%3E"],[229,"impl-Libm%3Cf32%3E"],[230,"impl-Libm%3Cf64%3E"],[233,"impl-Libm%3Cf32%3E"],[234,"impl-Libm%3Cf64%3E"]]},\
"limine":{"doc":"Rust crate for parsing the limine boot protocol structures.","t":"NNNNNSSSSSSSSSSSSSSSSSNDDDDDDDDDDDDDDDDDDDDDDDDDDEDDDDDDDDDDDDDDDDDNNMMMMLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLLMMMLMMLLMMMMLMMMMLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLMMLMMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMML","n":["AcpiNvs","AcpiReclaimable","BadMemory","BootloaderReclaimable","Framebuffer","ID","ID","ID","ID","ID","ID","ID","ID","ID","ID","ID","ID","ID","ID","ID","ID","ID","KernelAndModules","Limine5LevelPagingRequest","Limine5LevelPagingResponse","LimineBootInfoRequest","LimineBootInfoResponse","LimineBootTimeRequest","LimineBootTimeResponse","LimineDtbRequest","LimineDtbResponse","LimineEfiSystemTableRequest","LimineEfiSystemTableResponse","LimineEntryPoint","LimineEntryPointRequest","LimineEntryPointResponse","LimineFile","LimineFramebuffer","LimineFramebufferRequest","LimineFramebufferResponse","LimineHhdmRequest","LimineHhdmResponse","LimineKernelAddressRequest","LimineKernelAddressResponse","LimineKernelFileRequest","LimineKernelFileResponse","LimineMemmapEntry","LimineMemmapRequest","LimineMemmapResponse","LimineMemoryMapEntryType","LimineModuleRequest","LimineModuleResponse","LiminePtr","LimineRsdpRequest","LimineRsdpResponse","LimineSmbiosRequest","LimineSmbiosResponse","LimineSmpInfo","LimineSmpRequest","LimineSmpResponse","LimineStackSizeRequest","LimineStackSizeResponse","LimineTerminal","LimineTerminalRequest","LimineTerminalResponse","LimineUuid","NonNullPtr","Reserved","Usable","a","address","address","address","as_ptr","as_ptr","b","base","base","blue_mask_shift","blue_mask_size","boot_time","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpp","bsp_lapic_id","c","callback","callback","clone","clone","cmdline","cols","cpu_count","cpus","cpus","d","deref","deref_mut","dtb_ptr","edid","edid_size","entries","entry","entry","entry_32","entry_64","entry_count","eq","eq","extra_argument","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","framebuffer","framebuffer_count","framebuffers","framebuffers","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_mut","get_response","get_response","get_response","get_response","get_response","get_response","get_response","get_response","get_response","get_response","get_response","get_response","get_response","get_response","get_response","get_response","get_response","goto_address","gpt_disk_uuid","gpt_part_uuid","green_mask_shift","green_mask_size","hash","height","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","kernel_file","lapic_id","len","length","mbr_disk_id","media_type","memmap","memmap_mut","memory_model","module_count","modules","modules","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","offset","part_uuid","partition_index","path","physical_base","pitch","processor_id","red_mask_shift","red_mask_size","reserved","reserved","revision","revision","revision","revision","revision","revision","revision","revision","revision","revision","revision","revision","revision","revision","revision","revision","revision","revision","rows","size","stack_size","stack_size","terminal_count","terminals","terminals","tftp_ip","tftp_port","to_str","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unused","version","virtual_base","width","write"],"q":[[0,"limine"],[569,"core::option"],[570,"core::fmt"],[571,"core::fmt"],[572,"core::ffi"],[573,"core::ffi::c_str"],[574,"core::result"],[575,"core::any"],[576,"core::ops::function"]],"d":["","","","","","","","","","","","","","","","","","","","","","","The kernel and modules loaded are not marked as usable …","The presence of this request will prompt the bootloader to …","","","","","","","Notes","","","","","","","","","","","","","","","","","","","","","","","","","","","","The presence of this request will prompt the bootloader to …","","","","","Omitting this request will cause the bootloader to not …","","","<code>NonNull</code> with the dereference traits implemented.","","","","","Address of the RSDP table.","Address of EFI system table.","","","","The address of the file.","","","","The UNIX time on boot, in seconds, taken from the system …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Local APIC ID of the bootstrap processor.","","","","","","A command line associated with the file.","Number of columns provided by the terminal.","How many CPUs are present. It includes the bootstrap …","Return’s the SMP info array pointer as a mutable rust …","Pointer to an array of <code>cpu_count</code> pointers to struct …","","","","Virtual pointer to the device tree blob.","","","Pointer to an array of <code>entry_count</code> pointers to struct …","The requested entry point.","","Address of the 32-bit SMBIOS entry point. NULL if not …","Address of the 64-bit SMBIOS entry point. NULL if not …","How many memory map entries are present.","","","A free for use field.","Bit 0: Enable X2APIC, if possible.","Bit 0: X2APIC has been enabled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The framebuffer associated with this terminal.","How many framebuffers are present.","","Pointer to an array of <code>framebuffer_count</code> pointers to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","An atomic write to this field causes the parked CPU to …","If non-0, this is the UUID of the disk the file was loaded …","If non-0, this is the UUID of the partition the file was …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Pointer to the struct <code>LimineFile</code> structure for the kernel …","Local APIC ID of the processor as specified by the MADT.","","The size of the file.","If non-0, this is the ID of the disk the file was loaded …","Type of media file resides on.","","","","How many modules are present.","","Pointer to an array of <code>module_count</code> pointers to struct …","Null-terminated string containing the name of the …","","","","","","","","","","","","","","","","","","","The virtual address offset of the beginning of the higher …","If non-0, this is the UUID of the filesystem of the …","1-based partition index of the volume from which the file …","The path of the file within the volume, with a leading …","The physical base address of the kernel.","","ACPI Processor UID as specified by the MADT.","","","","","Revision of this structure.","","","","","","","","","","","","","","","","","","Number of rows provided by the terminal.","Returns the size of the framebuffer.","The requested stack size (also used for SMP processors).","","How many terminals are present.","","Pointer to an array of <code>terminal_count</code> pointers to struct …","If non-0, this is the IP of the TFTP server the file was …","Likewise, but port.","Converts the limine string pointer into a rust string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Null-terminated string containg the version of the …","The virtual base address of the kernel.","",""],"i":[7,7,7,7,7,21,23,25,28,4,32,14,35,11,38,40,42,44,46,48,50,52,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,6,26,41,45,1,2,6,19,33,26,26,47,1,2,12,6,19,20,21,22,23,24,25,26,27,28,29,30,4,31,32,9,8,14,7,33,34,35,36,11,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,1,2,12,6,19,20,21,22,23,24,25,26,27,28,29,30,4,31,32,9,8,14,7,33,34,35,36,11,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,26,8,6,4,4,6,7,19,29,8,8,8,6,1,1,51,26,26,34,11,11,43,43,34,6,7,9,14,8,14,1,2,12,6,19,20,21,22,23,24,25,26,27,28,29,30,4,31,32,9,8,14,7,33,34,35,36,11,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,29,27,27,27,1,2,12,6,19,20,21,22,23,24,25,26,27,28,29,30,4,31,32,9,8,14,7,33,34,35,36,11,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,2,2,21,23,25,28,4,32,14,35,11,38,40,42,44,46,48,50,52,9,19,19,26,26,6,26,1,2,12,6,19,20,21,22,23,24,25,26,27,28,29,30,4,31,32,9,8,14,7,33,34,35,36,11,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,37,9,33,19,19,19,34,34,26,39,39,39,20,2,21,23,25,28,4,32,14,35,11,38,40,42,44,46,48,50,52,24,19,19,19,49,26,9,26,26,26,9,19,20,22,24,27,30,31,8,34,36,37,39,41,43,45,47,49,51,29,26,23,23,30,30,30,19,19,2,1,2,12,6,19,20,21,22,23,24,25,26,27,28,29,30,4,31,32,9,8,14,7,33,34,35,36,11,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,1,2,12,6,19,20,21,22,23,24,25,26,27,28,29,30,4,31,32,9,8,14,7,33,34,35,36,11,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,33,1,2,12,6,19,20,21,22,23,24,25,26,27,28,29,30,4,31,32,9,8,14,7,33,34,35,36,11,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,19,20,49,26,30],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]]],[],[]],[[[2,[-1]]],3,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[4,[2,[5]]],4],0,[6,6],[7,7],0,0,0,[8,[[10,[[1,[9]]]]]],0,0,[[[1,[-1]]],[],[]],[[[1,[-1]]],[],[]],0,0,0,0,[[11,[2,[12]]],11],0,0,0,0,[[6,6],13],[[7,7],13],0,[[14,15],14],0,0,[[[1,[-1]],16],17,18],[[[2,[-1]],16],17,18],[[12,16],17],[[6,16],17],[[19,16],17],[[20,16],17],[[21,16],17],[[22,16],17],[[23,16],17],[[24,16],17],[[25,16],17],[[26,16],17],[[27,16],17],[[28,16],17],[[29,16],17],[[30,16],17],[[4,16],17],[[31,16],17],[[32,16],17],[[9,16],17],[[8,16],17],[[14,16],17],[[7,16],17],[[33,16],17],[[34,16],17],[[35,16],17],[[36,16],17],[[11,16],17],[[37,16],17],[[38,16],17],[[39,16],17],[[40,16],17],[[41,16],17],[[42,16],17],[[43,16],17],[[44,16],17],[[45,16],17],[[46,16],17],[[47,16],17],[[48,16],17],[[49,16],17],[[50,16],17],[[51,16],17],[[52,16],17],0,0,[27,[[10,[[1,[26]]]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[2,[-1]]],[[3,[-1]]],[]],[[[2,[-1]]],[[3,[-1]]],[]],[21,[[2,[20]]]],[23,[[2,[22]]]],[25,[[2,[24]]]],[28,[[2,[27]]]],[4,[[2,[30]]]],[32,[[2,[31]]]],[14,[[2,[8]]]],[35,[[2,[34]]]],[11,[[2,[36]]]],[38,[[2,[37]]]],[40,[[2,[39]]]],[42,[[2,[41]]]],[44,[[2,[43]]]],[46,[[2,[45]]]],[48,[[2,[47]]]],[50,[[2,[49]]]],[52,[[2,[51]]]],0,0,0,0,0,[[6,-1],5,53],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[34,[[10,[[1,[33]]]]]],[34,[[10,[[1,[33]]]]]],0,0,[39,[[10,[[1,[19]]]]]],0,0,[[],[[2,[12]]]],[54,21],[54,23],[54,25],[54,28],[54,4],[54,32],[54,14],[54,35],[54,11],[54,38],[54,40],[54,42],[54,44],[54,46],[54,48],[54,50],[54,52],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26,55],[[23,54],23],0,0,[30,[[10,[[1,[29]]]]]],0,0,0,[[[2,[56]]],[[3,[57]]]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],[-1,[[58,[-2]]],[],[]],0,[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],[-1,59,[]],0,0,0,0,[30,[[3,[[0,[60]]]]]]],"c":[],"p":[[3,"NonNullPtr",0],[3,"LiminePtr",0],[4,"Option",569],[3,"LimineTerminalRequest",0],[15,"tuple"],[3,"LimineUuid",0],[4,"LimineMemoryMapEntryType",0],[3,"LimineSmpResponse",0],[3,"LimineSmpInfo",0],[15,"slice"],[3,"LimineEntryPointRequest",0],[3,"LimineEntryPoint",0],[15,"bool"],[3,"LimineSmpRequest",0],[15,"u32"],[3,"Formatter",570],[6,"Result",570],[8,"Debug",570],[3,"LimineFile",0],[3,"LimineBootInfoResponse",0],[3,"LimineBootInfoRequest",0],[3,"LimineStackSizeResponse",0],[3,"LimineStackSizeRequest",0],[3,"LimineHhdmResponse",0],[3,"LimineHhdmRequest",0],[3,"LimineFramebuffer",0],[3,"LimineFramebufferResponse",0],[3,"LimineFramebufferRequest",0],[3,"LimineTerminal",0],[3,"LimineTerminalResponse",0],[3,"Limine5LevelPagingResponse",0],[3,"Limine5LevelPagingRequest",0],[3,"LimineMemmapEntry",0],[3,"LimineMemmapResponse",0],[3,"LimineMemmapRequest",0],[3,"LimineEntryPointResponse",0],[3,"LimineKernelFileResponse",0],[3,"LimineKernelFileRequest",0],[3,"LimineModuleResponse",0],[3,"LimineModuleRequest",0],[3,"LimineRsdpResponse",0],[3,"LimineRsdpRequest",0],[3,"LimineSmbiosResponse",0],[3,"LimineSmbiosRequest",0],[3,"LimineEfiSystemTableResponse",0],[3,"LimineEfiSystemTableRequest",0],[3,"LimineBootTimeResponse",0],[3,"LimineBootTimeRequest",0],[3,"LimineKernelAddressResponse",0],[3,"LimineKernelAddressRequest",0],[3,"LimineDtbResponse",0],[3,"LimineDtbRequest",0],[8,"Hasher",571],[15,"u64"],[15,"usize"],[6,"c_char",572],[3,"CStr",573],[4,"Result",574],[3,"TypeId",575],[8,"Fn",576]],"b":[]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":"QQIQQDDSSSSQQDDDDDDIIIDIIIIIIIIIIDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKKKKLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKKKKLLLKKKKKKKLLLKKKLLLLLLLLLLLLLLLLLKLKLKLLLLLLLLLLLLLLLLLLLLLLKLKKKLLLLLLLLLLKKKKLLLLLLLLLLLKLLL","n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","leak","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_with_upgraded","try_with_upgraded_for","try_with_upgraded_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","with_upgraded","write"],"q":[[0,"lock_api"],[367,"core::marker"],[368,"core::default"],[369,"core::fmt"],[370,"core::fmt"],[371,"core::num::nonzero"],[372,"core::result"],[373,"core::option"],[374,"core::any"]],"d":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Leaks the mutex guard and returns a mutable reference to …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","First, tries to atomically upgrade an upgradable read lock …","Tries to atomically upgrade an upgradable read lock into …","Tries to atomically upgrade an upgradable read lock into …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into an …","First, atomically upgrades an upgradable read lock lock …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[37,38,0,16,17,0,0,16,4,2,17,37,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,13,2,14,15,5,19,7,20,8,10,11,22,23,42,43,13,2,14,15,5,19,7,20,8,10,11,22,23,3,3,2,5,7,8,10,11,9,9,9,9,12,12,13,14,15,13,14,15,13,14,15,5,19,7,20,8,10,11,22,23,5,19,10,23,24,10,11,25,10,25,5,19,7,20,8,10,11,22,23,13,14,15,5,5,19,19,7,7,20,20,8,8,10,10,11,11,22,22,23,23,13,14,13,14,15,15,15,15,42,43,13,13,13,2,14,14,14,15,15,15,5,19,7,20,8,10,11,22,23,13,14,15,42,43,13,2,14,15,5,19,7,20,8,10,11,22,23,13,14,15,16,16,13,2,14,17,17,15,17,17,15,2,14,5,16,13,2,14,17,17,34,21,5,19,7,20,8,10,22,23,5,13,14,15,4,13,14,15,15,15,7,8,10,11,42,43,13,2,14,15,5,19,7,20,8,10,11,22,23,42,43,13,2,14,15,5,19,7,20,8,10,11,22,23,16,13,2,14,17,38,38,37,13,2,14,17,38,34,39,39,38,37,13,2,14,21,40,40,5,19,7,20,8,10,22,23,15,15,15,15,15,15,15,15,15,21,11,40,11,40,11,11,11,11,15,15,15,42,43,13,2,14,15,5,19,7,20,8,10,11,22,23,16,2,17,9,3,2,5,19,7,20,8,10,11,22,23,17,9,21,12,5,7,8,10,11,5,7,8,10,11,15,21,11,11,15],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,1,[]],[-1,1,[]],[[[2,[-1,-2]]],1,3,4],[[[5,[-1,-2]]],1,3,6],[[[7,[-1,-2,-3]]],1,3,4,6],[[[8,[-1,-2]]],1,9,6],[[[10,[-1,-2]]],1,9,6],[[[11,[-1,-2]]],1,12,6],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[-1,-2],[[13,[-1,-2]]],[],[]],[[-1,-2,-3],[[14,[-1,-2,-3]]],[],[],[]],[[-1,-2],[[15,[-1,-2]]],[],[]],[[[13,[-1,-2]]],[],16,6],[[[14,[-1,-2,-3]]],[],16,4,6],[[[15,[-1,-2]]],[],17,6],[[],[[13,[-1,-2]]],16,[6,18]],[[],[[14,[-1,-2,-3]]],16,4,[6,18]],[[],[[15,[-1,-2]]],17,[6,18]],[[[5,[-1,-2]]],-2,16,6],[[[19,[-1,-2]]],-2,16,6],[[[7,[-1,-2,-3]]],-3,16,4,6],[[[20,[-1,-2,-3]]],-3,16,4,6],[[[8,[-1,-2]]],-2,17,6],[[[10,[-1,-2]]],-2,17,6],[[[11,[-1,-2]]],-2,21,6],[[[22,[-1,-2]]],-2,17,6],[[[23,[-1,-2]]],-2,17,6],[[[5,[-1,-2]]],-2,16,6],[[[19,[-1,-2]]],-2,16,6],[[[10,[-1,-2]]],-2,17,6],[[[23,[-1,-2]]],-2,17,6],[-1,1,[]],[[[10,[-1,-2]]],[[8,[-1,-2]]],24,6],[[[11,[-1,-2]]],[[8,[-1,-2]]],25,6],[-1,1,[]],[[[10,[-1,-2]]],[[11,[-1,-2]]],25,6],[-1,1,[]],[[[5,[-1,-2]]],1,16,6],[[[19,[-1,-2]]],1,16,6],[[[7,[-1,-2,-3]]],1,16,4,6],[[[20,[-1,-2,-3]]],1,16,4,6],[[[8,[-1,-2]]],1,17,6],[[[10,[-1,-2]]],1,17,6],[[[11,[-1,-2]]],1,21,6],[[[22,[-1,-2]]],1,17,6],[[[23,[-1,-2]]],1,17,6],[[[13,[-1,-2]],26],27,16,[6,28]],[[[14,[-1,-2,-3]],26],27,16,4,[6,28]],[[[15,[-1,-2]],26],27,17,[6,28]],[[[5,[-1,-2]],26],27,16,[28,6]],[[[5,[-1,-2]],26],27,16,[29,6]],[[[19,[-1,-2]],26],27,16,[29,6]],[[[19,[-1,-2]],26],27,16,[28,6]],[[[7,[-1,-2,-3]],26],27,16,4,[28,6]],[[[7,[-1,-2,-3]],26],27,16,4,[29,6]],[[[20,[-1,-2,-3]],26],27,16,4,[29,6]],[[[20,[-1,-2,-3]],26],27,16,4,[28,6]],[[[8,[-1,-2]],26],27,17,[28,6]],[[[8,[-1,-2]],26],27,17,[29,6]],[[[10,[-1,-2]],26],27,17,[28,6]],[[[10,[-1,-2]],26],27,17,[29,6]],[[[11,[-1,-2]],26],27,21,[28,6]],[[[11,[-1,-2]],26],27,21,[29,6]],[[[22,[-1,-2]],26],27,17,[28,6]],[[[22,[-1,-2]],26],27,17,[29,6]],[[[23,[-1,-2]],26],27,17,[28,6]],[[[23,[-1,-2]],26],27,17,[29,6]],[[[13,[-1,-2]]],1,16,6],[[[14,[-1,-2,-3]]],1,16,4,6],[[[13,[-1,-2]]],1,3,6],[[[14,[-1,-2,-3]]],1,3,4,6],[[[15,[-1,-2]]],1,17,6],[[[15,[-1,-2]]],1,9,6],[[[15,[-1,-2]]],1,17,6],[[[15,[-1,-2]]],1,9,6],[-1,-1,[]],[-1,-1,[]],[30,-1,[]],[-1,[[13,[-2,-1]]],[],16],[-1,-1,[]],[-1,-1,[]],[30,-1,[]],[-1,-1,[]],[-1,[[14,[-2,-3,-1]]],[],16,4],[30,-1,[]],[-1,-1,[]],[-1,[[15,[-2,-1]]],[],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[13,[-1,-2]]],-2,16,6],[[[14,[-1,-2,-3]]],-3,16,4,6],[[[15,[-1,-2]]],-2,17,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1,-2]]],-2,16,[]],[[[14,[-1,-2,-3]]],-3,16,4,[]],[[[15,[-1,-2]]],-2,17,[]],[-1,31,[]],[-1,31,[]],[[[13,[-1,-2]]],31,16,6],[[[2,[-1,-2]]],31,16,4],[[[14,[-1,-2,-3]]],31,16,4,6],[-1,31,[]],[-1,31,[]],[[[15,[-1,-2]]],31,17,6],[-1,31,[]],[-1,31,[]],[[[15,[-1,-2]]],31,17,6],[[[2,[-1,-2]]],31,16,4],[[[14,[-1,-2,-3]]],31,16,4,6],[[[5,[-1,-2]]],-2,16,6],[-1,1,[]],[[[13,[-1,-2]]],[[5,[-1,-2]]],16,6],[[[2,[-1,-2]]],1,16,4],[[[14,[-1,-2,-3]]],[[7,[-1,-2,-3]]],16,4,6],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[[5,[-1,-2]],-3],[[19,[-1,-4]]],16,6,32,6],[[[19,[-1,-2]],-3],[[19,[-1,-4]]],16,6,32,6],[[[7,[-1,-2,-3]],-4],[[20,[-1,-2,-5]]],16,4,6,32,6],[[[20,[-1,-2,-3]],-4],[[20,[-1,-2,-5]]],16,4,6,32,6],[[[8,[-1,-2]],-3],[[22,[-1,-4]]],17,6,32,6],[[[10,[-1,-2]],-3],[[23,[-1,-4]]],17,6,32,6],[[[22,[-1,-2]],-3],[[22,[-1,-4]]],17,6,32,6],[[[23,[-1,-2]],-3],[[23,[-1,-4]]],17,6,32,6],[[[5,[-1,-2]]],[[13,[-1,-2]]],16,6],[-1,[[13,[-2,-1]]],[],16],[-1,[[14,[-2,-3,-1]]],[],16,4],[-1,[[15,[-2,-1]]],[],17],[-1,33,[]],[[[13,[-1,-2]]],-1,16,6],[[[14,[-1,-2,-3]]],-1,16,4,6],[[[15,[-1,-2]]],-1,17,6],[[[15,[-1,-2]]],[[8,[-1,-2]]],17,6],[[[15,[-1,-2]]],[[8,[-1,-2]]],34,6],[[[7,[-1,-2,-3]]],[[14,[-1,-2,-3]]],16,4,6],[[[8,[-1,-2]]],[[15,[-1,-2]]],17,6],[[[10,[-1,-2]]],[[15,[-1,-2]]],17,6],[[[11,[-1,-2]]],[[15,[-1,-2]]],21,6],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,31,[]],[[[13,[-1,-2]]],[[36,[[5,[-1,-2]]]]],16,6],[[[2,[-1,-2]]],31,16,4],[[[14,[-1,-2,-3]]],[[36,[[7,[-1,-2,-3]]]]],16,4,6],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[[13,[-1,-2]]],[[36,[[5,[-1,-2]]]]],37,6],[[[2,[-1,-2]]],31,37,4],[[[14,[-1,-2,-3]]],[[36,[[7,[-1,-2,-3]]]]],37,4,6],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[[13,[-1,-2]]],[[36,[[5,[-1,-2]]]]],37,6],[[[2,[-1,-2]]],31,37,4],[[[14,[-1,-2,-3]]],[[36,[[7,[-1,-2,-3]]]]],37,4,6],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[[5,[-1,-2]],-3],[[35,[[19,[-1,-4]],[5,[-1,-2]]]]],16,6,32,6],[[[19,[-1,-2]],-3],[[35,[[19,[-1,-4]],[19,[-1,-2]]]]],16,6,32,6],[[[7,[-1,-2,-3]],-4],[[35,[[20,[-1,-2,-5]],[7,[-1,-2,-3]]]]],16,4,6,32,6],[[[20,[-1,-2,-3]],-4],[[35,[[20,[-1,-2,-5]],[20,[-1,-2,-3]]]]],16,4,6,32,6],[[[8,[-1,-2]],-3],[[35,[[22,[-1,-4]],[8,[-1,-2]]]]],17,6,32,6],[[[10,[-1,-2]],-3],[[35,[[23,[-1,-4]],[10,[-1,-2]]]]],17,6,32,6],[[[22,[-1,-2]],-3],[[35,[[22,[-1,-4]],[22,[-1,-2]]]]],17,6,32,6],[[[23,[-1,-2]],-3],[[35,[[23,[-1,-4]],[23,[-1,-2]]]]],17,6,32,6],[[[15,[-1,-2]]],[[36,[[8,[-1,-2]]]]],17,6],[[[15,[-1,-2]]],[[36,[[8,[-1,-2]]]]],38,6],[[[15,[-1,-2]]],[[36,[[8,[-1,-2]]]]],34,6],[[[15,[-1,-2]]],[[36,[[8,[-1,-2]]]]],39,6],[[[15,[-1,-2]]],[[36,[[8,[-1,-2]]]]],39,6],[[[15,[-1,-2]]],[[36,[[8,[-1,-2]]]]],38,6],[[[15,[-1,-2]]],[[36,[[11,[-1,-2]]]]],21,6],[[[15,[-1,-2]]],[[36,[[11,[-1,-2]]]]],40,6],[[[15,[-1,-2]]],[[36,[[11,[-1,-2]]]]],40,6],[-1,31,[]],[[[11,[-1,-2]]],[[35,[[10,[-1,-2]],[11,[-1,-2]]]]],21,6],[-1,31,[]],[[[11,[-1,-2]]],[[35,[[10,[-1,-2]],[11,[-1,-2]]]]],40,6],[-1,31,[]],[[[11,[-1,-2]]],[[35,[[10,[-1,-2]],[11,[-1,-2]]]]],40,6],[[[11,[-1,-2]],-3],[[36,[-4]]],25,6,32,[]],[[[11,[-1,-2]],-3],[[36,[-4]]],[40,25],6,32,[]],[[[11,[-1,-2]],-3],[[36,[-4]]],[40,25],6,32,[]],[[[15,[-1,-2]]],[[36,[[10,[-1,-2]]]]],17,6],[[[15,[-1,-2]]],[[36,[[10,[-1,-2]]]]],38,6],[[[15,[-1,-2]]],[[36,[[10,[-1,-2]]]]],38,6],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,1,[]],[[[2,[-1,-2]]],1,16,4],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[[2,[-1,-2]]],1,3,4],[[[5,[-1,-2]]],1,3,6],[[[19,[-1,-2]]],1,3,6],[[[7,[-1,-2,-3]]],1,3,4,6],[[[20,[-1,-2,-3]]],1,3,4,6],[[[8,[-1,-2]]],1,9,6],[[[10,[-1,-2]]],1,9,6],[[[11,[-1,-2]]],1,12,6],[[[22,[-1,-2]]],1,9,6],[[[23,[-1,-2]]],1,9,6],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[[5,[-1,-2]],-3],-4,16,6,32,[]],[[[7,[-1,-2,-3]],-4],-5,16,4,6,32,[]],[[[8,[-1,-2]],-3],-4,17,6,32,[]],[[[10,[-1,-2]],-3],-4,17,6,32,[]],[[[11,[-1,-2]],-3],-4,21,6,32,[]],[[[5,[-1,-2]],-3],-4,3,6,32,[]],[[[7,[-1,-2,-3]],-4],-5,3,4,6,32,[]],[[[8,[-1,-2]],-3],-4,9,6,32,[]],[[[10,[-1,-2]],-3],-4,9,6,32,[]],[[[11,[-1,-2]],-3],-4,12,6,32,[]],[[[15,[-1,-2]]],[[11,[-1,-2]]],21,6],[-1,1,[]],[[[11,[-1,-2]]],[[10,[-1,-2]]],21,6],[[[11,[-1,-2]],-3],-4,25,6,32,[]],[[[15,[-1,-2]]],[[10,[-1,-2]]],17,6]],"c":[],"p":[[15,"tuple"],[3,"RawReentrantMutex",0],[8,"RawMutexFair",0],[8,"GetThreadId",0],[3,"MutexGuard",0],[8,"Sized",367],[3,"ReentrantMutexGuard",0],[3,"RwLockReadGuard",0],[8,"RawRwLockFair",0],[3,"RwLockWriteGuard",0],[3,"RwLockUpgradableReadGuard",0],[8,"RawRwLockUpgradeFair",0],[3,"Mutex",0],[3,"ReentrantMutex",0],[3,"RwLock",0],[8,"RawMutex",0],[8,"RawRwLock",0],[8,"Default",368],[3,"MappedMutexGuard",0],[3,"MappedReentrantMutexGuard",0],[8,"RawRwLockUpgrade",0],[3,"MappedRwLockReadGuard",0],[3,"MappedRwLockWriteGuard",0],[8,"RawRwLockDowngrade",0],[8,"RawRwLockUpgradeDowngrade",0],[3,"Formatter",369],[6,"Result",369],[8,"Debug",369],[8,"Display",369],[15,"never"],[15,"bool"],[8,"FnOnce",370],[3,"NonZeroUsize",371],[8,"RawRwLockRecursive",0],[4,"Result",372],[4,"Option",373],[8,"RawMutexTimed",0],[8,"RawRwLockTimed",0],[8,"RawRwLockRecursiveTimed",0],[8,"RawRwLockUpgradeTimed",0],[3,"TypeId",374],[3,"GuardSend",0],[3,"GuardNoSend",0]],"b":[[123,"impl-Debug-for-MutexGuard%3C\'a,+R,+T%3E"],[124,"impl-Display-for-MutexGuard%3C\'a,+R,+T%3E"],[125,"impl-Display-for-MappedMutexGuard%3C\'a,+R,+T%3E"],[126,"impl-Debug-for-MappedMutexGuard%3C\'a,+R,+T%3E"],[127,"impl-Debug-for-ReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[128,"impl-Display-for-ReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[129,"impl-Display-for-MappedReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[130,"impl-Debug-for-MappedReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[131,"impl-Debug-for-RwLockReadGuard%3C\'a,+R,+T%3E"],[132,"impl-Display-for-RwLockReadGuard%3C\'a,+R,+T%3E"],[133,"impl-Debug-for-RwLockWriteGuard%3C\'a,+R,+T%3E"],[134,"impl-Display-for-RwLockWriteGuard%3C\'a,+R,+T%3E"],[135,"impl-Debug-for-RwLockUpgradableReadGuard%3C\'a,+R,+T%3E"],[136,"impl-Display-for-RwLockUpgradableReadGuard%3C\'a,+R,+T%3E"],[137,"impl-Debug-for-MappedRwLockReadGuard%3C\'a,+R,+T%3E"],[138,"impl-Display-for-MappedRwLockReadGuard%3C\'a,+R,+T%3E"],[139,"impl-Debug-for-MappedRwLockWriteGuard%3C\'a,+R,+T%3E"],[140,"impl-Display-for-MappedRwLockWriteGuard%3C\'a,+R,+T%3E"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members and …","t":"OOOOOOO","n":["offset_of","offset_of_tuple","offset_of_union","raw_field","raw_field_tuple","raw_field_union","span_of"],"q":[[0,"memoffset"]],"d":["Calculates the offset of the specified field from the …","Calculates the offset of the specified field from the …","Calculates the offset of the specified union member from …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Produces a range instance representing the sub-slice …"],"i":[0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0],"c":[],"p":[],"b":[]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":"CCCCCCCCCCCNCCECQCNCCIIIICIICDCCICCCCCCCCCCCCCCCCLLLLAACCFFFALLLLLKAALLMCAACACLLLLLLCIIIKKKKIIIIKFKLLLLLKLLLLLKLLLLLLLKLLLLLKLLKKKKKKKKKKIIKKLKLKKKLLLKKLLKKLLLLLLLKLKKKKKLLLLKKLIILKFKLLFKIKKKKLKKLKKKKKKKLKKKAAAAAAAIIIIIIIIKKKKKKKKIIKKKKIQKIIQKKIIIKKKIIIIKKKKKIIIIIIKKKKKKQIFFKIIFKFKKKFK","n":["AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","Empty","Euclid","FloatConst","FloatErrorKind","FromPrimitive","FromStrRadixErr","Inv","Invalid","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","ParseFloatError","Pow","PrimInt","RefNum","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs_sub","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","checked_pow","clamp","clamp_max","clamp_min","float","fmt","fmt","fmt","from","from","from_str_radix","identities","int","into","into","kind","one","ops","pow","pow","sign","signum","try_from","try_from","try_into","try_into","type_id","type_id","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","ceil","classify","epsilon","floor","fract","infinity","integer_decode","is_finite","is_infinite","is_nan","is_normal","is_sign_negative","is_sign_positive","max","max_value","min","min_positive_value","min_value","nan","neg_infinity","neg_zero","powi","recip","round","signum","to_degrees","to_radians","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_rem_euclid","div_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":[[0,"num_traits"],[85,"num_traits::bounds"],[92,"num_traits::cast"],[127,"num_traits::float"],[177,"num_traits::identities"],[187,"num_traits::int"],[207,"num_traits::ops"],[214,"num_traits::ops::checked"],[230,"num_traits::ops::euclid"],[236,"num_traits::ops::inv"],[239,"num_traits::ops::mul_add"],[244,"num_traits::ops::overflowing"],[250,"num_traits::ops::saturating"],[259,"num_traits::ops::wrapping"],[271,"num_traits::pow"],[276,"num_traits::sign"],[286,"core::cmp"],[287,"core::fmt"],[288,"core::fmt"],[289,"core::any"],[290,"core::option"],[291,"core::marker"],[292,"core::ops::arith"],[293,"core::ops::arith"],[294,"core::cmp"],[295,"core::ops::arith"]],"d":["","","","","","","","","","","","","","","","","","","","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","","","","","The trait for <code>Num</code> references which implement numeric …","","","","","","","","","","","","","","","","","","","","","","","","","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a string and radix (typically <code>2..=36</code>).","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns epsilon, a small positive value.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns positive infinity.","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns NaN.","Returns negative infinity.","Returns <code>-0.0</code>.","Raise a number to an integer power.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,39,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,2,5,0,0,0,0,0,0,0,0,2,5,5,2,5,39,0,0,2,5,5,0,0,0,0,0,0,2,5,2,5,2,5,0,0,0,0,40,41,40,42,0,0,0,0,43,0,11,44,44,44,44,44,44,44,44,44,44,44,44,44,44,12,12,12,12,12,12,12,12,12,12,12,12,12,12,45,45,45,45,45,45,45,45,45,45,0,0,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,33,34,0,33,33,34,0,34,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,36,50,51,52,53,54,0,0,55,55,56,56,0,57,57,0,0,58,58,59,0,0,0,60,61,62,0,0,0,0,63,64,65,63,66,0,0,0,0,0,0,67,68,69,70,71,72,73,0,0,0,73,0,0,0,38,0,38,38,38,0,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,-1,-1],-1,1],[[-1,-1],-1,1],[[-1,-1],-1,1],0,[[2,3],4],[[5,3],4],[[5,3],4],[-1,-1,[]],[-1,-1,[]],[[6,7],[[8,[-1]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,0,0,0,[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,[[10,[-2]]],11,11],[-1,[[10,[-2]]],12,[]],[13,[[10,[-1]]],[]],[14,[[10,[-1]]],[]],[15,[[10,[-1]]],[]],[16,[[10,[-1]]],[]],[17,[[10,[-1]]],[]],[18,[[10,[-1]]],[]],[19,[[10,[-1]]],[]],[20,[[10,[-1]]],[]],[21,[[10,[-1]]],[]],[22,[[10,[-1]]],[]],[7,[[10,[-1]]],[]],[23,[[10,[-1]]],[]],[24,[[10,[-1]]],[]],[25,[[10,[-1]]],[]],[-1,[[10,[13]]],[]],[-1,[[10,[14]]],[]],[-1,[[10,[15]]],[]],[-1,[[10,[16]]],[]],[-1,[[10,[17]]],[]],[-1,[[10,[18]]],[]],[-1,[[10,[19]]],[]],[-1,[[10,[20]]],[]],[-1,[[10,[21]]],[]],[-1,[[10,[22]]],[]],[-1,[[10,[7]]],[]],[-1,[[10,[23]]],[]],[-1,[[10,[24]]],[]],[-1,[[10,[25]]],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,[[],-1,[]],[[],-1,[]],[[],-1,[26,27]],[[],-1,[]],[[],-1,[26,27]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[26,28]],[-1,-1,[]],[-1,-1,[]],[-1,29,[]],[[],-1,[]],[-1,-1,[]],[-1,-1,[]],[[],-1,[]],[-1,[[30,[23,16,19]]],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[-1,-1],-1,[]],[[],-1,[]],[[-1,-1],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[-1,17],-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,31,32],[-1,31,[]],[[],-1,33],[[],-1,[]],[-1,30,[]],[-1,30,[]],[[],-1,34],[[],-1,[]],0,[-1,7,[]],[-1,7,[]],[-1,-1,[]],[-1,-1,[]],[-1,7,[]],[-1,7,[]],[[-1,7],-1,[]],[-1,-1,[]],[[-1,7],-1,[]],[[-1,7],-1,[]],[[-1,7],-1,[]],[[-1,7],-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,7,[]],[-1,7,[]],[[-1,7],-1,[]],[[-1,7],-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-1],[[10,[-1]]],[]],[[-1,-1],[[10,[-1]]],[]],[[-1,-1],[[10,[-1]]],[]],[-1,[[10,[-1]]],[]],[[-1,-1],[[10,[-1]]],[]],[[-1,7],[[10,[-1]]],[]],[[-1,7],[[10,[-1]]],[]],[[-1,-1],[[10,[-1]]],[]],0,0,[[-1,-1],[[10,[-1]]],[]],[[-1,-1],[[10,[-1]]],[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],0,0,[-1,[],[]],0,0,0,[[-1,-2,-3],[],[],[],[]],[[-1,-2,-3],30,[],[],[]],0,0,0,[[-1,-1],[[30,[-1,31]]],[]],[[-1,-1],[[30,[-1,31]]],[]],[[-1,-1],[[30,[-1,31]]],[]],0,0,0,0,[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],0,0,0,0,0,0,[[-1,-1],-1,[]],[[-1,-1],-1,[]],[-1,-1,[]],[[-1,7],-1,[]],[[-1,7],-1,[]],[[-1,-1],-1,[]],0,0,[[-1,25],[[10,[-1]]],[35,33,36]],[[-1,25],-1,[35,33,37]],[[-1,-2],[],[],[]],0,0,[-1,-1,38],[-1,-1,[]],[[-1,-1],-1,38],[[-1,-1],-1,[]],[-1,31,[]],[-1,31,[]],[-1,-1,38],[-1,-1,[]]],"c":[],"p":[[8,"PartialOrd",286],[4,"FloatErrorKind",0],[3,"Formatter",287],[6,"Result",287],[3,"ParseFloatError",0],[15,"str"],[15,"u32"],[4,"Result",288],[3,"TypeId",289],[4,"Option",290],[8,"NumCast",92],[8,"ToPrimitive",92],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[15,"usize"],[8,"Sized",291],[8,"Div",292],[8,"Add",292],[4,"FpCategory",293],[15,"tuple"],[15,"bool"],[8,"PartialEq",286],[8,"One",177],[8,"Zero",177],[8,"Clone",294],[8,"CheckedMul",214],[8,"Mul",292],[8,"Signed",276],[8,"Num",0],[8,"Bounded",85],[8,"UpperBounded",85],[8,"LowerBounded",85],[8,"AsPrimitive",92],[8,"FromPrimitive",92],[8,"FloatConst",127],[8,"FloatCore",127],[8,"PrimInt",187],[8,"CheckedAdd",214],[8,"CheckedDiv",214],[8,"CheckedNeg",214],[8,"CheckedRem",214],[8,"CheckedShl",214],[8,"CheckedShr",214],[8,"CheckedSub",214],[8,"CheckedEuclid",230],[8,"Euclid",230],[8,"Inv",236],[8,"MulAdd",239],[8,"MulAddAssign",239],[8,"OverflowingAdd",244],[8,"OverflowingMul",244],[8,"OverflowingSub",244],[8,"Saturating",250],[8,"SaturatingAdd",250],[8,"SaturatingMul",250],[8,"SaturatingSub",250],[8,"WrappingAdd",259],[8,"WrappingMul",259],[8,"WrappingNeg",259],[8,"WrappingShl",259],[8,"WrappingShr",259],[8,"WrappingSub",259],[8,"Pow",271]],"b":[[62,"impl-Debug-for-ParseFloatError"],[63,"impl-Display-for-ParseFloatError"]]},\
"paste":{"doc":"github crates-io docs-rs","t":"O","n":["paste"],"q":[[0,"paste"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[],"b":[]},\
"pc_keyboard":{"doc":"Driver for a PS/2 PC keyboard.","t":"NNNNNNNNNNNNNNENNNNENDNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNEDEDINNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNIDDNNNNNNNNNNNNNNNNNNNNLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAMMKLLLLLLMLLLMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDNDNDNDNDNDNDNDNDNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["A","Apps","ArrowDown","ArrowLeft","ArrowRight","ArrowUp","B","Backspace","BadStartBit","BadStopBit","C","Calculator","CapsLock","D","DecodedKey","Delete","Down","E","End","Error","Escape","EventDecoder","F","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","G","H","HandleControl","Home","I","Ignore","Insert","J","K","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyCode","KeyEvent","KeyState","Keyboard","KeyboardLayout","L","LAlt","LControl","LShift","LWin","M","MapLettersToUnicode","Modifiers","Mute","N","NextTrack","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadDivide","NumpadEnter","NumpadLock","NumpadMultiply","NumpadPeriod","NumpadSubtract","O","Oem1","Oem10","Oem11","Oem12","Oem13","Oem2","Oem3","Oem4","Oem5","Oem6","Oem7","Oem8","Oem9","OemComma","OemMinus","OemPeriod","OemPlus","P","PageDown","PageUp","ParityError","PauseBreak","Play","PowerOnTestOk","PrevTrack","PrintScreen","Ps2Decoder","Q","R","RAlt2","RAltGr","RControl","RControl2","RShift","RWin","RawKey","Return","S","ScancodeSet","ScancodeSet1","ScancodeSet2","ScrollLock","SingleShot","Spacebar","Stop","SysRq","T","Tab","TooManyKeys","U","Unicode","UnknownKeyCode","Up","V","VolumeDown","VolumeUp","W","WWWHome","X","Y","Z","add_bit","add_bit","add_byte","add_word","add_word","advance_state","advance_state","advance_state","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capslock","change_layout","clear","clear","clone","clone","clone","clone","clone","clone","clone","cmp","code","default","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_ctrl_handling","get_ctrl_handling","get_modifiers","hash","into","into","into","into","into","into","into","into","into","into","into","into","is_alt","is_altgr","is_caps","is_ctrl","is_shifted","lalt","layouts","lctrl","lshift","map_keycode","new","new","new","new","new","new","numlock","partial_cmp","process_keyevent","process_keyevent","ralt","rctrl","rctrl2","rshift","set_ctrl_handling","set_ctrl_handling","state","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","AnyLayout","Azerty","Azerty","Colemak","Colemak","DVP104Key","DVP104Key","De105Key","De105Key","Dvorak104Key","Dvorak104Key","FiSe105Key","FiSe105Key","Jis109Key","Jis109Key","No105Key","No105Key","Uk105Key","Uk105Key","Us104Key","Us104Key","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","map_keycode","map_keycode","map_keycode","map_keycode","map_keycode","map_keycode","map_keycode","map_keycode","map_keycode","map_keycode","map_keycode","map_keycode","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"pc_keyboard"],[303,"pc_keyboard::layouts"],[413,"core::option"],[414,"core::result"],[415,"core::cmp"],[416,"core::fmt"],[417,"core::fmt"],[418,"core::any"]],"d":["Letters, Middle Row #1","The ‘Apps’ key (aka ‘Menu’ or ‘Right-Click’)","The down-arrow in the inverted-T","The left-arrow in the inverted-T","The right-arrow in the inverted-T","The up-arrow in the inverted-T","Letters, Bottom Row #5","Backspace","","","Letters, Bottom Row #3","Multi-media keys - Open Calculator","Caps Lock","Letters, Middle Row #3","Contains either a Unicode character, or a raw key code.","The Delete key - bottom Left of the Extended Block","Key has just been pressed","Letters, Top Row #3","The End key - bottom Middle of the Extended Block","Indicates different error conditions.","Top Left of the Keyboard","Converts KeyEvents into Unicode, according to the current …","Letters, Middle Row #4","Function Key F1","Function Key F10","Function Key F11","Function Key F12","Function Key F2","Function Key F3","Function Key F4","Function Key F5","Function Key F6","Function Key F7","Function Key F8","Function Key F9","Letters, Middle Row #5","Letters, Middle Row #6","Options for how we can handle what happens when the Ctrl …","Top Middle of the Extended Block","Letters, Top Row #8","Don’t do anything special - send through the Ctrl key …","Top Left of the Extended Block","Letters, Middle Row #7","Letters, Middle Row #8","Number Line, Digit 0","Number Line, Digit 1","Number Line, Digit 2","Number Line, Digit 3","Number Line, Digit 4","Number Line, Digit 5","Number Line, Digit 6","Number Line, Digit 7","Number Line, Digit 8","Number Line, Digit 9","Keycodes that can be generated by a keyboard.","A event describing something happen to a key on your …","The new state for a key, as part of a key event.","Encapsulates decode/sampling logic, and handles state …","Describes a Keyboard Layout.","Letters, Middle Row #9","The left-hand Alt key","The left-hand Control key","Left Shift","The left-hand ‘Windows’ key","Letters, Bottom Row #7","If either Ctrl key is held down, convert the letters A …","The set of modifier keys you have on a keyboard.","Multi-media keys - Volume Mute Toggle","Letters, Bottom Row #6","Multi-media keys - Next Track","The Numpad 0/Insert Key","Numpad 1/End Key","Numpad 2/Arrow Down Key","Numpad 3/Page Down Key","The Numpad 4/Left Arrow key","The Numpad 5 Key","The Numpad 6/Right Arrow key","The Numpad 7/Home key","The Numpad 8/Up Arrow key","The Numpad 9/Page Up key","The Numpad Add/Plus key","The Numpad Divide (or Slash) key","Numpad Enter","The Num Lock key","The Numpad Multiple (or Star) key","The Numppad Period/Delete Key","The Numpad Subtract (or Minus) key","Letters, Top Row #9","The US ANSI Semicolon/Colon key","Extra JIS key (0x79)","Extra JIS key (0x70)","Extra JIS symbol key (0x73)","Extra JIS symbol key (0x7D)","US ANSI <code>/?</code> Key","The US ANSI Single-Quote/At key","US ANSI Left-Square-Bracket key","US ANSI Backslash Key / UK ISO Backslash Key","US ANSI Right-Square-Bracket key","The UK/ISO Hash/Tilde key (ISO layout only)","Symbol key to the left of <code>Key1</code>","Extra JIS key (0x7B)","US ANSI <code>,&lt;</code> key","US Minus/Underscore Key (right of ‘Key0’)","US ANSI <code>.&gt;</code> Key","US Equals/Plus Key (right of ‘OemMinus’)","Letters, Top Row #10","The Page Down key - -bottom Right of the Extended Block","Top Right of the Extended Block","","The Pause/Break key","Multi-media keys - Play","Sent when the keyboard boots","Multi-media keys - Previous Track","The Print Screen Key","Handles decoding of IBM PS/2 Keyboard (and IBM PC/AT …","Letters, Top Row #1","Letters, Top Row #4","Used as a ‘hidden’ Right Alt Key (Print Screen = RAlt2 …","The right-hand AltGr key","The right-hand Control key","Used as a ‘hidden’ Right Control Key (Pause = …","Right Shift","The right-hand Win key","","The Return Key","Letters, Middle Row #2","A mechanism to convert bytes from a Keyboard into <code>KeyCode</code> …","Contains the implementation of Scancode Set 1.","Contains the implementation of Scancode Set 2.","The Scroll Lock key","Key was pressed and then released as an atomic action. Or …","The Space Bar","Multi-media keys - Stop","The Sys Req key (you get this keycode with Alt + …","Letters, Top Row #5","The Tab Key","Sent by the keyboard when too many keys are pressed","Letters, Top Row #7","","","Key has just been released","Letters, Bottom Row #4","Multi-media keys - Increase Volume","Multi-media keys - Decrease Volume","Letters, Top Row #2","Multi-media keys - Open Browser","Letters, Bottom Row #2","Letters, Top Row #6","Letters, Bottom Row #1","Shift a bit into the register.","Shift a bit into the register.","Processes an 8-bit byte from the keyboard.","Processes a 16-bit word from the keyboard.","Process an entire 11-bit word.","Handles the state logic for the decoding of scan codes …","Implements state logic for scancode set 1","Implements state logic for scancode set 2","","","","","","","","","","","","","","","","","","","","","","","","","The caps lock toggle is on","Change the keyboard layout.","Clears the bit register.","Clears the bit register.","","","","","","","","","Which key this event is for","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the current Ctrl key mapping.","Get the current Ctrl key mapping.","Get the current key modifier states.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","The left alt key is down","Implements the various keyboard layouts.","The left control key is down","The left shift key is down","Convert a <code>KeyCode</code> enum to a Unicode character, if possible.","Construct a new <code>ScancodeSet1</code> decoder.","Construct a new <code>ScancodeSet2</code> decoder.","Make a new Keyboard object with the given layout.","Build a new PS/2 protocol decoder.","Construct a new event decoder.","","The Num Lock toggle is on","","Processes a <code>KeyEvent</code> returned from <code>add_bit</code>, <code>add_byte</code> or …","Processes a <code>KeyEvent</code> returned from <code>add_bit</code>, <code>add_byte</code> or …","The right alt key is down","The right control key is down","Special ‘hidden’ control key is down (used when you …","The right shift key is down","Change the Ctrl key mapping.","Change the Ctrl key mapping.","The new state for the key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A enum of all the supported keyboard layouts.","A standard French 102-key (or 105-key including Windows …","","A Colemak 101-key (or 104-key including Windows keys) …","","A Dvorak Programmer 101-key (or 104-key including Windows …","","A standard German 102-key (or 105-key including Windows …","","A Dvorak 101-key (or 104-key including Windows keys) …","","A standard Finnish/Swedish 102-key (or 105-key including …","","A standard Japan 106-key (or 109-key including Windows …","","A standard Norwegian 102-key (or 105-key including Windows …","","A standard United Kingdom 102-key (or 105-key including …","","A standard United States 101-key (or 104-key including …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[16,16,16,16,16,16,16,16,5,5,16,16,16,16,0,16,17,16,16,0,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,16,18,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,16,16,16,16,16,16,18,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,5,16,16,16,16,16,0,16,16,16,16,16,16,16,16,20,16,16,0,0,0,16,17,16,16,16,16,16,16,16,20,5,17,16,16,16,16,16,16,16,16,1,9,1,1,9,8,12,13,12,13,1,9,14,5,16,17,18,3,19,20,12,13,1,9,14,5,16,17,18,3,19,20,19,14,1,9,5,16,17,18,3,19,20,16,3,19,5,16,17,18,3,19,20,1,9,14,5,16,17,18,3,19,20,12,13,1,9,14,5,16,17,18,3,19,20,1,14,1,19,12,13,1,9,14,5,16,17,18,3,19,20,19,19,19,19,19,19,0,19,19,7,12,13,1,9,14,3,19,16,1,14,19,19,19,19,1,14,3,12,13,1,9,14,5,16,17,18,3,19,20,12,13,1,9,14,5,16,17,18,3,19,20,12,13,1,9,14,5,16,17,18,3,19,20,0,0,37,0,37,0,37,0,37,0,37,0,37,0,37,0,37,0,37,0,37,27,28,29,30,31,32,33,34,35,36,37,27,28,29,30,31,32,33,34,35,36,37,27,28,29,30,31,32,33,34,35,36,37,27,28,29,30,31,32,33,34,35,36,37,27,28,29,30,31,32,33,34,35,36,37,37,27,28,29,30,31,32,33,34,35,36,37,27,28,29,30,31,32,33,34,35,36,37,27,28,29,30,31,32,33,34,35,36,37],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1,-2]],2],[[6,[[4,[3]],5]]],7,8],[[9,2],[[6,[[4,[10]],5]]]],[[[1,[-1,-2]],10],[[6,[[4,[3]],5]]],7,8],[[[1,[-1,-2]],11],[[6,[[4,[3]],5]]],7,8],[[9,11],[[6,[10,5]]]],[[-1,10],[[6,[[4,[3]],5]]],[]],[[12,10],[[6,[[4,[3]],5]]]],[[13,10],[[6,[[4,[3]],5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[14,[-1]],-1],15,7],[[[1,[-1,-2]]],15,7,8],[9,15],[5,5],[16,16],[17,17],[18,18],[3,3],[19,19],[20,20],[[16,16],21],0,[[],19],[[5,5],2],[[16,16],2],[[17,17],2],[[18,18],2],[[3,3],2],[[19,19],2],[[20,20],2],[[[1,[-1,-2]],22],23,[7,24],[8,24]],[[9,22],23],[[[14,[-1]],22],23,[7,24]],[[5,22],23],[[16,22],23],[[17,22],23],[[18,22],23],[[3,22],23],[[19,22],23],[[20,22],23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[1,[-1,-2]]],18,7,8],[[[14,[-1]]],18,7],[[[1,[-1,-2]]],19,7,8],[[19,-1],15,25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,2],[19,2],[19,2],[19,2],[19,2],0,0,0,0,[[-1,16,19,18],20,[]],[[],12],[[],13],[[-1,-2,18],[[1,[-2,-1]]],8,7],[[],9],[[-1,18],[[14,[-1]]],7],[[16,17],3],0,[[16,16],[[4,[21]]]],[[[1,[-1,-2]],3],[[4,[20]]],7,8],[[[14,[-1]],3],[[4,[20]]],7],0,0,0,0,[[[1,[-1,-2]],18],15,7,8],[[[14,[-1]],18],15,7],0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[27,16,19,18],20],[[28,16,19,18],20],[[29,16,19,18],20],[[30,16,19,18],20],[[31,16,19,18],20],[[32,16,19,18],20],[[33,16,19,18],20],[[34,16,19,18],20],[[35,16,19,18],20],[[36,16,19,18],20],[[37,16,19,18],20],[[37,16,19,18],20],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]]],"c":[],"p":[[3,"Keyboard",0],[15,"bool"],[3,"KeyEvent",0],[4,"Option",413],[4,"Error",0],[4,"Result",414],[8,"KeyboardLayout",0],[8,"ScancodeSet",0],[3,"Ps2Decoder",0],[15,"u8"],[15,"u16"],[3,"ScancodeSet1",0],[3,"ScancodeSet2",0],[3,"EventDecoder",0],[15,"tuple"],[4,"KeyCode",0],[4,"KeyState",0],[4,"HandleControl",0],[3,"Modifiers",0],[4,"DecodedKey",0],[4,"Ordering",415],[3,"Formatter",416],[6,"Result",416],[8,"Debug",416],[8,"Hasher",417],[3,"TypeId",418],[3,"DVP104Key",303],[3,"Dvorak104Key",303],[3,"Us104Key",303],[3,"Uk105Key",303],[3,"Jis109Key",303],[3,"Azerty",303],[3,"Colemak",303],[3,"De105Key",303],[3,"No105Key",303],[3,"FiSe105Key",303],[4,"AnyLayout",303]],"b":[[378,"impl-KeyboardLayout-for-%26AnyLayout"],[379,"impl-KeyboardLayout-for-AnyLayout"]]},\
"pin_project_lite":{"doc":"A lightweight version of pin-project written with …","t":"O","n":["pin_project"],"q":[[0,"pin_project_lite"]],"d":["A macro that creates a projection type covering all the …"],"i":[0],"f":[0],"c":[],"p":[],"b":[]},\
"pin_utils":{"doc":"Utilities for pinning","t":"OOO","n":["pin_mut","unsafe_pinned","unsafe_unpinned"],"q":[[0,"pin_utils"]],"d":["Pins a value on the stack.","A pinned projection of a struct field.","An unpinned projection of a struct field."],"i":[0,0,0],"f":[0,0,0],"c":[],"p":[],"b":[]},\
"ppv_lite86":{"doc":"","t":"IIIIIIIIIIQIIIIIIIIIIIIIKKOOOKKKKKKLLLLKKKKKKKKKKKKKKKKKKKKKKKKKIQIQIQIQIQIQIQIQIQIQKLLKKKLLCCCKKKAGGDDDDDDGGGDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLTTTLLLLLLLLLLLLLLL","n":["AndNot","ArithOps","BSwap","BitOps0","BitOps128","BitOps32","BitOps64","LaneWords4","Machine","MultiLane","Output","RotateEachWord128","RotateEachWord32","RotateEachWord64","Store","StoreBytes","Swap64","UnsafeFrom","VZip","Vec2","Vec4","Vec4Ext","Vector","Words4","andnot","bswap","dispatch","dispatch_light128","dispatch_light256","extract","extract","from_lanes","insert","insert","instance","read_be","read_be","read_le","read_le","rotate_each_word_right11","rotate_each_word_right12","rotate_each_word_right16","rotate_each_word_right20","rotate_each_word_right24","rotate_each_word_right25","rotate_each_word_right32","rotate_each_word_right7","rotate_each_word_right8","shuffle1230","shuffle2301","shuffle3012","shuffle_lane_words1230","shuffle_lane_words2301","shuffle_lane_words3012","swap1","swap16","swap2","swap32","swap4","swap64","swap8","to_lanes","to_scalars","transpose4","u128x1","u128x1","u128x2","u128x2","u128x4","u128x4","u32x4","u32x4","u32x4x2","u32x4x2","u32x4x4","u32x4x4","u64x2","u64x2","u64x2x2","u64x2x2","u64x2x4","u64x2x4","u64x4","u64x4","unpack","unpack","unpack","unsafe_from","unsafe_read_be","unsafe_read_le","vec","vec","vec128_storage","vec256_storage","vec512_storage","vzip","write_be","write_le","x86_64","AVX","AVX2","Avx2Machine","NoA1","NoA2","NoNI","NoS3","NoS4","SSE2","SSE41","SSSE3","SseMachine","YesA1","YesA2","YesNI","YesS3","YesS4","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","eq","eq","eq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","instance","instance","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new128","new128","split128","split128","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpack","vec128_storage","vec256_storage","vec512_storage","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"ppv_lite86"],[99,"ppv_lite86::x86_64"],[269,"core::marker"],[270,"core::clone"],[271,"core::marker"],[272,"core::any"]],"d":["","Ops that depend on word size","","Ops that are independent of word size and endian","","","","A vector composed one or more lanes each composed of four …","","A vector composed of multiple 128-bit lanes.","","","","","","","Exchange neigboring ranges of bits of the specified size","","Combine single vectors into a multi-lane vector.","A vector composed of two elements, which may be words or …","A vector composed of four elements, which may be words or …","Vec4 functions which may not be implemented yet for all …","","A vector composed of four words; depending on their size, …","","","Generate the full set of optimized implementations to take …","Generate only the basic implementations necessary to be …","Generate only the basic implementations necessary to be …","","","Build a multi-lane vector from individual lanes.","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","Split a multi-lane vector into single-lane vectors.","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","Safety","Safety","","","","","","","","","","AVX but not AVX2: only 128-bit integer operations, but use …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generic wrapper for unparameterized storage of any of the …","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,31,32,0,0,0,33,34,8,33,34,35,35,35,35,35,36,36,36,36,36,36,37,36,36,38,38,38,39,39,39,40,40,40,40,40,40,40,8,41,42,0,35,0,35,0,35,0,35,0,35,0,35,0,35,0,35,0,35,0,35,7,35,35,43,4,4,35,35,0,0,0,44,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,22,23,24,22,23,24,9,10,11,12,13,14,15,16,17,18,19,21,22,22,23,23,24,19,21,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,23,24,23,24,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,22,0,0,0,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-1],[],[]],[-1,-1,[]],0,0,0,[[-1,1],-2,[],[]],[[-1,1],-2,[],[]],[-1,-2,[],[]],[[-1,-2,1],-1,[],[]],[[-1,-2,1],-1,[],[]],[[],-1,[]],[[-1,[3,[2]]],-2,[],4],[[-1,[3,[2]]],-2,[],4],[[-1,[3,[2]]],-2,[],4],[[-1,[3,[2]]],-2,[],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-1,-1,-1],[[5,[-1,-1,-1,-1]]],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[[-1,-2],-3,[],[],[[7,[-2]]]],[[-1,-2],-3,[],[],[[7,[-2]]]],[-1,-2,[],[]],[[[3,[2]]],-1,[]],[[[3,[2]]],-1,[]],[[-1,-2],-3,[],[],[[8,[-2]]]],[[-1,-2],-3,[],[],[[8,[-2]]]],0,0,0,[-1,-2,[],[]],[[-1,[3,[2]]],5,[]],[[-1,[3,[2]]],5,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[[[19,[-1,-2,-3]]],[[19,[-1,-2,-3]]],20,20,20],[[[21,[-1]]],[[21,[-1]]],20],[22,22],[23,23],[24,24],[[],22],[[],23],[[],24],[[22,22],25],[[23,23],25],[[24,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[26,[1]]],22],[-1,-1,[]],[[[26,[27]]],23],[-1,-1,[]],[[],[[19,[-1,-2,-3]]],28,28,28],[[],[[21,[-1]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[22]]],23],[[[26,[22]]],24],[23,[[26,[22]]]],[24,[[26,[22]]]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[22,22],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[15,"u32"],[15,"u8"],[15,"slice"],[8,"StoreBytes",0],[15,"tuple"],[8,"Sized",269],[8,"Store",0],[8,"MultiLane",0],[3,"YesS3",99],[3,"NoS3",99],[3,"YesS4",99],[3,"NoS4",99],[3,"YesA1",99],[3,"NoA1",99],[3,"YesA2",99],[3,"NoA2",99],[3,"YesNI",99],[3,"NoNI",99],[3,"SseMachine",99],[8,"Clone",270],[3,"Avx2Machine",99],[19,"vec128_storage",99],[19,"vec256_storage",99],[19,"vec512_storage",99],[15,"bool"],[15,"array"],[15,"u64"],[8,"Copy",269],[4,"Result",271],[3,"TypeId",272],[8,"AndNot",0],[8,"BSwap",0],[8,"Vec2",0],[8,"Vec4",0],[8,"Machine",0],[8,"RotateEachWord32",0],[8,"RotateEachWord64",0],[8,"Words4",0],[8,"LaneWords4",0],[8,"Swap64",0],[8,"Vector",0],[8,"Vec4Ext",0],[8,"UnsafeFrom",0],[8,"VZip",0]],"b":[]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":"NNNEDNDNNDDNNNDNEDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDCLLLLLLLLLLLLLL","n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delim_span","delimiter","eq","eq","eq","eq","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"proc_macro2"],[228,"proc_macro2::extra"],[243,"proc_macro2::token_stream"],[259,"core::cmp"],[260,"core::marker"],[261,"core::convert"],[262,"core::iter::traits::collect"],[263,"core::fmt"],[264,"core::fmt"],[265,"proc_macro"],[266,"core::hash"],[267,"core::option"],[268,"alloc::string"],[269,"core::ops::range"],[270,"core::any"]],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns an object that holds this group’s <code>span_open()</code> and","Returns the punctuation used as the delimiter for this …","","","","","","","Items which do not have a correspondence to any API in the …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","An object that holds a <code>Group</code>’s <code>span_open()</code> and …","","","","","Returns a span for the closing punctuation of the group …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a span covering the entire delimited group.","Returns a span for the opening punctuation of the group …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[11,10,10,0,0,8,0,8,11,0,0,8,10,10,0,8,0,0,0,0,1,23,7,6,8,9,10,1,11,12,5,23,7,6,8,9,10,1,11,12,5,5,6,5,7,6,8,9,10,1,11,12,5,7,6,8,9,10,1,11,12,5,12,7,9,9,10,11,12,12,7,7,0,5,5,5,5,23,23,7,7,6,8,8,9,9,10,1,1,11,12,12,5,5,23,7,7,7,6,6,8,8,8,8,8,9,10,1,11,12,5,7,7,7,5,12,5,5,5,5,5,5,5,5,5,5,23,7,6,8,9,10,1,11,12,5,7,7,5,5,6,6,6,7,9,1,12,12,12,6,8,9,1,12,5,6,1,23,8,9,1,12,5,9,9,9,5,5,7,6,8,9,10,1,11,12,5,23,7,8,9,1,12,5,0,23,7,6,8,9,10,1,11,12,5,23,7,6,8,9,10,1,11,12,5,23,7,6,8,9,10,1,11,12,5,5,5,5,5,5,5,5,5,5,5,6,5,5,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[4,[3]]],5],[[],6],[2,5],[7,7],[6,6],[8,8],[9,9],[10,10],[1,1],[11,11],[12,12],[5,5],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[12,12],14],[[],7],[9,15],[9,10],[[10,10],16],[[11,11],16],[[12,-1],16,[17,[19,[18]]]],[[12,12],16],[[7,-1],13,20],[[7,-1],13,20],0,[21,5],[21,5],[22,5],[22,5],[[23,24],25],[[23,24],25],[[7,24],25],[[7,24],25],[[6,24],25],[[8,24],25],[[8,24],25],[[9,24],25],[[9,24],25],[[10,24],25],[[1,24],25],[[1,24],25],[[11,24],25],[[12,24],25],[[12,24],25],[[5,24],25],[[5,24],25],[-1,-1,[]],[8,7],[-1,-1,[]],[26,7],[27,6],[-1,-1,[]],[12,8],[1,8],[5,8],[9,8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,7,20],[-1,7,20],[18,[[28,[7,23]]]],[18,[[28,[5,23]]]],[[12,-1],13,29],[30,5],[30,5],[31,5],[31,5],[32,5],[32,5],[33,5],[33,5],[34,5],[34,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,35],[7,16],[36,5],[36,5],[[6,6],[[37,[6]]]],[[6,6],6],[[],6],[[],7],[[10,7],9],[[2,11],1],[[18,6],12],[[18,6],12],[[12,12],[[37,[14]]]],[[6,6],6],[[8,6],13],[[9,6],13],[[1,6],13],[[12,6],13],[[5,6],13],[6,[[37,[38]]]],[1,11],[23,6],[8,6],[9,6],[1,6],[12,6],[5,6],[9,6],[9,6],[9,7],[18,5],[[5,-1],[[37,[6]]],[[40,[39]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],0,[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[42,5],[42,5],[43,5],[43,5],[44,5],[44,5],[45,5],[45,5],[3,5],[3,5],[6,27],[39,5],[39,5],0,[-1,-2,[],[]],[-1,-2,[],[]],[15,15],[[-1,-2],13,[],[]],[15,6],[[15,24],25],[-1,-1,[]],[-1,-2,[],[]],[15,6],[15,6],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,41,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[35,35],[[-1,-2],13,[],[]],[[35,24],25],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,[[37,[8]]]],[35,[[13,[39,[37,[39]]]]]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,41,[]]],"c":[],"p":[[3,"Punct",0],[15,"char"],[15,"u8"],[15,"slice"],[3,"Literal",0],[3,"Span",0],[3,"TokenStream",0],[4,"TokenTree",0],[3,"Group",0],[4,"Delimiter",0],[4,"Spacing",0],[3,"Ident",0],[15,"tuple"],[4,"Ordering",259],[3,"DelimSpan",228],[15,"bool"],[8,"Sized",260],[15,"str"],[8,"AsRef",261],[8,"IntoIterator",262],[15,"f32"],[15,"f64"],[3,"LexError",0],[3,"Formatter",263],[6,"Result",263],[3,"TokenStream",264],[3,"Span",264],[4,"Result",265],[8,"Hasher",266],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"IntoIter",243],[15,"isize"],[4,"Option",267],[3,"String",268],[15,"usize"],[8,"RangeBounds",269],[3,"TypeId",270],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"]],"b":[[68,"impl-PartialEq%3CT%3E-for-Ident"],[69,"impl-PartialEq-for-Ident"],[70,"impl-Extend%3CTokenStream%3E-for-TokenStream"],[71,"impl-Extend%3CTokenTree%3E-for-TokenStream"],[77,"impl-Display-for-LexError"],[78,"impl-Debug-for-LexError"],[79,"impl-Debug-for-TokenStream"],[80,"impl-Display-for-TokenStream"],[82,"impl-Display-for-TokenTree"],[83,"impl-Debug-for-TokenTree"],[84,"impl-Debug-for-Group"],[85,"impl-Display-for-Group"],[87,"impl-Debug-for-Punct"],[88,"impl-Display-for-Punct"],[90,"impl-Debug-for-Ident"],[91,"impl-Display-for-Ident"],[92,"impl-Debug-for-Literal"],[93,"impl-Display-for-Literal"],[95,"impl-From%3CTokenTree%3E-for-TokenStream"],[97,"impl-From%3CTokenStream%3E-for-TokenStream"],[100,"impl-From%3CIdent%3E-for-TokenTree"],[101,"impl-From%3CPunct%3E-for-TokenTree"],[102,"impl-From%3CLiteral%3E-for-TokenTree"],[103,"impl-From%3CGroup%3E-for-TokenTree"],[111,"impl-FromIterator%3CTokenStream%3E-for-TokenStream"],[112,"impl-FromIterator%3CTokenTree%3E-for-TokenStream"]]},\
"quote":{"doc":"github crates-io docs-rs","t":"IIIKKKKKOLLOOLLLLK","n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":[[0,"quote"],[18,"proc_macro2"],[19,"core::convert"],[20,"core::iter::traits::collect"],[21,"core::fmt"],[22,"core::fmt"],[23,"proc_macro2"]],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,12,12,12,12,13,0,5,5,0,0,13,13,5,5,5],"f":[0,0,0,[[-1,-2],1,[],[[3,[2]]]],[[-1,-2],1,[],4],[[-1,-2,-3],1,[],4,5],[[-1,-2,-3],1,[],4,5],[[-1,6],7,[]],0,[-1,8,9],[-1,8,9],0,0,[-1,[[11,[10]]],[]],[-1,[[11,[10]]],[]],[-1,8,[]],[-1,8,[]],[[-1,8],1,[]]],"c":[],"p":[[15,"tuple"],[4,"TokenTree",18],[8,"Into",19],[8,"IntoIterator",20],[8,"ToTokens",0],[3,"Formatter",21],[6,"Result",21],[3,"TokenStream",18],[8,"Sized",22],[3,"Span",18],[4,"Option",23],[8,"TokenStreamExt",0],[8,"IdentFragment",0]],"b":[]},\
"rand":{"doc":"Utilities for random number generation","t":"SIDISIIQILLLALLKLLLLLKLLLLLLLLLKKALALLLLLAKLLKLLLLDDEDDINDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLIIIQDDDDDIQKLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCADLLLLLLLLLLLLLLLLQIIKLLKLKK","n":["CUSTOM_START","CryptoRng","Error","Fill","INTERNAL_START","Rng","RngCore","Seed","SeedableRng","borrow","borrow_mut","code","distributions","fill","fill","fill_bytes","fmt","fmt","from","from","from_rng","from_seed","gen","gen","gen_bool","gen_bool","gen_range","gen_range","gen_ratio","gen_ratio","into","next_u32","next_u64","prelude","raw_os_error","rngs","sample","sample","sample_iter","sample_iter","seed_from_u64","seq","try_fill","try_fill","try_fill","try_fill_bytes","try_from","try_into","type_id","vzip","Alphanumeric","Bernoulli","BernoulliError","DistIter","DistMap","Distribution","InvalidProbability","Open01","OpenClosed01","Slice","Standard","Uniform","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ratio","into","into","into","into","into","into","into","into","into","into","into_iter","map","map","new","new","next","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_iter","sample_iter","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniform","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","SampleBorrow","SampleRange","SampleUniform","Sampler","Uniform","UniformChar","UniformDuration","UniformFloat","UniformInt","UniformSampler","X","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","is_empty","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","new_inclusive","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","sample_single_inclusive","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","CryptoRng","Distribution","IteratorRandom","Rng","RngCore","SeedableRng","SliceRandom","mock","StepRng","borrow","borrow_mut","clone","eq","fill_bytes","fmt","from","into","new","next_u32","next_u64","try_fill_bytes","try_from","try_into","type_id","vzip","Item","IteratorRandom","SliceRandom","choose","choose","choose_multiple_fill","choose_mut","choose_stable","partial_shuffle","shuffle"],"q":[[0,"rand"],[50,"rand::distributions"],[257,"rand::distributions::uniform"],[394,"rand::prelude"],[401,"rand::rngs"],[402,"rand::rngs::mock"],[419,"rand::seq"],[429,"core::num::nonzero"],[430,"core::option"],[431,"core::marker"],[432,"core::fmt"],[433,"core::fmt"],[434,"core::any"],[435,"core::clone"],[436,"core::cmp"],[437,"core::fmt"],[438,"core::ops::range"],[439,"core::num::nonzero"],[440,"core::num::nonzero"]],"d":["Codes at or above this point can be used by users to …","A marker trait used to indicate that an <code>RngCore</code> or …","Error type of random number generators","Types which may be filled with random data","Codes below this point represent OS Errors (i.e. positive …","An automatically-implemented extension trait on <code>RngCore</code> …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","","","Retrieve the error code, if any.","Generating random samples from probability distributions","Fill any type implementing <code>Fill</code> with random data","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> with random data.","","","","Returns the argument unchanged.","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","Return a random value supporting the <code>Standard</code> distribution.","Return a random value supporting the <code>Standard</code> distribution.","Return a bool with a probability <code>p</code> of being true.","Return a bool with a probability <code>p</code> of being true.","Generate a random value in the given range.","Generate a random value in the given range.","Return a bool with a probability of <code>numerator/denominator</code> …","Return a bool with a probability of <code>numerator/denominator</code> …","Calls <code>U::from(self)</code>.","Return the next random <code>u32</code>.","Return the next random <code>u64</code>.","Convenience re-export of common members","Extract the raw OS error code (if this error came from the …","Random number generators and adapters","Sample a new value, using the given distribution.","Sample a new value, using the given distribution.","Create an iterator that generates values using the given …","Create an iterator that generates values using the given …","Create a new PRNG using a <code>u64</code> seed.","Sequence-related functionality","Fill self with random data","Fill any type implementing <code>Fill</code> with random data","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> entirely with random data.","","","","","Sample a <code>u8</code>, uniformly distributed over ASCII letters and …","The Bernoulli distribution.","Error type returned from <code>Bernoulli::new</code>.","An iterator that generates random values of <code>T</code> with …","A distribution of values of type <code>S</code> derived from the …","Types (distributions) that can be used to create a random …","<code>p &lt; 0</code> or <code>p &gt; 1</code>.","A distribution to sample floating point numbers uniformly …","A distribution to sample floating point numbers uniformly …","A distribution to sample items uniformly from a slice.","A generic random value distribution, implemented for many …","Sample values uniformly between two bounds.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Construct a new <code>Bernoulli</code> with the probability of success …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a distribution of values of ‘S’ by mapping the …","Create a distribution of values of ‘S’ by mapping the …","Construct a new <code>Bernoulli</code> with the given probability of …","Create a new <code>Slice</code> instance which samples uniformly from …","","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an iterator that generates random values of <code>T</code>, …","Create an iterator that generates random values of <code>T</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A distribution uniformly sampling numbers within a given …","","","","","","","","","","","Helper trait similar to <code>Borrow</code> but implemented only for …","Range that supports generating a single sample efficiently.","Helper trait for creating objects using the correct …","The <code>UniformSampler</code> implementation supporting type <code>X</code>.","Sample values uniformly between two bounds.","The back-end implementing <code>UniformSampler</code> for <code>char</code>.","The back-end implementing <code>UniformSampler</code> for <code>Duration</code>.","The back-end implementing <code>UniformSampler</code> for …","The back-end implementing <code>UniformSampler</code> for integer types.","Helper trait handling actual uniform sampling.","The type sampled by this implementation.","Immutably borrows from an owned value. See <code>Borrow::borrow</code>","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether the range is empty.","Construct self, with inclusive lower bound and exclusive …","Create a new <code>Uniform</code> instance which samples uniformly from …","","","","","","","","","","","","","","","","","Construct self, with inclusive bounds <code>[low, high]</code>.","Create a new <code>Uniform</code> instance which samples uniformly from …","","","","","","","","","","","","","","","","","Sample a value.","","","","","","","","","","","","","","","","","Generate a sample from the given range.","Sample a single value uniformly from a range with …","","","","","","","","","","","","","","","Sample a single value uniformly from a range with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mock random number generator","A simple implementation of <code>RngCore</code> for testing purposes.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a <code>StepRng</code>, yielding an arithmetic sequence starting …","","","","","","","","The element type.","Extension trait on iterators, providing random sampling …","Extension trait on slices, providing random mutation and …","Returns a reference to one random element of the slice, or …","Choose one element at random from the iterator.","Collects values at random from the iterator into a …","Returns a mutable reference to one random element of the …","Choose one element at random from the iterator.","Shuffle a slice in place, but exit early.","Shuffle a mutable slice in place."],"i":[1,0,0,0,1,0,0,64,0,1,1,1,0,22,22,12,1,1,1,1,64,64,22,22,22,22,22,22,22,22,1,12,12,0,1,0,22,22,22,22,64,0,5,22,22,12,1,1,1,1,0,0,0,0,0,0,25,0,0,0,0,0,24,25,21,36,26,27,28,29,31,32,24,25,21,36,26,27,28,29,31,32,24,25,26,27,28,29,31,32,24,25,31,24,25,25,21,36,26,27,28,29,31,32,24,25,21,36,26,27,28,29,31,31,31,32,24,24,25,21,36,26,27,28,29,31,32,21,20,20,24,29,21,20,24,36,26,26,27,27,28,29,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,20,20,21,24,25,21,36,26,27,28,29,31,32,24,25,21,36,26,27,28,29,31,32,24,25,21,36,26,27,28,29,31,32,0,24,25,21,36,26,27,28,29,31,32,0,0,0,15,0,0,0,0,0,0,65,61,57,58,59,60,57,58,59,60,57,58,59,60,57,59,57,58,59,60,57,58,59,60,57,58,59,60,16,65,31,57,57,57,57,57,57,57,57,57,57,57,57,58,59,59,60,65,31,57,57,57,57,57,57,57,57,57,57,57,57,58,59,59,60,65,57,57,57,57,57,57,57,57,57,57,57,57,58,59,59,60,16,65,57,57,57,57,57,57,57,57,57,57,57,57,59,59,65,57,57,57,57,57,57,57,57,57,57,57,57,57,58,59,60,57,58,59,60,57,58,59,60,57,58,59,60,0,0,0,0,0,0,0,0,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,66,0,0,66,67,67,66,67,66,66],"f":[0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,[[3,[2]]]],0,[[-1,-2],4,[],[5,6]],[[-1,-2],4,[],[5,6]],[[-1,[8,[7]]],4,[]],[[1,9],[[11,[4,10]]]],[[1,9],[[11,[4,10]]]],[2,1],[-1,-1,[]],[-1,[[11,[-2,1]]],12,[]],[[],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,13],14,[]],[[-1,13],14,[]],[[-1,-3],-2,[],15,[[16,[-2]]]],[[-1,-3],-2,[],15,[[16,[-2]]]],[[-1,17,17],14,[]],[[-1,17,17],14,[]],[-1,-2,[],[]],[-1,17,[]],[-1,18,[]],0,[1,[[3,[19]]]],0,[[-1,-3],-2,[],[],[[20,[-2]]]],[[-1,-3],-2,[],[],[[20,[-2]]]],[[-1,-3],[[21,[-3,-1,-2]]],6,[],[[20,[-2]]]],[[-1,-3],[[21,[-3,-1,-2]]],6,[],[[20,[-2]]]],[18,-1,[]],0,[[-1,-2],[[11,[4,1]]],[],[22,6]],[[-1,-2],[[11,[4,1]]],[],[5,6]],[[-1,-2],[[11,[4,1]]],[],[5,6]],[[-1,[8,[7]]],[[11,[4,1]]],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,24],[25,25],[26,26],[27,27],[28,28],[[[29,[-1]]],[[29,[-1]]],30],[[[31,[-1]]],[[31,[-1]]],[30,15]],[32,32],[[24,24],14],[[25,25],14],[[[31,[-1]],[31,[-1]]],14,[33,15]],[[24,9],34],[[25,9],34],[[25,9],34],[[[21,[-1,-2,-3]],9],34,35,35,35],[[[36,[-1,-2,-3,-4]],9],34,35,35,35,35],[[26,9],34],[[27,9],34],[[28,9],34],[[[29,[-1]],9],34,35],[[[31,[-1]],9],34,[35,15]],[[32,9],34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[37,[-1]]],[[31,[-1]]],15],[[[38,[-1]]],[[31,[-1]]],15],[-1,-1,[]],[[17,17],[[11,[24,25]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[36,[-1,-2,-3,-4]]],6,39,[],[]],[[-1,-2],[[36,[-1,-2,-3,-4]]],6,39,[],[]],[13,[[11,[24,25]]]],[[[8,[-1]]],[[11,[[29,[-1]],0]]],[]],[[[21,[-2,-3,-1]]],[[3,[-1]]],[],[[20,[-1]]],22],[[-1,-2],-3,[],[22,6],[]],[[24,-1],14,[22,6]],[[[36,[-2,-3,-1,-4]],-5],-4,[],[[20,[-1]]],39,[],[22,6]],[[26,-1],13,[22,6]],[[26,-1],40,[22,6]],[[27,-1],40,[22,6]],[[27,-1],13,[22,6]],[[28,-1],7,[22,6]],[[[29,[-1]],-2],-1,[],[22,6]],[[[31,[-1]],-2],-1,15,[22,6]],[[32,-1],[[4,[-2,-3,-4,-5,-6,-7,-8,-9,-10]]],[22,6],[],[],[],[],[],[],[],[],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],42,[22,6]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],43,[22,6]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[4,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],44,[22,6]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[4,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13]]],[22,6],[],[],[],[],[],[],[],[],[],[],[],[]],[[32,-1],4,[22,6]],[[32,-1],[[4,[-2,-3,-4,-5,-6,-7]]],[22,6],[],[],[],[],[],[]],[[32,-1],45,[22,6]],[[32,-1],[[4,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11]]],[22,6],[],[],[],[],[],[],[],[],[],[]],[[32,-1],[[4,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12]]],[22,6],[],[],[],[],[],[],[],[],[],[],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],46,[22,6]],[[32,-1],47,[22,6]],[[32,-1],48,[22,6]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[4,[-2,-3,-4,-5,-6,-7,-8,-9]]],[22,6],[],[],[],[],[],[],[],[]],[[32,-1],49,[22,6]],[[32,-1],[[4,[-2,-3,-4,-5,-6]]],[22,6],[],[],[],[],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[4,[-2,-3,-4,-5]]],[22,6],[],[],[],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[4,[-2,-3,-4]]],[22,6],[],[],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],50,[22,6]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],51,[22,6]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],17,[22,6]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],13,[22,6]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],52,[22,6]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],2,[22,6]],[[32,-1],53,[22,6]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[54,[-2]]],[22,6],[]],[[32,-1],[[3,[-2]]],[22,6],[]],[[32,-1],40,[22,6]],[[32,-1],19,[22,6]],[[32,-1],7,[22,6]],[[32,-1],55,[22,6]],[[32,-1],[[4,[-2,-3,-4,-5,-6,-7,-8]]],[22,6],[],[],[],[],[],[],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],[[41,[-2]]],[22,6],[]],[[32,-1],18,[22,6]],[[32,-1],14,[22,6]],[[32,-1],[[4,[-2,-3]]],[22,6],[],[]],[[32,-1],56,[22,6]],[[32,-1],[[41,[-2]]],[22,6],[]],[[-1,-2],[[21,[-1,-2,-3]]],6,22,[]],[[-1,-2],[[21,[-1,-2,-3]]],6,22,[]],[[[21,[-2,-3,-1]]],[[4,[47,[3,[47]]]]],[],[[20,[-1]]],22],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[57,[-1]]],[[57,[-1]]],30],[58,58],[[[59,[-1]]],[[59,[-1]]],30],[60,60],[[[57,[-1]],[57,[-1]]],14,33],[[[59,[-1]],[59,[-1]]],14,33],[[[57,[-1]],9],34,35],[[58,9],34],[[[59,[-1]],9],34,35],[[60,9],34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[[-1,-2],-3,[61,6],[61,6],[]],[[-2,-3],[[31,[-1]]],15,[[61,[-1]],6],[[61,[-1]],6]],[[-1,-2],[[57,[18]]],[61,6],[61,6]],[[-1,-2],[[57,[51]]],[61,6],[61,6]],[[-1,-2],[[57,[45]]],[61,6],[61,6]],[[-1,-2],[[57,[19]]],[61,6],[61,6]],[[-1,-2],[[57,[49]]],[61,6],[61,6]],[[-1,-2],[[57,[7]]],[61,6],[61,6]],[[-1,-2],[[57,[50]]],[61,6],[61,6]],[[-1,-2],[[57,[53]]],[61,6],[61,6]],[[-1,-2],[[57,[44]]],[61,6],[61,6]],[[-1,-2],[[57,[48]]],[61,6],[61,6]],[[-1,-2],[[57,[47]]],[61,6],[61,6]],[[-1,-2],[[57,[17]]],[61,6],[61,6]],[[-1,-2],58,[61,6],[61,6]],[[-1,-2],[[59,[40]]],[61,6],[61,6]],[[-1,-2],[[59,[13]]],[61,6],[61,6]],[[-1,-2],60,[61,6],[61,6]],[[-1,-2],-3,[61,6],[61,6],[]],[[-2,-3],[[31,[-1]]],15,[[61,[-1]],6],[[61,[-1]],6]],[[-1,-2],[[57,[51]]],[61,6],[61,6]],[[-1,-2],[[57,[47]]],[61,6],[61,6]],[[-1,-2],[[57,[17]]],[61,6],[61,6]],[[-1,-2],[[57,[48]]],[61,6],[61,6]],[[-1,-2],[[57,[7]]],[61,6],[61,6]],[[-1,-2],[[57,[44]]],[61,6],[61,6]],[[-1,-2],[[57,[49]]],[61,6],[61,6]],[[-1,-2],[[57,[45]]],[61,6],[61,6]],[[-1,-2],[[57,[19]]],[61,6],[61,6]],[[-1,-2],[[57,[50]]],[61,6],[61,6]],[[-1,-2],[[57,[53]]],[61,6],[61,6]],[[-1,-2],[[57,[18]]],[61,6],[61,6]],[[-1,-2],58,[61,6],[61,6]],[[-1,-2],[[59,[40]]],[61,6],[61,6]],[[-1,-2],[[59,[13]]],[61,6],[61,6]],[[-1,-2],60,[61,6],[61,6]],[[-1,-2],[],[],[22,6]],[[[57,[47]],-1],[],[22,6]],[[[57,[19]],-1],[],[22,6]],[[[57,[44]],-1],[],[22,6]],[[[57,[51]],-1],[],[22,6]],[[[57,[53]],-1],[],[22,6]],[[[57,[49]],-1],[],[22,6]],[[[57,[17]],-1],[],[22,6]],[[[57,[48]],-1],[],[22,6]],[[[57,[7]],-1],[],[22,6]],[[[57,[50]],-1],[],[22,6]],[[[57,[18]],-1],[],[22,6]],[[[57,[45]],-1],[],[22,6]],[[58,-1],[],[22,6]],[[[59,[40]],-1],[],[22,6]],[[[59,[13]],-1],[],[22,6]],[[60,-1],62,[22,6]],[[-1,-2],-3,[],[12,6],[]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[[-1,-2,-3],[],[61,6],[61,6],[22,6]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[63,63],[[63,63],14],[[63,[8,[7]]],4],[[63,9],34],[-1,-1,[]],[-1,-2,[],[]],[[18,18],63],[63,17],[63,18],[[63,[8,[7]]],[[11,[4,1]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],0,0,0,[[-1,-2],3,[],[22,6]],[[-1,-2],3,[],[22,6]],[[-1,-2,8],47,[],[22,6]],[[-1,-2],3,[],[22,6]],[[-1,-2],3,[],[22,6]],[[-1,-2,47],[[4,[8,8]]],[],[22,6]],[[-1,-2],4,[],[22,6]]],"c":[],"p":[[3,"Error",0],[3,"NonZeroU32",429],[4,"Option",430],[15,"tuple"],[8,"Fill",0],[8,"Sized",431],[15,"u8"],[15,"slice"],[3,"Formatter",432],[3,"Error",432],[4,"Result",433],[8,"RngCore",0],[15,"f64"],[15,"bool"],[8,"SampleUniform",257],[8,"SampleRange",257],[15,"u32"],[15,"u64"],[15,"i32"],[8,"Distribution",50],[3,"DistIter",50],[8,"Rng",0],[3,"TypeId",434],[3,"Bernoulli",50],[4,"BernoulliError",50],[3,"OpenClosed01",50],[3,"Open01",50],[3,"Alphanumeric",50],[3,"Slice",50],[8,"Clone",435],[3,"Uniform",50],[3,"Standard",50],[8,"PartialEq",436],[6,"Result",432],[8,"Debug",432],[3,"DistMap",50],[3,"Range",437],[3,"RangeInclusive",437],[8,"Fn",438],[15,"f32"],[15,"array"],[3,"NonZeroU64",429],[3,"NonZeroUsize",429],[15,"i128"],[15,"isize"],[15,"char"],[15,"usize"],[15,"i16"],[15,"u128"],[15,"i8"],[15,"u16"],[3,"NonZeroU8",429],[15,"i64"],[3,"Wrapping",439],[3,"NonZeroU128",429],[3,"NonZeroU16",429],[3,"UniformInt",257],[3,"UniformChar",257],[3,"UniformFloat",257],[3,"UniformDuration",257],[8,"SampleBorrow",257],[3,"Duration",440],[3,"StepRng",402],[8,"SeedableRng",0],[8,"UniformSampler",257],[8,"SliceRandom",419],[8,"IteratorRandom",419]],"b":[[16,"impl-Display-for-Error"],[17,"impl-Debug-for-Error"],[94,"impl-Debug-for-BernoulliError"],[95,"impl-Display-for-BernoulliError"],[113,"impl-From%3CRange%3CX%3E%3E-for-Uniform%3CX%3E"],[114,"impl-From%3CRangeInclusive%3CX%3E%3E-for-Uniform%3CX%3E"],[136,"impl-Distribution%3Cf64%3E-for-OpenClosed01"],[137,"impl-Distribution%3Cf32%3E-for-OpenClosed01"],[138,"impl-Distribution%3Cf32%3E-for-Open01"],[139,"impl-Distribution%3Cf64%3E-for-Open01"],[143,"impl-Distribution%3C(A,+B,+C,+D,+E,+F,+G,+H,+I)%3E-for-Standard"],[144,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[145,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[146,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[147,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[148,"impl-Distribution%3CNonZeroU64%3E-for-Standard"],[149,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[150,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[151,"impl-Distribution%3CNonZeroUsize%3E-for-Standard"],[152,"impl-Distribution%3C%5BT;+32%5D%3E-for-Standard"],[153,"impl-Distribution%3C(A,)%3E-for-Standard"],[154,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[155,"impl-Distribution%3Ci128%3E-for-Standard"],[156,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[157,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[158,"impl-Distribution%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K,+L)%3E-for-Standard"],[159,"impl-Distribution%3C()%3E-for-Standard"],[160,"impl-Distribution%3C(A,+B,+C,+D,+E,+F)%3E-for-Standard"],[161,"impl-Distribution%3Cisize%3E-for-Standard"],[162,"impl-Distribution%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J)%3E-for-Standard"],[163,"impl-Distribution%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J,+K)%3E-for-Standard"],[164,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[165,"impl-Distribution%3Cchar%3E-for-Standard"],[166,"impl-Distribution%3Cusize%3E-for-Standard"],[167,"impl-Distribution%3Ci16%3E-for-Standard"],[168,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[169,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[170,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[171,"impl-Distribution%3C(A,+B,+C,+D,+E,+F,+G,+H)%3E-for-Standard"],[172,"impl-Distribution%3Cu128%3E-for-Standard"],[173,"impl-Distribution%3C(A,+B,+C,+D,+E)%3E-for-Standard"],[174,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[175,"impl-Distribution%3C(A,+B,+C,+D)%3E-for-Standard"],[176,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[177,"impl-Distribution%3C(A,+B,+C)%3E-for-Standard"],[178,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[179,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[180,"impl-Distribution%3Ci8%3E-for-Standard"],[181,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[182,"impl-Distribution%3Cu16%3E-for-Standard"],[183,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[184,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[185,"impl-Distribution%3Cu32%3E-for-Standard"],[186,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[187,"impl-Distribution%3Cf64%3E-for-Standard"],[188,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[189,"impl-Distribution%3CNonZeroU8%3E-for-Standard"],[190,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[191,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[192,"impl-Distribution%3CNonZeroU32%3E-for-Standard"],[193,"impl-Distribution%3Ci64%3E-for-Standard"],[194,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[195,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[196,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[197,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[198,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[199,"impl-Distribution%3CWrapping%3CT%3E%3E-for-Standard"],[200,"impl-Distribution%3COption%3CT%3E%3E-for-Standard"],[201,"impl-Distribution%3Cf32%3E-for-Standard"],[202,"impl-Distribution%3Ci32%3E-for-Standard"],[203,"impl-Distribution%3Cu8%3E-for-Standard"],[204,"impl-Distribution%3CNonZeroU128%3E-for-Standard"],[205,"impl-Distribution%3C(A,+B,+C,+D,+E,+F,+G)%3E-for-Standard"],[206,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[207,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[208,"impl-Distribution%3Cu64%3E-for-Standard"],[209,"impl-Distribution%3Cbool%3E-for-Standard"],[210,"impl-Distribution%3C(A,+B)%3E-for-Standard"],[211,"impl-Distribution%3CNonZeroU16%3E-for-Standard"],[212,"impl-Distribution%3C%5BT;+(%24n+-+1)%5D%3E-for-Standard"],[298,"impl-UniformSampler-for-UniformInt%3Cu64%3E"],[299,"impl-UniformSampler-for-UniformInt%3Cu16%3E"],[300,"impl-UniformSampler-for-UniformInt%3Cisize%3E"],[301,"impl-UniformSampler-for-UniformInt%3Ci32%3E"],[302,"impl-UniformSampler-for-UniformInt%3Cu128%3E"],[303,"impl-UniformSampler-for-UniformInt%3Cu8%3E"],[304,"impl-UniformSampler-for-UniformInt%3Ci8%3E"],[305,"impl-UniformSampler-for-UniformInt%3Ci64%3E"],[306,"impl-UniformSampler-for-UniformInt%3Ci128%3E"],[307,"impl-UniformSampler-for-UniformInt%3Ci16%3E"],[308,"impl-UniformSampler-for-UniformInt%3Cusize%3E"],[309,"impl-UniformSampler-for-UniformInt%3Cu32%3E"],[311,"impl-UniformSampler-for-UniformFloat%3Cf32%3E"],[312,"impl-UniformSampler-for-UniformFloat%3Cf64%3E"],[316,"impl-UniformSampler-for-UniformInt%3Cu16%3E"],[317,"impl-UniformSampler-for-UniformInt%3Cusize%3E"],[318,"impl-UniformSampler-for-UniformInt%3Cu32%3E"],[319,"impl-UniformSampler-for-UniformInt%3Ci16%3E"],[320,"impl-UniformSampler-for-UniformInt%3Cu8%3E"],[321,"impl-UniformSampler-for-UniformInt%3Ci128%3E"],[322,"impl-UniformSampler-for-UniformInt%3Cu128%3E"],[323,"impl-UniformSampler-for-UniformInt%3Cisize%3E"],[324,"impl-UniformSampler-for-UniformInt%3Ci32%3E"],[325,"impl-UniformSampler-for-UniformInt%3Ci8%3E"],[326,"impl-UniformSampler-for-UniformInt%3Ci64%3E"],[327,"impl-UniformSampler-for-UniformInt%3Cu64%3E"],[329,"impl-UniformSampler-for-UniformFloat%3Cf32%3E"],[330,"impl-UniformSampler-for-UniformFloat%3Cf64%3E"],[333,"impl-UniformSampler-for-UniformInt%3Cusize%3E"],[334,"impl-UniformSampler-for-UniformInt%3Ci32%3E"],[335,"impl-UniformSampler-for-UniformInt%3Ci128%3E"],[336,"impl-UniformSampler-for-UniformInt%3Cu16%3E"],[337,"impl-UniformSampler-for-UniformInt%3Ci64%3E"],[338,"impl-UniformSampler-for-UniformInt%3Cu128%3E"],[339,"impl-UniformSampler-for-UniformInt%3Cu32%3E"],[340,"impl-UniformSampler-for-UniformInt%3Ci16%3E"],[341,"impl-UniformSampler-for-UniformInt%3Cu8%3E"],[342,"impl-UniformSampler-for-UniformInt%3Ci8%3E"],[343,"impl-UniformSampler-for-UniformInt%3Cu64%3E"],[344,"impl-UniformSampler-for-UniformInt%3Cisize%3E"],[346,"impl-UniformSampler-for-UniformFloat%3Cf32%3E"],[347,"impl-UniformSampler-for-UniformFloat%3Cf64%3E"],[351,"impl-UniformSampler-for-UniformInt%3Cu64%3E"],[352,"impl-UniformSampler-for-UniformInt%3Cu32%3E"],[353,"impl-UniformSampler-for-UniformInt%3Ci16%3E"],[354,"impl-UniformSampler-for-UniformInt%3Cu8%3E"],[355,"impl-UniformSampler-for-UniformInt%3Cusize%3E"],[356,"impl-UniformSampler-for-UniformInt%3Cu16%3E"],[357,"impl-UniformSampler-for-UniformInt%3Cu128%3E"],[358,"impl-UniformSampler-for-UniformInt%3Ci8%3E"],[359,"impl-UniformSampler-for-UniformInt%3Ci128%3E"],[360,"impl-UniformSampler-for-UniformInt%3Ci64%3E"],[361,"impl-UniformSampler-for-UniformInt%3Cisize%3E"],[362,"impl-UniformSampler-for-UniformInt%3Ci32%3E"],[363,"impl-UniformSampler-for-UniformFloat%3Cf64%3E"],[364,"impl-UniformSampler-for-UniformFloat%3Cf32%3E"],[366,"impl-UniformSampler-for-UniformInt%3Cusize%3E"],[367,"impl-UniformSampler-for-UniformInt%3Cisize%3E"],[368,"impl-UniformSampler-for-UniformInt%3Ci32%3E"],[369,"impl-UniformSampler-for-UniformInt%3Ci16%3E"],[370,"impl-UniformSampler-for-UniformInt%3Cu128%3E"],[371,"impl-UniformSampler-for-UniformInt%3Ci8%3E"],[372,"impl-UniformSampler-for-UniformInt%3Cu16%3E"],[373,"impl-UniformSampler-for-UniformInt%3Cu64%3E"],[374,"impl-UniformSampler-for-UniformInt%3Cu8%3E"],[375,"impl-UniformSampler-for-UniformInt%3Ci64%3E"],[376,"impl-UniformSampler-for-UniformInt%3Ci128%3E"],[377,"impl-UniformSampler-for-UniformInt%3Cu32%3E"]]},\
"rand_chacha":{"doc":"The ChaCha random number generator.","t":"DDDDDDGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ChaCha12Core","ChaCha12Rng","ChaCha20Core","ChaCha20Rng","ChaCha8Core","ChaCha8Rng","ChaChaCore","ChaChaRng","as_rngcore","as_rngcore","as_rngcore","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","eq","eq","eq","eq","eq","eq","fill_bytes","fill_bytes","fill_bytes","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_seed","from_seed","from_seed","from_seed","from_seed","from_seed","generate","generate","generate","get_seed","get_seed","get_seed","get_stream","get_stream","get_stream","get_word_pos","get_word_pos","get_word_pos","into","into","into","into","into","into","next_u32","next_u32","next_u32","next_u64","next_u64","next_u64","rand_core","set_stream","set_stream","set_stream","set_word_pos","set_word_pos","set_word_pos","try_fill_bytes","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"rand_chacha"],[117,"rand_core"],[118,"core::fmt"],[119,"core::fmt"],[120,"core::result"],[121,"core::any"]],"d":["ChaCha with 12 rounds","A cryptographically secure random number generator that …","ChaCha with 20 rounds","A cryptographically secure random number generator that …","ChaCha with 8 rounds","A cryptographically secure random number generator that …","ChaCha with 20 rounds, low-level interface","ChaCha with 20 rounds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Get the seed.","Get the seed.","Get the seed.","Get the stream number.","Get the stream number.","Get the stream number.","Get the offset from the start of the stream, in 32-bit …","Get the offset from the start of the stream, in 32-bit …","Get the offset from the start of the stream, in 32-bit …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Set the stream number.","Set the stream number.","Set the stream number.","Set the offset from the start of the stream, in 32-bit …","Set the offset from the start of the stream, in 32-bit …","Set the offset from the start of the stream, in 32-bit …","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,3,5,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,3,5,7,2,3,4,5,6,7,2,3,3,4,5,5,6,7,7,2,3,4,5,6,7,2,4,6,3,5,7,3,5,7,3,5,7,2,3,4,5,6,7,3,5,7,3,5,7,0,3,5,7,3,5,7,3,5,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7],"f":[0,0,0,0,0,0,0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[[2,2],8],[[3,3],8],[[4,4],8],[[5,5],8],[[6,6],8],[[7,7],8],[[3,[10,[9]]],11],[[5,[10,[9]]],11],[[7,[10,[9]]],11],[[2,12],13],[[3,12],13],[[4,12],13],[[5,12],13],[[6,12],13],[[7,12],13],[-1,-1,[]],[2,3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,5],[-1,-1,[]],[6,7],[-1,-1,[]],[[],2],[[],3],[[],4],[[],5],[[],6],[[],7],[2,11],[4,11],[6,11],[3,[[14,[9]]]],[5,[[14,[9]]]],[7,[[14,[9]]]],[3,15],[5,15],[7,15],[3,16],[5,16],[7,16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,17],[5,17],[7,17],[3,15],[5,15],[7,15],0,[[3,15],11],[[5,15],11],[[7,15],11],[[3,16],11],[[5,16],11],[[7,16],11],[[3,[10,[9]]],[[19,[11,18]]]],[[5,[10,[9]]],[[19,[11,18]]]],[[7,[10,[9]]],[[19,[11,18]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[8,"RngCore",117],[3,"ChaCha20Core",0],[3,"ChaCha20Rng",0],[3,"ChaCha12Core",0],[3,"ChaCha12Rng",0],[3,"ChaCha8Core",0],[3,"ChaCha8Rng",0],[15,"bool"],[15,"u8"],[15,"slice"],[15,"tuple"],[3,"Formatter",118],[6,"Result",118],[15,"array"],[15,"u64"],[15,"u128"],[15,"u32"],[3,"Error",119],[4,"Result",120],[3,"TypeId",121]],"b":[]},\
"rand_core":{"doc":"Random number generation traits","t":"SIIDSIQIKALLLKLLLLLKALAKKLLKLLLDDIQQLLLLLLLMMLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFF","n":["CUSTOM_START","CryptoRng","CryptoRngCore","Error","INTERNAL_START","RngCore","Seed","SeedableRng","as_rngcore","block","borrow","borrow_mut","code","fill_bytes","fmt","fmt","from","from","from_rng","from_seed","impls","into","le","next_u32","next_u64","raw_os_error","seed_from_u64","try_fill_bytes","try_from","try_into","type_id","BlockRng","BlockRng64","BlockRngCore","Item","Results","as_rngcore","borrow","borrow","borrow_mut","borrow_mut","clone","clone","core","core","fill_bytes","fill_bytes","fmt","fmt","from","from","from_rng","from_rng","from_seed","from_seed","generate","generate_and_set","generate_and_set","index","index","into","into","new","new","next_u32","next_u32","next_u64","next_u64","reset","reset","seed_from_u64","seed_from_u64","try_fill_bytes","try_fill_bytes","try_from","try_from","try_into","try_into","type_id","type_id","fill_bytes_via_next","fill_via_u32_chunks","fill_via_u64_chunks","next_u32_via_fill","next_u64_via_fill","next_u64_via_u32","read_u32_into","read_u64_into"],"q":[[0,"rand_core"],[31,"rand_core::block"],[80,"rand_core::impls"],[86,"rand_core::le"],[88,"core::num::nonzero"],[89,"core::option"],[90,"core::fmt"],[91,"core::fmt"],[92,"core::any"],[93,"core::clone"],[94,"core::marker"],[95,"core::fmt"]],"d":["Codes at or above this point can be used by users to …","A marker trait used to indicate that an <code>RngCore</code> or …","An extension trait that is automatically implemented for …","Error type of random number generators","Codes below this point represent OS Errors (i.e. positive …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","Upcast to an <code>RngCore</code> trait object.","The <code>BlockRngCore</code> trait and implementation helpers","","","Retrieve the error code, if any.","Fill <code>dest</code> with random data.","","","","Returns the argument unchanged.","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","Helper functions for implementing <code>RngCore</code> functions.","Calls <code>U::from(self)</code>.","Little-Endian utilities","Return the next random <code>u32</code>.","Return the next random <code>u64</code>.","Extract the raw OS error code (if this error came from the …","Create a new PRNG using a <code>u64</code> seed.","Fill <code>dest</code> entirely with random data.","","","","A wrapper type implementing <code>RngCore</code> for some type …","A wrapper type implementing <code>RngCore</code> for some type …","A trait for RNGs which do not generate random numbers …","Results element type, e.g. <code>u32</code>.","Results type. This is the ‘block’ an RNG implementing …","","","","","","","","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Generate a new block of results.","Generate a new set of results immediately, setting the …","Generate a new set of results immediately, setting the …","Get the index into the result buffer.","Get the index into the result buffer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>BlockRng</code> from an existing RNG implementing …","Create a new <code>BlockRng</code> from an existing RNG implementing …","","","","","Reset the number of available results. This will force a …","Reset the number of available results. This will force a …","","","","","","","","","","","Implement <code>fill_bytes</code> via <code>next_u64</code> and <code>next_u32</code>, …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>next_u32</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>next_u32</code>, little-endian order.","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>."],"i":[2,0,0,0,2,0,21,0,23,0,2,2,2,1,2,2,2,2,21,21,0,2,0,1,1,2,21,1,2,2,2,0,0,0,17,17,15,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,17,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,[-1,1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[2,[[4,[3]]]],[[-1,[6,[5]]],7,[]],[[2,8],9],[[2,8],9],[3,2],[-1,-1,[]],[-1,[[10,[-2,2]]],1,[]],[[],-1,[]],0,[-1,-2,[],[]],0,[-1,11,[]],[-1,12,[]],[2,[[4,[13]]]],[12,-1,[]],[[-1,[6,[5]]],[[10,[7,2]]],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,14,[]],0,0,0,0,0,[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[-1]]],[[15,[-1]]],[16,17,18]],[[[19,[-1]]],[[19,[-1]]],[16,17,18]],0,0,[[[15,[-1]],[6,[5]]],7,17],[[[19,[-1]],[6,[5]]],7,17],[[[15,[-1]],8],9,[17,20]],[[[19,[-1]],8],9,[17,20]],[-1,-1,[]],[-1,-1,[]],[-1,[[10,[[15,[-2]],2]]],1,[17,21]],[-1,[[10,[[19,[-2]],2]]],1,[17,21]],[[],[[15,[-1]]],[17,21]],[[],[[19,[-1]]],[17,21]],[-1,7,[]],[[[15,[-1]],22],7,17],[[[19,[-1]],22],7,17],[[[15,[-1]]],22,17],[[[19,[-1]]],22,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-1]]],17],[-1,[[19,[-1]]],17],[[[15,[-1]]],11,17],[[[19,[-1]]],11,17],[[[15,[-1]]],12,17],[[[19,[-1]]],12,17],[[[15,[-1]]],7,17],[[[19,[-1]]],7,17],[12,[[15,[-1]]],[17,21]],[12,[[19,[-1]]],[17,21]],[[[15,[-1]],[6,[5]]],[[10,[7,2]]],17],[[[19,[-1]],[6,[5]]],[[10,[7,2]]],17],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[[-1,[6,[5]]],7,[1,18]],[[[6,[11]],[6,[5]]],[[7,[22,22]]]],[[[6,[12]],[6,[5]]],[[7,[22,22]]]],[-1,11,[1,18]],[-1,12,[1,18]],[-1,12,[1,18]],[[[6,[5]],[6,[11]]],7],[[[6,[5]],[6,[12]]],7]],"c":[],"p":[[8,"RngCore",0],[3,"Error",0],[3,"NonZeroU32",88],[4,"Option",89],[15,"u8"],[15,"slice"],[15,"tuple"],[3,"Formatter",90],[6,"Result",90],[4,"Result",91],[15,"u32"],[15,"u64"],[15,"i32"],[3,"TypeId",92],[3,"BlockRng",31],[8,"Clone",93],[8,"BlockRngCore",31],[8,"Sized",94],[3,"BlockRng64",31],[8,"Debug",90],[8,"SeedableRng",0],[15,"usize"],[8,"CryptoRngCore",0]],"b":[[14,"impl-Display-for-Error"],[15,"impl-Debug-for-Error"]]},\
"raw_cpuid":{"doc":"A library to parse the x86 CPUID instruction, written in …","t":"NDENNNNNRNDDEDDENDDNDDENNNDNNNDDDEEDDDDDDNNNNEDNNNNNDDDDDNDDNDNNNNNDDNNDDDDDDNNNDDNNNDEDDDDNDNDNDEDNNNNNNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLF","n":["ACRN","ApmInfo","Associativity","Avx","Avx512Opmask","Avx512ZmmHi16","Avx512ZmmHi256","Bhyve","CACHE_INFO_TABLE","Cache","CacheInfo","CacheInfoIter","CacheInfoType","CacheParameter","CacheParametersIter","CacheType","Core","CpuId","CpuIdResult","DTLB","DatInfo","DatIter","DatType","Data","DataTLB","Die","DirectCacheAccessInfo","DirectMapped","Disabled","Epc","EpcSection","ExtendedFeatures","ExtendedProcessorFeatureIdentifiers","ExtendedRegisterStateLocation","ExtendedRegisterType","ExtendedState","ExtendedStateInfo","ExtendedStateIter","ExtendedTopologyIter","ExtendedTopologyLevel","FeatureInfo","FullyAssociative","General","Hdc","HyperV","Hypervisor","HypervisorInfo","Ia32Xss","Instruction","InstructionTLB","Invalid","KVM","L1CacheTlbInfo","L2And3CacheTlbInfo","L2CatInfo","L3CatInfo","L3MonitoringInfo","LoadOnly","MemBwAllocationInfo","MemoryEncryptionInfo","Module","MonitorMwaitInfo","MpxBndcsr","MpxBndregs","NWay","Null","Null","PerformanceMonitoringInfo","PerformanceOptimizationInfo","Pkru","Prefetch","ProcessorBrandString","ProcessorCapacityAndFeatureInfo","ProcessorFrequencyInfo","ProcessorSerial","ProcessorTopologyInfo","ProcessorTraceInfo","Pt","QEMU","QNX","RdtAllocationInfo","RdtMonitoringInfo","Reserved","SMT","STLB","SgxInfo","SgxSectionInfo","SgxSectionIter","SoCVendorAttributesIter","SoCVendorBrand","SoCVendorInfo","StoreOnly","SvmFeatures","TLB","ThermalPowerInfo","Tile","Tlb1gbPageInfo","TopologyType","TscInfo","Unified","UnifiedTLB","Unknown","Unknown","Unknown","Unknown","VMware","VendorInfo","Xcr0","Xen","all_zero","apic_frequency","apic_id_size","as_str","as_str","as_str","as_string","as_string","associativity","base_family_id","base_model_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brand_id","brand_index","bus_frequency","c_bit_position","cache_level","cache_type","cache_type","capacity_mask_length","capacity_mask_length","cflush_cache_line_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","coherency_line_size","configurable_address_ranges","conversion_factor","core_id","counter_bit_width","cpu_pwr_sample_time_ratio","cpuid","dcache_associativity","dcache_line_size","dcache_lines_per_tag","dcache_size","default","denominator","desc","dtlb_2m_4m_associativity","dtlb_2m_4m_associativity","dtlb_2m_4m_size","dtlb_2m_4m_size","dtlb_4k_associativity","dtlb_4k_associativity","dtlb_4k_size","dtlb_4k_size","dtlb_l1_1gb_associativity","dtlb_l1_1gb_size","dtlb_l2_1gb_associativity","dtlb_l2_1gb_size","dts_irq_threshold","eax","ebx","ebx_length","ecx","edx","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extended_family_id","extended_model_id","extended_signature","extensions_supported","family_id","fixed_function_counters","fixed_function_counters_bit_width","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_advanced_power_mgmt_info","get_cache_info","get_cache_parameters","get_dca_cap_value","get_deterministic_address_translation_info","get_direct_cache_access_info","get_extended_feature_info","get_extended_processor_and_feature_identifiers","get_extended_state_info","get_extended_topology_info","get_extended_topology_info_v2","get_feature_info","get_hypervisor_info","get_l1_cache_and_tlb_info","get_l2_l3_cache_and_tlb_info","get_memory_encryption_info","get_monitor_mwait_info","get_performance_monitoring_info","get_performance_optimization_info","get_processor_brand_string","get_processor_capacity_feature_info","get_processor_frequency_info","get_processor_serial","get_processor_topology_info","get_processor_trace_info","get_project_id","get_rdt_allocation_info","get_rdt_monitoring_info","get_sgx_info","get_soc_vendor_id","get_soc_vendor_info","get_stepping_id","get_svm_info","get_thermal_power_info","get_tlb_1gb_page_info","get_tsc_info","get_vendor_attributes","get_vendor_brand","get_vendor_info","guest_physical_address_bits","has_100mhz_steps","has_1gb_entries","has_1gib_pages","has_2mb_entries","has_3dnow","has_4k_entries","has_4mb_entries","has_64bit_mode","has_64bit_mode","has_acpi","has_addr_mask_extension","has_adx","has_aesni","has_alt_mov_cr8","has_alternate_injection","has_amd_3dnow_extensions","has_any_thread_deprecation","has_apic","has_arat","has_av512vbmi2","has_avic","has_avx","has_avx2","has_avx512_ifma","has_avx512bitalg","has_avx512bw","has_avx512cd","has_avx512dq","has_avx512er","has_avx512f","has_avx512pf","has_avx512vl","has_avx512vnni","has_avx512vpopcntdq","has_bmi1","has_bmi2","has_cet_ss","has_cl_zero","has_clflush","has_clflushopt","has_clwb","has_cmov","has_cmp_legacy","has_cmpxchg16b","has_cmpxchg8b","has_cnxtid","has_code_data_prioritization","has_complex_indexing","has_configurable_psb_and_cycle_accurate_mode","has_cpb","has_cpl","has_data_access_bkpt_extension","has_dca","has_de","has_debug_swap","has_decode_assists","has_ds","has_ds_area","has_dts","has_ecmd","has_eist","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_energy_bias_pref","has_execute_disable","has_ext_apic_space","has_f16c","has_fast_fxsave_fxstor","has_fdp","has_feedback_iface","has_flexible_hwp","has_flush_by_asid","has_fma","has_fma4","has_fp128","has_fp256","has_fpu","has_fpu_cs_ds_deprecated","has_freq_id_ctrl","has_fsgsbase","has_fxsave_fxstor","has_gfni","has_gif","has_gmet","has_hdc","has_hle","has_host_mce_override","has_htt","has_hw_coord_feedback","has_hw_enforced_cache_coh","has_hw_pstate","has_hwa","has_hwp","has_hwp_activity_window","has_hwp_capabilities","has_hwp_energy_performance_preference","has_hwp_fast_access_mode","has_hwp_notification","has_hwp_package_level_request","has_hwp_peci_override","has_hypervisor","has_ibs","has_ignore_idle_processor_hwp_request","has_inst_ret_cntr_msr","has_int_wbinvd","has_invariant_tsc","has_invlpgb","has_invlpgb_nested","has_invpcid","has_ip_tracestop_filtering","has_l2_cat","has_l3_cat","has_l3_monitoring","has_la57","has_lahf_sahf","has_lbr_virtualization","has_linear_response_delay","has_lip_with_cs_base","has_local_bandwidth_monitoring","has_lwp","has_lzcnt","has_mca","has_mca_overflow_recovery","has_mce","has_mcommit","has_memory_bandwidth_allocation","has_misaligned_sse_mode","has_mmx","has_mmx_extensions","has_monitor_mwait","has_monitorx_mwaitx","has_movbe","has_movu","has_mpx","has_msr","has_mtc_timing_packet_coefi_suppression","has_mtrr","has_nb_perf_cntr_extensions","has_nested_paging","has_nrip","has_occupancy_monitoring","has_ospke","has_osvw","has_oxsave","has_pae","has_page_flush_msr","has_pat","has_pause_filter","has_pause_filter_threshold","has_pbe","has_pcid","has_pclmulqdq","has_pdcm","has_perf_cntr_extensions","has_perf_cntr_llc_extensions","has_perf_tsc","has_pge","has_pku","has_pln","has_popcnt","has_power_event_trace","has_power_reporting_iface","has_prefetchw","has_prefetchwt1","has_prevent_host_ibs","has_processor_trace","has_pse","has_pse36","has_psn","has_ptm","has_ptwrite","has_rdpid","has_rdpru","has_rdrand","has_rdseed","has_rdta","has_rdtm","has_rdtscp","has_rep_movsb_stosb","has_restore_fp_error_ptrs","has_restricted_injection","has_ro_effective_freq_iface","has_rtit_cr3_match","has_rtm","has_sev","has_sev_es","has_sev_snp","has_sgx","has_sgx1","has_sgx2","has_sgx_lc","has_sha","has_single_range_output_scheme","has_skinit","has_smap","has_sme","has_smep","has_smx","has_spec_ctrl","has_ss","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","has_sse4a","has_sss_check","has_ssse3","has_succor","has_svm","has_svm_lock","has_syscall_sysret","has_sysenter_sysexit","has_tbm","has_thermtrip","has_tlb_ctrl","has_tm","has_tm","has_tm2","has_tme_en","has_topa","has_topa_maximum_entries","has_topology_extensions","has_total_bandwidth_monitoring","has_trace_transport_subsystem","has_ts","has_tsc","has_tsc_adjust_msr","has_tsc_deadline","has_tsc_rate_msr","has_turbo_boost","has_turbo_boost3","has_umip","has_unsupported_efer_lmsle","has_vaes","has_vmcb_clean_bits","has_vme","has_vmpl","has_vmsave_virtualization","has_vmx","has_volt_id_ctrl","has_vpclmulqdq","has_vte","has_waitpkg","has_wbnoinvd","has_wdt","has_x2apic","has_xgetbv","has_xop","has_xsave","has_xsavec","has_xsaveopt","has_xsaves_xrstors","highest_cos","highest_cos","highest_cos","ia32_xss_supports_hdc","ia32_xss_supports_pt","icache_associativity","icache_line_size","icache_lines_per_tag","icache_size","identify","initial_local_apic_id","interrupts_as_break_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invlpgb_max_pages","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","is_cache_ref_ev_unavailable","is_compacted_format","is_core_cyc_ev_unavailable","is_fully_associative","is_fully_associative","is_in_ia32_xss","is_in_xcr0","is_inclusive","is_inst_ret_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_ref_cycle_ev_unavailable","is_self_initializing","is_write_back_invalidate","isolation_bitmap","isolation_bitmap","iter","iter","itlb_2m_4m_associativity","itlb_2m_4m_associativity","itlb_2m_4m_size","itlb_2m_4m_size","itlb_4k_associativity","itlb_4k_associativity","itlb_4k_size","itlb_4k_size","itlb_l1_1gb_associativity","itlb_l1_1gb_size","itlb_l2_1gb_associativity","itlb_l2_1gb_size","l2_cat","l2cache_associativity","l2cache_line_size","l2cache_lines_per_tag","l2cache_size","l3_cat","l3_monitoring","l3cache_associativity","l3cache_line_size","l3cache_lines_per_tag","l3cache_size","largest_monitor_line","level","level_number","level_type","linear_address_bits","location","mawau_value","max_addressable_ids","max_cores_for_cache","max_cores_for_package","max_enclave_size_64bit","max_enclave_size_non_64bit","max_encrypted_guests","max_hba_throttling","max_logical_processor_ids","max_rdpru_id","maximum_logical_processors","maximum_rmid_range","memory_bandwidth_allocation","min_sev_no_es_asid","miscselect","model_id","native_cpuid","new","next","next","next","next","next","next","next","node_id","nodes_per_processor","nominal_frequency","num","num_phys_threads","number_of_counters","numerator","offset","partitioning","perf_tsc_size","physical_address_bits","physical_address_reduction","physical_base","physical_line_partitions","pkg_type","processor_base_frequency","processor_max_frequency","processors","register","revision","rmid_range","secs_attributes","serial","serial_all","serial_lower","serial_middle","serial_upper","sets","sets","shift_right_for_next_apic_id","size","size","smallest_monitor_line","stepping_id","subleaf","supported_asids","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","supported_cycle_threshold_value_encodings","supported_mtc_period_encodings","supported_psb_frequency_encodings","threads_per_core","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_frequency","tsc_frequency","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_id","ways","with_cpuid_fn","x2apic_id","x2apic_id","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi16","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx_256","xcr0_supports_legacy_x87","xcr0_supports_mpx_bndcsr","xcr0_supports_mpx_bndregs","xcr0_supports_pkru","xcr0_supports_sse_128","xsave_area_size_enabled_features","xsave_area_size_supported_features","xsave_size","cpuid_count"],"q":[[0,"raw_cpuid"],[1126,"raw_cpuid::native_cpuid"],[1127,"core::option"],[1128,"core::fmt"],[1129,"core::fmt"],[1130,"core::any"]],"d":["","Processor Power Management and RAS Capabilities …","Info about cache Associativity.","","","","","","This table is taken from Intel manual (Section CPUID …","","Describes any kind of cache (TLB, Data and Instruction …","Iterates over cache information (LEAF=0x02).","What type of cache are we dealing with?","Information about an individual cache in the hierarchy.","Iterator over caches (LEAF=0x04).","Info about a what a given cache caches (instructions, …","","The main type used to query information about the CPU we’…","Low-level data-structure to store result of cpuid …","","Deterministic Address Translation Structure","Deterministic Address Translation Structure Iterator …","Deterministic Address Translation cache type (EDX bits 04 …","Data cache","","","Direct cache access info (LEAF=0x09).","","","","EBX:EAX and EDX:ECX provide information on the Enclave …","Structured Extended Feature Identifiers (LEAF=0x07).","Extended Processor and Processor Feature Identifiers …","Where the extended register state is stored.","What kidn of extended register state this is.","ExtendedState subleaf structure for things that need to be …","Information for saving/restoring extended register state …","Yields ExtendedState structs.","Information about topology (LEAF=0x0B).","Gives information about the current level in the topology.","Processor and Processor Feature Identifiers (LEAF=0x01).","","","","","Identifies the different Hypervisor products.","Information about Hypervisor (LEAF=0x4000_0001)","","Instruction cache","","","","L1 Cache and TLB Information (LEAF=0x8000_0005).","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","L2 Cache Allocation Technology Enumeration Sub-leaf …","L3 Cache Allocation Technology Enumeration Sub-leaf …","Information about L3 cache monitoring.","","Memory Bandwidth Allocation Enumeration Sub-leaf …","Encrypted Memory Capabilities (LEAF=0x8000_001F).","","Information about how monitor/mwait works on this CPU …","","","","Null - No more caches","Null (indicates this sub-leaf is not valid).","Info about performance monitoring – how many counters …","Performance Optimization Identifier (LEAF=0x8000_001A).","","","Processor name (LEAF=0x8000_0002..=0x8000_0004).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Processor Serial Number (LEAF=0x3).","Processor Topology Information (LEAF=0x8000_001E).","Intel Processor Trace Information (LEAF=0x14).","","QEMU is the hypervisor identity when QEMU is used without …","","Quality of service enforcement information (LEAF=0x10).","Intel Resource Director Technology RDT (LEAF=0x0F).","4-31 = Reserved","Hyper-thread (Simultaneous multithreading)","","Intel SGX Capability Enumeration Leaf (LEAF=0x12).","Intel SGX EPC Enumeration Leaf","Iterator over the SGX sub-leafs (ECX &gt;= 2).","Iterator for SoC vendor attributes.","A vendor brand string as queried from the cpuid leaf.","SoC vendor specific information (LEAF=0x17).","","Information about the SVM features that the processory …","","Query information about thermal and power management …","","TLB 1-GiB Pages Information (LEAF=0x8000_0019).","What type of core we have at this level in the topology …","Time Stamp Counter/Core Crystal Clock Information …","Data and Instruction cache","Some unified TLBs will allow a single TLB entry to satisfy …","","","","","","Vendor Info String (LEAF=0x0)","","","","(Virtual) Bus (local apic timer) frequency in kHz.","APIC ID size.","Return the processor brand string as a rust string.","Return vendor identification as human readable string.","Return the SocVendorBrand as a string.","","","Ways of associativity (Bits 31-22)","Version Information: Family","Version Information: Model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns brand ID on AMD.","Brand Index","Bus (Reference) Frequency (in MHz).","C-bit location in page table entry","Translation cache level (starts at 1)","Translation cache type field.","Cache Type","Length of the capacity bit mask.","Length of the capacity bit mask.","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","","","","","","","","","","","","System Coherency Line Size (Bits 11-00)","Number of configurable Address Ranges for filtering (Bits …","Conversion factor from reported IA32_QM_CTR value to …","Core ID","Bit width of general-purpose, performance monitoring …","Specifies the ratio of the compute unit power accumulator …","Macro which queries cpuid directly.","L1 data cache associativity.","L1 data cache line size in bytes.","L1 data cache lines per tag.","L1 data cache size in KB","","An unsigned integer which is the denominator of the …","Description of the cache (from Intel Manual)","Data TLB associativity for 2-MB and 4-MB pages.","L2 Data TLB associativity for 2-MB and 4-MB pages.","Data TLB number of entries for 2-MB and 4-MB pages.","L2 Data TLB number of entries for 2-MB and 4-MB pages.","Data TLB associativity for 4K pages.","L2 Data TLB associativity for 4K pages.","Data TLB number of entries for 4K pages.","L2 Data TLB number of entries for 4K pages.","L1 Data TLB associativity for 1-GB pages.","L1 Data TLB number of entries for 1-GB pages.","L2 Data TLB associativity for 1-GB pages.","L2 Data TLB number of entries for 1-GB pages.","Number of Interrupt Thresholds in Digital Thermal Sensor","Return value EAX register","Return value EBX register","Length of EBX bit vector to enumerate architectural …","Return value ECX register","Return value EDX register","","","","","","","","","","","","","","","","","","","","","","","","","","","Version Information: Extended Family","Version Information: Extended Model","Extended Processor Signature.","Enumeration of Monitor-Mwait extensions (beyond EAX and …","","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Advanced Power Management Information (LEAF=0x8000_0007).","Query basic information about caches (LEAF=0x02).","Retrieve more elaborate information about caches …","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address …","Query deterministic address translation feature …","Direct cache access info (LEAF=0x09).","Find out about more features supported by this CPU …","Extended Processor and Processor Feature Identifiers …","Information for saving/restoring extended register state …","Information about topology (LEAF=0x0B).","Extended information about topology (LEAF=0x1F).","Query a set of features that are available on this CPU …","Returns information provided by the hypervisor, if running …","L1 Instruction Cache Information (LEAF=0x8000_0005)","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","Informations about memory encryption support …","Information about how monitor/mwait works on this CPU …","Info about performance monitoring (LEAF=0x0A).","Informations about performance optimization …","Retrieve processor brand string (LEAF=0x8000_000{2..4}).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Retrieve serial number of processor (LEAF=0x03).","Informations about processor topology (LEAF=0x8000_001E)","Intel Processor Trace Enumeration Information (LEAF=0x14).","","Quality of service enforcement information (LEAF=0x10).","Quality of service monitoring information (LEAF=0x0F).","Information about secure enclave support (LEAF=0x12).","","Contains SoC vendor specific information (LEAF=0x17).","","This function provides information about the SVM features …","Query information about thermal and power management …","TLB 1-GiB Pages Information (LEAF=0x8000_0019)","Time Stamp Counter/Core Crystal Clock Information …","","","Return information about the vendor (LEAF=0x00).","Guest Physical Address Bits","Has 100 MHz multiplier Control?","1GB page size entries supported by this structure","Is there support for 1GiB pages.","2MB page size entries supported by this structure","3DNow extensions.","4K page size entries supported by this structure","4MB page size entries supported by this structure","Check support for 64-bit mode.","SEV guest execution only allowed from a 64-bit host if set.","Thermal Monitor and Software Controlled Clock Facilities. …","Breakpoint Addressing masking extended to bit 31.","Supports ADX.","A value of 1 indicates that the processor supports the …","LOCK MOV CR0 means MOV CR8. See “MOV(CRn)” in APM3.","Alternate Injection supported if set.","3DNow AMD extensions.","AnyThread deprecation","APIC On-Chip. The processor contains an Advanced …","ARAT. APIC-Timer-always-running feature is supported if …","AVX512VBMI2","Support for the AMD advanced virtual interrupt controller …","A value of 1 indicates the processor supports the AVX …","AVX2","AVX512_IFMA","AVX512BITALG","AVX512BW","AVX512CD","Supports AVX512DQ.","AVX512ER","Supports AVX512F.","AVX512PF","AVX512VL","AVX512VNNI","AVX512VPOPCNTDQ","BMI1","BMI2","Supports CET shadow stack features. Processors that set …","CLZERO instruction supported if set.","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Supports CLFLUSHOPT.","CLWB","Conditional Move Instructions. The conditional move …","Check support legacy cmp.","CMPXCHG16B Available. A value of 1 indicates that the …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","L1 Context ID. A value of 1 indicates the L1 data cache …","Is Code and Data Prioritization Technology supported?","Complex Cache Indexing (Bit 2) False: Direct mapped cache. …","If true, Indicates support of Configurable PSB and …","Has Core performance boost?","CPL Qualified Debug Store. A value of 1 indicates the …","Data access breakpoint extension.","A value of 1 indicates the processor supports the ability …","Debugging Extensions. Support for I/O breakpoints, …","Full debug state swap supported for SEV-ES guests.","Indicates support for the decode assists if set.","Debug Store. The processor supports the ability to write …","64-bit DS Area. A value of 1 indicates the processor …","Digital temperature sensor is supported if set.","ECMD. Clock modulation duty cycle extension is supported …","Enhanced Intel SpeedStep® technology. A value of 1 …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC, …","Supports ENCLV instruction leaves EINCVIRTCHILD, …","The processor supports performance-energy bias preference …","Is there support for execute disable bit.","Extended APIC space.","A value of 1 indicates that processor supports 16-bit …","FXSAVE and FXRSTOR instruction optimizations.","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","Indicates support for processor feedback interface.","Flexible HWP is supported if set.","Indicates that TLB flush events, including CR3 writes and …","A value of 1 indicates the processor supports FMA …","Four-operand FMA instruction support.","The internal FP/SIMD execution datapath is 128 bits wide …","The internal FP/SIMD execution datapath is 256 bits wide …","Floating Point Unit On-Chip. The processor contains an x87 …","Deprecates FPU CS and FPU DS values if 1.","Frequency ID control.","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","GFNI","GIF – virtualized global interrupt flag if set.","Guest Mode Execution Trap supported if set.","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","HLE","When host <code>CR4.MCE=1</code> and guest <code>CR4.MCE=0</code>, machine check …","Max APIC IDs reserved field is Valid. A value of 0 for HTT …","Hardware Coordination Feedback Capability","Hardware cache coherency across encryption domains …","Has Hardware P-state control?","Has Hardware assert supported?","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Capabilities. Highest Performance change is supported …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","Fast access mode for the IA32_HWP_REQUEST MSR is supported …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HWP PECI override is supported if set.","A value of 1 indicates the indicates the presence of a …","Instruction based sampling.","Ignoring Idle Logical Processor HWP request is supported …","Instruction Retired Counter MSR available if set.","WBINVD/WBNOINVD are interruptible if set.","Is Invariant TSC available?","INVLPGB and TLBSYNC instruction supported if set.","INVLPGB support for invalidating guest nested translations …","INVPCID. If 1, supports INVPCID instruction for system …","If true, Indicates support of IP Filtering, TraceStop …","Supports L2 Cache Allocation.","Supports L3 Cache Allocation.","Supports L3 Cache Intel RDT Monitoring.","Supports 57-bit linear addresses and five-level paging if …","Is LAHF/SAHF available in 64-bit mode?","Indicates support for LBR Virtualization.","Reports whether the response of the delay values is linear.","If true, Generated packets which contain IP payloads have …","Supports local bandwidth monitoring.","Lightweight profiling support","Is LZCNT available?","Machine Check Architecture. A value of 1 indicates the …","Is MCA overflow recovery available?","Machine Check Exception. Exception 18 is defined for …","MCOMMIT instruction supported if set.","Supports Memory Bandwidth Allocation.","Misaligned SSE mode. See “Misaligned Access Support …","Intel MMX Technology. The processor supports the Intel MMX …","AMD extensions to MMX instructions.","MONITOR/MWAIT. A value of 1 indicates the processor …","Support for MWAITX and MONITORX instructions.","A value of 1 indicates that the processor supports MOVBE …","MOVU (Move Unaligned) SSE instructions are efficient more …","MPX. Supports Intel Memory Protection Extensions if 1.","Model Specific Registers RDMSR and WRMSR Instructions. The …","If true, Indicates support of MTC timing packet and …","Memory Type Range Registers. MTRRs are supported. The …","NB performance counter extensions support.","Nested paging supported if set.","Indicates support for NRIP save on #VMEXIT if set.","Supports occupancy monitoring.","OS has set CR4.PKE to enable protection keys (and the …","Indicates OS-visible workaround support","A value of 1 indicates that the OS has enabled …","Physical Address Extension. Physical addresses greater …","The Page Flush MSR is available if set.","Page Attribute Table. Page Attribute Table is supported. …","Indicates support for the pause intercept filter if set.","Indicates support for the PAUSE filter cycle count …","Pending Break Enable. The processor supports the use of …","Process-context identifiers. A value of 1 indicates that …","PCLMULQDQ. A value of 1 indicates the processor supports …","Perfmon and Debug Capability: A value of 1 indicates the …","Processor performance counter extensions support.","Support for L3 performance counter extension.","Performance time-stamp counter.","Page Global Bit. The global bit is supported in …","Supports protection keys for user-mode pages.","PLN. Power limit notification controls are supported if …","A value of 1 indicates that the processor supports the …","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","Has Processor power reporting interface?","Is PREFETCHW available?","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Disallowing IBS use by the host supported if set.","Supports Intel Processor Trace.","Page Size Extension. Large pages of size 4 MByte are …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the 96-bit …","PTM. Package thermal management is supported if set.","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","RDPID and IA32_TSC_AUX are available.","RDPRU instruction supported if set.","A value of 1 indicates that processor supports RDRAND …","Supports RDSEED.","Supports Intel Resource Director Technology (RDT) …","Supports Intel Resource Director Technology (RDT) …","Check support for rdtscp instruction.","Supports Enhanced REP MOVSB/STOSB if 1.","FP Error Pointers Restored by XRSTOR if set.","Restricted Injection supported if set.","Has Read-only effective frequency interface?","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set …","RTM","Secure Encrypted Virtualization is supported if set.","SEV Encrypted State is supported if set.","SEV Secure Nested Paging supported if set.","Supports Intel® Software Guard Extensions (Intel® SGX …","Has SGX1 support.","Has SGX2 support.","Supports SGX Launch Configuration.","Supports SHA Instructions.","If true, Indicates support of Single-Range Output scheme.","SKINIT and STGI are supported.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Secure Memory Encryption is supported if set.","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","Safer Mode Extensions. A value of 1 indicates that the …","SPEC_CTRL virtualization supported if set.","Self Snoop. The processor supports the management of …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","XTRQ, INSERTQ, MOVNTSS, and MOVNTSD instruction support.","SVM supervisor shadow stack restrictions if set.","A value of 1 indicates the presence of the Supplemental …","Has Software uncorrectable error containment and recovery …","Secure virtual machine supported.","Indicates support for SVM-Lock if set.","Are fast system calls available.","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Trailing bit manipulation instruction support.","Has THERMTRIP?","Support for INVLPGB/TLBSYNC hypervisor enable in VMCB and …","Thermal Monitor. The processor implements the thermal …","Hardware thermal control (HTC)?","Thermal Monitor 2. A value of 1 indicates whether the …","Indicates the following MSRs are supported: …","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","Topology extensions support.","Supports total bandwidth monitoring.","If true, Indicates support of output to Trace Transport …","Is Temperature Sensor available?","Time Stamp Counter. The RDTSC instruction is supported, …","IA32_TSC_ADJUST MSR is supported if 1.","A value of 1 indicates that the processors local APIC …","Indicates support for MSR TSC ratio (MSR <code>0xC000_0104</code>) if …","Intel Turbo Boost Technology Available (see description of …","Intel® Turbo Boost Max Technology 3.0 available.","Supports user-mode instruction prevention if 1.","EFER.LMSLE is unsupported if set.","VAES","Indicates support for VMCB clean bits if set.","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","VM Permission Levels supported if set.","VMSAVE and VMLOAD virtualization supported if set.","Virtual Machine Extensions. A value of 1 indicates that …","Voltage ID control.","VPCLMULQDQ","Virtual Transparent Encryption supported if set.","WAITPKG","WBNOINVD instruction supported if set.","Watchdog timer support.","A value of 1 indicates that the processor supports x2APIC …","Supports XGETBV with ECX = 1 if set.","Extended operation support.","A value of 1 indicates that the processor supports the …","Supports XSAVEC and the compacted form of XRSTOR if set.","CPU has xsaveopt feature.","Supports XSAVES/XRSTORS and IA32_XSS if set.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Support for HDC in IA32_XSS.","Support for PT in IA32_XSS.","L1 instruction cache associativity.","L1 instruction cache line size in bytes.","L1 instruction cache lines per tag.","L1 instruction cache size in KB","Returns the identity of the <code>Hypervisor</code>.","Initial APIC ID","Supports treating interrupts as break-event for MWAIT, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Maximum page count for INVLPGB instruction.","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Last-level cache reference event not available if 1.","Returns true when the compacted format of an XSAVE area is …","Core cycle event not available if 1.","Fully associative structure","Fully Associative cache","True if the bit n (corresponding to the sub-leaf index) is …","True if bit n is supported in XCR0.","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Instruction retired event not available if 1.","Last-level cache misses event not available if 1.","Reference cycles event not available if 1.","Self Initializing cache level (does not need SW …","Write-Back Invalidate/Invalidate (Bit 0) False: …","Bit-granular map of isolation/contention of allocation …","Bit-granular map of isolation/contention of allocation …","Iterator over extended state enumeration levels &gt;= 2.","Iterator over SGX sub-leafs.","Instruction TLB associativity for 2-MB and 4-MB pages.","L2 Instruction TLB associativity for 2-MB and 4-MB pages.","Instruction TLB number of entries for 2-MB and 4-MB pages.","L2 Instruction TLB number of entries for 2-MB and 4-MB …","Instruction TLB associativity for 4K pages.","L2 Instruction TLB associativity for 4K pages.","Instruction TLB number of entries for 4K pages.","L2 Instruction TLB number of entries for 4K pages.","L1 Instruction TLB associativity for 1-GB pages.","L1 Instruction TLB number of entries for 1-GB pages.","L2 Instruction TLB associativity for 1-GB pages.","L2 Instruction TLB number of entries for 1-GB pages.","L2 Cache Allocation Information.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Cache size in KB.","L3 Cache Allocation Information.","L3 Cache Monitoring.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Specifies the L3 cache size range","Largest monitor-line size in bytes (default is processor’…","Cache Level (starts at 1)","Level number.","","Linear Address Bits","","The value of MAWAU used by the BNDLDX and BNDSTX …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","The maximum supported enclave size in 64-bit mode is …","The maximum supported enclave size in non-64-bit mode is …","Number of encrypted guests supported simultaneouslys","Reports the maximum MBA throttling value supported for the …","Maximum number of addressable IDs for logical processors …","The maximum ECX value recognized by RDPRU.","The size of the <code>apic_id_size</code> field determines the maximum …","Maximum range (zero-based) of RMID of L3.","Memory Bandwidth Allocation Information.","Minimum ASID value for an SEV enabled, SEV-ES disabled …","Bit vector of supported extended SGX features.","","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","Return new CpuId struct.","Iterate over all cache information.","Iterate over all cache info subleafs for this CPU.","","","","Iterate over each sub-leaf with an address translation …","Iterate over all SoC vendor specific attributes.","Node ID","Nodes per processor","An unsigned integer which is the nominal frequency of the …","Number as retrieved from cpuid","Number of physical threads in the processor.","Number of general-purpose performance monitoring counter …","An unsigned integer which is the numerator of the …","The offset in bytes of this extended state components save …","Partitioning (0: Soft partitioning between the logical …","Performance time-stamp counter size (in bits).","Physical Address Bits","Physical Address bit reduction","The physical address of the base of the EPC section","Physical Line partitions (Bits 21-12)","Returns package type on AMD.","Processor Base Frequency (in MHz).","Maximum Frequency (in MHz).","Number of logical processors at this level type. The …","Returns which register this specific extended subleaf …","SVM revision number.","Maximum range (zero-based) of RMID within this physical …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","Combination of bits 00-31 and 32-63 of 96 bit processor …","96 bit processor serial number.","Bits 00-31 of 96 bit processor serial number.","Bits 32-63 of 96 bit processor serial number.","Bits 64-96 of 96 bit processor serial number.","Number of Sets.","Number of Sets (Bits 31-00)","Number of bits to shift right on x2APIC ID to get a unique …","The size in bytes (from the offset specified in EBX) of …","Size of the corresponding EPC section within the Processor …","Smallest monitor-line size in bytes (default is processor…","Version Information: Stepping ID","","Number of available address space identifiers (ASID).","Number of C0 sub C-states supported using MWAIT (Bits 03 - …","Number of C1 sub C-states supported using MWAIT (Bits 07 - …","Number of C2 sub C-states supported using MWAIT (Bits 11 - …","Number of C3 sub C-states supported using MWAIT (Bits 15 - …","Number of C4 sub C-states supported using MWAIT (Bits 19 - …","Number of C5 sub C-states supported using MWAIT (Bits 23 - …","Number of C6 sub C-states supported using MWAIT (Bits 27 - …","Number of C7 sub C-states supported using MWAIT (Bits 31 - …","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Configurable PSB frequency encodings …","Threads per core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“TSC frequency” = “core crystal clock frequency” * …","TSC frequency in kHz.","Cache type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version ID of architectural performance monitoring. (Bits …","Ways of associativity.","Return new CpuId struct with custom reader function.","x2APIC ID","x2APIC ID the current logical processor. (Bits 31-00)","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX 256-bit in XCR0.","Support for legacy x87 in XCR0.","Support for MPX BNDCSR in XCR0.","Support for MPX BNDREGS in XCR0.","Support for PKRU in XCR0.","Support for SSE 128-bit in XCR0.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","The size in bytes of the XSAVE area containing all states …",""],"i":[53,0,0,50,50,50,50,53,0,26,0,0,0,0,0,0,49,0,0,26,0,0,0,21,20,49,0,39,39,64,0,0,0,0,0,0,0,0,0,0,0,39,26,50,53,0,0,51,21,20,49,53,0,0,0,0,0,20,0,0,49,0,50,50,39,21,20,0,0,50,26,0,0,0,0,0,0,50,53,53,0,0,21,49,26,0,0,0,0,0,0,20,0,26,0,49,0,0,0,21,20,39,50,20,53,53,0,51,53,1,3,6,8,10,11,10,11,12,14,14,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,15,14,16,18,19,19,12,22,23,14,24,1,25,26,27,28,12,29,30,31,32,12,33,34,35,36,37,0,38,38,38,38,24,40,27,38,41,38,41,38,41,38,41,42,42,42,42,43,1,1,36,1,1,38,41,39,37,6,44,42,45,35,18,1,10,25,46,12,21,47,48,49,50,51,23,52,20,11,53,14,14,15,47,14,36,36,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,39,37,6,44,42,45,35,18,24,1,10,10,25,26,27,27,46,28,12,21,21,47,29,48,49,49,30,50,50,51,51,23,52,31,64,65,32,20,20,66,11,11,53,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,50,51,23,52,31,64,65,32,20,66,11,53,24,24,24,57,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,63,24,24,24,63,24,63,24,24,24,24,63,63,24,6,37,19,15,19,15,19,19,15,18,14,15,56,14,15,18,15,36,14,43,56,44,14,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,6,14,56,56,14,15,14,14,14,22,12,33,37,14,15,14,14,18,44,14,14,43,43,14,62,62,43,15,15,14,15,56,37,43,44,14,15,45,45,14,56,37,56,14,56,44,44,43,56,44,14,43,18,37,37,43,43,43,43,43,43,43,43,14,15,43,6,6,37,6,6,56,33,61,61,60,56,15,44,52,33,34,15,15,14,37,14,6,61,15,14,15,14,15,14,45,56,14,33,14,15,44,44,34,56,15,14,14,18,14,44,44,14,14,14,14,15,15,15,14,56,43,14,33,37,15,56,18,56,14,14,14,43,33,56,6,14,56,56,56,15,56,6,18,37,33,56,18,18,18,56,62,62,56,56,33,15,56,18,56,14,44,14,14,14,14,14,14,15,44,14,37,15,44,15,14,15,37,44,14,37,14,56,33,33,15,34,33,37,14,56,14,44,43,43,56,6,56,44,14,18,44,14,37,56,18,56,6,15,14,58,15,14,58,58,58,22,23,52,58,58,38,38,38,38,3,14,47,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,25,28,29,30,31,32,66,6,36,36,36,59,36,19,12,59,59,12,36,36,36,12,12,22,23,58,62,38,41,38,41,38,41,38,41,42,42,42,42,61,41,41,41,41,61,60,41,41,41,41,47,12,48,48,6,59,56,19,12,12,62,62,18,52,14,6,6,34,61,18,62,14,0,24,25,28,29,30,31,32,66,35,35,40,27,6,36,40,59,19,6,6,18,65,12,15,16,16,48,59,44,60,62,46,46,46,46,46,19,12,48,59,65,47,14,59,44,47,47,47,47,47,47,47,47,33,33,33,35,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,40,3,27,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,36,19,24,35,48,58,58,58,58,58,58,58,58,58,58,58,58,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,[[5,[4]]]],[6,7],[8,9],[10,9],[11,9],[10,9],[11,9],[12,13],[14,7],[14,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,4],[14,7],[16,17],[18,7],[19,7],[19,20],[12,21],[22,7],[23,7],[14,7],[24,24],[1,1],[25,25],[26,26],[27,27],[28,28],[12,12],[29,29],[30,30],[31,31],[32,32],[12,13],[33,7],[34,4],[35,7],[36,7],[37,4],0,[38,39],[38,7],[38,7],[38,7],[[],24],[40,4],[27,9],[38,39],[41,39],[38,7],[41,17],[38,39],[41,39],[38,7],[41,17],[42,39],[42,7],[42,39],[42,7],[43,7],0,0,[36,7],0,0,[[38,38],2],[[41,41],2],[[39,39],2],[[37,37],2],[[6,6],2],[[44,44],2],[[42,42],2],[[45,45],2],[[35,35],2],[[18,18],2],[[1,1],2],[[10,10],2],[[25,25],2],[[46,46],2],[[12,12],2],[[21,21],2],[[47,47],2],[[48,48],2],[[49,49],2],[[50,50],2],[[51,51],2],[[23,23],2],[[52,52],2],[[20,20],2],[[11,11],2],[[53,53],2],[14,7],[14,7],[15,4],[47,2],[14,7],[36,7],[36,7],[[15,54],55],[[8,54],55],[[14,54],55],[[43,54],55],[[56,54],55],[[57,54],55],[[36,54],55],[[58,54],55],[[59,54],55],[[60,54],55],[[34,54],55],[[61,54],55],[[22,54],55],[[62,54],55],[[33,54],55],[[40,54],55],[[16,54],55],[[19,54],55],[[63,54],55],[[3,54],55],[[38,54],55],[[41,54],55],[[39,54],55],[[39,54],55],[[37,54],55],[[6,54],55],[[44,54],55],[[42,54],55],[[45,54],55],[[35,54],55],[[18,54],55],[[24,54],55],[[1,54],55],[[10,54],55],[[10,54],55],[[25,54],55],[[26,54],55],[[27,54],55],[[27,54],55],[[46,54],55],[[28,54],55],[[12,54],55],[[21,54],55],[[21,54],55],[[47,54],55],[[29,54],55],[[48,54],55],[[49,54],55],[[49,54],55],[[30,54],55],[[50,54],55],[[50,54],55],[[51,54],55],[[51,54],55],[[23,54],55],[[52,54],55],[[31,54],55],[[64,54],55],[[65,54],55],[[32,54],55],[[20,54],55],[[20,54],55],[[66,54],55],[[11,54],55],[[11,54],55],[[53,54],55],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[24,[[5,[37]]]],[24,[[5,[25]]]],[24,[[5,[28]]]],[57,4],[24,[[5,[32]]]],[24,[[5,[57]]]],[24,[[5,[56]]]],[24,[[5,[15]]]],[24,[[5,[58]]]],[24,[[5,[29]]]],[24,[[5,[29]]]],[24,[[5,[14]]]],[24,[[5,[3]]]],[24,[[5,[38]]]],[24,[[5,[41]]]],[24,[[5,[18]]]],[24,[[5,[47]]]],[24,[[5,[36]]]],[24,[[5,[45]]]],[24,[[5,[8]]]],[24,[[5,[6]]]],[24,[[5,[16]]]],[24,[[5,[46]]]],[24,[[5,[35]]]],[24,[[5,[33]]]],[63,4],[24,[[5,[61]]]],[24,[[5,[60]]]],[24,[[5,[62]]]],[63,17],[24,[[5,[63]]]],[63,4],[24,[[5,[44]]]],[24,[[5,[43]]]],[24,[[5,[42]]]],[24,[[5,[40]]]],[63,[[5,[66]]]],[63,[[5,[11]]]],[24,[[5,[10]]]],[6,7],[37,2],[19,2],[15,2],[19,2],[15,2],[19,2],[19,2],[15,2],[18,2],[14,2],[15,2],[56,2],[14,2],[15,2],[18,2],[15,2],[36,2],[14,2],[43,2],[56,2],[44,2],[14,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[6,2],[14,2],[56,2],[56,2],[14,2],[15,2],[14,2],[14,2],[14,2],[22,2],[12,2],[33,2],[37,2],[14,2],[15,2],[14,2],[14,2],[18,2],[44,2],[14,2],[14,2],[43,2],[43,2],[14,2],[62,2],[62,2],[43,2],[15,2],[15,2],[14,2],[15,2],[56,2],[37,2],[43,2],[44,2],[14,2],[15,2],[45,2],[45,2],[14,2],[56,2],[37,2],[56,2],[14,2],[56,2],[44,2],[44,2],[43,2],[56,2],[44,2],[14,2],[43,2],[18,2],[37,2],[37,2],[43,2],[43,2],[43,2],[43,2],[43,2],[43,2],[43,2],[43,2],[14,2],[15,2],[43,2],[6,2],[6,2],[37,2],[6,2],[6,2],[56,2],[33,2],[61,2],[61,2],[60,2],[56,2],[15,2],[44,2],[52,2],[33,2],[34,2],[15,2],[15,2],[14,2],[37,2],[14,2],[6,2],[61,2],[15,2],[14,2],[15,2],[14,2],[15,2],[14,2],[45,2],[56,2],[14,2],[33,2],[14,2],[15,2],[44,2],[44,2],[34,2],[56,2],[15,2],[14,2],[14,2],[18,2],[14,2],[44,2],[44,2],[14,2],[14,2],[14,2],[14,2],[15,2],[15,2],[15,2],[14,2],[56,2],[43,2],[14,2],[33,2],[37,2],[15,2],[56,2],[18,2],[56,2],[14,2],[14,2],[14,2],[43,2],[33,2],[56,2],[6,2],[14,2],[56,2],[56,2],[56,2],[15,2],[56,2],[6,2],[18,2],[37,2],[33,2],[56,2],[18,2],[18,2],[18,2],[56,2],[62,2],[62,2],[56,2],[56,2],[33,2],[15,2],[56,2],[18,2],[56,2],[14,2],[44,2],[14,2],[14,2],[14,2],[14,2],[14,2],[14,2],[15,2],[44,2],[14,2],[37,2],[15,2],[44,2],[15,2],[14,2],[15,2],[37,2],[44,2],[14,2],[37,2],[14,2],[56,2],[33,2],[33,2],[15,2],[34,2],[33,2],[37,2],[14,2],[56,2],[14,2],[44,2],[43,2],[43,2],[56,2],[6,2],[56,2],[44,2],[14,2],[18,2],[44,2],[14,2],[37,2],[56,2],[18,2],[56,2],[6,2],[15,2],[14,2],[58,2],[15,2],[14,2],[58,2],[58,2],[58,2],[22,17],[23,17],[52,17],[58,2],[58,2],[38,39],[38,7],[38,7],[38,7],[3,53],[14,7],[47,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,17],[36,2],[36,2],[36,2],[59,2],[36,2],[19,2],[12,2],[59,2],[59,2],[12,2],[36,2],[36,2],[36,2],[12,2],[12,2],[22,4],[23,4],[58,30],[62,31],[38,39],[41,39],[38,7],[41,17],[38,39],[41,39],[38,7],[41,17],[42,39],[42,7],[42,39],[42,7],[61,[[5,[23]]]],[41,39],[41,7],[41,7],[41,17],[61,[[5,[22]]]],[60,[[5,[34]]]],[41,39],[41,7],[41,7],[41,17],[47,17],[12,7],[48,7],[48,49],[6,7],[59,51],[56,7],[19,17],[12,13],[12,13],[62,7],[62,7],[18,4],[52,17],[14,7],[6,17],[6,13],[34,4],[61,[[5,[52]]]],[18,4],[62,4],[14,7],0,[[],24],[25,[[5,[27]]]],[28,[[5,[12]]]],[29,[[5,[48]]]],[30,[[5,[59]]]],[31,[[5,[64]]]],[32,[[5,[19]]]],[66,[[5,[1]]]],[35,7],[35,7],[40,4],0,[6,13],[36,7],[40,4],[59,4],[19,7],[6,13],[6,7],[18,7],[65,67],[12,13],[15,4],[16,17],[16,17],[48,17],[59,50],[44,7],[60,4],[62,[[68,[67,67]]]],[46,67],[46,69],[46,4],[46,4],[46,4],[19,4],[12,13],[48,4],[59,4],[65,67],[47,17],[14,7],0,[44,4],[47,17],[47,17],[47,17],[47,17],[47,17],[47,17],[47,17],[47,17],[33,17],[33,17],[33,17],[35,7],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[40,[[5,[67]]]],[3,[[5,[4]]]],0,[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[36,7],[19,17],[[],24],[35,4],[48,4],[58,2],[58,2],[58,2],[58,2],[58,2],[58,2],[58,2],[58,2],[58,2],[58,4],[58,4],[58,4],[[4,4],1]],"c":[115,116],"p":[[3,"CpuIdResult",0],[15,"bool"],[3,"HypervisorInfo",0],[15,"u32"],[4,"Option",1127],[3,"ProcessorCapacityAndFeatureInfo",0],[15,"u8"],[3,"ProcessorBrandString",0],[15,"str"],[3,"VendorInfo",0],[3,"SoCVendorBrand",0],[3,"CacheParameter",0],[15,"usize"],[3,"FeatureInfo",0],[3,"ExtendedProcessorFeatureIdentifiers",0],[3,"ProcessorFrequencyInfo",0],[15,"u16"],[3,"MemoryEncryptionInfo",0],[3,"DatInfo",0],[4,"DatType",0],[4,"CacheType",0],[3,"L3CatInfo",0],[3,"L2CatInfo",0],[3,"CpuId",0],[3,"CacheInfoIter",0],[4,"CacheInfoType",0],[3,"CacheInfo",0],[3,"CacheParametersIter",0],[3,"ExtendedTopologyIter",0],[3,"ExtendedStateIter",0],[3,"SgxSectionIter",0],[3,"DatIter",0],[3,"ProcessorTraceInfo",0],[3,"L3MonitoringInfo",0],[3,"ProcessorTopologyInfo",0],[3,"PerformanceMonitoringInfo",0],[3,"ApmInfo",0],[3,"L1CacheTlbInfo",0],[4,"Associativity",0],[3,"TscInfo",0],[3,"L2And3CacheTlbInfo",0],[3,"Tlb1gbPageInfo",0],[3,"ThermalPowerInfo",0],[3,"SvmFeatures",0],[3,"PerformanceOptimizationInfo",0],[3,"ProcessorSerial",0],[3,"MonitorMwaitInfo",0],[3,"ExtendedTopologyLevel",0],[4,"TopologyType",0],[4,"ExtendedRegisterType",0],[4,"ExtendedRegisterStateLocation",0],[3,"MemBwAllocationInfo",0],[4,"Hypervisor",0],[3,"Formatter",1128],[6,"Result",1128],[3,"ExtendedFeatures",0],[3,"DirectCacheAccessInfo",0],[3,"ExtendedStateInfo",0],[3,"ExtendedState",0],[3,"RdtMonitoringInfo",0],[3,"RdtAllocationInfo",0],[3,"SgxInfo",0],[3,"SoCVendorInfo",0],[4,"SgxSectionInfo",0],[3,"EpcSection",0],[3,"SoCVendorAttributesIter",0],[15,"u64"],[15,"tuple"],[15,"u128"],[4,"Result",1129],[3,"TypeId",1130]],"b":[[342,"impl-Debug-for-Associativity"],[343,"impl-Display-for-Associativity"],[353,"impl-Display-for-VendorInfo"],[354,"impl-Debug-for-VendorInfo"],[357,"impl-Debug-for-CacheInfo"],[358,"impl-Display-for-CacheInfo"],[362,"impl-Debug-for-CacheType"],[363,"impl-Display-for-CacheType"],[367,"impl-Debug-for-TopologyType"],[368,"impl-Display-for-TopologyType"],[370,"impl-Display-for-ExtendedRegisterType"],[371,"impl-Debug-for-ExtendedRegisterType"],[372,"impl-Debug-for-ExtendedRegisterStateLocation"],[373,"impl-Display-for-ExtendedRegisterStateLocation"],[380,"impl-Display-for-DatType"],[381,"impl-Debug-for-DatType"],[383,"impl-Display-for-SoCVendorBrand"],[384,"impl-Debug-for-SoCVendorBrand"]]},\
"rustc_demangle":{"doc":"Demangle Rust compiler symbol names.","t":"DDLLLLLLFLLLLLLLFLLLLLL","n":["Demangle","TryDemangleError","as_str","borrow","borrow","borrow_mut","borrow_mut","clone","demangle","fmt","fmt","fmt","from","from","into","into","try_demangle","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"rustc_demangle"],[23,"core::fmt"],[24,"core::fmt"],[25,"core::any"]],"d":["Representation of a demangled symbol name.","Error returned from the <code>try_demangle</code> function below when …","Returns the underlying string that’s being demangled.","","","","","","De-mangles a Rust symbol into a more readable version","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The same as <code>demangle</code>, except return an <code>Err</code> if the string …","","","","","",""],"i":[0,0,1,1,3,1,3,3,0,1,1,3,1,3,1,3,0,1,3,1,3,1,3],"f":[0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[2,1],[[1,4],5],[[1,4],5],[[3,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,[[6,[1,3]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]]],"c":[],"p":[[3,"Demangle",0],[15,"str"],[3,"TryDemangleError",0],[3,"Formatter",23],[6,"Result",23],[4,"Result",24],[3,"TypeId",25]],"b":[[9,"impl-Debug-for-Demangle%3C\'a%3E"],[10,"impl-Display-for-Demangle%3C\'a%3E"]]},\
"rustversion":{"doc":"github crates-io docs-rs","t":"XXXXXOXXXX","n":["all","any","attr","before","beta","cfg","nightly","not","since","stable"],"q":[[0,"rustversion"]],"d":["","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0],"c":[],"p":[],"b":[]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of …","t":"EDILLLLOLLLLLLLFLLLKLLLLLLLL","n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":[[0,"scopeguard"],[28,"core::ops::function"],[29,"core::fmt"],[30,"core::fmt"],[31,"core::any"]],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,1,8,1,8,0,1,1,1,1,8,1,8,0,1,8,1,3,8,1,8,1,8,1,8,1],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[1,[-1,-2,-3]]],-1,[],2,3],[[[1,[-1,-2,-3]]],-1,[],2,3],[[[1,[-1,-2,-3]]],4,[],2,3],[[[1,[-1,-2,-3]],5],6,7,2,3],[[8,5],6],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[1,[-1,-2,8]]],[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2,-3]]],-1,[],2,3],[[],9],[[],9],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[[-1,-2],[[1,[-1,-2,-3]]],[],2,3]],"c":[],"p":[[3,"ScopeGuard",0],[8,"FnOnce",28],[8,"Strategy",0],[15,"tuple"],[3,"Formatter",29],[6,"Result",29],[8,"Debug",29],[4,"Always",0],[15,"bool"],[4,"Result",30],[3,"TypeId",31]],"b":[]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain …","t":"NINEDDQDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLOLLLLKLLLLLLLLLLLLLLLLLLM","n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","into","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","len","len","new","next","next","next_back","next_back","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to_fit","size","size_hint","size_hint","smallvec","spilled","swap_remove","to_owned","to_owned","to_smallvec","to_string","truncate","try_from","try_from","try_from","try_from","try_grow","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","layout"],"q":[[0,"smallvec"],[138,"smallvec::CollectionAllocErr"],[139,"core::clone"],[140,"core::cmp"],[141,"core::ops::function"],[142,"core::ops::range"],[143,"core::iter::traits::collect"],[144,"core::fmt"],[145,"core::fmt"],[146,"core::alloc::layout"],[147,"core::mem::maybe_uninit"],[148,"core::hash"],[149,"core::slice::index"],[150,"alloc::boxed"],[151,"core::result"],[152,"core::option"],[153,"alloc::string"],[154,"core::any"]],"d":["The allocator return an error","Types that can be used as the backing store for a SmallVec","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","An iterator that removes the items from a <code>SmallVec</code> and …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The type of the array’s elements.","A <code>Vec</code>-like container that can store a small number of …","Convenience trait for constructing a <code>SmallVec</code>","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","","","","","","","","","","","The number of items the vector can hold without …","Remove all elements from the vector.","","","","","","","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","Creates a draining iterator that removes the specified …","","","","","","Copy elements from a slice and append them to the vector.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Re-allocate to set the capacity to …","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the SmallVec into an <code>A</code> if possible. Otherwise …","","","","","","Convert a SmallVec to a Vec, without reallocating if the …","Returns <code>true</code> if the vector is empty","","The number of elements stored in the vector","Construct an empty vector","","","","","","Remove an item from the end of the vector and return it, …","Append an item to the vector.","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns the number of items the array can hold.","","","Creates a <code>SmallVec</code> containing the arguments.","Returns <code>true</code> if the data has spilled into a separate …","Remove the element at position <code>index</code>, replacing it with …","","","Construct a new <code>SmallVec</code> from a slice.","","Shorten the vector, keeping the first <code>len</code> elements and …","","","","","Re-allocate to set the capacity to …","","","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","The layout that was passed to the allocator"],"i":[16,0,16,0,0,0,3,0,0,1,1,1,1,5,1,1,1,5,10,1,1,5,16,10,1,1,5,16,1,1,1,5,1,1,5,1,1,1,1,1,1,1,1,10,1,5,1,1,1,10,1,5,16,16,10,1,1,1,1,1,5,16,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,1,5,16,1,1,10,1,1,1,5,1,1,10,1,1,10,5,10,5,1,1,1,1,1,1,1,1,1,1,1,1,3,10,5,0,1,1,1,5,28,16,1,10,1,5,16,1,10,1,5,16,1,1,10,1,5,16,1,29],"f":[0,0,0,0,0,0,0,0,0,[[[1,[-1]],[1,[-2]]],2,3,3],[[[1,[-1]]],4,3],[[[1,[-1]]],[],3],[[[1,[-1]]],4,3],[[[5,[-1]]],4,3],[[[1,[-1]]],[],3],[[[1,[-1]]],4,3],[[[1,[-1]]],4,3],[[[5,[-1]]],4,3],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],4,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],4,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],6,3],[[[1,[-1]]],2,3],[[[1,[-1]]],[[1,[-1]]],3],[[[5,[-1]]],[[5,[-1]]],[3,7]],[[[1,[-1]],[1,[-1]]],2,3],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[1,[-1]],[1,[-1]]],8,3],[[[1,[-1]]],2,3],[[[1,[-1]],-2],2,3,9],[[[1,[-1]],-2],2,3,9],[[],[[1,[-1]]],3],[[[1,[-1]]],4,3],[[[1,[-1]]],4,3],[[[1,[-1]],-2],[[10,[-1]]],3,[[11,[6]]]],[[[10,[-1]]],2,3],[[[1,[-1]]],2,3],[[[5,[-1]]],2,3],[[[1,[-1]],[1,[-2]]],12,3,3],[[[1,[-1]],-2],2,3,13],[[[1,[-1]],4],2,3],[[[10,[-1]],14],15,3],[[[1,[-1]],14],15,3],[[[5,[-1]],14],15,3],[[16,14],15],[[16,14],15],[-1,-1,[]],[-1,-1,[]],[4,[[1,[-1]]],3],[17,[[1,[-1]]],3],[18,-1,[]],[-1,[[1,[-1]]],3],[-1,-1,[]],[-1,-1,[]],[19,16],[-1,[[1,[-1]]],3],[[-1,6],[[1,[-1]]],3],[[[20,[-1]],6],[[1,[-1]]],3],[6,[[1,[-1]]],3],[-1,[[1,[-2]]],13,3],[[6,6],[[1,[-1]]],3],[4,[[1,[-1]]],3],[17,[[1,[-1]]],3],[[[1,[-1]],6],2,3],[[[1,[-1]],-2],2,3,21],[[[1,[-1]],-2],[],3,[[22,[4]]]],[[[1,[-1]],-2],[],3,[[22,[4]]]],[[[1,[-1]]],6,3],[[[1,[-1]],6],2,3],[[[1,[-1]],6,4],2,3],[[[1,[-1]],6,-2],2,3,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[23,[4]]],3],[[[1,[-1]]],[[24,[-1,[1,[-1]]]]],3],[-1,-2,[],[]],[[[1,[-1]]],[],3],[[[1,[-1]]],[],3],[[[1,[-1]]],[],3],[-1,-2,[],[]],[[[1,[-1]]],17,3],[[[1,[-1]]],12,3],[[[10,[-1]]],6,3],[[[1,[-1]]],6,3],[[],[[1,[-1]]],3],[[[10,[-1]]],25,3],[[[5,[-1]]],25,3],[[[10,[-1]]],25,3],[[[5,[-1]]],25,3],[[[1,[-1]],[1,[-1]]],[[25,[8]]],3],[[[1,[-1]]],25,3],[[[1,[-1]]],2,3],[[[1,[-1]],6],[],3],[[[1,[-1]],6],2,3],[[[1,[-1]],6],2,3],[[[1,[-1]],6],2,3],[[[1,[-1]],6,-2],2,3,9],[[[1,[-1]],-2],2,3,9],[[[1,[-1]],-2],2,3,9],[[[1,[-1]],6],2,3],[[[1,[-1]]],2,3],[[],6],[[[10,[-1]]],[[2,[6,[25,[6]]]]],3],[[[5,[-1]]],[[2,[6,[25,[6]]]]],3],0,[[[1,[-1]]],12,3],[[[1,[-1]],6],[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,26,[]],[[[1,[-1]],6],2,3],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[[[1,[-1]],6],[[24,[2,16]]],3],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[[[1,[-1]],6],[[24,[2,16]]],3],[[[1,[-1]],6],[[24,[2,16]]],3],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[6,[[1,[-1]]],3],0],"c":[],"p":[[3,"SmallVec",0],[15,"tuple"],[8,"Array",0],[15,"slice"],[3,"IntoIter",0],[15,"usize"],[8,"Clone",139],[4,"Ordering",140],[8,"FnMut",141],[3,"Drain",0],[8,"RangeBounds",142],[15,"bool"],[8,"IntoIterator",143],[3,"Formatter",144],[6,"Result",144],[4,"CollectionAllocErr",0],[3,"Vec",145],[15,"never"],[6,"LayoutErr",146],[19,"MaybeUninit",147],[8,"Hasher",148],[8,"SliceIndex",149],[3,"Box",150],[4,"Result",151],[4,"Option",152],[3,"String",153],[3,"TypeId",154],[8,"ToSmallVec",0],[13,"AllocErr",138]],"b":[[52,"impl-Display-for-CollectionAllocErr"],[53,"impl-Debug-for-CollectionAllocErr"],[56,"impl-From%3C%26%5B%3CA+as+Array%3E::Item%5D%3E-for-SmallVec%3CA%3E"],[57,"impl-From%3CVec%3C%3CA+as+Array%3E::Item%3E%3E-for-SmallVec%3CA%3E"],[59,"impl-From%3CA%3E-for-SmallVec%3CA%3E"],[86,"impl-IntoIterator-for-SmallVec%3CA%3E"],[87,"impl-IntoIterator-for-%26mut+SmallVec%3CA%3E"],[88,"impl-IntoIterator-for-%26SmallVec%3CA%3E"]]},\
"snafu":{"doc":"SNAFU","t":"IIDDIIIDDIDIYQCKLKLLLLLLLLLLLLLLLMKKLOMLLLLLLLLLLLLLLKLLLALLLLLKLLMOLLLLAXLLLLLLLLLLLLLLLKKAAAAAAAAAAAAAYCCO","n":["AsBacktrace","AsErrorSource","Backtrace","ChainCompat","ErrorCompat","GenerateImplicitData","IntoError","Location","NoneError","OptionExt","Report","ResultExt","Snafu","Source","__InternalExtractErrorType","as_backtrace","as_backtrace","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capture","capture_into_result","clone","clone","column","context","context","default","ensure","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_error","generate","generate","generate","generate_with_source","guide","into","into","into","into","into","into_error","into_iter","iter_chain","line","location","new","new","next","ok","prelude","report","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_context","with_context","comparison","compatibility","examples","feature_flags","generics","opaque","philosophy","structs","troubleshooting","upgrading","what_code_is_generated","failure","missing_field_source","Snafu","_","_","ensure"],"q":[[0,"snafu"],[91,"snafu::guide"],[102,"snafu::guide::comparison"],[103,"snafu::guide::troubleshooting"],[104,"snafu::prelude"],[108,"core::option"],[109,"core::ops::function"],[110,"core::result"],[111,"core::fmt"],[112,"core::fmt"],[113,"core::any"]],"d":["View a backtrace-like value as an optional backtrace.","Converts the receiver into an <code>Error</code> trait object, suitable …","A backtrace starting from the beginning of the thread.","An iterator over an Error and its sources.","Backports changes to the <code>Error</code> trait to versions of Rust …","Construct data to be included as part of an error. The …","Combines an underlying error with additional information …","The source code location where the error was reported.","A temporary error type used when converting an <code>Option</code> into …","Additions to <code>Option</code>.","Opinionated solution to format an error in a user-friendly …","Additions to <code>Result</code>.","The <code>Snafu</code> macro is the entrypoint to defining your own …","The underlying error","","Retrieve the optional backtrace","","For maximum effectiveness, this needs to be called as a …","Returns a <code>Backtrace</code> that may be printed.","","","","","","","","","","","Executes a closure that returns a <code>Result</code>, converting any …","Executes a closure that returns a <code>Result</code>, converting the …","","","The column where the error was reported","Extend a <code>Result</code>’s error with additional …","Convert an <code>Option</code> into a <code>Result</code> with additional …","","Ensure a condition is true. If it is not, return from the …","The file where the error was reported","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert an error into a <code>Report</code>.","Build the data.","","","Build the data using the given source","Not currently built; please add the <code>guide</code> feature flag.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Combine the information to produce the error","","Returns an iterator for traversing the chain of errors, …","The line where the error was reported","Constructs a <code>Location</code> using the current file, line, and …","Creates a new error chain iterator.","Constructs a <code>Location</code> using the given information","","A <code>Report</code> that indicates no error occurred.","Traits and macros used by most projects. Add …","Adapts a function to provide user-friendly error output …","","","","","","","","","","","","","","","","Extend a <code>Result</code>’s error with lazily-generated …","Convert an <code>Option</code> into a <code>Result</code> with lazily-generated …","Not currently built; please add the <code>guide</code> feature flag.","Not currently built; please add the <code>guide</code> feature flag.","Not currently built; please add the <code>guide</code> feature flag.","Not currently built; please add the <code>guide</code> feature flag.","Not currently built; please add the <code>guide</code> feature flag.","Not currently built; please add the <code>guide</code> feature flag.","Not currently built; please add the <code>guide</code> feature flag.","Not currently built; please add the <code>guide</code> feature flag.","Not currently built; please add the <code>guide</code> feature flag.","Not currently built; please add the <code>guide</code> feature flag.","Not currently built; please add the <code>guide</code> feature flag.","Not currently built; please add the <code>guide</code> feature flag.","Not currently built; please add the <code>guide</code> feature flag.","The <code>Snafu</code> macro is the entrypoint to defining your own …","","","Ensure a condition is true. If it is not, return from the …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,18,1,14,8,3,19,1,6,7,3,19,1,6,7,3,3,6,7,7,20,21,7,0,7,3,3,1,1,6,7,7,3,3,19,1,6,7,3,22,1,7,22,0,3,19,1,6,7,9,6,8,7,0,6,7,6,3,0,0,3,19,1,6,7,3,19,1,6,7,3,19,1,6,7,20,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[2,[1]]],[]],[1,[[2,[1]]]],0,[-1,[[2,[1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],4,[]],[-1,[[5,[-2,[3,[-3]]]]],4,[],[]],[6,6],[7,7],0,[[-1,-3],[[5,[-4,-2]]],[],[0,8],[[9,[-2]]],[]],[[-1,-3],[[5,[-4,-2]]],[],[0,8],[[9,[-2]]],[]],[[],7],0,0,[[[3,[-1]],10],11,0],[[[3,[-1]],10],11,0],[[1,10],11],[[1,10],11],[[6,10],11],[[7,10],11],[[7,10],11],[-1,-1,[]],[[[5,[12,-1]]],[[3,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[3,[-1]]],[]],[[],-1,[]],[[],1],[[],7],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,6,14],0,0,0,[[15,16,16],7],[6,2],[[],[[3,[-1]]],[]],0,0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[-1,-2],[[5,[-3,-4]]],[],4,[],[0,8]],[[-1,-2],[[5,[-3,-4]]],[],4,[],[0,8]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Backtrace",0],[4,"Option",108],[3,"Report",0],[8,"FnOnce",109],[4,"Result",110],[3,"ChainCompat",0],[3,"Location",0],[8,"ErrorCompat",0],[8,"IntoError",0],[3,"Formatter",111],[6,"Result",111],[15,"tuple"],[8,"Sized",112],[8,"AsErrorSource",0],[15,"str"],[15,"u32"],[3,"TypeId",113],[8,"AsBacktrace",0],[3,"NoneError",0],[8,"ResultExt",0],[8,"OptionExt",0],[8,"GenerateImplicitData",0]],"b":[[39,"impl-Display-for-Report%3CE%3E"],[40,"impl-Debug-for-Report%3CE%3E"],[41,"impl-Debug-for-Backtrace"],[42,"impl-Display-for-Backtrace"],[44,"impl-Display-for-Location"],[45,"impl-Debug-for-Location"]]},\
"snafu_derive":{"doc":"","t":"YX","n":["Snafu","report"],"q":[[0,"snafu_derive"]],"d":["",""],"i":[0,0],"f":[0,0],"c":[],"p":[],"b":[]},\
"spin":{"doc":"This crate provides spin-based versions of the primitives …","t":"GGGCGCGCGGCAAAAAAADDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLGGGGGGDDCCLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSDLLLLLLLLLLLLLLLLLLLLLLLLLLDIDLLLLLLLLKLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Barrier","Lazy","Mutex","MutexGuard","Once","RelaxStrategy","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","Spin","barrier","lazy","lock_api","mutex","once","relax","rwlock","Barrier","BarrierWaitResult","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","is_leader","new","try_from","try_from","try_into","try_into","type_id","type_id","wait","Lazy","as_mut_ptr","borrow","borrow_mut","default","deref","fmt","force","from","into","new","try_from","try_into","type_id","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","Mutex","MutexGuard","SpinMutex","SpinMutexGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","spin","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","SpinMutex","SpinMutexGuard","as_mut_ptr","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","INIT","Once","as_mut_ptr","borrow","borrow_mut","call_once","default","drop","fmt","from","from","from","get","get_mut","get_mut_unchecked","get_unchecked","initialized","into","into_inner_unchecked","is_completed","new","poll","try_call_once","try_from","try_into","try_into_inner","type_id","wait","Loop","RelaxStrategy","Spin","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","relax","relax","relax","try_from","try_from","try_into","try_into","type_id","type_id","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","as_mut_ptr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradeable","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_read_decrement","force_write_unlock","from","from","from","from","from","from","get_mut","into","into","into","into","into_inner","is_locked","leak","leak","leak","lock_exclusive","lock_shared","lock_upgradable","new","read","reader_count","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_lock_exclusive","try_lock_shared","try_lock_upgradable","try_read","try_upgrade","try_upgrade","try_upgradeable_read","try_write","type_id","type_id","type_id","type_id","unlock_exclusive","unlock_shared","unlock_upgradable","upgrade","upgrade","upgradeable_read","write","writer_count"],"q":[[0,"spin"],[18,"spin::barrier"],[37,"spin::lazy"],[51,"spin::lock_api"],[57,"spin::mutex"],[96,"spin::mutex::spin"],[134,"spin::once"],[162,"spin::relax"],[182,"spin::rwlock"],[266,"core::result"],[267,"core::any"],[268,"core::default"],[269,"core::ops::function"],[270,"core::fmt"],[271,"core::fmt"],[272,"core::fmt"]],"d":["A primitive that synchronizes the execution of multiple …","A value which is initialized on the first access. See …","A primitive that synchronizes the execution of multiple …","","A primitive that provides lazy one-time initialization. …","","A lock that provides data access to either one writer or …","","A guard that provides immutable data access but can be …","A guard that provides mutable data access. See …","","Synchronization primitive allowing multiple threads to …","Synchronization primitives for lazy evaluation.","Spin synchronisation primitives, but compatible with …","Locks that have the same behaviour as a mutex.","Synchronization primitives for one-time evaluation.","Strategies that determine the behaviour of locks when …","A lock that provides data access to either one writer or …","A primitive that synchronizes the execution of multiple …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether this thread from <code>wait</code> is the “leader …","Creates a new barrier that can block a given number of …","","","","","","","Blocks the current thread until all threads have …","A value which is initialized on the first access.","Retrieves a mutable pointer to the inner data.","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new lazy value with the given initializing …","","","","A lock that provides mutually exclusive data access …","A guard that provides mutable data access (compatible with …","A lock that provides data access to either one writer or …","A guard that provides immutable data access (compatible …","A guard that provides immutable data access but can be …","A guard that provides mutable data access (compatible with …","A spin-based lock providing mutually exclusive access to …","A generic guard that will protect some data access and …","","","","","","","","","","","","","Force unlock this <code>Mutex</code>.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Mutex</code> and unwraps the underlying data.","","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","Locks the <code>Mutex</code> and returns a guard that permits access to …","","Creates a new <code>Mutex</code> wrapping the supplied data.","A naïve spinning mutex.","","","","","","Try to lock this <code>Mutex</code>, returning a lock guard if …","","","","A spin lock providing mutually exclusive access to data.","A guard that provides mutable data access.","Returns a mutable pointer to the underlying data.","","","","","","","","The dropping of the MutexGuard will release the lock it …","","","","Force unlock this <code>SpinMutex</code>.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>SpinMutex</code> and unwraps the underlying data.","Returns <code>true</code> if the lock is currently held.","","Leak the lock guard, yielding a mutable reference to the …","","Locks the <code>SpinMutex</code> and returns a guard that permits …","Creates a new <code>SpinMutex</code> wrapping the supplied data.","","","","","","Try to lock this <code>SpinMutex</code>, returning a lock guard if …","","","","Initialization constant of <code>Once</code>.","A primitive that provides lazy one-time initialization.","Retrieve a pointer to the inner data.","","","Performs an initialization routine once and only once. The …","","","","","","Returns the argument unchanged.","Returns a reference to the inner value if the <code>Once</code> has …","Returns a mutable reference to the inner value if the <code>Once</code> …","Returns a mutable reference to the inner value","Returns a reference to the inner value on the unchecked …","Creates a new initialized <code>Once</code>.","Calls <code>U::from(self)</code>.","Returns a the inner value if the <code>Once</code> has been initialized.","Checks whether the value has been initialized.","Creates a new <code>Once</code>.","Like <code>Once::get</code>, but will spin if the <code>Once</code> is in the …","This method is similar to <code>call_once</code>, but allows the given …","","","Returns a the inner value if the <code>Once</code> has been initialized.","","Spins until the <code>Once</code> contains a value.","A strategy that rapidly spins, without telling the CPU to …","A trait implemented by spinning relax strategies.","A strategy that rapidly spins while informing the CPU that …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform the relaxing operation during a period of …","","","","","","","","","A lock that provides data access to either one writer or …","A guard that provides immutable data access.","A guard that provides immutable data access but can be …","A guard that provides mutable data access.","Returns a mutable pointer to the underying data.","","","","","","","","","","","","","","","Downgrades the writable lock guard to a readable, shared …","Downgrades the upgradeable lock guard to a readable, …","Downgrades the writable lock guard to an upgradable, …","","","","","","","","","","","Force decrement the reader count.","Force unlock exclusive write access.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>RwLock</code>, returning the underlying data.","","Leak the lock guard, yielding a reference to the …","Leak the lock guard, yielding a mutable reference to the …","Leak the lock guard, yielding a reference to the …","","","","Creates a new spinlock wrapping the supplied data.","Locks this rwlock with shared read access, blocking the …","Return the number of readers that currently hold the lock …","","","","","","","","","","","","Attempt to acquire this lock with shared read access.","","Tries to upgrade an upgradeable lock guard to a writable …","Tries to obtain an upgradeable lock guard.","Attempt to lock this rwlock with exclusive write access.","","","","","","","","","Upgrades an upgradeable lock guard to a writable lock …","Obtain a readable lock guard that can later be upgraded to …","Lock this rwlock with exclusive write access, blocking the …","Return the number of writers that currently hold the lock."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,4,1,4,1,4,1,1,4,4,1,4,1,4,1,4,0,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,14,16,14,16,14,16,16,14,16,16,14,14,14,14,16,14,14,16,14,14,14,16,14,14,14,0,14,16,14,16,14,14,14,16,14,0,0,21,21,22,21,22,21,22,22,22,21,22,22,21,21,21,21,22,21,21,22,21,21,21,22,21,21,21,21,22,21,22,21,21,21,22,21,23,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,28,29,28,29,28,29,28,29,7,28,29,28,29,28,29,28,29,0,0,0,0,24,24,25,26,27,24,25,26,27,24,25,26,27,26,24,26,27,26,25,26,27,24,25,25,26,26,27,27,24,24,24,24,24,25,26,27,24,24,25,26,27,24,24,25,26,27,24,24,24,24,24,24,24,25,26,27,24,25,26,27,24,24,24,24,24,27,24,24,24,25,26,27,24,24,24,24,27,24,24,24],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[3,[[4,[-1]]],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[[[4,[-1]]],1,7],0,[[[8,[-1,-2,-3]]],[],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[8,[-1,-2]]],9,[]],[[[8,[-1,-2,-3]]],-1,[],10,7],[[[8,[-1,-2,-3]],11],12,13,[],[]],[[[8,[-1,-2,-3]]],-1,[],10,7],[-1,-1,[]],[-1,-2,[],[]],[-1,[[8,[-2,-1,-3]]],[],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[14,[-1,-2]]],[15,9],[]],[[[16,[-1]]],-1,15],[[[16,[-1]]],-1,15],[[[14,[-1,-2]],11],12,[15,13],[]],[[[16,[-1]],11],12,[15,17]],[[[16,[-1]],11],12,[15,13]],[[[14,[-1,-2]]],18,15,[]],[19,-1,[]],[-1,-1,[]],[-1,[[14,[-1,-2]]],[],[]],[-1,-1,[]],[[[14,[-1,-2]]],-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1,-2]]],-1,[],[]],[[[14,[18,-1]]],2,7],[[[14,[-1,-2]]],2,15,[]],[[[16,[-1]]],-1,15],[[[14,[-1,-2]]],[[16,[-1]]],15,7],[[[14,[18,-1]]],18,7],[-1,[[14,[-1,-2]]],[],[]],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[14,[18,-1]]],2,7],[[[14,[-1,-2]]],[[20,[[16,[-1]]]]],15,[]],[-1,6,[]],[-1,6,[]],[[[14,[18,-1]]],18,7],0,0,[[[21,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[21,[-1,-2]]],[15,9],[]],[[[22,[-1]]],-1,15],[[[22,[-1]]],-1,15],[[[22,[-1]]],18,15],[[[21,[-1,-2]],11],12,[15,13],[]],[[[22,[-1]],11],12,[15,17]],[[[22,[-1]],11],12,[15,13]],[[[21,[-1,-2]]],18,15,[]],[19,-1,[]],[-1,-1,[]],[-1,[[21,[-1,-2]]],[],[]],[-1,-1,[]],[[[21,[-1,-2]]],-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1,-2]]],-1,[],[]],[[[21,[-1,-2]]],2,15,[]],[[[21,[18,-1]]],2,7],[[[22,[-1]]],-1,15],[[[21,[18,-1]]],18,7],[[[21,[-1,-2]]],[[22,[-1]]],15,7],[-1,[[21,[-1,-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[21,[18,-1]]],2,7],[[[21,[-1,-2]]],[[20,[[22,[-1]]]]],15,[]],[-1,6,[]],[-1,6,[]],[[[21,[18,-1]]],18,7],0,0,[[[23,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[23,[-1,-2]],-3],-1,[],7,10],[[],[[23,[-1,-2]]],[],[]],[[[23,[-1,-2]]],18,[],[]],[[[23,[-1,-2]],11],12,13,[]],[-1,[[23,[-1,-2]]],[],[]],[19,-1,[]],[-1,-1,[]],[[[23,[-1,-2]]],[[20,[-1]]],[],[]],[[[23,[-1,-2]]],[[20,[-1]]],[],[]],[[[23,[-1,-2]]],-1,[],[]],[[[23,[-1,-2]]],-1,[],[]],[-1,[[23,[-1,-2]]],[],[]],[-1,-2,[],[]],[[[23,[-1,-2]]],-1,[],[]],[[[23,[-1,-2]]],2,[],[]],[[],[[23,[-1,-2]]],[],[]],[[[23,[-1,-2]]],[[20,[-1]]],[],7],[[[23,[-1,-2]],-3],[[5,[-1,-4]]],[],7,10,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[23,[-1,-2]]],[[20,[-1]]],[],[]],[-1,6,[]],[[[23,[-1,-2]]],-1,[],7],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],18],[[],18],[[],18],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],0,0,0,0,[[[24,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[24,[-1,-2]]],[15,9],[]],[[[25,[-1]]],-1,15],[[[26,[-1,-2]]],-1,15,[]],[[[27,[-1,-2]]],-1,15,[]],[[[26,[-1,-2]]],-1,15,[]],[[[24,[18,-1]]],18,7],[[[26,[-1,-2]]],[[25,[-1]]],15,[]],[[[27,[-1,-2]]],[[25,[-1]]],15,[]],[[[26,[-1,-2]]],[[27,[-1,-2]]],15,[]],[[[25,[-1]]],18,15],[[[26,[-1,-2]]],18,15,[]],[[[27,[-1,-2]]],18,15,[]],[[[24,[-1,-2]],11],12,[15,13],[]],[[[25,[-1]],11],12,[15,17]],[[[25,[-1]],11],12,[15,13]],[[[26,[-1,-2]],11],12,[15,17],[]],[[[26,[-1,-2]],11],12,[15,13],[]],[[[27,[-1,-2]],11],12,[15,17],[]],[[[27,[-1,-2]],11],12,[15,13],[]],[[[24,[-1,-2]]],18,15,[]],[[[24,[-1,-2]]],18,15,[]],[-1,-1,[]],[-1,[[24,[-1,-2]]],[],[]],[19,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[24,[-1,-2]]],-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[-1,-2]]],-1,[],[]],[[[24,[18,-1]]],2,7],[[[25,[-1]]],-1,15],[[[26,[-1,-2]]],-1,15,[]],[[[27,[-1,-2]]],-1,15,[]],[[[24,[18,-1]]],18,7],[[[24,[18,-1]]],18,7],[[[24,[18,-1]]],18,7],[-1,[[24,[-1,-2]]],[],[]],[[[24,[-1,-2]]],[[25,[-1]]],15,7],[[[24,[-1,-2]]],3,15,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[24,[18,-1]]],2,7],[[[24,[18,-1]]],2,7],[[[24,[18,-1]]],2,7],[[[24,[-1,-2]]],[[20,[[25,[-1]]]]],15,[]],[[[24,[18,-1]]],2,7],[[[27,[-1,-2]]],[[5,[[26,[-1,-2]],[27,[-1,-2]]]]],15,[]],[[[24,[-1,-2]]],[[20,[[27,[-1,-2]]]]],15,[]],[[[24,[-1,-2]]],[[20,[[26,[-1,-2]]]]],15,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[[[24,[18,-1]]],18,7],[[[24,[18,-1]]],18,7],[[[24,[18,-1]]],18,7],[[[24,[18,-1]]],18,7],[[[27,[-1,-2]]],[[26,[-1,-2]]],15,7],[[[24,[-1,-2]]],[[27,[-1,-2]]],15,7],[[[24,[-1,-2]]],[[26,[-1,-2]]],15,7],[[[24,[-1,-2]]],3,15,[]]],"c":[],"p":[[3,"BarrierWaitResult",18],[15,"bool"],[15,"usize"],[3,"Barrier",18],[4,"Result",266],[3,"TypeId",267],[8,"RelaxStrategy",162],[3,"Lazy",37],[8,"Default",268],[8,"FnOnce",269],[3,"Formatter",270],[6,"Result",270],[8,"Debug",270],[3,"Mutex",57],[8,"Sized",271],[3,"MutexGuard",57],[8,"Display",270],[15,"tuple"],[15,"never"],[4,"Option",272],[3,"SpinMutex",96],[3,"SpinMutexGuard",96],[3,"Once",134],[3,"RwLock",182],[3,"RwLockReadGuard",182],[3,"RwLockWriteGuard",182],[3,"RwLockUpgradableGuard",182],[3,"Spin",162],[3,"Loop",162]],"b":[[69,"impl-Display-for-MutexGuard%3C\'a,+T%3E"],[70,"impl-Debug-for-MutexGuard%3C\'a,+T%3E"],[80,"impl-RawMutex-for-Mutex%3C(),+R%3E"],[81,"impl-Mutex%3CT,+R%3E"],[83,"impl-Mutex%3CT,+R%3E"],[84,"impl-RawMutex-for-Mutex%3C(),+R%3E"],[91,"impl-RawMutex-for-Mutex%3C(),+R%3E"],[92,"impl-Mutex%3CT,+R%3E"],[108,"impl-Display-for-SpinMutexGuard%3C\'a,+T%3E"],[109,"impl-Debug-for-SpinMutexGuard%3C\'a,+T%3E"],[119,"impl-SpinMutex%3CT,+R%3E"],[120,"impl-RawMutex-for-SpinMutex%3C(),+R%3E"],[122,"impl-RawMutex-for-SpinMutex%3C(),+R%3E"],[123,"impl-SpinMutex%3CT,+R%3E"],[129,"impl-RawMutex-for-SpinMutex%3C(),+R%3E"],[130,"impl-SpinMutex%3CT,+R%3E"],[208,"impl-Display-for-RwLockReadGuard%3C\'rwlock,+T%3E"],[209,"impl-Debug-for-RwLockReadGuard%3C\'rwlock,+T%3E"],[210,"impl-Display-for-RwLockWriteGuard%3C\'rwlock,+T,+R%3E"],[211,"impl-Debug-for-RwLockWriteGuard%3C\'rwlock,+T,+R%3E"],[212,"impl-Display-for-RwLockUpgradableGuard%3C\'rwlock,+T,+R%3E"],[213,"impl-Debug-for-RwLockUpgradableGuard%3C\'rwlock,+T,+R%3E"]]},\
"strsim":{"doc":"This library implements string similarity metrics.","t":"NNGNELLFLLLLFFFFFFLFFFFFFFLLLL","n":["DifferentLengthArgs","Err","HammingResult","Ok","StrSimError","borrow","borrow_mut","damerau_levenshtein","eq","fmt","fmt","from","generic_damerau_levenshtein","generic_hamming","generic_jaro","generic_jaro_winkler","generic_levenshtein","hamming","into","jaro","jaro_winkler","levenshtein","normalized_damerau_levenshtein","normalized_levenshtein","osa_distance","sorensen_dice","to_string","try_from","try_into","type_id"],"q":[[0,"strsim"],[30,"core::fmt"],[31,"core::fmt"],[32,"core::fmt"],[33,"core::hash"],[34,"core::clone"],[35,"core::iter::traits::collect"],[36,"alloc::string"],[37,"core::any"]],"d":["","Contains the error value","","Contains the success value","","","","Like optimal string alignment, but substrings can be …","","","","Returns the argument unchanged.","Like optimal string alignment, but substrings can be …","Calculates the number of positions in the two sequences …","Calculates the Jaro similarity between two sequences. The …","Like Jaro but gives a boost to sequences that have a …","Calculates the minimum number of insertions, deletions, …","Calculates the number of positions in the two strings …","Calls <code>U::from(self)</code>.","Calculates the Jaro similarity between two strings. The …","Like Jaro but gives a boost to strings that have a common …","Calculates the minimum number of insertions, deletions, …","Calculates a normalized score of the Damerau–Levenshtein …","Calculates a normalized score of the Levenshtein algorithm …","Like Levenshtein but allows for adjacent transpositions. …","Calculates a Sørensen-Dice similarity distance using …","","","",""],"i":[3,14,0,14,0,3,3,0,3,3,3,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,3,3,3],"f":[0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],2],[[3,3],4],[[3,5],[[8,[6,7]]]],[[3,5],9],[-1,-1,[]],[[[10,[-1]],[10,[-1]]],2,[11,12,13]],[[-1,-2],14,15,15],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],2,[],[]],[[1,1],14],[-1,-2,[],[]],[[1,1],16],[[1,1],16],[[1,1],2],[[1,1],16],[[1,1],16],[[1,1],2],[[1,1],16],[-1,17,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,18,[]]],"c":[],"p":[[15,"str"],[15,"usize"],[4,"StrSimError",0],[15,"bool"],[3,"Formatter",30],[15,"tuple"],[3,"Error",30],[4,"Result",31],[6,"Result",30],[15,"slice"],[8,"Eq",32],[8,"Hash",33],[8,"Clone",34],[6,"HammingResult",0],[8,"IntoIterator",35],[15,"f64"],[3,"String",36],[3,"TypeId",37]],"b":[[9,"impl-Display-for-StrSimError"],[10,"impl-Debug-for-StrSimError"]]},\
"time":{"doc":"Feature flags","t":"NNSDNDNCNNSNNNSSSSSSSSSSNNNESNNDNDGSNNNNDNSSDSNESLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLDNDNDNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIKKKKKKKKKKKKKKKKFFFF","n":["April","August","DAY","Date","December","Duration","Err","Error","February","Friday","HOUR","January","July","June","MAX","MAX","MAX","MICROSECOND","MIDNIGHT","MILLISECOND","MIN","MIN","MIN","MINUTE","March","May","Monday","Month","NANOSECOND","November","October","OffsetDateTime","Ok","PrimitiveDateTime","Result","SECOND","Saturday","September","Sunday","Thursday","Time","Tuesday","UNIX_EPOCH","UTC","UtcOffset","WEEK","Wednesday","Weekday","ZERO","abs","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","as_hms","as_hms","as_hms","as_hms_micro","as_hms_micro","as_hms_milli","as_hms_milli","as_hms_nano","as_hms_nano","as_seconds_f32","as_seconds_f64","assume_offset","assume_utc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_add","checked_add","checked_add","checked_div","checked_mul","checked_seconds_f32","checked_seconds_f64","checked_sub","checked_sub","checked_sub","checked_sub","checked_to_offset","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","date","date","day","day","day","days","default","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","ext","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_calendar_date","from_hms","from_hms","from_hms_micro","from_hms_milli","from_hms_nano","from_iso_week_date","from_julian_day","from_ordinal_date","from_str","from_str","from_unix_timestamp","from_unix_timestamp_nanos","from_whole_seconds","hash","hash","hash","hash","hash","hash","hash","hash","hour","hour","hour","hours","into","into","into","into","into","into","into","into","is_negative","is_negative","is_positive","is_positive","is_utc","is_zero","iso_week","iso_week","iso_week","microsecond","microsecond","microsecond","microseconds","midnight","millisecond","millisecond","millisecond","milliseconds","minute","minute","minute","minutes","minutes_past_hour","monday_based_week","monday_based_week","monday_based_week","month","month","month","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","nanosecond","nanosecond","nanosecond","nanoseconds","neg","neg","new","new","next","next","next_day","nth_next","number_days_from_monday","number_days_from_sunday","number_from_monday","number_from_sunday","offset","ordinal","ordinal","ordinal","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","previous","previous","previous_day","replace_date","replace_date","replace_date_time","replace_day","replace_day","replace_day","replace_hour","replace_hour","replace_hour","replace_microsecond","replace_microsecond","replace_microsecond","replace_millisecond","replace_millisecond","replace_millisecond","replace_minute","replace_minute","replace_minute","replace_month","replace_month","replace_month","replace_nanosecond","replace_nanosecond","replace_nanosecond","replace_offset","replace_second","replace_second","replace_second","replace_time","replace_time","replace_year","replace_year","replace_year","saturating_add","saturating_add","saturating_add","saturating_add","saturating_mul","saturating_seconds_f32","saturating_seconds_f64","saturating_sub","saturating_sub","saturating_sub","saturating_sub","second","second","second","seconds","seconds_f32","seconds_f64","seconds_past_minute","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","subsec_microseconds","subsec_milliseconds","subsec_nanoseconds","sum","sum","sunday_based_week","sunday_based_week","sunday_based_week","time","time","to_calendar_date","to_calendar_date","to_calendar_date","to_hms","to_hms_micro","to_hms_milli","to_hms_nano","to_iso_week_date","to_iso_week_date","to_iso_week_date","to_julian_day","to_julian_day","to_julian_day","to_offset","to_ordinal_date","to_ordinal_date","to_ordinal_date","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unix_timestamp","unix_timestamp_nanos","unsigned_abs","util","weekday","weekday","weekday","weeks","whole_days","whole_hours","whole_hours","whole_microseconds","whole_milliseconds","whole_minutes","whole_minutes","whole_nanoseconds","whole_seconds","whole_seconds","whole_weeks","with_hms","with_hms_micro","with_hms_milli","with_hms_nano","with_time","year","year","year","ComponentRange","ComponentRange","ConversionRange","ConversionRange","DifferentVariant","DifferentVariant","Error","InvalidVariant","InvalidVariant","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","hash","into","into","into","into","into","is_conditional","name","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","NumericalDuration","NumericalStdDuration","days","hours","microseconds","milliseconds","minutes","nanoseconds","seconds","std_days","std_hours","std_microseconds","std_milliseconds","std_minutes","std_nanoseconds","std_seconds","std_weeks","weeks","days_in_year","days_in_year_month","is_leap_year","weeks_in_year"],"q":[[0,"time"],[450,"time::error"],[523,"time::ext"],[541,"time::util"],[545,"core::time"],[546,"core::option"],[547,"core::cmp"],[548,"core::fmt"],[549,"core::fmt"],[550,"core::fmt"],[551,"core::iter::traits::iterator"],[552,"core::any"]],"d":["","","Equivalent to <code>1.days()</code>.","Date in the proleptic Gregorian calendar.","","A span of time with nanosecond precision.","Contains the error value","","","","Equivalent to <code>1.hours()</code>.","","","","The maximum valid <code>Date</code>.","The maximum possible duration. Adding any positive …","The largest value that can be represented by …","Equivalent to <code>1.microseconds()</code>.","Create a <code>Time</code> that is exactly midnight.","Equivalent to <code>1.milliseconds()</code>.","The minimum valid <code>Date</code>.","The minimum possible duration. Adding any negative …","The smallest value that can be represented by …","Equivalent to <code>1.minutes()</code>.","","","","Months of the year.","Equivalent to <code>1.nanoseconds()</code>.","","","A <code>PrimitiveDateTime</code> with a <code>UtcOffset</code>.","Contains the success value","Combined date and time.","An alias for [<code>std::result::Result</code>] with a generic error …","Equivalent to <code>1.seconds()</code>.","","","","","The clock time within a given date. Nanosecond precision.","","Midnight, 1 January, 1970 (UTC).","A <code>UtcOffset</code> that is UTC.","An offset from UTC.","Equivalent to <code>1.weeks()</code>.","","Days of the week.","Equivalent to <code>0.seconds()</code>.","Get the absolute value of the duration.","","","","","","","","","Add the sub-day time of the [<code>std::time::Duration</code>] to the …","Add the sub-day time of the <code>Duration</code> to the <code>Time</code>. Wraps on …","","","","","","","","","","","Get the clock hour, minute, and second.","Get the clock hour, minute, and second.","Obtain the UTC offset as its hours, minutes, and seconds. …","Get the clock hour, minute, second, and microsecond.","Get the clock hour, minute, second, and microsecond.","Get the clock hour, minute, second, and millisecond.","Get the clock hour, minute, second, and millisecond.","Get the clock hour, minute, second, and nanosecond.","Get the clock hour, minute, second, and nanosecond.","Get the number of fractional seconds in the duration.","Get the number of fractional seconds in the duration.","Assuming that the existing <code>PrimitiveDateTime</code> represents a …","Assuming that the existing <code>PrimitiveDateTime</code> represents a …","","","","","","","","","","","","","","","","","Computes <code>self + duration</code>, returning <code>None</code> if an overflow …","Computes <code>self + rhs</code>, returning <code>None</code> if an overflow …","Computes <code>self + duration</code>, returning <code>None</code> if an overflow …","Computes <code>self + duration</code>, returning <code>None</code> if an overflow …","Computes <code>self / rhs</code>, returning <code>None</code> if <code>rhs == 0</code> or if the …","Computes <code>self * rhs</code>, returning <code>None</code> if an overflow …","Creates a new <code>Duration</code> from the specified number of seconds","Creates a new <code>Duration</code> from the specified number of seconds","Computes <code>self - duration</code>, returning <code>None</code> if an overflow …","Computes <code>self - rhs</code>, returning <code>None</code> if an overflow …","Computes <code>self - duration</code>, returning <code>None</code> if an overflow …","Computes <code>self - duration</code>, returning <code>None</code> if an overflow …","Convert the <code>OffsetDateTime</code> from the current <code>UtcOffset</code> to …","","","","","","","","","","","","","","","Get the <code>Date</code> in the stored offset.","Get the <code>Date</code> component of the <code>PrimitiveDateTime</code>.","Get the day of the month.","Get the day of the date in the stored offset.","Get the day of the date.","Create a new <code>Duration</code> with the given number of days. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Various error types returned by methods in the time crate.","Extension traits.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Attempt to create a <code>Date</code> from the year, month, and day.","Attempt to create a <code>Time</code> from the hour, minute, and second.","Create a <code>UtcOffset</code> representing an offset by the number of …","Attempt to create a <code>Time</code> from the hour, minute, second, …","Attempt to create a <code>Time</code> from the hour, minute, second, …","Attempt to create a <code>Time</code> from the hour, minute, second, …","Attempt to create a <code>Date</code> from the ISO year, week, and …","Create a <code>Date</code> from the Julian day.","Attempt to create a <code>Date</code> from the year and ordinal day …","","","Create an <code>OffsetDateTime</code> from the provided Unix timestamp. …","Construct an <code>OffsetDateTime</code> from the provided Unix …","Create a <code>UtcOffset</code> representing an offset by the number of …","","","","","","","","","Get the clock hour in the stored offset.","Get the clock hour.","Get the clock hour.","Create a new <code>Duration</code> with the given number of hours. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if a duration is negative.","Check if the offset is negative, or west of UTC.","Check if a duration is positive.","Check if the offset is positive, or east of UTC.","Check if the offset is exactly UTC.","Check if a duration is exactly zero.","Get the ISO week number.","Get the ISO week number of the date in the stored offset.","Get the ISO week number.","Get the microseconds within the second in the stored …","Get the microseconds within the second.","Get the microseconds within the second.","Create a new <code>Duration</code> with the given number of …","Create a <code>PrimitiveDateTime</code> using the existing date. The …","Get the milliseconds within the second in the stored …","Get the milliseconds within the second.","Get the milliseconds within the second.","Create a new <code>Duration</code> with the given number of …","Get the minute within the hour in the stored offset.","Get the minute within the hour.","Get the minute within the hour.","Create a new <code>Duration</code> with the given number of minutes. …","Obtain the number of minutes past the hour the offset is …","Get the week number where week 1 begins on the first …","Get the week number where week 1 begins on the first …","Get the week number where week 1 begins on the first …","Get the month.","Get the month of the date in the stored offset.","Get the month of the date.","","","","","","","","","","","","","","","","","Get the nanoseconds within the second in the stored offset.","Get the nanoseconds within the second.","Get the nanoseconds within the second.","Create a new <code>Duration</code> with the given number of nanoseconds.","","","Create a new <code>Duration</code> with the provided seconds and …","Create a new <code>PrimitiveDateTime</code> from the provided <code>Date</code> and …","Get the next month.","Get the next weekday.","Get the next calendar date.","Get n-th next day.","Get the zero-indexed number of days from Monday.","Get the zero-indexed number of days from Sunday.","Get the one-indexed number of days from Monday.","Get the one-indexed number of days from Sunday.","Get the <code>UtcOffset</code>.","Get the day of the year.","Get the day of the year of the date in the stored offset.","Get the day of the year.","","","","","","","","Get the previous month.","Get the previous weekday.","Get the previous calendar date.","Replace the date, which is assumed to be in the stored …","Replace the date, preserving the time.","Replace the date and time, which are assumed to be in the …","Replace the day of the month.","Replace the day of the month.","Replace the day of the month.","Replace the clock hour.","Replace the clock hour.","Replace the clock hour.","Replace the microseconds within the second.","Replace the microseconds within the second.","Replace the microseconds within the second.","Replace the milliseconds within the second.","Replace the milliseconds within the second.","Replace the milliseconds within the second.","Replace the minutes within the hour.","Replace the minutes within the hour.","Replace the minutes within the hour.","Replace the month of the year.","Replace the month of the year.","Replace the month of the year.","Replace the nanoseconds within the second.","Replace the nanoseconds within the second.","Replace the nanoseconds within the second.","Replace the offset. The date and time components remain …","Replace the seconds within the minute.","Replace the seconds within the minute.","Replace the seconds within the minute.","Replace the time, which is assumed to be in the stored …","Replace the time, preserving the date.","Replace the year. The month and day will be unchanged.","Replace the year. The month and day will be unchanged.","Replace the year. The month and day will be unchanged.","Computes <code>self + duration</code>, saturating value on overflow.","Computes <code>self + rhs</code>, saturating if an overflow occurred.","Computes <code>self + duration</code>, saturating value on overflow.","Computes <code>self + duration</code>, saturating value on overflow.","Computes <code>self * rhs</code>, saturating if an overflow occurred.","Creates a new <code>Duration</code> from the specified number of seconds","Creates a new <code>Duration</code> from the specified number of seconds","Computes <code>self - duration</code>, saturating value on overflow.","Computes <code>self - rhs</code>, saturating if an overflow occurred.","Computes <code>self - duration</code>, saturating value on overflow.","Computes <code>self - duration</code>, saturating value on overflow.","Get the second within the minute in the stored offset.","Get the second within the minute.","Get the second within the minute.","Create a new <code>Duration</code> with the given number of seconds.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Obtain the number of seconds past the minute the offset is …","","","","","","","","","","","","Subtract two <code>Time</code>s, returning the <code>Duration</code> between. This …","Subtract the sub-day time of the <code>Duration</code> from the <code>Time</code>. …","Subtract the sub-day time of the [<code>std::time::Duration</code>] …","","","","","","","","","","","Get the number of microseconds past the number of whole …","Get the number of milliseconds past the number of whole …","Get the number of nanoseconds past the number of whole …","","","Get the week number where week 1 begins on the first …","Get the week number where week 1 begins on the first …","Get the week number where week 1 begins on the first …","Get the <code>Time</code> in the stored offset.","Get the <code>Time</code> component of the <code>PrimitiveDateTime</code>.","Get the year, month, and day.","Get the year, month, and day.","Get the year, month, and day.","Get the clock hour, minute, and second.","Get the clock hour, minute, second, and microsecond.","Get the clock hour, minute, second, and millisecond.","Get the clock hour, minute, second, and nanosecond.","Get the ISO 8601 year, week number, and weekday.","Get the ISO 8601 year, week number, and weekday.","Get the ISO 8601 year, week number, and weekday.","Get the Julian day for the date.","Get the Julian day for the date. The time is not taken …","Get the Julian day for the date. The time is not taken …","Convert the <code>OffsetDateTime</code> from the current <code>UtcOffset</code> to …","Get the year and ordinal day number.","Get the year and ordinal day number.","Get the year and ordinal day number.","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the Unix timestamp.","Get the Unix timestamp in nanoseconds.","Convert the existing <code>Duration</code> to a <code>std::time::Duration</code> and …","Utility functions.","Get the weekday.","Get the weekday of the date in the stored offset.","Get the weekday.","Create a new <code>Duration</code> with the given number of weeks. …","Get the number of whole days in the duration.","Get the number of whole hours in the duration.","Obtain the number of whole hours the offset is from UTC. A …","Get the number of whole microseconds in the duration.","Get the number of whole milliseconds in the duration.","Get the number of whole minutes in the duration.","Obtain the number of whole minutes the offset is from UTC. …","Get the number of nanoseconds in the duration.","Get the number of whole seconds in the duration.","Obtain the number of whole seconds the offset is from UTC. …","Get the number of whole weeks in the duration.","Attempt to create a <code>PrimitiveDateTime</code> using the existing …","Attempt to create a <code>PrimitiveDateTime</code> using the existing …","Attempt to create a <code>PrimitiveDateTime</code> using the existing …","Attempt to create a <code>PrimitiveDateTime</code> using the existing …","Create a <code>PrimitiveDateTime</code> using the existing date and the …","Get the year of the date.","Get the year of the date in the stored offset.","Get the year of the date.","An error type indicating that a component provided to a …","","An error type indicating that a conversion failed because …","","An error type indicating that a <code>TryFrom</code> call failed …","","A unified error type for anything returned by a method in …","An error type indicating that a <code>FromStr</code> call failed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the value’s permitted range is conditional, i.e. …","Obtain the name of the component whose value was out of …","","","","","","","","","","","","","","","","","","","","Create <code>Duration</code>s from numeric literals.","Create [<code>std::time::Duration</code>]s from numeric literals.","Create a <code>Duration</code> from the number of days.","Create a <code>Duration</code> from the number of hours.","Create a <code>Duration</code> from the number of microseconds.","Create a <code>Duration</code> from the number of milliseconds.","Create a <code>Duration</code> from the number of minutes.","Create a <code>Duration</code> from the number of nanoseconds.","Create a <code>Duration</code> from the number of seconds.","Create a [<code>std::time::Duration</code>] from the number of days.","Create a [<code>std::time::Duration</code>] from the number of hours.","Create a [<code>std::time::Duration</code>] from the number of …","Create a [<code>std::time::Duration</code>] from the number of …","Create a [<code>std::time::Duration</code>] from the number of minutes.","Create a [<code>std::time::Duration</code>] from the number of …","Create a [<code>std::time::Duration</code>] from the number of seconds.","Create a [<code>std::time::Duration</code>] from the number of weeks.","Create a <code>Duration</code> from the number of weeks.","Get the number of calendar days in a given year.","Get the number of days in the month of a given year.","Returns if the provided year is a leap year in the …","Get the number of weeks in the ISO year."],"i":[17,17,1,0,17,0,37,0,17,18,1,17,17,17,2,1,5,1,6,1,2,1,5,1,17,17,18,0,1,17,17,0,37,0,0,1,18,17,18,18,0,18,4,9,0,1,18,0,1,1,2,2,1,1,4,4,5,5,6,6,2,2,1,1,4,4,5,5,6,6,5,6,9,5,6,5,6,5,6,1,1,5,5,2,1,17,4,5,6,9,18,2,1,17,4,5,6,9,18,2,1,4,5,1,1,1,1,2,1,4,5,4,2,1,17,4,5,6,9,18,2,1,4,5,6,9,4,5,2,4,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,17,4,5,6,9,18,0,0,2,2,1,1,17,17,4,4,5,5,6,6,9,9,18,18,2,1,17,4,5,6,9,18,2,6,9,6,6,6,2,2,2,17,18,4,4,9,2,1,17,4,5,6,9,18,4,5,6,1,2,1,17,4,5,6,9,18,1,9,1,9,9,1,2,4,5,4,5,6,1,2,4,5,6,1,4,5,6,1,9,2,4,5,2,4,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,5,6,1,1,9,1,5,17,18,2,18,18,18,18,18,4,2,4,5,2,1,1,4,5,6,9,17,18,2,4,5,4,2,4,5,4,5,6,4,5,6,4,5,6,4,5,6,2,4,5,4,5,6,4,4,5,6,4,5,2,4,5,2,1,4,5,1,1,1,2,1,4,5,4,5,6,1,1,1,9,2,2,2,1,1,4,4,4,5,5,5,6,6,6,2,2,1,1,4,4,5,5,6,6,1,1,1,1,1,2,4,5,4,5,2,4,5,4,4,4,4,2,4,5,2,4,5,4,2,4,5,2,1,1,17,17,4,5,6,9,18,2,1,17,4,5,6,9,18,2,1,17,4,5,6,9,18,4,4,1,0,2,4,5,1,1,1,9,1,1,1,9,1,1,9,1,2,2,2,2,2,2,4,5,0,36,0,36,0,36,0,0,36,27,32,34,35,36,27,32,34,35,36,27,32,34,35,27,32,34,35,27,27,32,32,34,34,35,35,36,36,27,32,34,35,36,36,36,36,36,27,27,32,34,35,36,27,27,27,27,32,32,34,34,35,35,36,27,32,34,35,36,27,32,34,35,36,0,0,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,38,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[[2,3]],[[2,1]],[[1,1]],[[1,3]],[[4,3]],[[4,1]],[[5,3]],[[5,1]],[[6,3]],[[6,1]],[[2,1],7],[[2,3],7],[[1,1],7],[[1,3],7],[[4,3],7],[[4,1],7],[[5,1],7],[[5,3],7],[[6,1],7],[[6,3],7],[5,[[7,[8,8,8]]]],[6,[[7,[8,8,8]]]],[9,[[7,[10,10,10]]]],[5,[[7,[8,8,8,11]]]],[6,[[7,[8,8,8,11]]]],[5,[[7,[8,8,8,12]]]],[6,[[7,[8,8,8,12]]]],[5,[[7,[8,8,8,11]]]],[6,[[7,[8,8,8,11]]]],[1,13],[1,14],[[5,9],4],[5,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,1],[[15,[2]]]],[[1,1],[[15,[1]]]],[[4,1],[[15,[4]]]],[[5,1],[[15,[5]]]],[[1,16],[[15,[1]]]],[[1,16],[[15,[1]]]],[13,[[15,[1]]]],[14,[[15,[1]]]],[[2,1],[[15,[2]]]],[[1,1],[[15,[1]]]],[[4,1],[[15,[4]]]],[[5,1],[[15,[5]]]],[[4,9],[[15,[4]]]],[2,2],[1,1],[17,17],[4,4],[5,5],[6,6],[9,9],[18,18],[[2,2],19],[[1,1],19],[[4,4],19],[[5,5],19],[[6,6],19],[[9,9],19],[4,2],[5,2],[2,8],[4,8],[5,8],[20,1],[[],1],[[1,1]],[[1,13]],[[1,10]],[[1,12]],[[1,14]],[[1,21]],[[1,8]],[[1,16]],[[1,11]],[[1,3]],[[1,16],7],[[1,11],7],[[1,10],7],[[1,8],7],[[1,12],7],[[1,21],7],[[1,14],7],[[1,13],7],[[2,2],22],[[1,3],22],[[1,1],22],[[17,17],22],[[4,4],22],[[5,5],22],[[6,6],22],[[9,9],22],[[18,18],22],0,0,[[2,23],[[25,[7,24]]]],[[2,23],26],[[1,23],26],[[1,23],26],[[17,23],26],[[17,23],26],[[4,23],26],[[4,23],26],[[5,23],26],[[5,23],26],[[6,23],26],[[6,23],26],[[9,23],26],[[9,23],26],[[18,23],26],[[18,23],26],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[16,17,8],[[25,[2,27]]]],[[8,8,8],[[25,[6,27]]]],[[10,10,10],[[25,[9,27]]]],[[8,8,8,11],[[25,[6,27]]]],[[8,8,8,12],[[25,[6,27]]]],[[8,8,8,11],[[25,[6,27]]]],[[16,8,18],[[25,[2,27]]]],[16,[[25,[2,27]]]],[[16,12],[[25,[2,27]]]],[28,[[25,[17]]]],[28,[[25,[18]]]],[20,[[25,[4,27]]]],[29,[[25,[4,27]]]],[16,[[25,[9,27]]]],[[2,-1],7,30],[[1,-1],7,30],[[17,-1],7,30],[[4,-1],7,30],[[5,-1],7,30],[[6,-1],7,30],[[9,-1],7,30],[[18,-1],7,30],[4,8],[5,8],[6,8],[20,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,22],[9,22],[1,22],[9,22],[9,22],[1,22],[2,8],[4,8],[5,8],[4,11],[5,11],[6,11],[20,1],[2,5],[4,12],[5,12],[6,12],[20,1],[4,8],[5,8],[6,8],[20,1],[9,10],[2,8],[4,8],[5,8],[2,17],[4,17],[5,17],[[1,14]],[[1,11]],[[1,10]],[[1,12]],[[1,16]],[[1,21]],[[1,8]],[[1,13]],[[1,8],7],[[1,14],7],[[1,11],7],[[1,13],7],[[1,16],7],[[1,10],7],[[1,12],7],[[1,21],7],[4,11],[5,11],[6,11],[20,1],[1],[9],[[20,16],1],[[2,6],5],[17,17],[18,18],[2,[[15,[2]]]],[[18,8],18],[18,8],[18,8],[18,8],[18,8],[4,9],[2,12],[4,12],[5,12],[[2,2],[[15,[19]]]],[[1,1],[[15,[19]]]],[[1,3],[[15,[19]]]],[[4,4],[[15,[19]]]],[[5,5],[[15,[19]]]],[[6,6],[[15,[19]]]],[[9,9],[[15,[19]]]],[17,17],[18,18],[2,[[15,[2]]]],[[4,2],4],[[5,2],5],[[4,5],4],[[2,8],[[25,[2,27]]]],[[4,8],[[25,[4,27]]]],[[5,8],[[25,[5,27]]]],[[4,8],[[25,[4,27]]]],[[5,8],[[25,[5,27]]]],[[6,8],[[25,[6,27]]]],[[4,11],[[25,[4,27]]]],[[5,11],[[25,[5,27]]]],[[6,11],[[25,[6,27]]]],[[4,12],[[25,[4,27]]]],[[5,12],[[25,[5,27]]]],[[6,12],[[25,[6,27]]]],[[4,8],[[25,[4,27]]]],[[5,8],[[25,[5,27]]]],[[6,8],[[25,[6,27]]]],[[2,17],[[25,[2,27]]]],[[4,17],[[25,[4,27]]]],[[5,17],[[25,[5,27]]]],[[4,11],[[25,[4,27]]]],[[5,11],[[25,[5,27]]]],[[6,11],[[25,[6,27]]]],[[4,9],4],[[4,8],[[25,[4,27]]]],[[5,8],[[25,[5,27]]]],[[6,8],[[25,[6,27]]]],[[4,6],4],[[5,6],5],[[2,16],[[25,[2,27]]]],[[4,16],[[25,[4,27]]]],[[5,16],[[25,[5,27]]]],[[2,1],2],[[1,1],1],[[4,1],4],[[5,1],5],[[1,16],1],[13,1],[14,1],[[2,1],2],[[1,1],1],[[4,1],4],[[5,1],5],[4,8],[5,8],[6,8],[20,1],[13,1],[14,1],[9,10],[[2,3]],[[2,1]],[[2,2]],[[1,1]],[[1,3]],[[4,3]],[[4,1]],[[4,4]],[[5,3]],[[5,5]],[[5,1]],[[6,6]],[[6,1]],[[6,3]],[[2,1],7],[[2,3],7],[[1,3],7],[[1,1],7],[[4,1],7],[[4,3],7],[[5,1],7],[[5,3],7],[[6,3],7],[[6,1],7],[1,16],[1,21],[1,16],[-1,1,31],[-1,1,31],[2,8],[4,8],[5,8],[4,6],[5,6],[2,[[7,[16,17,8]]]],[4,[[7,[16,17,8]]]],[5,[[7,[16,17,8]]]],[4,[[7,[8,8,8]]]],[4,[[7,[8,8,8,11]]]],[4,[[7,[8,8,8,12]]]],[4,[[7,[8,8,8,11]]]],[2,[[7,[16,8,18]]]],[4,[[7,[16,8,18]]]],[5,[[7,[16,8,18]]]],[2,16],[4,16],[5,16],[[4,9],4],[2,[[7,[16,12]]]],[4,[[7,[16,12]]]],[5,[[7,[16,12]]]],[-1,[[25,[-2]]],[],[]],[3,[[25,[1,32]]]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[8,[[25,[17]]]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[4,20],[4,29],[1,3],0,[2,18],[4,18],[5,18],[20,1],[1,20],[1,20],[9,10],[1,29],[1,29],[1,20],[9,21],[1,29],[1,20],[9,16],[1,20],[[2,8,8,8],[[25,[5,27]]]],[[2,8,8,8,11],[[25,[5,27]]]],[[2,8,8,8,12],[[25,[5,27]]]],[[2,8,8,8,11],[[25,[5,27]]]],[[2,6],5],[2,16],[4,16],[5,16],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,27],[32,32],[34,34],[35,35],[[27,27],22],[[32,32],22],[[34,34],22],[[35,35],22],[[27,23],26],[[27,23],26],[[32,23],26],[[32,23],26],[[34,23],26],[[34,23],26],[[35,23],26],[[35,23],26],[[36,23],26],[[36,23],26],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[34,36],[-1,-1,[]],[27,36],[32,36],[35,36],[[27,-1],7,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,22],[27,28],[36,[[25,[27]]]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[36,[[25,[32]]]],[-1,[[25,[-2]]],[],[]],[36,[[25,[34]]]],[-1,[[25,[-2]]],[],[]],[36,[[25,[35]]]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,1,[]],[16,12],[[16,17],8],[16,22],[16,8]],"c":[],"p":[[3,"Duration",0],[3,"Date",0],[3,"Duration",545],[3,"OffsetDateTime",0],[3,"PrimitiveDateTime",0],[3,"Time",0],[15,"tuple"],[15,"u8"],[3,"UtcOffset",0],[15,"i8"],[15,"u32"],[15,"u16"],[15,"f32"],[15,"f64"],[4,"Option",546],[15,"i32"],[4,"Month",0],[4,"Weekday",0],[4,"Ordering",547],[15,"i64"],[15,"i16"],[15,"bool"],[3,"Formatter",548],[3,"Error",548],[4,"Result",549],[6,"Result",548],[3,"ComponentRange",450],[15,"str"],[15,"i128"],[8,"Hasher",550],[8,"Iterator",551],[3,"ConversionRange",450],[3,"TypeId",552],[3,"DifferentVariant",450],[3,"InvalidVariant",450],[4,"Error",450],[6,"Result",0],[8,"NumericalDuration",523],[8,"NumericalStdDuration",523]],"b":[[50,"impl-Add%3CDuration%3E-for-Date"],[51,"impl-Add%3CDuration%3E-for-Date"],[52,"impl-Add-for-Duration"],[53,"impl-Add%3CDuration%3E-for-Duration"],[54,"impl-Add%3CDuration%3E-for-OffsetDateTime"],[55,"impl-Add%3CDuration%3E-for-OffsetDateTime"],[56,"impl-Add%3CDuration%3E-for-PrimitiveDateTime"],[57,"impl-Add%3CDuration%3E-for-PrimitiveDateTime"],[58,"impl-Add%3CDuration%3E-for-Time"],[59,"impl-Add%3CDuration%3E-for-Time"],[60,"impl-AddAssign%3CDuration%3E-for-Date"],[61,"impl-AddAssign%3CDuration%3E-for-Date"],[62,"impl-AddAssign-for-Duration"],[63,"impl-AddAssign%3CDuration%3E-for-Duration"],[64,"impl-AddAssign%3CDuration%3E-for-OffsetDateTime"],[65,"impl-AddAssign%3CDuration%3E-for-OffsetDateTime"],[66,"impl-AddAssign%3CDuration%3E-for-PrimitiveDateTime"],[67,"impl-AddAssign%3CDuration%3E-for-PrimitiveDateTime"],[68,"impl-AddAssign%3CDuration%3E-for-Time"],[69,"impl-AddAssign%3CDuration%3E-for-Time"],[133,"impl-Div-for-Duration"],[134,"impl-Div%3Cf32%3E-for-Duration"],[135,"impl-Div%3Ci8%3E-for-Duration"],[136,"impl-Div%3Cu16%3E-for-Duration"],[137,"impl-Div%3Cf64%3E-for-Duration"],[138,"impl-Div%3Ci16%3E-for-Duration"],[139,"impl-Div%3Cu8%3E-for-Duration"],[140,"impl-Div%3Ci32%3E-for-Duration"],[141,"impl-Div%3Cu32%3E-for-Duration"],[142,"impl-Div%3CDuration%3E-for-Duration"],[143,"impl-DivAssign%3Ci32%3E-for-Duration"],[144,"impl-DivAssign%3Cu32%3E-for-Duration"],[145,"impl-DivAssign%3Ci8%3E-for-Duration"],[146,"impl-DivAssign%3Cu8%3E-for-Duration"],[147,"impl-DivAssign%3Cu16%3E-for-Duration"],[148,"impl-DivAssign%3Ci16%3E-for-Duration"],[149,"impl-DivAssign%3Cf64%3E-for-Duration"],[150,"impl-DivAssign%3Cf32%3E-for-Duration"],[152,"impl-PartialEq%3CDuration%3E-for-Duration"],[153,"impl-PartialEq-for-Duration"],[162,"impl-Debug-for-Date"],[163,"impl-Display-for-Date"],[164,"impl-Debug-for-Duration"],[165,"impl-Display-for-Duration"],[166,"impl-Debug-for-Month"],[167,"impl-Display-for-Month"],[168,"impl-Debug-for-OffsetDateTime"],[169,"impl-Display-for-OffsetDateTime"],[170,"impl-Display-for-PrimitiveDateTime"],[171,"impl-Debug-for-PrimitiveDateTime"],[172,"impl-Display-for-Time"],[173,"impl-Debug-for-Time"],[174,"impl-Debug-for-UtcOffset"],[175,"impl-Display-for-UtcOffset"],[176,"impl-Display-for-Weekday"],[177,"impl-Debug-for-Weekday"],[249,"impl-Mul%3Cf64%3E-for-Duration"],[250,"impl-Mul%3Cu32%3E-for-Duration"],[251,"impl-Mul%3Ci8%3E-for-Duration"],[252,"impl-Mul%3Cu16%3E-for-Duration"],[253,"impl-Mul%3Ci32%3E-for-Duration"],[254,"impl-Mul%3Ci16%3E-for-Duration"],[255,"impl-Mul%3Cu8%3E-for-Duration"],[256,"impl-Mul%3Cf32%3E-for-Duration"],[257,"impl-MulAssign%3Cu8%3E-for-Duration"],[258,"impl-MulAssign%3Cf64%3E-for-Duration"],[259,"impl-MulAssign%3Cu32%3E-for-Duration"],[260,"impl-MulAssign%3Cf32%3E-for-Duration"],[261,"impl-MulAssign%3Ci32%3E-for-Duration"],[262,"impl-MulAssign%3Ci8%3E-for-Duration"],[263,"impl-MulAssign%3Cu16%3E-for-Duration"],[264,"impl-MulAssign%3Ci16%3E-for-Duration"],[286,"impl-PartialOrd-for-Duration"],[287,"impl-PartialOrd%3CDuration%3E-for-Duration"],[346,"impl-Sub%3CDuration%3E-for-Date"],[347,"impl-Sub%3CDuration%3E-for-Date"],[348,"impl-Sub-for-Date"],[349,"impl-Sub-for-Duration"],[350,"impl-Sub%3CDuration%3E-for-Duration"],[351,"impl-Sub%3CDuration%3E-for-OffsetDateTime"],[352,"impl-Sub%3CDuration%3E-for-OffsetDateTime"],[353,"impl-Sub-for-OffsetDateTime"],[354,"impl-Sub%3CDuration%3E-for-PrimitiveDateTime"],[355,"impl-Sub-for-PrimitiveDateTime"],[356,"impl-Sub%3CDuration%3E-for-PrimitiveDateTime"],[357,"impl-Sub-for-Time"],[358,"impl-Sub%3CDuration%3E-for-Time"],[359,"impl-Sub%3CDuration%3E-for-Time"],[360,"impl-SubAssign%3CDuration%3E-for-Date"],[361,"impl-SubAssign%3CDuration%3E-for-Date"],[362,"impl-SubAssign%3CDuration%3E-for-Duration"],[363,"impl-SubAssign-for-Duration"],[364,"impl-SubAssign%3CDuration%3E-for-OffsetDateTime"],[365,"impl-SubAssign%3CDuration%3E-for-OffsetDateTime"],[366,"impl-SubAssign%3CDuration%3E-for-PrimitiveDateTime"],[367,"impl-SubAssign%3CDuration%3E-for-PrimitiveDateTime"],[368,"impl-SubAssign%3CDuration%3E-for-Time"],[369,"impl-SubAssign%3CDuration%3E-for-Time"],[373,"impl-Sum%3C%26Duration%3E-for-Duration"],[374,"impl-Sum-for-Duration"],[477,"impl-Debug-for-ComponentRange"],[478,"impl-Display-for-ComponentRange"],[479,"impl-Display-for-ConversionRange"],[480,"impl-Debug-for-ConversionRange"],[481,"impl-Display-for-DifferentVariant"],[482,"impl-Debug-for-DifferentVariant"],[483,"impl-Debug-for-InvalidVariant"],[484,"impl-Display-for-InvalidVariant"],[485,"impl-Display-for-Error"],[486,"impl-Debug-for-Error"],[491,"impl-From%3CDifferentVariant%3E-for-Error"],[493,"impl-From%3CComponentRange%3E-for-Error"],[494,"impl-From%3CConversionRange%3E-for-Error"],[495,"impl-From%3CInvalidVariant%3E-for-Error"]],"a":{"from_julian_date":[193],"iso_weekday_number":[279]}},\
"time_core":{"doc":"Core items for <code>time</code>.","t":"AADDDDDDQIDSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFF","n":["convert","util","Day","Hour","Microsecond","Millisecond","Minute","Nanosecond","Output","Per","Second","VALUE","Week","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","per","per","per","per","per","per","per","per","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","days_in_year","is_leap_year","weeks_in_year"],"q":[[0,"time_core"],[2,"time_core::convert"],[93,"time_core::util"],[96,"core::fmt"],[97,"core::fmt"],[98,"core::result"],[99,"core::any"]],"d":["","Utility functions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the number of calendar days in a given year.","Returns if the provided year is a leap year in the …","Get the number of weeks in the ISO year."],"i":[0,0,0,0,0,0,0,0,18,0,0,18,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[[1,9],10],[[2,9],10],[[3,9],10],[[4,9],10],[[5,9],10],[[6,9],10],[[7,9],10],[[8,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,-1],[],11],[[2,-1],[],11],[[3,-1],[],11],[[4,-1],[],11],[[5,-1],[],11],[[6,-1],[],11],[[7,-1],[],11],[[8,-1],[],11],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[14,15],[14,16],[14,17]],"c":[],"p":[[3,"Nanosecond",2],[3,"Microsecond",2],[3,"Millisecond",2],[3,"Second",2],[3,"Minute",2],[3,"Hour",2],[3,"Day",2],[3,"Week",2],[3,"Formatter",96],[6,"Result",96],[8,"Copy",97],[4,"Result",98],[3,"TypeId",99],[15,"i32"],[15,"u16"],[15,"bool"],[15,"u8"],[8,"Per",2]],"b":[]},\
"uart_16550":{"doc":"Minimal support for serial communication through UART …","t":"DDLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["MmioSerialPort","SerialPort","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","init","init","into","into","new","new","receive","receive","send","send","send_raw","try_from","try_from","try_into","try_into","type_id","type_id","write_str","write_str"],"q":[[0,"uart_16550"],[29,"core::fmt"],[30,"core::fmt"],[31,"core::any"]],"d":["A memory-mapped UART.","A x86 I/O port-mapped UART.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Initializes the memory-mapped UART.","Initializes the serial port.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new UART interface on the given memory mapped …","Creates a new serial port interface on the given I/O base …","Receives a byte on the serial port.","Receives a byte on the serial port.","Sends a byte on the serial port.","Sends a byte on the serial port.","Sends a raw byte on the serial port, intended for binary …","","","","","","","",""],"i":[0,0,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,4,1,4,1,4,1,4,1,4],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2],3],[[4,2],3],[-1,-1,[]],[-1,-1,[]],[1,5],[4,5],[-1,-2,[],[]],[-1,-2,[],[]],[6,1],[7,4],[1,8],[4,8],[[1,8],5],[[4,8],5],[[4,8],5],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[[1,11],3],[[4,11],3]],"c":[],"p":[[3,"MmioSerialPort",0],[3,"Formatter",29],[6,"Result",29],[3,"SerialPort",0],[15,"tuple"],[15,"usize"],[15,"u16"],[15,"u8"],[4,"Result",30],[3,"TypeId",31],[15,"str"]],"b":[]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":"FF","n":["is_xid_continue","is_xid_start"],"q":[[0,"unicode_ident"]],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"c":[],"p":[[15,"char"],[15,"bool"]],"b":[]},\
"utf8parse":{"doc":"A table-driven UTF-8 Parser","t":"DILLLLKLLLLLKLLLL","n":["Parser","Receiver","advance","borrow","borrow_mut","clone","codepoint","default","eq","fmt","from","into","invalid_sequence","new","try_from","try_into","type_id"],"q":[[0,"utf8parse"],[17,"core::fmt"],[18,"core::fmt"],[19,"core::any"]],"d":["A parser for Utf8 Characters","Handles codepoint and invalid sequence events from the …","Advance the parser","","","","Called whenever a codepoint is parsed successfully","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Called when an invalid_sequence is detected","Create a new Parser","","",""],"i":[0,0,1,1,1,1,4,1,1,1,1,1,4,1,1,1,1],"f":[0,0,[[1,-1,2],3,4],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,5],3,[]],[[],1],[[1,1],6],[[1,7],8],[-1,-1,[]],[-1,-2,[],[]],[-1,3,[]],[[],1],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]]],"c":[],"p":[[3,"Parser",0],[15,"u8"],[15,"tuple"],[8,"Receiver",0],[15,"char"],[15,"bool"],[3,"Formatter",17],[6,"Result",17],[4,"Result",18],[3,"TypeId",19]],"b":[]},\
"volatile":{"doc":"Provides volatile wrapper types for raw pointers.","t":"DDALLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLIIDDDIQQIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["VolatilePtr","VolatileRef","access","as_mut_ptr","as_ptr","as_raw_ptr","borrow","borrow","borrow_mut","borrow_mut","clone","clone","fmt","fmt","from","from","from_mut_ref","from_ref","into","into","into_ptr","map","map_field","new","new","new_read_only","new_read_only","new_restricted","new_restricted","read","read_only","read_only","try_from","try_from","try_into","try_into","type_id","type_id","update","write","write_only","write_only","Access","Copyable","NoAccess","ReadOnly","ReadWrite","Readable","RestrictShared","RestrictShared","Writable","WriteOnly","_private","_private","_private","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","default","default","default","default","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"volatile"],[42,"volatile::access"],[95,"core::marker"],[96,"core::ptr::non_null"],[97,"core::fmt"],[98,"core::fmt"],[99,"core::result"],[100,"core::any"]],"d":["Wraps a pointer to make accesses to the referenced value …","Volatile pointer type that respects Rust’s aliasing …","Marker types for limiting access.","Borrows this <code>VolatileRef</code> as a mutable <code>VolatilePtr</code>.","Borrows this <code>VolatileRef</code> as a read-only <code>VolatilePtr</code>.","Extracts the wrapped raw pointer.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>VolatileRef</code> from the given mutable reference.","Creates a <code>VolatileRef</code> from the given shared reference.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>VolatileRef</code> into a <code>VolatilePtr</code> with full …","Constructs a new <code>VolatilePtr</code> by mapping the wrapped …","Provides safe field projection for volatile pointers …","Turns the given pointer into a <code>VolatilePtr</code>.","Turns the given pointer into a <code>VolatileRef</code>.","Creates a new read-only volatile pointer from the given …","Turns the given pointer into a read-only <code>VolatileRef</code>.","Creates a new volatile pointer with restricted access from …","Turns the given pointer into a <code>VolatileRef</code> instance with …","Performs a volatile read of the contained value.","Restricts access permissions to read-only.","Restricts access permissions to read-only.","","","","","","","Updates the contained value using the given closure and …","Performs a volatile write, setting the contained value to …","Restricts access permissions to write-only.","Restricts access permissions to write-only.","Private trait that is implemented for the types in this …","Implemented for access types that permit copying of …","Zero-sized marker type that grants no access.","Zero-sized marker type for allowing only read access.","Zero-sized marker type for allowing both read and write …","Helper trait that is implemented by <code>ReadWrite</code> and <code>ReadOnly</code>.","Reduced access level to safely share the corresponding …","Reduced access level to safely share the corresponding …","Helper trait that is implemented by <code>ReadWrite</code> and <code>WriteOnly</code>…","Zero-sized marker type for allowing only write access.","Ensures that this trait cannot be implemented outside of …","Ensures that this trait cannot be implemented outside of …","Ensures that this trait cannot be implemented outside of …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,1,1,2,2,1,2,1,2,1,2,1,2,1,1,1,2,1,1,2,0,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,2,2,1,0,0,0,0,0,0,4,14,0,0,14,18,6,13,11,19,20,13,11,19,20,13,11,19,20,13,11,19,20,13,11,19,20,13,11,19,20,13,11,19,20,13,11,19,20,13,11,19,20,13,11,19,20],"f":[0,0,0,[[[1,[-1,-2]]],[[2,[-1,-2]]],3,4],[[[1,[-1,-2]]],[[2,[-1]]],3,4],[[[2,[-1,-2]]],[[5,[-1]]],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[-1,-2]]],[[2,[-1,-2]]],3,[]],[[[1,[-1,-2]]],[[1,[-1,-2]]],3,[4,6]],[[[2,[-1,-2]],7],8,[9,10,3],[]],[[[1,[-1,-2]],7],8,[9,10,3],[]],[-1,-1,[]],[-1,-1,[]],[-1,[[1,[-1]]],3],[-1,[[1,[-1,11]]],3],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],[[2,[-1,-2]]],3,4],[[[2,[-1,-2]],-3],[[2,[-4,-2]]],3,4,12,3],0,[[[5,[-1]]],[[2,[-1,13]]],3],[[[5,[-1]]],[[1,[-1]]],3],[[[5,[-1]]],[[2,[-1,11]]],3],[[[5,[-1]]],[[1,[-1,11]]],3],[[-1,[5,[-2]]],[[2,[-2,-1]]],4,3],[[-1,[5,[-2]]],[[1,[-2,-1]]],4,3],[[[2,[-1,-2]]],-1,[9,3],14],[[[2,[-1,13]]],[[2,[-1,11]]],3],[[[1,[-1,13]]],[[1,[-1,11]]],3],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[[[2,[-1,-2]],-3],17,[9,3],[14,18],12],[[[2,[-1,-2]],-1],17,[9,3],18],[[[2,[-1,13]]],[[2,[-1,19]]],3],[[[1,[-1,13]]],[[1,[-1,19]]],3],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[13,13],[11,11],[19,19],[20,20],[[],13],[[],11],[[],19],[[],20],[[13,7],8],[[11,7],8],[[19,7],8],[[20,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]]],"c":[],"p":[[3,"VolatileRef",0],[3,"VolatilePtr",0],[8,"Sized",95],[8,"Access",42],[3,"NonNull",96],[8,"Copyable",42],[3,"Formatter",97],[6,"Result",97],[8,"Copy",95],[8,"Debug",97],[3,"ReadOnly",42],[8,"FnOnce",98],[3,"ReadWrite",42],[8,"Readable",42],[4,"Result",99],[3,"TypeId",100],[15,"tuple"],[8,"Writable",42],[3,"WriteOnly",42],[3,"NoAccess",42]],"b":[]},\
"x86":{"doc":"","t":"ENNNNAAAALLLAAAAALALLOOFOLAAAAFAOAAALLLANNIENNEEEENNDNNENNNNNNNNNNENNNLLLLLLLLLLLLLLLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLAKKKKLKLLLLLLLLLLLLLLLLKKLLLLLLLLLKALLLADLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLLLLLLLLLLLLLLLLLLLLLLAAAAADSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLSSRRRSSSSDRDSSRSSDSSGDDSGDDSSDSSSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLMMMMMMMMMMMMMMMMMLLMMLMMMLMMMMLLLAAAAAAAASSSSSRRRSSSSSSRDDRDRRRSSSSSRSSDSSSSSGDDGDDGDDRGDDSSGDDSSSSSDSSSSSSSSSSSSSSSSSSSSSSSSSDSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFSSSSSSSSSSSSSSSSSSSSSDLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLCLLLLLLLLDSLLLLLLOOLFFFLLLFLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDLLLLLLLMMLMMMMMLLLLLFFFFFFFFFSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDDSSSSSSSSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFNDENNNNNRNDDEDDENDDNDDENNNDNNNDDDEEDDDDDDNNNNEDNNNNNDDDDDNDDNDNNNNNDDNNDDDDDDNNNDDNNNDEDDDDNDNDNDEDNNNNNNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFSSSSSRSSEEENNNNNNNNNNDDSSSNNSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDMLLLLLLFFFMFLLFFLLLFFFFFFFFFRRRRRRRRHRSRRDRRRSRSDSRRRSRSRLLLLLLLLLLLLLLLLMLFLFLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLMLLLLLLLLLLLMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFIIKKFFFFFFFFINNNEEDDNNNNNNNNINNNNNISSSSSNNNNNNNNIDEESSNNNINNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLKLLLFKLLLLLFLLLLLLFLKLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLKLLLLLLLLLLLLLLLLKLLLCFFFFFMLLLLLLLLLLLLLLLLFLLLKLLKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLMFCFFFFFNNGENNLLLLLLLLAAAAASRRSSSSSRRSSRRRRRRRSSSSSSSSSSSSSRRSSRRRRRRRRRRRRRSRRRSDDSSSSSSRRRRSSSSSSSSSSSSSRRSSSRRSSRRRRRSRRRRDDSSSSSSSSSRRRSDRRRRRSSSSSSSSSSSSRRRRSRRRRRRRRRRRRRRRRRRSRRRSRRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR","n":["Ring","Ring0","Ring1","Ring2","Ring3","apic","bits16","bits32","bits64","borrow","borrow_mut","clone","controlregs","cpuid","current","debugregs","dtables","eq","fence","fmt","from","fs_deref","gs_deref","halt","int","into","io","irq","msr","random","rdpid","segmentation","syscall","task","time","tlb","try_from","try_into","type_id","vmx","AllExcludingSelf","AllIncludingSelf","ApicControl","ApicId","Assert","Deassert","DeliveryMode","DeliveryStatus","DestinationMode","DestinationShorthand","Edge","Fixed","Icr","Idle","Init","Level","Level","Logical","LowestPriority","Myself","NMI","NoShorthand","Physical","SMI","SendPending","StartUp","TriggerMode","X2Apic","XApic","_Reserved","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bsp","clone","eoi","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_x2apic","for_xapic","from","from","from","from","from","from","from","from","id","into","into","into","into","into","into","into","into","into","ioapic","ipi_init","ipi_init_deassert","ipi_startup","logical_id","lower","send_ipi","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_enable","tsc_set","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upper","version","x2apic","x2apic_logical_cluster_address","x2apic_logical_cluster_id","x2apic_logical_id","xapic","IoApic","borrow","borrow_mut","disable_all","enable","from","id","into","new","supported_interrupts","try_from","try_into","type_id","version","X2APIC","attach","borrow","borrow_mut","bsp","default","detach","eoi","fmt","from","id","into","ipi_init","ipi_init_deassert","ipi_startup","logical_id","new","send_ipi","send_self_ipi","try_from","try_into","tsc_enable","tsc_set","type_id","version","XAPIC","XAPIC_EOI","XAPIC_ESR","XAPIC_ICR0","XAPIC_ICR1","XAPIC_ID","XAPIC_IRR0","XAPIC_IRR1","XAPIC_IRR2","XAPIC_IRR3","XAPIC_IRR4","XAPIC_IRR5","XAPIC_IRR6","XAPIC_IRR7","XAPIC_ISR0","XAPIC_ISR1","XAPIC_ISR2","XAPIC_ISR3","XAPIC_ISR4","XAPIC_ISR5","XAPIC_ISR6","XAPIC_ISR7","XAPIC_LDR","XAPIC_LVT_CMCI","XAPIC_LVT_ERROR","XAPIC_LVT_LINT0","XAPIC_LVT_LINT1","XAPIC_LVT_PMI","XAPIC_LVT_THERMAL","XAPIC_LVT_TIMER","XAPIC_PPR","XAPIC_SVR","XAPIC_TIMER_CURRENT_COUNT","XAPIC_TIMER_DIV_CONF","XAPIC_TIMER_INIT_COUNT","XAPIC_TMR0","XAPIC_TMR1","XAPIC_TMR2","XAPIC_TMR3","XAPIC_TMR4","XAPIC_TMR5","XAPIC_TMR6","XAPIC_TMR7","XAPIC_TPR","XAPIC_VERSION","attach","borrow","borrow_mut","bsp","detach","eoi","fmt","from","id","into","ipi_init","ipi_init_deassert","ipi_startup","logical_id","new","send_ipi","try_from","try_into","tsc_enable","tsc_set","type_id","version","segmentation","eflags","paging","segmentation","task","EFlags","FLAGS_A1","FLAGS_AC","FLAGS_AF","FLAGS_CF","FLAGS_DF","FLAGS_ID","FLAGS_IF","FLAGS_IOPL0","FLAGS_IOPL1","FLAGS_IOPL2","FLAGS_IOPL3","FLAGS_NT","FLAGS_OF","FLAGS_PF","FLAGS_RF","FLAGS_SF","FLAGS_TF","FLAGS_VIF","FLAGS_VIP","FLAGS_VM","FLAGS_ZF","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clac","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_priv","hash","insert","intersection","intersects","into","is_all","is_empty","new","not","partial_cmp","remove","set","stac","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","A","A","BASE_PAGE_SHIFT","BASE_PAGE_SIZE","CACHE_LINE_SIZE","D","D","G","G","IOAddr","LARGE_PAGE_SIZE","LargePage","P","P","PAGE_SIZE_ENTRIES","PAT","PAT","PAddr","PCD","PCD","PD","PDEntry","PDFlags","PS","PT","PTEntry","PTFlags","PWT","PWT","Page","RW","RW","US","US","VAddr","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","address","address","align_down_to_base_page","align_down_to_base_page","align_down_to_base_page","align_down_to_large_page","align_down_to_large_page","align_down_to_large_page","align_up_to_base_page","align_up_to_base_page","align_up_to_base_page","align_up_to_large_page","align_up_to_large_page","align_up_to_large_page","all","all","as_mut_ptr","as_mut_ptr","as_ptr","as_ptr","as_u32","as_u32","as_u32","as_usize","as_usize","as_usize","base_page_offset","base_page_offset","base_page_offset","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","eq","eq","eq","extend","extend","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_u32","from_usize","hash","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_accessed","is_accessed","is_aligned","is_aligned","is_aligned","is_all","is_all","is_base_page_aligned","is_base_page_aligned","is_base_page_aligned","is_dirty","is_dirty","is_empty","is_empty","is_global","is_global","is_large_page_aligned","is_large_page_aligned","is_large_page_aligned","is_page","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_write_through","is_page_write_through","is_pat","is_pat","is_present","is_present","is_user_mode_allowed","is_user_mode_allowed","is_writeable","is_writeable","is_zero","is_zero","is_zero","large_page_offset","large_page_offset","large_page_offset","new","new","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pd_index","pt_index","rem","rem","rem","rem","rem","rem","rem","rem","rem","remove","remove","set","set","shr","shr","shr","shr","shr","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","zero","zero","zero","TaskStateSegment","borrow","borrow_mut","clone","cr3","cs","ds","eax","ebp","ebx","ecx","edi","edx","eflags","eip","es","esi","esp","esp0","esp1","esp2","fmt","from","fs","gs","into","iobp_offset","ldtr","link","new","ss","ss0","ss1","ss2","try_from","try_into","type_id","paging","registers","rflags","segmentation","sgx","syscall","task","vmx","A","A","A","A","A","BASE_PAGE_SHIFT","BASE_PAGE_SIZE","CACHE_LINE_SIZE","D","D","D","G","G","G","HUGE_PAGE_SIZE","HugePage","IOAddr","LARGE_PAGE_SIZE","LargePage","MAXPHYADDR","MAXVADDR","MAXVADDR_BITS","P","P","P","P","P","PAGE_SIZE_ENTRIES","PAT","PAT","PAddr","PCD","PCD","PCD","PCD","PCD","PD","PDEntry","PDFlags","PDPT","PDPTEntry","PDPTFlags","PML4","PML4Entry","PML4Flags","PML4_SLOT_SIZE","PML5","PML5Entry","PML5Flags","PS","PS","PT","PTEntry","PTFlags","PWT","PWT","PWT","PWT","PWT","Page","RW","RW","RW","RW","RW","US","US","US","US","US","USER_10","USER_10","USER_10","USER_10","USER_10","USER_11","USER_11","USER_11","USER_11","USER_11","USER_9","USER_9","USER_9","USER_9","USER_9","VAddr","XD","XD","XD","XD","XD","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","address","address","address","address","address","align_down_to_base_page","align_down_to_base_page","align_down_to_base_page","align_down_to_huge_page","align_down_to_huge_page","align_down_to_huge_page","align_down_to_large_page","align_down_to_large_page","align_down_to_large_page","align_up_to_base_page","align_up_to_base_page","align_up_to_base_page","align_up_to_huge_page","align_up_to_huge_page","align_up_to_huge_page","align_up_to_large_page","align_up_to_large_page","align_up_to_large_page","all","all","all","all","all","as_mut_ptr","as_ptr","as_u64","as_u64","as_u64","as_usize","as_usize","as_usize","base_page_offset","base_page_offset","base_page_offset","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_u64","from_usize","hash","hash","hash","hash","hash","hash","hash","hash","huge_page_offset","huge_page_offset","huge_page_offset","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_accessed","is_accessed","is_accessed","is_accessed","is_accessed","is_aligned","is_aligned","is_aligned","is_all","is_all","is_all","is_all","is_all","is_base_page_aligned","is_base_page_aligned","is_base_page_aligned","is_dirty","is_dirty","is_empty","is_empty","is_empty","is_empty","is_empty","is_global","is_global","is_huge_page_aligned","is_huge_page_aligned","is_huge_page_aligned","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_large_page_aligned","is_large_page_aligned","is_large_page_aligned","is_page","is_page","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_write_through","is_page_write_through","is_page_write_through","is_page_write_through","is_page_write_through","is_pat","is_pat","is_present","is_present","is_present","is_present","is_present","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_writeable","is_writeable","is_writeable","is_writeable","is_writeable","is_zero","is_zero","is_zero","large_page_offset","large_page_offset","large_page_offset","new","new","new","new","new","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pd_index","pdpt_index","pml4_index","pml5_index","pt_index","rem","rem","rem","rem","rem","rem","rem","rem","rem","remove","remove","remove","remove","remove","set","set","set","set","set","shr","shr","shr","shr","shr","split","split","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","zero","zero","zero","rbp","rip","rsp","FLAGS_A1","FLAGS_AC","FLAGS_AF","FLAGS_CF","FLAGS_DF","FLAGS_ID","FLAGS_IF","FLAGS_IOPL0","FLAGS_IOPL1","FLAGS_IOPL2","FLAGS_IOPL3","FLAGS_NT","FLAGS_OF","FLAGS_PF","FLAGS_RF","FLAGS_SF","FLAGS_TF","FLAGS_VIF","FLAGS_VIP","FLAGS_VM","FLAGS_ZF","RFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clac","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_priv","from_raw","hash","insert","intersection","intersects","into","is_all","is_empty","new","not","partial_cmp","read","remove","set","set","stac","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","Descriptor64","NULL","borrow","borrow_mut","clone","default","fmt","from","fs_deref","gs_deref","into","load_cs","rdfsbase","rdgsbase","set_base_limit","set_ist","set_selector_offset","swapgs","try_from","try_into","type_id","wrfsbase","wrgsbase","encls_create","encls_eadd","encls_eaug","encls_eblock","encls_edbgrd","encls_edbgwr","encls_eextend","encls_einit","encls_eldb","encls_eldu","encls_emodpr","encls_emodt","encls_epa","encls_eremove","encls_etrack","encls_ewb","enclu_eaccept","enclu_eacceptcopy","enclu_eenter","enclu_eexit","enclu_egetkey","enclu_emodepe","enclu_ereport","enclu_eresume","syscall0","syscall1","syscall2","syscall3","syscall4","syscall5","syscall6","TaskStateSegment","borrow","borrow_mut","clone","default","fmt","from","into","iomap_base","ist","new","reserved","reserved2","reserved3","reserved4","rsp","set_ist","set_rsp","try_from","try_into","type_id","vmclear","vmlaunch","vmptrld","vmptrst","vmread","vmresume","vmwrite","vmxoff","vmxon","CR0_ALIGNMENT_MASK","CR0_CACHE_DISABLE","CR0_EMULATE_COPROCESSOR","CR0_ENABLE_PAGING","CR0_EXTENSION_TYPE","CR0_MONITOR_COPROCESSOR","CR0_NOT_WRITE_THROUGH","CR0_NUMERIC_ERROR","CR0_PROTECTED_MODE","CR0_TASK_SWITCHED","CR0_WRITE_PROTECT","CR4_DEBUGGING_EXTENSIONS","CR4_ENABLE_FSGSBASE","CR4_ENABLE_GLOBAL_PAGES","CR4_ENABLE_LA57","CR4_ENABLE_MACHINE_CHECK","CR4_ENABLE_OS_XSAVE","CR4_ENABLE_PAE","CR4_ENABLE_PCID","CR4_ENABLE_PPMC","CR4_ENABLE_PROTECTION_KEY","CR4_ENABLE_PSE","CR4_ENABLE_SMAP","CR4_ENABLE_SMEP","CR4_ENABLE_SMX","CR4_ENABLE_SSE","CR4_ENABLE_UMIP","CR4_ENABLE_VME","CR4_ENABLE_VMX","CR4_TIME_STAMP_DISABLE","CR4_UNMASKED_SSE","CR4_VIRTUAL_INTERRUPTS","Cr0","Cr4","XCR0_AVX_STATE","XCR0_BNDCSR_STATE","XCR0_BNDREG_STATE","XCR0_FPU_MMX_STATE","XCR0_HI16_ZMM_STATE","XCR0_OPMASK_STATE","XCR0_PKRU_STATE","XCR0_SSE_STATE","XCR0_ZMM_HI256_STATE","Xcr0","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","cr0","cr0_write","cr2","cr2_write","cr3","cr3_write","cr4","cr4_write","difference","difference","difference","empty","empty","empty","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","not","not","not","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","union","xcr0","xcr0_write","ACRN","ApmInfo","Associativity","Avx","Avx512Opmask","Avx512ZmmHi16","Avx512ZmmHi256","Bhyve","CACHE_INFO_TABLE","Cache","CacheInfo","CacheInfoIter","CacheInfoType","CacheParameter","CacheParametersIter","CacheType","Core","CpuId","CpuIdResult","DTLB","DatInfo","DatIter","DatType","Data","DataTLB","Die","DirectCacheAccessInfo","DirectMapped","Disabled","Epc","EpcSection","ExtendedFeatures","ExtendedProcessorFeatureIdentifiers","ExtendedRegisterStateLocation","ExtendedRegisterType","ExtendedState","ExtendedStateInfo","ExtendedStateIter","ExtendedTopologyIter","ExtendedTopologyLevel","FeatureInfo","FullyAssociative","General","Hdc","HyperV","Hypervisor","HypervisorInfo","Ia32Xss","Instruction","InstructionTLB","Invalid","KVM","L1CacheTlbInfo","L2And3CacheTlbInfo","L2CatInfo","L3CatInfo","L3MonitoringInfo","LoadOnly","MemBwAllocationInfo","MemoryEncryptionInfo","Module","MonitorMwaitInfo","MpxBndcsr","MpxBndregs","NWay","Null","Null","PerformanceMonitoringInfo","PerformanceOptimizationInfo","Pkru","Prefetch","ProcessorBrandString","ProcessorCapacityAndFeatureInfo","ProcessorFrequencyInfo","ProcessorSerial","ProcessorTopologyInfo","ProcessorTraceInfo","Pt","QEMU","QNX","RdtAllocationInfo","RdtMonitoringInfo","Reserved","SMT","STLB","SgxInfo","SgxSectionInfo","SgxSectionIter","SoCVendorAttributesIter","SoCVendorBrand","SoCVendorInfo","StoreOnly","SvmFeatures","TLB","ThermalPowerInfo","Tile","Tlb1gbPageInfo","TopologyType","TscInfo","Unified","UnifiedTLB","Unknown","Unknown","Unknown","Unknown","VMware","VendorInfo","Xcr0","Xen","all_zero","apic_frequency","apic_id_size","as_str","as_str","as_str","as_string","as_string","associativity","base_family_id","base_model_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brand_id","brand_index","bus_frequency","c_bit_position","cache_level","cache_type","cache_type","capacity_mask_length","capacity_mask_length","cflush_cache_line_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","coherency_line_size","configurable_address_ranges","conversion_factor","core_id","counter_bit_width","cpu_pwr_sample_time_ratio","cpuid","dcache_associativity","dcache_line_size","dcache_lines_per_tag","dcache_size","default","denominator","desc","dtlb_2m_4m_associativity","dtlb_2m_4m_associativity","dtlb_2m_4m_size","dtlb_2m_4m_size","dtlb_4k_associativity","dtlb_4k_associativity","dtlb_4k_size","dtlb_4k_size","dtlb_l1_1gb_associativity","dtlb_l1_1gb_size","dtlb_l2_1gb_associativity","dtlb_l2_1gb_size","dts_irq_threshold","eax","ebx","ebx_length","ecx","edx","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extended_family_id","extended_model_id","extended_signature","extensions_supported","family_id","fixed_function_counters","fixed_function_counters_bit_width","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_advanced_power_mgmt_info","get_cache_info","get_cache_parameters","get_dca_cap_value","get_deterministic_address_translation_info","get_direct_cache_access_info","get_extended_feature_info","get_extended_processor_and_feature_identifiers","get_extended_state_info","get_extended_topology_info","get_extended_topology_info_v2","get_feature_info","get_hypervisor_info","get_l1_cache_and_tlb_info","get_l2_l3_cache_and_tlb_info","get_memory_encryption_info","get_monitor_mwait_info","get_performance_monitoring_info","get_performance_optimization_info","get_processor_brand_string","get_processor_capacity_feature_info","get_processor_frequency_info","get_processor_serial","get_processor_topology_info","get_processor_trace_info","get_project_id","get_rdt_allocation_info","get_rdt_monitoring_info","get_sgx_info","get_soc_vendor_id","get_soc_vendor_info","get_stepping_id","get_svm_info","get_thermal_power_info","get_tlb_1gb_page_info","get_tsc_info","get_vendor_attributes","get_vendor_brand","get_vendor_info","guest_physical_address_bits","has_100mhz_steps","has_1gb_entries","has_1gib_pages","has_2mb_entries","has_3dnow","has_4k_entries","has_4mb_entries","has_64bit_mode","has_64bit_mode","has_acpi","has_addr_mask_extension","has_adx","has_aesni","has_alt_mov_cr8","has_alternate_injection","has_amd_3dnow_extensions","has_any_thread_deprecation","has_apic","has_arat","has_av512vbmi2","has_avic","has_avx","has_avx2","has_avx512_ifma","has_avx512bitalg","has_avx512bw","has_avx512cd","has_avx512dq","has_avx512er","has_avx512f","has_avx512pf","has_avx512vl","has_avx512vnni","has_avx512vpopcntdq","has_bmi1","has_bmi2","has_cet_ss","has_cl_zero","has_clflush","has_clflushopt","has_clwb","has_cmov","has_cmp_legacy","has_cmpxchg16b","has_cmpxchg8b","has_cnxtid","has_code_data_prioritization","has_complex_indexing","has_configurable_psb_and_cycle_accurate_mode","has_cpb","has_cpl","has_data_access_bkpt_extension","has_dca","has_de","has_debug_swap","has_decode_assists","has_ds","has_ds_area","has_dts","has_ecmd","has_eist","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_energy_bias_pref","has_execute_disable","has_ext_apic_space","has_f16c","has_fast_fxsave_fxstor","has_fdp","has_feedback_iface","has_flexible_hwp","has_flush_by_asid","has_fma","has_fma4","has_fp128","has_fp256","has_fpu","has_fpu_cs_ds_deprecated","has_freq_id_ctrl","has_fsgsbase","has_fxsave_fxstor","has_gfni","has_gif","has_gmet","has_hdc","has_hle","has_host_mce_override","has_htt","has_hw_coord_feedback","has_hw_enforced_cache_coh","has_hw_pstate","has_hwa","has_hwp","has_hwp_activity_window","has_hwp_capabilities","has_hwp_energy_performance_preference","has_hwp_fast_access_mode","has_hwp_notification","has_hwp_package_level_request","has_hwp_peci_override","has_hypervisor","has_ibs","has_ignore_idle_processor_hwp_request","has_inst_ret_cntr_msr","has_int_wbinvd","has_invariant_tsc","has_invlpgb","has_invlpgb_nested","has_invpcid","has_ip_tracestop_filtering","has_l2_cat","has_l3_cat","has_l3_monitoring","has_la57","has_lahf_sahf","has_lbr_virtualization","has_linear_response_delay","has_lip_with_cs_base","has_local_bandwidth_monitoring","has_lwp","has_lzcnt","has_mca","has_mca_overflow_recovery","has_mce","has_mcommit","has_memory_bandwidth_allocation","has_misaligned_sse_mode","has_mmx","has_mmx_extensions","has_monitor_mwait","has_monitorx_mwaitx","has_movbe","has_movu","has_mpx","has_msr","has_mtc_timing_packet_coefi_suppression","has_mtrr","has_nb_perf_cntr_extensions","has_nested_paging","has_nrip","has_occupancy_monitoring","has_ospke","has_osvw","has_oxsave","has_pae","has_page_flush_msr","has_pat","has_pause_filter","has_pause_filter_threshold","has_pbe","has_pcid","has_pclmulqdq","has_pdcm","has_perf_cntr_extensions","has_perf_cntr_llc_extensions","has_perf_tsc","has_pge","has_pku","has_pln","has_popcnt","has_power_event_trace","has_power_reporting_iface","has_prefetchw","has_prefetchwt1","has_prevent_host_ibs","has_processor_trace","has_pse","has_pse36","has_psn","has_ptm","has_ptwrite","has_rdpid","has_rdpru","has_rdrand","has_rdseed","has_rdta","has_rdtm","has_rdtscp","has_rep_movsb_stosb","has_restore_fp_error_ptrs","has_restricted_injection","has_ro_effective_freq_iface","has_rtit_cr3_match","has_rtm","has_sev","has_sev_es","has_sev_snp","has_sgx","has_sgx1","has_sgx2","has_sgx_lc","has_sha","has_single_range_output_scheme","has_skinit","has_smap","has_sme","has_smep","has_smx","has_spec_ctrl","has_ss","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","has_sse4a","has_sss_check","has_ssse3","has_succor","has_svm","has_svm_lock","has_syscall_sysret","has_sysenter_sysexit","has_tbm","has_thermtrip","has_tlb_ctrl","has_tm","has_tm","has_tm2","has_tme_en","has_topa","has_topa_maximum_entries","has_topology_extensions","has_total_bandwidth_monitoring","has_trace_transport_subsystem","has_ts","has_tsc","has_tsc_adjust_msr","has_tsc_deadline","has_tsc_rate_msr","has_turbo_boost","has_turbo_boost3","has_umip","has_unsupported_efer_lmsle","has_vaes","has_vmcb_clean_bits","has_vme","has_vmpl","has_vmsave_virtualization","has_vmx","has_volt_id_ctrl","has_vpclmulqdq","has_vte","has_waitpkg","has_wbnoinvd","has_wdt","has_x2apic","has_xgetbv","has_xop","has_xsave","has_xsavec","has_xsaveopt","has_xsaves_xrstors","highest_cos","highest_cos","highest_cos","ia32_xss_supports_hdc","ia32_xss_supports_pt","icache_associativity","icache_line_size","icache_lines_per_tag","icache_size","identify","initial_local_apic_id","interrupts_as_break_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invlpgb_max_pages","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","is_cache_ref_ev_unavailable","is_compacted_format","is_core_cyc_ev_unavailable","is_fully_associative","is_fully_associative","is_in_ia32_xss","is_in_xcr0","is_inclusive","is_inst_ret_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_ref_cycle_ev_unavailable","is_self_initializing","is_write_back_invalidate","isolation_bitmap","isolation_bitmap","iter","iter","itlb_2m_4m_associativity","itlb_2m_4m_associativity","itlb_2m_4m_size","itlb_2m_4m_size","itlb_4k_associativity","itlb_4k_associativity","itlb_4k_size","itlb_4k_size","itlb_l1_1gb_associativity","itlb_l1_1gb_size","itlb_l2_1gb_associativity","itlb_l2_1gb_size","l2_cat","l2cache_associativity","l2cache_line_size","l2cache_lines_per_tag","l2cache_size","l3_cat","l3_monitoring","l3cache_associativity","l3cache_line_size","l3cache_lines_per_tag","l3cache_size","largest_monitor_line","level","level_number","level_type","linear_address_bits","location","mawau_value","max_addressable_ids","max_cores_for_cache","max_cores_for_package","max_enclave_size_64bit","max_enclave_size_non_64bit","max_encrypted_guests","max_hba_throttling","max_logical_processor_ids","max_rdpru_id","maximum_logical_processors","maximum_rmid_range","memory_bandwidth_allocation","min_sev_no_es_asid","miscselect","model_id","native_cpuid","new","next","next","next","next","next","next","next","node_id","nodes_per_processor","nominal_frequency","num","num_phys_threads","number_of_counters","numerator","offset","partitioning","perf_tsc_size","physical_address_bits","physical_address_reduction","physical_base","physical_line_partitions","pkg_type","processor_base_frequency","processor_max_frequency","processors","register","revision","rmid_range","secs_attributes","serial","serial_all","serial_lower","serial_middle","serial_upper","sets","sets","shift_right_for_next_apic_id","size","size","smallest_monitor_line","stepping_id","subleaf","supported_asids","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","supported_cycle_threshold_value_encodings","supported_mtc_period_encodings","supported_psb_frequency_encodings","threads_per_core","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_frequency","tsc_frequency","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_id","ways","with_cpuid_fn","x2apic_id","x2apic_id","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi16","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx_256","xcr0_supports_legacy_x87","xcr0_supports_mpx_bndcsr","xcr0_supports_mpx_bndregs","xcr0_supports_pkru","xcr0_supports_sse_128","xsave_area_size_enabled_features","xsave_area_size_supported_features","xsave_size","cpuid_count","B0","B1","B2","B3","BD","BREAKPOINT_REGS","BS","BT","BreakCondition","BreakSize","Breakpoint","Bytes1","Bytes2","Bytes4","Bytes8","DataReadsWrites","DataWrites","Dr0","Dr1","Dr2","Dr3","Dr6","Dr7","EMPTY","GD_BIT","GE_BIT","Instructions","IoReadsWrites","LE_BIT","RTM","RTM_BIT","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cmp","complement","configure","configure_bp","contains","default","difference","disable_bp","disable_global","disable_local","dr","dr0","dr0_write","dr1","dr1_write","dr2","dr2_write","dr3","dr3_write","dr6","dr6_write","dr7","dr7_write","empty","enable_bp","enable_exact_global_bp","enable_exact_local_bp","enable_general_detect","enable_global","enable_local","enable_rtm","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","into","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","write","DescriptorTablePointer","base","borrow","borrow_mut","default","fmt","from","into","ldtr","lgdt","lidt","limit","load_ldtr","new","new_from_slice","sgdt","sidt","try_from","try_into","type_id","lfence","mfence","sfence","inb","inl","inw","outb","outl","outw","ALIGNMENT_CHECK_VECTOR","BOUND_RANGE_EXCEEDED_VECTOR","BREAKPOINT_VECTOR","COPROCESSOR_SEGMENT_OVERRUN_VECTOR","DEBUG_VECTOR","DEVICE_NOT_AVAILABLE_VECTOR","DIVIDE_ERROR_VECTOR","DOUBLE_FAULT_VECTOR","EXCEPTIONS","GENERAL_PROTECTION_FAULT_VECTOR","ID","INVALID_OPCODE_VECTOR","INVALID_TSS_VECTOR","InterruptDescription","MACHINE_CHECK_VECTOR","NONMASKABLE_INTERRUPT_VECTOR","OVERFLOW_VECTOR","P","PAGE_FAULT_VECTOR","PK","PageFaultError","RSVD","SEGMENT_NOT_PRESENT_VECTOR","SIMD_FLOATING_POINT_VECTOR","STACK_SEGEMENT_FAULT_VECTOR","US","VIRTUALIZATION_VECTOR","WR","X87_FPU_VECTOR","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","cmp","complement","contains","description","difference","disable","empty","enable","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","irqtype","is_all","is_empty","mnemonic","not","partial_cmp","remove","set","source","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","vector","APIC_BASE","BIOS_UPDT_TRIG","DEBUGCTLMSR","EBL_CR_POWERON","IA32_APERF","IA32_APIC_BASE","IA32_A_PMC0","IA32_A_PMC1","IA32_A_PMC2","IA32_A_PMC3","IA32_A_PMC4","IA32_A_PMC5","IA32_A_PMC6","IA32_A_PMC7","IA32_BIOS_SIGN_ID","IA32_BIOS_UPDT_TRIG","IA32_CLOCK_MODULATION","IA32_CPU_DCA_CAP","IA32_CSTAR","IA32_DCA_0_CAP","IA32_DEBUGCTL","IA32_DS_AREA","IA32_EFER","IA32_ENERGY_PERF_BIAS","IA32_FEATURE_CONTROL","IA32_FIXED_CTR0","IA32_FIXED_CTR1","IA32_FIXED_CTR2","IA32_FIXED_CTR_CTRL","IA32_FMASK","IA32_FS_BASE","IA32_GS_BASE","IA32_KERNEL_GSBASE","IA32_LSTAR","IA32_MC0_ADDR","IA32_MC0_ADDR1","IA32_MC0_CTL","IA32_MC0_CTL2","IA32_MC0_MISC","IA32_MC0_STATUS","IA32_MC10_ADDR1","IA32_MC10_CTL","IA32_MC10_CTL2","IA32_MC10_MISC","IA32_MC10_STATUS","IA32_MC11_ADDR1","IA32_MC11_CTL","IA32_MC11_CTL2","IA32_MC11_MISC","IA32_MC11_STATUS","IA32_MC12_ADDR1","IA32_MC12_CTL","IA32_MC12_CTL2","IA32_MC12_MISC","IA32_MC12_STATUS","IA32_MC13_ADDR1","IA32_MC13_CTL","IA32_MC13_CTL2","IA32_MC13_MISC","IA32_MC13_STATUS","IA32_MC14_ADDR1","IA32_MC14_CTL","IA32_MC14_CTL2","IA32_MC14_MISC","IA32_MC14_STATUS","IA32_MC15_ADDR1","IA32_MC15_CTL","IA32_MC15_CTL2","IA32_MC15_MISC","IA32_MC15_STATUS","IA32_MC16_ADDR1","IA32_MC16_CTL","IA32_MC16_CTL2","IA32_MC16_MISC","IA32_MC16_STATUS","IA32_MC17_ADDR1","IA32_MC17_CTL","IA32_MC17_CTL2","IA32_MC17_MISC","IA32_MC17_STATUS","IA32_MC18_ADDR1","IA32_MC18_CTL","IA32_MC18_CTL2","IA32_MC18_MISC","IA32_MC18_STATUS","IA32_MC19_ADDR1","IA32_MC19_CTL","IA32_MC19_CTL2","IA32_MC19_MISC","IA32_MC19_STATUS","IA32_MC1_ADDR","IA32_MC1_ADDR2","IA32_MC1_CTL","IA32_MC1_CTL2","IA32_MC1_MISC","IA32_MC1_STATUS","IA32_MC20_ADDR1","IA32_MC20_CTL","IA32_MC20_CTL2","IA32_MC20_MISC","IA32_MC20_STATUS","IA32_MC21_ADDR1","IA32_MC21_CTL","IA32_MC21_CTL2","IA32_MC21_MISC","IA32_MC21_STATUS","IA32_MC2_ADDR","IA32_MC2_ADDR1","IA32_MC2_CTL","IA32_MC2_CTL2","IA32_MC2_MISC","IA32_MC2_STATUS","IA32_MC3_ADDR","IA32_MC3_ADDR1","IA32_MC3_CTL","IA32_MC3_CTL2","IA32_MC3_MISC","IA32_MC3_STATUS","IA32_MC4_ADDR","IA32_MC4_ADDR1","IA32_MC4_CTL","IA32_MC4_CTL2","IA32_MC4_MISC","IA32_MC4_STATUS","IA32_MC5_ADDR1","IA32_MC5_CTL","IA32_MC5_CTL2","IA32_MC5_MISC","IA32_MC5_STATUS","IA32_MC6_ADDR1","IA32_MC6_CTL","IA32_MC6_CTL2","IA32_MC6_MISC","IA32_MC6_STATUS","IA32_MC7_ADDR1","IA32_MC7_CTL","IA32_MC7_CTL2","IA32_MC7_MISC","IA32_MC7_STATUS","IA32_MC8_ADDR1","IA32_MC8_CTL","IA32_MC8_CTL2","IA32_MC8_MISC","IA32_MC8_STATUS","IA32_MC9_ADDR1","IA32_MC9_CTL","IA32_MC9_CTL2","IA32_MC9_MISC","IA32_MC9_STATUS","IA32_MCG_CAP","IA32_MCG_CTL","IA32_MCG_STATUS","IA32_MISC_ENABLE","IA32_MONITOR_FILTER_LINE_SIZE","IA32_MONITOR_FILTER_SIZE","IA32_MPERF","IA32_MTRRCAP","IA32_MTRR_DEF_TYPE","IA32_MTRR_FIX16K_80000","IA32_MTRR_FIX16K_A0000","IA32_MTRR_FIX4K_C0000","IA32_MTRR_FIX4K_C8000","IA32_MTRR_FIX4K_D0000","IA32_MTRR_FIX4K_D8000","IA32_MTRR_FIX4K_E0000","IA32_MTRR_FIX4K_E8000","IA32_MTRR_FIX4K_F0000","IA32_MTRR_FIX4K_F8000","IA32_MTRR_FIX64K_00000","IA32_MTRR_PHYSBASE0","IA32_MTRR_PHYSBASE1","IA32_MTRR_PHYSBASE2","IA32_MTRR_PHYSBASE3","IA32_MTRR_PHYSBASE4","IA32_MTRR_PHYSBASE5","IA32_MTRR_PHYSBASE6","IA32_MTRR_PHYSBASE7","IA32_MTRR_PHYSBASE8","IA32_MTRR_PHYSBASE9","IA32_MTRR_PHYSMASK0","IA32_MTRR_PHYSMASK1","IA32_MTRR_PHYSMASK2","IA32_MTRR_PHYSMASK3","IA32_MTRR_PHYSMASK4","IA32_MTRR_PHYSMASK5","IA32_MTRR_PHYSMASK6","IA32_MTRR_PHYSMASK7","IA32_MTRR_PHYSMASK8","IA32_MTRR_PHYSMASK9","IA32_P5_MC_ADDR","IA32_P5_MC_TYPE","IA32_PACKAGE_THERM_INTERRUPT","IA32_PACKAGE_THERM_STATUS","IA32_PAT","IA32_PEBS_ENABLE","IA32_PERFEVTSEL0","IA32_PERFEVTSEL1","IA32_PERFEVTSEL2","IA32_PERFEVTSEL3","IA32_PERFEVTSEL4","IA32_PERFEVTSEL5","IA32_PERFEVTSEL6","IA32_PERFEVTSEL7","IA32_PERF_CAPABILITIES","IA32_PERF_CTL","IA32_PERF_GLOBAL_CTRL","IA32_PERF_GLOBAL_OVF_CTRL","IA32_PERF_GLOBAL_STAUS","IA32_PERF_STATUS","IA32_PLATFORM_DCA_CAP","IA32_PLATFORM_ID","IA32_PMC0","IA32_PMC1","IA32_PMC2","IA32_PMC3","IA32_PMC4","IA32_PMC5","IA32_PMC6","IA32_PMC7","IA32_PQR_ASSOC","IA32_QM_CTR","IA32_QM_EVTSEL","IA32_SMBASE","IA32_SMM_MONITOR_CTL","IA32_SMRR_PHYSBASE","IA32_SMRR_PHYSMASK","IA32_STAR","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IA32_THERM_INTERRUPT","IA32_THERM_STATUS","IA32_TIME_STAMP_COUNTER","IA32_TSC_ADJUST","IA32_TSC_AUX","IA32_TSC_DEADLINE","IA32_VMX_BASIC","IA32_VMX_CR0_FIXED0","IA32_VMX_CR0_FIXED1","IA32_VMX_CR4_FIXED0","IA32_VMX_CR4_FIXED1","IA32_VMX_CRO_FIXED0","IA32_VMX_CRO_FIXED1","IA32_VMX_ENTRY_CTLS","IA32_VMX_EPT_VPID_CAP","IA32_VMX_EPT_VPID_ENUM","IA32_VMX_EXIT_CTLS","IA32_VMX_FMFUNC","IA32_VMX_MISC","IA32_VMX_PINBASED_CTLS","IA32_VMX_PROCBASED_CTLS","IA32_VMX_PROCBASED_CTLS2","IA32_VMX_TRUE_ENTRY_CTLS","IA32_VMX_TRUE_EXIT_CTLS","IA32_VMX_TRUE_PINBASED_CTLS","IA32_VMX_TRUE_PROCBASED_CTLS","IA32_VMX_VMCS_ENUM","IA32_VMX_VMFUNC","IA32_X2APIC_APICID","IA32_X2APIC_CUR_COUNT","IA32_X2APIC_DIV_CONF","IA32_X2APIC_EOI","IA32_X2APIC_ESR","IA32_X2APIC_ICR","IA32_X2APIC_INIT_COUNT","IA32_X2APIC_IRR0","IA32_X2APIC_IRR1","IA32_X2APIC_IRR2","IA32_X2APIC_IRR3","IA32_X2APIC_IRR4","IA32_X2APIC_IRR5","IA32_X2APIC_IRR6","IA32_X2APIC_IRR7","IA32_X2APIC_ISR0","IA32_X2APIC_ISR1","IA32_X2APIC_ISR2","IA32_X2APIC_ISR3","IA32_X2APIC_ISR4","IA32_X2APIC_ISR5","IA32_X2APIC_ISR6","IA32_X2APIC_ISR7","IA32_X2APIC_LDR","IA32_X2APIC_LVT_CMCI","IA32_X2APIC_LVT_ERROR","IA32_X2APIC_LVT_LINT0","IA32_X2APIC_LVT_LINT1","IA32_X2APIC_LVT_PMI","IA32_X2APIC_LVT_THERMAL","IA32_X2APIC_LVT_TIMER","IA32_X2APIC_PPR","IA32_X2APIC_SELF_IPI","IA32_X2APIC_SIVR","IA32_X2APIC_TMR0","IA32_X2APIC_TMR1","IA32_X2APIC_TMR2","IA32_X2APIC_TMR3","IA32_X2APIC_TMR4","IA32_X2APIC_TMR5","IA32_X2APIC_TMR6","IA32_X2APIC_TMR7","IA32_X2APIC_TPR","IA32_X2APIC_VERSION","LASTBRANCHFROMIP","LASTBRANCHTOIP","LASTINTFROMIP","LASTINTTOIP","MC0_ADDR","MC0_CTL","MC0_MISC","MC0_STATUS","MC1_ADDR","MC1_CTL","MC1_MISC","MC1_STATUS","MC2_ADDR","MC2_CTL","MC2_MISC","MC2_STATUS","MC3_ADDR","MC3_CTL","MC3_MISC","MC3_STATUS","MC4_ADDR","MC4_CTL","MC4_MISC","MC4_STATUS","MCG_CAP","MCG_CTL","MCG_STATUS","MSR_ALF_ESCR0","MSR_ALF_ESCR1","MSR_B0_PMON_BOX_CTRL","MSR_B0_PMON_BOX_OVF_CTRL","MSR_B0_PMON_BOX_STATUS","MSR_B0_PMON_CTR0","MSR_B0_PMON_CTR1","MSR_B0_PMON_CTR2","MSR_B0_PMON_CTR3","MSR_B0_PMON_EVNT_SEL0","MSR_B0_PMON_EVNT_SEL1","MSR_B0_PMON_EVNT_SEL2","MSR_B0_PMON_EVNT_SEL3","MSR_B0_PMON_MASK","MSR_B0_PMON_MATCH","MSR_B1_PMON_BOX_CTRL","MSR_B1_PMON_BOX_OVF_CTRL","MSR_B1_PMON_BOX_STATUS","MSR_B1_PMON_CTR0","MSR_B1_PMON_CTR1","MSR_B1_PMON_CTR2","MSR_B1_PMON_CTR3","MSR_B1_PMON_EVNT_SEL0","MSR_B1_PMON_EVNT_SEL1","MSR_B1_PMON_EVNT_SEL2","MSR_B1_PMON_EVNT_SEL3","MSR_B1_PMON_MASK","MSR_B1_PMON_MATCH","MSR_BBL_CR_CTL","MSR_BBL_CR_CTL3","MSR_BPU_CCCR0","MSR_BPU_CCCR1","MSR_BPU_CCCR2","MSR_BPU_CCCR3","MSR_BPU_COUNTER0","MSR_BPU_COUNTER1","MSR_BPU_COUNTER2","MSR_BPU_COUNTER3","MSR_BPU_ESCR0","MSR_BPU_ESCR1","MSR_BSU_ESCR0","MSR_BSU_ESCR1","MSR_C0_PMON_BOX_CTRL","MSR_C0_PMON_BOX_OVF_CTRL","MSR_C0_PMON_BOX_STATUS","MSR_C0_PMON_CTR0","MSR_C0_PMON_CTR1","MSR_C0_PMON_CTR2","MSR_C0_PMON_CTR3","MSR_C0_PMON_CTR4","MSR_C0_PMON_CTR5","MSR_C0_PMON_EVNT_SEL0","MSR_C0_PMON_EVNT_SEL1","MSR_C0_PMON_EVNT_SEL2","MSR_C0_PMON_EVNT_SEL3","MSR_C0_PMON_EVNT_SEL4","MSR_C0_PMON_EVNT_SEL5","MSR_C1_PMON_BOX_CTRL","MSR_C1_PMON_BOX_OVF_CTRL","MSR_C1_PMON_BOX_STATUS","MSR_C1_PMON_CTR0","MSR_C1_PMON_CTR1","MSR_C1_PMON_CTR2","MSR_C1_PMON_CTR3","MSR_C1_PMON_CTR4","MSR_C1_PMON_CTR5","MSR_C1_PMON_EVNT_SEL0","MSR_C1_PMON_EVNT_SEL1","MSR_C1_PMON_EVNT_SEL2","MSR_C1_PMON_EVNT_SEL3","MSR_C1_PMON_EVNT_SEL4","MSR_C1_PMON_EVNT_SEL5","MSR_C2_PMON_BOX_CTRL","MSR_C2_PMON_BOX_OVF_CTRL","MSR_C2_PMON_BOX_STATUS","MSR_C2_PMON_CTR0","MSR_C2_PMON_CTR1","MSR_C2_PMON_CTR2","MSR_C2_PMON_CTR3","MSR_C2_PMON_CTR4","MSR_C2_PMON_CTR5","MSR_C2_PMON_EVNT_SEL0","MSR_C2_PMON_EVNT_SEL1","MSR_C2_PMON_EVNT_SEL2","MSR_C2_PMON_EVNT_SEL3","MSR_C2_PMON_EVNT_SEL4","MSR_C2_PMON_EVNT_SEL5","MSR_C3_PMON_BOX_CTRL","MSR_C3_PMON_BOX_OVF_CTRL","MSR_C3_PMON_BOX_STATUS","MSR_C3_PMON_CTR0","MSR_C3_PMON_CTR1","MSR_C3_PMON_CTR2","MSR_C3_PMON_CTR3","MSR_C3_PMON_CTR4","MSR_C3_PMON_CTR5","MSR_C3_PMON_EVNT_SEL0","MSR_C3_PMON_EVNT_SEL1","MSR_C3_PMON_EVNT_SEL2","MSR_C3_PMON_EVNT_SEL3","MSR_C3_PMON_EVNT_SEL4","MSR_C3_PMON_EVNT_SEL5","MSR_C4_PMON_BOX_CTRL","MSR_C4_PMON_BOX_OVF_CTRL","MSR_C4_PMON_BOX_STATUS","MSR_C4_PMON_CTR0","MSR_C4_PMON_CTR1","MSR_C4_PMON_CTR2","MSR_C4_PMON_CTR3","MSR_C4_PMON_CTR4","MSR_C4_PMON_CTR5","MSR_C4_PMON_EVNT_SEL0","MSR_C4_PMON_EVNT_SEL1","MSR_C4_PMON_EVNT_SEL2","MSR_C4_PMON_EVNT_SEL3","MSR_C4_PMON_EVNT_SEL4","MSR_C4_PMON_EVNT_SEL5","MSR_C5_PMON_BOX_CTRL","MSR_C5_PMON_BOX_OVF_CTRL","MSR_C5_PMON_BOX_STATUS","MSR_C5_PMON_CTR0","MSR_C5_PMON_CTR1","MSR_C5_PMON_CTR2","MSR_C5_PMON_CTR3","MSR_C5_PMON_CTR4","MSR_C5_PMON_CTR5","MSR_C5_PMON_EVNT_SEL0","MSR_C5_PMON_EVNT_SEL1","MSR_C5_PMON_EVNT_SEL2","MSR_C5_PMON_EVNT_SEL3","MSR_C5_PMON_EVNT_SEL4","MSR_C5_PMON_EVNT_SEL5","MSR_C6_PMON_BOX_CTRL","MSR_C6_PMON_BOX_OVF_CTRL","MSR_C6_PMON_BOX_STATUS","MSR_C6_PMON_CTR0","MSR_C6_PMON_CTR1","MSR_C6_PMON_CTR2","MSR_C6_PMON_CTR3","MSR_C6_PMON_CTR4","MSR_C6_PMON_CTR5","MSR_C6_PMON_EVNT_SEL0","MSR_C6_PMON_EVNT_SEL1","MSR_C6_PMON_EVNT_SEL2","MSR_C6_PMON_EVNT_SEL3","MSR_C6_PMON_EVNT_SEL4","MSR_C6_PMON_EVNT_SEL5","MSR_C7_PMON_BOX_CTRL","MSR_C7_PMON_BOX_OVF_CTRL","MSR_C7_PMON_BOX_STATUS","MSR_C7_PMON_CTR0","MSR_C7_PMON_CTR1","MSR_C7_PMON_CTR2","MSR_C7_PMON_CTR3","MSR_C7_PMON_CTR4","MSR_C7_PMON_CTR5","MSR_C7_PMON_EVNT_SEL0","MSR_C7_PMON_EVNT_SEL1","MSR_C7_PMON_EVNT_SEL2","MSR_C7_PMON_EVNT_SEL3","MSR_C7_PMON_EVNT_SEL4","MSR_C7_PMON_EVNT_SEL5","MSR_C8_PMON_BOX_CTRL","MSR_C8_PMON_BOX_OVF_CTRL","MSR_C8_PMON_BOX_STATUS","MSR_C8_PMON_CTR0","MSR_C8_PMON_CTR1","MSR_C8_PMON_CTR2","MSR_C8_PMON_CTR3","MSR_C8_PMON_CTR4","MSR_C8_PMON_CTR5","MSR_C8_PMON_EVNT_SEL0","MSR_C8_PMON_EVNT_SEL1","MSR_C8_PMON_EVNT_SEL2","MSR_C8_PMON_EVNT_SEL3","MSR_C8_PMON_EVNT_SEL4","MSR_C8_PMON_EVNT_SEL5","MSR_C9_PMON_BOX_CTRL","MSR_C9_PMON_BOX_OVF_CTRL","MSR_C9_PMON_BOX_STATUS","MSR_C9_PMON_CTR0","MSR_C9_PMON_CTR1","MSR_C9_PMON_CTR2","MSR_C9_PMON_CTR3","MSR_C9_PMON_CTR4","MSR_C9_PMON_CTR5","MSR_C9_PMON_EVNT_SEL0","MSR_C9_PMON_EVNT_SEL1","MSR_C9_PMON_EVNT_SEL2","MSR_C9_PMON_EVNT_SEL3","MSR_C9_PMON_EVNT_SEL4","MSR_C9_PMON_EVNT_SEL5","MSR_CONFIG_TDP_CONTROL","MSR_CONFIG_TDP_LEVEL1","MSR_CONFIG_TDP_LEVEL2","MSR_CONFIG_TDP_NOMINAL","MSR_CORE_C1_RESIDENCY","MSR_CORE_C3_RESIDENCY","MSR_CORE_C4_RESIDENCY","MSR_CORE_C6_RESIDENCY","MSR_CORE_C7_RESIDENCY","MSR_CRU_ESCR0","MSR_CRU_ESCR1","MSR_CRU_ESCR2","MSR_CRU_ESCR3","MSR_CRU_ESCR4","MSR_CRU_ESCR5","MSR_DAC_ESCR0","MSR_DAC_ESCR1","MSR_DEBUGCTLA","MSR_DEBUGCTLB","MSR_DRAM_ENERGY_STATUS","MSR_DRAM_PERF_STATUS","MSR_DRAM_POWER_INFO","MSR_DRAM_POWER_LIMIT","MSR_EBC_FREQUENCY_ID","MSR_EBC_HARD_POWERON","MSR_EBC_SOFT_POWERON","MSR_EBL_CR_POWERON","MSR_EFSB_DRDY0","MSR_EFSB_DRDY1","MSR_EMON_L3_CTR_CTL0","MSR_EMON_L3_CTR_CTL1","MSR_EMON_L3_CTR_CTL2","MSR_EMON_L3_CTR_CTL3","MSR_EMON_L3_CTR_CTL4","MSR_EMON_L3_CTR_CTL5","MSR_EMON_L3_CTR_CTL6","MSR_EMON_L3_CTR_CTL7","MSR_EMON_L3_GL_CTL","MSR_ERROR_CONTROL","MSR_FIRM_ESCR0","MSR_FIRM_ESCR1","MSR_FLAME_CCCR0","MSR_FLAME_CCCR1","MSR_FLAME_CCCR2","MSR_FLAME_CCCR3","MSR_FLAME_COUNTER0","MSR_FLAME_COUNTER1","MSR_FLAME_COUNTER2","MSR_FLAME_COUNTER3","MSR_FLAME_ESCR0","MSR_FLAME_ESCR1","MSR_FSB_ESCR0","MSR_FSB_ESCR1","MSR_FSB_FREQ","MSR_GQ_SNOOP_MESF","MSR_IA32_ADDR0_END","MSR_IA32_ADDR0_START","MSR_IA32_ADDR1_END","MSR_IA32_ADDR1_START","MSR_IA32_ADDR2_END","MSR_IA32_ADDR2_START","MSR_IA32_ADDR3_END","MSR_IA32_ADDR3_START","MSR_IA32_CR3_MATCH","MSR_IA32_RTIT_CTL","MSR_IA32_RTIT_OUTPUT_BASE","MSR_IA32_RTIT_OUTPUT_MASK_PTRS","MSR_IA32_RTIT_STATUS","MSR_IA32_TSX_CTRL","MSR_IFSB_BUSQ0","MSR_IFSB_BUSQ1","MSR_IFSB_CNTR7","MSR_IFSB_CTL6","MSR_IFSB_SNPQ0","MSR_IFSB_SNPQ1","MSR_IQ_CCCR0","MSR_IQ_CCCR1","MSR_IQ_CCCR2","MSR_IQ_CCCR3","MSR_IQ_CCCR4","MSR_IQ_CCCR5","MSR_IQ_COUNTER4","MSR_IQ_COUNTER5","MSR_IQ_ESCR0","MSR_IQ_ESCR1","MSR_IS_ESCR0","MSR_IS_ESCR1","MSR_ITLB_ESCR0","MSR_ITLB_ESCR1","MSR_IX_ESCR0","MSR_LASTBRANCH_0","MSR_LASTBRANCH_0_FROM_IP","MSR_LASTBRANCH_0_TO_IP","MSR_LASTBRANCH_1","MSR_LASTBRANCH_10_FROM_IP","MSR_LASTBRANCH_10_TO_IP","MSR_LASTBRANCH_11_FROM_IP","MSR_LASTBRANCH_11_TO_IP","MSR_LASTBRANCH_12_FROM_IP","MSR_LASTBRANCH_12_TO_IP","MSR_LASTBRANCH_13_FROM_IP","MSR_LASTBRANCH_13_TO_IP","MSR_LASTBRANCH_14_FROM_IP","MSR_LASTBRANCH_14_TO_IP","MSR_LASTBRANCH_15_FROM_IP","MSR_LASTBRANCH_15_TO_IP","MSR_LASTBRANCH_1_FROM_IP","MSR_LASTBRANCH_1_TO_IP","MSR_LASTBRANCH_2","MSR_LASTBRANCH_2_FROM_IP","MSR_LASTBRANCH_2_TO_IP","MSR_LASTBRANCH_3","MSR_LASTBRANCH_3_FROM_IP","MSR_LASTBRANCH_3_TO_IP","MSR_LASTBRANCH_4","MSR_LASTBRANCH_4_FROM_IP","MSR_LASTBRANCH_4_TO_IP","MSR_LASTBRANCH_5","MSR_LASTBRANCH_5_FROM_IP","MSR_LASTBRANCH_5_TO_IP","MSR_LASTBRANCH_6","MSR_LASTBRANCH_6_FROM_IP","MSR_LASTBRANCH_6_TO_IP","MSR_LASTBRANCH_7","MSR_LASTBRANCH_7_FROM_IP","MSR_LASTBRANCH_7_TO_IP","MSR_LASTBRANCH_8_FROM_IP","MSR_LASTBRANCH_8_TO_IP","MSR_LASTBRANCH_9_FROM_IP","MSR_LASTBRANCH_9_TO_IP","MSR_LASTBRANCH_TOS","MSR_LBR_SELECT","MSR_LER_FROM_LIP","MSR_LER_TO_LIP","MSR_M0_PMON_ADDR_MASK","MSR_M0_PMON_ADDR_MATCH","MSR_M0_PMON_BOX_CTRL","MSR_M0_PMON_BOX_OVF_CTRL","MSR_M0_PMON_BOX_STATUS","MSR_M0_PMON_CTR0","MSR_M0_PMON_CTR1","MSR_M0_PMON_CTR2","MSR_M0_PMON_CTR3","MSR_M0_PMON_CTR4","MSR_M0_PMON_CTR5","MSR_M0_PMON_DSP","MSR_M0_PMON_EVNT_SEL0","MSR_M0_PMON_EVNT_SEL1","MSR_M0_PMON_EVNT_SEL2","MSR_M0_PMON_EVNT_SEL3","MSR_M0_PMON_EVNT_SEL4","MSR_M0_PMON_EVNT_SEL5","MSR_M0_PMON_ISS","MSR_M0_PMON_MAP","MSR_M0_PMON_MM_CONFIG","MSR_M0_PMON_MSC_THR","MSR_M0_PMON_PGT","MSR_M0_PMON_PLD","MSR_M0_PMON_TIMESTAMP","MSR_M0_PMON_ZDP","MSR_M1_PMON_ADDR_MASK","MSR_M1_PMON_ADDR_MATCH","MSR_M1_PMON_BOX_CTRL","MSR_M1_PMON_BOX_OVF_CTRL","MSR_M1_PMON_BOX_STATUS","MSR_M1_PMON_CTR0","MSR_M1_PMON_CTR1","MSR_M1_PMON_CTR2","MSR_M1_PMON_CTR3","MSR_M1_PMON_CTR4","MSR_M1_PMON_CTR5","MSR_M1_PMON_DSP","MSR_M1_PMON_EVNT_SEL0","MSR_M1_PMON_EVNT_SEL1","MSR_M1_PMON_EVNT_SEL2","MSR_M1_PMON_EVNT_SEL3","MSR_M1_PMON_EVNT_SEL4","MSR_M1_PMON_EVNT_SEL5","MSR_M1_PMON_ISS","MSR_M1_PMON_MAP","MSR_M1_PMON_MM_CONFIG","MSR_M1_PMON_MSC_THR","MSR_M1_PMON_PGT","MSR_M1_PMON_PLD","MSR_M1_PMON_TIMESTAMP","MSR_M1_PMON_ZDP","MSR_MC0_MISC","MSR_MC10_ADDR","MSR_MC10_CTL","MSR_MC10_MISC","MSR_MC10_STATUS","MSR_MC11_ADDR","MSR_MC11_CTL","MSR_MC11_MISC","MSR_MC11_STATUS","MSR_MC12_ADDR","MSR_MC12_CTL","MSR_MC12_MISC","MSR_MC12_STATUS","MSR_MC13_ADDR","MSR_MC13_CTL","MSR_MC13_MISC","MSR_MC13_STATUS","MSR_MC14_ADDR","MSR_MC14_CTL","MSR_MC14_MISC","MSR_MC14_STATUS","MSR_MC15_ADDR","MSR_MC15_CTL","MSR_MC15_MISC","MSR_MC15_STATUS","MSR_MC16_ADDR","MSR_MC16_CTL","MSR_MC16_MISC","MSR_MC16_STATUS","MSR_MC17_ADDR","MSR_MC17_CTL","MSR_MC17_MISC","MSR_MC17_STATUS","MSR_MC18_ADDR","MSR_MC18_CTL","MSR_MC18_MISC","MSR_MC18_STATUS","MSR_MC19_ADDR","MSR_MC19_CTL","MSR_MC19_MISC","MSR_MC19_STATUS","MSR_MC1_MISC","MSR_MC20_ADDR","MSR_MC20_CTL","MSR_MC20_MISC","MSR_MC20_STATUS","MSR_MC21_ADDR","MSR_MC21_CTL","MSR_MC21_MISC","MSR_MC21_STATUS","MSR_MC22_ADDR","MSR_MC22_CTL","MSR_MC22_MISC","MSR_MC22_STATUS","MSR_MC23_ADDR","MSR_MC23_CTL","MSR_MC23_MISC","MSR_MC23_STATUS","MSR_MC24_ADDR","MSR_MC24_CTL","MSR_MC24_MISC","MSR_MC24_STATUS","MSR_MC25_ADDR","MSR_MC25_CTL","MSR_MC25_MISC","MSR_MC25_STATUS","MSR_MC26_ADDR","MSR_MC26_CTL","MSR_MC26_MISC","MSR_MC26_STATUS","MSR_MC2_MISC","MSR_MC3_ADDR","MSR_MC3_CTL","MSR_MC3_MISC","MSR_MC3_STATUS","MSR_MC4_ADDR","MSR_MC4_CTL","MSR_MC4_CTL2","MSR_MC4_MISC","MSR_MC4_STATUS","MSR_MC5_ADDR","MSR_MC5_CTL","MSR_MC5_MISC","MSR_MC5_STATUS","MSR_MC6_ADDR","MSR_MC6_CTL","MSR_MC6_MISC","MSR_MC6_STATUS","MSR_MC7_ADDR","MSR_MC7_CTL","MSR_MC7_MISC","MSR_MC7_STATUS","MSR_MC8_ADDR","MSR_MC8_CTL","MSR_MC8_MISC","MSR_MC8_STATUS","MSR_MC9_ADDR","MSR_MC9_CTL","MSR_MC9_MISC","MSR_MC9_STATUS","MSR_MCG_MISC","MSR_MCG_R10","MSR_MCG_R11","MSR_MCG_R12","MSR_MCG_R13","MSR_MCG_R14","MSR_MCG_R8","MSR_MCG_R9","MSR_MCG_RAX","MSR_MCG_RBP","MSR_MCG_RBX","MSR_MCG_RCX","MSR_MCG_RDI","MSR_MCG_RDX","MSR_MCG_RFLAGS","MSR_MCG_RIP","MSR_MCG_RSI","MSR_MISC_PWR_MGMT","MSR_MOB_ESCR0","MSR_MOB_ESCR1","MSR_MS_CCCR0","MSR_MS_CCCR1","MSR_MS_CCCR2","MSR_MS_CCCR3","MSR_MS_COUNTER0","MSR_MS_COUNTER1","MSR_MS_COUNTER2","MSR_MS_COUNTER3","MSR_MS_ESCR0","MSR_MS_ESCR1","MSR_OFFCORE_RSP_0","MSR_OFFCORE_RSP_1","MSR_PEBS_ENABLE","MSR_PEBS_LD_LAT","MSR_PEBS_MATRIX_VERT","MSR_PEBS_NUM_ALT","MSR_PERF_CAPABILITIES","MSR_PERF_FIXED_CTR0","MSR_PERF_FIXED_CTR1","MSR_PERF_FIXED_CTR2","MSR_PERF_FIXED_CTR_CTRL","MSR_PERF_GLOBAL_CTRL","MSR_PERF_GLOBAL_OVF_CTRL","MSR_PERF_GLOBAL_STAUS","MSR_PERF_STATUS","MSR_PKGC3_IRTL","MSR_PKGC6_IRTL","MSR_PKGC7_IRTL","MSR_PKG_C10_RESIDENCY","MSR_PKG_C2_RESIDENCY","MSR_PKG_C3_RESIDENCY","MSR_PKG_C4_RESIDENCY","MSR_PKG_C6C_RESIDENCY","MSR_PKG_C6_RESIDENCY","MSR_PKG_C7_RESIDENCY","MSR_PKG_C9_RESIDENCY","MSR_PKG_CST_CONFIG_CONTROL","MSR_PKG_ENERGY_STATUS","MSR_PKG_PERF_STATUS","MSR_PKG_POWER_INFO","MSR_PKG_POWER_LIMIT","MSR_PLATFORM_BRV","MSR_PLATFORM_ID","MSR_PLATFORM_INFO","MSR_PMG_IO_CAPTURE_BASE","MSR_PMH_ESCR0","MSR_PMH_ESCR1","MSR_POWER_CTL","MSR_PP0_ENERGY_STATUS","MSR_PP0_PERF_STATUS","MSR_PP0_POLICY","MSR_PP0_POWER_LIMIT","MSR_PP1_ENERGY_STATUS","MSR_PP1_POLICY","MSR_PP1_POWER_LIMIT","MSR_R0_PMON_BOX_CTRL","MSR_R0_PMON_BOX_OVF_CTRL","MSR_R0_PMON_BOX_STATUS","MSR_R0_PMON_CTR0","MSR_R0_PMON_CTR1","MSR_R0_PMON_CTR2","MSR_R0_PMON_CTR3","MSR_R0_PMON_CTR4","MSR_R0_PMON_CTR5","MSR_R0_PMON_CTR6","MSR_R0_PMON_CTR7","MSR_R0_PMON_EVNT_SEL0","MSR_R0_PMON_EVNT_SEL1","MSR_R0_PMON_EVNT_SEL2","MSR_R0_PMON_EVNT_SEL3","MSR_R0_PMON_EVNT_SEL4","MSR_R0_PMON_EVNT_SEL5","MSR_R0_PMON_EVNT_SEL6","MSR_R0_PMON_EVNT_SEL7","MSR_R0_PMON_IPERF0_P0","MSR_R0_PMON_IPERF0_P1","MSR_R0_PMON_IPERF0_P2","MSR_R0_PMON_IPERF0_P3","MSR_R0_PMON_IPERF0_P4","MSR_R0_PMON_IPERF0_P5","MSR_R0_PMON_IPERF0_P6","MSR_R0_PMON_IPERF0_P7","MSR_R0_PMON_QLX_P0","MSR_R0_PMON_QLX_P1","MSR_R0_PMON_QLX_P2","MSR_R0_PMON_QLX_P3","MSR_R1_PMON_BOX_CTRL","MSR_R1_PMON_BOX_OVF_CTRL","MSR_R1_PMON_BOX_STATUS","MSR_R1_PMON_CTR10","MSR_R1_PMON_CTR11","MSR_R1_PMON_CTR12","MSR_R1_PMON_CTR13","MSR_R1_PMON_CTR14","MSR_R1_PMON_CTR15","MSR_R1_PMON_CTR8","MSR_R1_PMON_CTR9","MSR_R1_PMON_EVNT_SEL10","MSR_R1_PMON_EVNT_SEL11","MSR_R1_PMON_EVNT_SEL12","MSR_R1_PMON_EVNT_SEL13","MSR_R1_PMON_EVNT_SEL14","MSR_R1_PMON_EVNT_SEL15","MSR_R1_PMON_EVNT_SEL8","MSR_R1_PMON_EVNT_SEL9","MSR_R1_PMON_IPERF1_P10","MSR_R1_PMON_IPERF1_P11","MSR_R1_PMON_IPERF1_P12","MSR_R1_PMON_IPERF1_P13","MSR_R1_PMON_IPERF1_P14","MSR_R1_PMON_IPERF1_P15","MSR_R1_PMON_IPERF1_P8","MSR_R1_PMON_IPERF1_P9","MSR_R1_PMON_QLX_P4","MSR_R1_PMON_QLX_P5","MSR_R1_PMON_QLX_P6","MSR_R1_PMON_QLX_P7","MSR_RAPL_POWER_UNIT","MSR_RAT_ESCR0","MSR_RAT_ESCR1","MSR_S0_PMON_BOX_CTRL","MSR_S0_PMON_BOX_OVF_CTRL","MSR_S0_PMON_BOX_STATUS","MSR_S0_PMON_CTR0","MSR_S0_PMON_CTR1","MSR_S0_PMON_CTR2","MSR_S0_PMON_CTR3","MSR_S0_PMON_EVNT_SEL0","MSR_S0_PMON_EVNT_SEL1","MSR_S0_PMON_EVNT_SEL2","MSR_S0_PMON_EVNT_SEL3","MSR_S0_PMON_MASK","MSR_S0_PMON_MATCH","MSR_S1_PMON_BOX_CTRL","MSR_S1_PMON_BOX_OVF_CTRL","MSR_S1_PMON_BOX_STATUS","MSR_S1_PMON_CTR0","MSR_S1_PMON_CTR1","MSR_S1_PMON_CTR2","MSR_S1_PMON_CTR3","MSR_S1_PMON_EVNT_SEL0","MSR_S1_PMON_EVNT_SEL1","MSR_S1_PMON_EVNT_SEL2","MSR_S1_PMON_EVNT_SEL3","MSR_S1_PMON_MASK","MSR_S1_PMON_MATCH","MSR_SAAT_ESCR0","MSR_SAAT_ESCR1","MSR_SMI_COUNT","MSR_SMM_BLOCKED","MSR_SMM_DELAYED","MSR_SMM_FEATURE_CONTROL","MSR_SMM_MCA_CAP","MSR_SMRR_PHYSMASK","MSR_SSU_ESCR0","MSR_TBPU_ESCR0","MSR_TBPU_ESCR1","MSR_TC_ESCR0","MSR_TC_ESCR1","MSR_TEMPERATURE_TARGET","MSR_THERM2_CTL","MSR_TURBO_ACTIVATION_RATIO","MSR_TURBO_POWER_CURRENT_LIMIT","MSR_TURBO_RATIO_LIMIT","MSR_U2L_ESCR0","MSR_U2L_ESCR1","MSR_UNCORE_ADDR_OPCODE_MATCH","MSR_UNCORE_FIXED_CTR0","MSR_UNCORE_FIXED_CTR_CTRL","MSR_UNCORE_PERFEVTSEL0","MSR_UNCORE_PERFEVTSEL1","MSR_UNCORE_PERFEVTSEL2","MSR_UNCORE_PERFEVTSEL3","MSR_UNCORE_PERFEVTSEL4","MSR_UNCORE_PERFEVTSEL5","MSR_UNCORE_PERFEVTSEL6","MSR_UNCORE_PERFEVTSEL7","MSR_UNCORE_PERF_GLOBAL_CTRL","MSR_UNCORE_PERF_GLOBAL_OVF_CTRL","MSR_UNCORE_PERF_GLOBAL_STATUS","MSR_UNCORE_PMC0","MSR_UNCORE_PMC1","MSR_UNCORE_PMC2","MSR_UNCORE_PMC3","MSR_UNCORE_PMC4","MSR_UNCORE_PMC5","MSR_UNCORE_PMC6","MSR_UNCORE_PMC7","MSR_UNC_ARB_PERFEVTSEL0","MSR_UNC_ARB_PERFEVTSEL1","MSR_UNC_ARB_PER_CTR0","MSR_UNC_ARB_PER_CTR1","MSR_UNC_CBO_0_PERFEVTSEL0","MSR_UNC_CBO_0_PERFEVTSEL1","MSR_UNC_CBO_0_PER_CTR0","MSR_UNC_CBO_0_PER_CTR1","MSR_UNC_CBO_1_PERFEVTSEL0","MSR_UNC_CBO_1_PERFEVTSEL1","MSR_UNC_CBO_1_PER_CTR0","MSR_UNC_CBO_1_PER_CTR1","MSR_UNC_CBO_2_PERFEVTSEL0","MSR_UNC_CBO_2_PERFEVTSEL1","MSR_UNC_CBO_2_PER_CTR0","MSR_UNC_CBO_2_PER_CTR1","MSR_UNC_CBO_3_PERFEVTSEL0","MSR_UNC_CBO_3_PERFEVTSEL1","MSR_UNC_CBO_3_PER_CTR0","MSR_UNC_CBO_3_PER_CTR1","MSR_UNC_CBO_CONFIG","MSR_UNC_PERF_FIXED_CTR","MSR_UNC_PERF_FIXED_CTRL","MSR_UNC_PERF_GLOBAL_CTRL","MSR_UNC_PERF_GLOBAL_STATUS","MSR_U_PMON_CTR","MSR_U_PMON_EVNT_SEL","MSR_U_PMON_GLOBAL_CTRL","MSR_U_PMON_GLOBAL_OVF_CTRL","MSR_U_PMON_GLOBAL_STATUS","MSR_W_PMON_BOX_CTRL","MSR_W_PMON_BOX_OVF_CTRL","MSR_W_PMON_BOX_STATUS","MSR_W_PMON_CTR0","MSR_W_PMON_CTR1","MSR_W_PMON_CTR2","MSR_W_PMON_CTR3","MSR_W_PMON_EVNT_SEL0","MSR_W_PMON_EVNT_SEL1","MSR_W_PMON_EVNT_SEL2","MSR_W_PMON_EVNT_SEL3","MSR_W_PMON_FIXED_CTR","MSR_W_PMON_FIXED_CTR_CTL","P5_MC_ADDR","P5_MC_TYPE","ROB_CR_BKUPTMPDR6","SYSENTER_CS_MSR","SYSENTER_EIP_MSR","SYSENTER_ESP_MSR","TEST_CTL","TSC","rdmsr","wrmsr","RdRand","RdSeed","fill_random","fill_random","rdrand16","rdrand32","rdrand64","rdrand_slice","rdseed16","rdseed32","rdseed64","rdseed_slice","BuildDescriptor","CallGate","CallGate16","CallGate32","CodeSegmentType","DataSegmentType","Descriptor","DescriptorBuilder","Execute","ExecuteAccessed","ExecuteConforming","ExecuteConformingAccessed","ExecuteRead","ExecuteReadAccessed","ExecuteReadConforming","ExecuteReadConformingAccessed","GateDescriptorBuilder","InterruptGate","InterruptGate16","InterruptGate32","LDT","LDT","LdtDescriptorBuilder","NULL","RPL_0","RPL_1","RPL_2","RPL_3","ReadExpand","ReadExpandAccessed","ReadOnly","ReadOnlyAccessed","ReadWrite","ReadWriteAccessed","ReadWriteExpand","ReadWriteExpandAccessed","SegmentDescriptorBuilder","SegmentSelector","SystemDescriptorTypes32","SystemDescriptorTypes64","TI_GDT","TI_LDT","TSSAvailable16","TSSBusy16","TaskGate","TaskGateDescriptorBuilder","TrapGate","TrapGate16","TrapGate32","TssAvailable","TssAvailable32","TssBusy","TssBusy32","all","as_u64","avl","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_gate_descriptor","call_gate_descriptor","call_gate_descriptor","call_gate_descriptor","clone","clone","clone","clone","clone","clone","cmp","code_descriptor","code_descriptor","complement","contains","cs","data_descriptor","data_descriptor","db","default","difference","dpl","ds","empty","eq","eq","eq","eq","eq","es","extend","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","fs","gs","hash","index","insert","interrupt_descriptor","interrupt_descriptor","interrupt_descriptor","interrupt_descriptor","intersection","intersects","into","into","into","into","into","into","into","is_all","is_empty","ist","l","ldt_descriptor","ldt_descriptor","ldt_descriptor","limit_granularity_4kb","load_cs","load_ds","load_es","load_fs","load_gs","load_ss","lower","new","not","partial_cmp","present","remove","set","set_avl","set_base_limit","set_db","set_dpl","set_g","set_l","set_p","set_s","set_selector_offset","set_type","ss","sub","sub_assign","symmetric_difference","task_gate_descriptor","task_gate_descriptor","toggle","trap_gate_descriptor","trap_gate_descriptor","trap_gate_descriptor","trap_gate_descriptor","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tss_descriptor","tss_descriptor","tss_descriptor","tss_descriptor","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","upper","load_tr","segmentation","tr","rdtsc","rdtscp","flush","flush_all","Err","Ok","Result","VmFail","VmFailInvalid","VmFailValid","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","vmcs","control","guest","host","ro","ACK_INTERRUPT_ON_EXIT","APIC_ACCESS_ADDR_FULL","APIC_ACCESS_ADDR_HIGH","CLEAR_IA32_BNDCFGS","CLEAR_IA32_RTIT_CTL","CONCEAL_VMX_FROM_PT","CONCEAL_VMX_FROM_PT","CONCEAL_VMX_FROM_PT","CR0_GUEST_HOST_MASK","CR0_READ_SHADOW","CR3_LOAD_EXITING","CR3_STORE_EXITING","CR3_TARGET_COUNT","CR3_TARGET_VALUE0","CR3_TARGET_VALUE1","CR3_TARGET_VALUE2","CR3_TARGET_VALUE3","CR4_GUEST_HOST_MASK","CR4_READ_SHADOW","CR8_LOAD_EXITING","CR8_STORE_EXITING","DEACTIVATE_DUAL_MONITOR","DTABLE_EXITING","ENABLE_EPT","ENABLE_INVPCID","ENABLE_PML","ENABLE_RDTSCP","ENABLE_USER_WAIT_PAUSE","ENABLE_VM_FUNCTIONS","ENABLE_VPID","ENABLE_XSAVES_XRSTORS","ENCLS_EXITING","ENCLS_EXITING_BITMAP_FULL","ENCLS_EXITING_BITMAP_HIGH","ENCLV_EXITING","ENTRY_TO_SMM","EOI_EXIT0_FULL","EOI_EXIT0_HIGH","EOI_EXIT1_FULL","EOI_EXIT1_HIGH","EOI_EXIT2_FULL","EOI_EXIT2_HIGH","EOI_EXIT3_FULL","EOI_EXIT3_HIGH","EPTP_FULL","EPTP_HIGH","EPTP_INDEX","EPTP_LIST_ADDR_FULL","EPTP_LIST_ADDR_HIGH","EPT_VIOLATION_VE","EXCEPTION_BITMAP","EXECUTIVE_VMCS_PTR_FULL","EXECUTIVE_VMCS_PTR_HIGH","EXTERNAL_INTERRUPT_EXITING","EntryControls","ExitControls","HLT_EXITING","HOST_ADDRESS_SPACE_SIZE","IA32E_MODE_GUEST","INTEL_PT_GUEST_PHYSICAL","INTERRUPT_WINDOW_EXITING","INVLPG_EXITING","IO_BITMAP_A_ADDR_FULL","IO_BITMAP_A_ADDR_HIGH","IO_BITMAP_B_ADDR_FULL","IO_BITMAP_B_ADDR_HIGH","LOAD_DEBUG_CONTROLS","LOAD_IA32_BNDCFGS","LOAD_IA32_EFER","LOAD_IA32_EFER","LOAD_IA32_PAT","LOAD_IA32_PAT","LOAD_IA32_PERF_GLOBAL_CTRL","LOAD_IA32_PERF_GLOBAL_CTRL","LOAD_IA32_RTIT_CTL","MODE_BASED_EPT","MONITOR_EXITING","MONITOR_TRAP_FLAG","MOV_DR_EXITING","MSR_BITMAPS_ADDR_FULL","MSR_BITMAPS_ADDR_HIGH","MWAIT_EXITING","NMI_EXITING","NMI_WINDOW_EXITING","PAGE_FAULT_ERR_CODE_MASK","PAGE_FAULT_ERR_CODE_MATCH","PAUSE_EXITING","PAUSE_LOOP_EXITING","PINBASED_EXEC_CONTROLS","PLE_GAP","PLE_WINDOW","PML_ADDR_FULL","PML_ADDR_HIGH","POSTED_INTERRUPTS","POSTED_INTERRUPT_DESC_ADDR_FULL","POSTED_INTERRUPT_DESC_ADDR_HIGH","POSTED_INTERRUPT_NOTIFICATION_VECTOR","PRIMARY_PROCBASED_EXEC_CONTROLS","PinbasedControls","PrimaryControls","RDPMC_EXITING","RDRAND_EXITING","RDSEED_EXITING","RDTSC_EXITING","SAVE_DEBUG_CONTROLS","SAVE_IA32_EFER","SAVE_IA32_PAT","SAVE_VMX_PREEMPTION_TIMER","SECONDARY_CONTROLS","SECONDARY_PROCBASED_EXEC_CONTROLS","SUBPAGE_PERM_TABLE_PTR_FULL","SUBPAGE_PERM_TABLE_PTR_HIGH","SUB_PAGE_EPT","SecondaryControls","TPR_THRESHOLD","TSC_MULTIPLIER_FULL","TSC_MULTIPLIER_HIGH","TSC_OFFSET_FULL","TSC_OFFSET_HIGH","UNCOND_IO_EXITING","UNRESTRICTED_GUEST","USE_IO_BITMAPS","USE_MSR_BITMAPS","USE_TPR_SHADOW","USE_TSC_OFFSETTING","USE_TSC_SCALING","VIRTUALIZE_APIC","VIRTUALIZE_APIC_REGISTER","VIRTUALIZE_X2APIC","VIRTUAL_INTERRUPT_DELIVERY","VIRTUAL_NMIS","VIRT_APIC_ADDR_FULL","VIRT_APIC_ADDR_HIGH","VIRT_EXCEPTION_INFO_ADDR_FULL","VIRT_EXCEPTION_INFO_ADDR_HIGH","VMCS_SHADOWING","VMENTRY_CONTROLS","VMENTRY_EXCEPTION_ERR_CODE","VMENTRY_INSTRUCTION_LEN","VMENTRY_INTERRUPTION_INFO_FIELD","VMENTRY_MSR_LOAD_ADDR_FULL","VMENTRY_MSR_LOAD_ADDR_HIGH","VMENTRY_MSR_LOAD_COUNT","VMEXIT_CONTROLS","VMEXIT_MSR_LOAD_ADDR_FULL","VMEXIT_MSR_LOAD_ADDR_HIGH","VMEXIT_MSR_LOAD_COUNT","VMEXIT_MSR_STORE_ADDR_FULL","VMEXIT_MSR_STORE_ADDR_HIGH","VMEXIT_MSR_STORE_COUNT","VMREAD_BITMAP_ADDR_FULL","VMREAD_BITMAP_ADDR_HIGH","VMWRITE_BITMAP_ADDR_FULL","VMWRITE_BITMAP_ADDR_HIGH","VMX_PREEMPTION_TIMER","VM_FUNCTION_CONTROLS_FULL","VM_FUNCTION_CONTROLS_HIGH","VPID","WBINVD_EXITING","XSS_EXITING_BITMAP_FULL","XSS_EXITING_BITMAP_HIGH","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","remove","remove","set","set","set","set","set","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","ACTIVITY_STATE","CR0","CR3","CR4","CS_ACCESS_RIGHTS","CS_BASE","CS_LIMIT","CS_SELECTOR","DR7","DS_ACCESS_RIGHTS","DS_BASE","DS_LIMIT","DS_SELECTOR","ES_ACCESS_RIGHTS","ES_BASE","ES_LIMIT","ES_SELECTOR","FS_ACCESS_RIGHTS","FS_BASE","FS_LIMIT","FS_SELECTOR","GDTR_BASE","GDTR_LIMIT","GS_ACCESS_RIGHTS","GS_BASE","GS_LIMIT","GS_SELECTOR","IA32_BNDCFGS_FULL","IA32_BNDCFGS_HIGH","IA32_DEBUGCTL_FULL","IA32_DEBUGCTL_HIGH","IA32_EFER_FULL","IA32_EFER_HIGH","IA32_PAT_FULL","IA32_PAT_HIGH","IA32_PERF_GLOBAL_CTRL_FULL","IA32_PERF_GLOBAL_CTRL_HIGH","IA32_RTIT_CTL_FULL","IA32_RTIT_CTL_HIGH","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IDTR_BASE","IDTR_LIMIT","INTERRUPTIBILITY_STATE","INTERRUPT_STATUS","LDTR_ACCESS_RIGHTS","LDTR_BASE","LDTR_LIMIT","LDTR_SELECTOR","LINK_PTR_FULL","LINK_PTR_HIGH","PDPTE0_FULL","PDPTE0_HIGH","PDPTE1_FULL","PDPTE1_HIGH","PDPTE2_FULL","PDPTE2_HIGH","PDPTE3_FULL","PDPTE3_HIGH","PENDING_DBG_EXCEPTIONS","PML_INDEX","RFLAGS","RIP","RSP","SMBASE","SS_ACCESS_RIGHTS","SS_BASE","SS_LIMIT","SS_SELECTOR","TR_ACCESS_RIGHTS","TR_BASE","TR_LIMIT","TR_SELECTOR","VMX_PREEMPTION_TIMER_VALUE","CR0","CR3","CR4","CS_SELECTOR","DS_SELECTOR","ES_SELECTOR","FS_BASE","FS_SELECTOR","GDTR_BASE","GS_BASE","GS_SELECTOR","IA32_EFER_FULL","IA32_EFER_HIGH","IA32_PAT_FULL","IA32_PAT_HIGH","IA32_PERF_GLOBAL_CTRL_FULL","IA32_PERF_GLOBAL_CTRL_HIGH","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IDTR_BASE","RIP","RSP","SS_SELECTOR","TR_BASE","TR_SELECTOR","EXIT_QUALIFICATION","EXIT_REASON","GUEST_LINEAR_ADDR","GUEST_PHYSICAL_ADDR_FULL","GUEST_PHYSICAL_ADDR_HIGH","IDT_VECTORING_ERR_CODE","IDT_VECTORING_INFO","IO_RCX","IO_RDI","IO_RIP","IO_RSI","VMEXIT_INSTRUCTION_INFO","VMEXIT_INSTRUCTION_LEN","VMEXIT_INTERRUPTION_ERR_CODE","VMEXIT_INTERRUPTION_INFO","VM_INSTRUCTION_ERROR"],"q":[[0,"x86"],[40,"x86::apic"],[165,"x86::apic::ioapic"],[179,"x86::apic::x2apic"],[204,"x86::apic::xapic"],[271,"x86::bits16"],[272,"x86::bits32"],[276,"x86::bits32::eflags"],[349,"x86::bits32::paging"],[708,"x86::bits32::task"],[745,"x86::bits64"],[753,"x86::bits64::paging"],[1391,"x86::bits64::registers"],[1394,"x86::bits64::rflags"],[1470,"x86::bits64::segmentation"],[1493,"x86::bits64::sgx"],[1517,"x86::bits64::syscall"],[1524,"x86::bits64::task"],[1545,"x86::bits64::vmx"],[1554,"x86::controlregs"],[1749,"x86::cpuid"],[2875,"x86::cpuid::native_cpuid"],[2876,"x86::debugregs"],[3021,"x86::dtables"],[3041,"x86::fence"],[3044,"x86::io"],[3050,"x86::irq"],[3143,"x86::msr"],[4211,"x86::random"],[4223,"x86::segmentation"],[4446,"x86::task"],[4449,"x86::time"],[4451,"x86::tlb"],[4453,"x86::vmx"],[4468,"x86::vmx::vmcs"],[4472,"x86::vmx::vmcs::control"],[4868,"x86::vmx::vmcs::guest"],[4943,"x86::vmx::vmcs::host"],[4969,"x86::vmx::vmcs::ro"],[4985,"core::fmt"],[4986,"core::fmt"],[4987,"core::any"],[4988,"core::cmp"],[4989,"core::iter::traits::collect"],[4990,"core::option"],[4991,"core::hash"],[4992,"core::convert"],[4993,"core::marker"],[4994,"core::fmt"]],"d":["x86 Protection levels","","","","","Register information and driver to program xAPIC, X2APIC …","Data structures and functions used by 16-bit mode.","Data structures and functions used by 32-bit mode.","Data structures and functions used by IA-32e but not …","","","","Functions to read and write control registers. See Intel …","Support for the CPUID instructions.","A short-cut to the architecture (bits32 or bits64) this …","Functions to read and write debug registers.","Functions and data-structures for working with descriptor …","","Intel fence instructions","","Returns the argument unchanged.","“Dereferences” the fs register at <code>offset</code>.","“Dereferences” the gs register at <code>offset</code>.","Stops instruction execution and places the processor in a …","Generate a software interrupt. This is a macro argument …","Calls <code>U::from(self)</code>.","I/O port functionality.","Shared interrupt description and set-up code. See the …","MSR value list and function to read and write them.","Instructions to generate random bits directly from the …","Read Processor ID","Functionality to manipulate segment registers, build …","","Helpers to program the task state segment. See Intel 3a, …","Functions to read time stamp counters on x86.","Functions to flush the translation lookaside buffer (TLB).","","","","Data structures and definitions used by Virtual Machine …","","","Abstracts common interface of local APIC (x2APIC, xAPIC) …","Encodes the id of a core.","","","Specify IPI Delivery Mode","Specify Delivery Status","Specify IPI Destination Mode.","IPI Destination Shorthand","","Delivers the interrupt specified in the vector field to …","Abstract the IPI control register","","Delivers an INIT request to the target processor or …","IPI Level","","","Same as fixed mode, except that the interrupt is delivered …","","Delivers an NMI interrupt to the target processor or …","","","Delivers an SMI interrupt to the target processor or …","","Sends a special start-up IPI (called a SIPI) to the target …","IPI Trigger Mode","A core destination encoded as an x2APIC ID.","A core destination encoded as an xAPIC ID.","Reserved","","","","","","","","","","","","","","","","","Is a bootstrap processor?","","End Of Interrupt – Acknowledge interrupt delivery.","","","","","","","","","","","","","","","","","Short-hand to create a Icr value that will work for an …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return APIC ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","To control an I/O APIC.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","Returns the logical APIC ID.","Get lower 32-bits of the Icr register.","Send a generic IPI.","","","","","","","","","","","","","","","","","Enable TSC deadline timer.","Set TSC deadline value.","","","","","","","","","Get upper 32-bits of the Icr register.","Read APIC version","x2APIC, the most recent APIC on x86 for large servers with …","Returns the logical address relative to a cluster for a …","Returns the cluster ID a given APIC ID belongs to …","Returns the Logical x2APIC ID.","Information about the xAPIC for the local APIC.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Instantiate a new IoApic.","Number of supported interrupts by this IO APIC.","","","","","Represents an x2APIC driver instance.","Attach to APIC (enable x2APIC mode, initialize LINT0)","","","Is a bootstrap processor?","","Detach from APIC (disable x2APIC and xAPIC mode).","End Of Interrupt – Acknowledge interrupt delivery.","","Returns the argument unchanged.","Read local x2APIC ID.","Calls <code>U::from(self)</code>.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","In x2APIC mode, the 32-bit logical x2APIC ID, can be read …","Create a new x2APIC driver object for the local core.","Send a generic IPI.","Send an IPI to yourself.","","","Enable TSC timer","Set tsc deadline.","","Read APIC version.","State for the XAPIC driver.","EOI register. Write-only.","Error Status Register (ESR). Read/write. See Section …","Interrupt Command Register (ICR). Read/write. See Figure …","Interrupt Command Register (ICR). Read/write. See Figure …","Local APIC ID register. Read-only. See Section 10.12.5.1 …","Interrupt Request Register (IRR); bits 31:0. Read-only.","IRR bits 63:32. Read-only.","IRR bits 95:64. Read-only.","IRR bits 127:96. Read-only.","IRR bits 159:128. Read-only.","IRR bits 191:160. Read-only.","IRR bits 223:192. Read-only.","IRR bits 255:224. Read-only.","In-Service Register (ISR); bits 31:0. Read-only.","ISR bits 63:32. Read-only.","ISR bits 95:64. Read-only.","ISR bits 127:96. Read-only.","ISR bits 159:128. Read-only.","ISR bits 191:160. Read-only.","ISR bits 223:192. Read-only.","ISR bits 255:224. Read-only.","Logical Destination Register (LDR). Read/write in xAPIC …","LVT CMCI register. Read/write. See Figure 10-8 for …","LVT Error register. Read/write. See Figure 10-8 for …","LVT LINT0 register. Read/write. See Figure 10-8 for …","LVT LINT1 register. Read/write. See Figure 10-8 for …","LVT Performance Monitoring register. Read/write. See …","LVT Thermal Sensor register. Read/write. See Figure 10-8 …","LVT Timer register. Read/write. See Figure 10-8 for …","Processor Priority Register (PPR). Read-only.","Spurious Interrupt Vector Register (SVR). Read/write. See …","Current Count register (for Timer). Read-only.","Divide Configuration Register (DCR; for Timer). …","Initial Count register (for Timer). Read/write.","Trigger Mode Register (TMR); bits 31:0. Read-only.","TMR bits 63:32. Read-only.","TMR bits 95:64. Read-only.","TMR bits 127:96. Read-only.","TMR bits 159:128. Read-only.","TMR bits 191:160. Read-only.","TMR bits 223:192. Read-only.","TMR bits 255:224. Read-only.","Task Priority Register (TPR). Read/write. Bits 31:8 are …","Local APIC Version register. Read-only. Same version used …","Attach driver to the xAPIC (enables device).","","","Is this the bootstrap core?","Detach driver form the xAPIC (disables device).","End Of Interrupt – Acknowledge interrupt delivery.","","Returns the argument unchanged.","Read local APIC ID.","Calls <code>U::from(self)</code>.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","","Create a new xAPIC object for the local CPU.","Send a generic IPI.","","","Enable TSC timer.","Set TSC deadline value.","","Read APIC version","","Processor state stored in the EFLAGS register.","Description of the data-structures for IA-32 paging mode.","","Helpers to program the task state segment. See Intel 3a, …","The EFLAGS register.","Bit 1 is always 1.","Alignment Check (AC)","Auxiliary Carry Flag (AF)","Carry Flag (CF)","Direction Flag (DF)","ID Flag (ID)","Interrupt Enable Flag (IF)","I/O Privilege Level (IOPL) 0","I/O Privilege Level (IOPL) 1","I/O Privilege Level (IOPL) 2","I/O Privilege Level (IOPL) 3","Nested Task (NT)","Overflow Flag (OF)","Parity Flag (PF)","Resume Flag (RF)","Sign Flag (SF)","Trap Flag (TF)","Virtual Interrupt Flag (VIF)","Virtual Interrupt Pending (VIP)","Virtual-8086 Mode (VM)","Zero Flag (ZF)","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","Clears the AC flag bit in EFLAGS register.","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates a new Flags with the given I/O privilege level.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates a new Flags entry. Ensures bit 1 is set.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Sets the AC flag bit in EFLAGS register.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Accessed; indicates whether software has accessed the …","Accessed; indicates whether software has accessed the …","Log2 of base page size (12 bits).","Size of a base page (4 KiB)","Size of a cache-line","Dirty; indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Global; if CR4.PGE = 1, determines whether the translation …","Global; if CR4.PGE = 1, determines whether the translation …","A wrapper for an IO address (IOVA / DMA Address for …","Size of a large page (4 MiB)","A type wrapping a large page with a 4 MiB buffer.","Present; must be 1 to map a 4-MByte page.","Present; must be 1 to map a 4-KByte page.","Page tables have 512 = 4096 / 32 entries.","If the PAT is supported, indirectly determines the memory …","If the PAT is supported, indirectly determines the memory …","A wrapper for a physical address.","Page-level cache disable.","Page-level cache disable.","A page directory.","A PD Entry consists of an address and a bunch of flags.","PD configuration bits description.","Page size; if set this entry maps a 4-MByte page; …","A page table.","A PT Entry consists of an address and a bunch of flags.","PT Entry bits description.","Page-level write-through.","Page-level write-through.","A type wrapping a base page with a 4 KiB buffer.","Read/write; if 0, writes may not be allowed to the 4-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","A wrapper for a virtual address.","","","","","","","","","","","","","","","","","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Returns the set containing all flags.","Returns the set containing all flags.","Convert to mutable pointer.","Convert to mutable pointer.","Convert to pointer.","Convert to pointer.","Convert to <code>u32</code>","Convert to <code>u32</code>","Convert to <code>u32</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Offset within the 4 KiB page.","Offset within the 4 KiB page.","Offset within the 4 KiB page.","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","","","","","","","","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Convert from <code>u32</code>","Convert from <code>usize</code>","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Accessed; indicates whether software has accessed the …","Accessed; indicates whether software has accessed the …","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Dirty; indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Global; if CR4.PGE = 1, determines whether the translation …","Global; if CR4.PGE = 1, determines whether the translation …","Is this address aligned to a 4 MiB page?","Is this address aligned to a 4 MiB page?","Is this address aligned to a 4 MiB page?","Page size; if set this entry maps a 4-MByte page; …","Page-level cache disable.","Page-level cache disable.","Page-level write-through.","Page-level write-through.","If the PAT is supported, indirectly determines the memory …","If the PAT is supported, indirectly determines the memory …","Present; must be 1 to map a 4-MByte page.","Present; must be 1 to map a 4-KByte page.","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","Read/write; if 0, writes may not be allowed to the 4-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","Is zero?","Is zero?","Is zero?","Offset within the 4 MiB page.","Offset within the 4 MiB page.","Offset within the 4 MiB page.","Creates a new PDEntry.","Creates a new PTEntry.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","Given virtual address calculate corresponding entry in PD.","Given virtual address calculate corresponding entry in PT.","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Physical Address zero.","IO Address zero.","Virtual Address zero.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Description of the data-structures for IA-32e paging mode.","","Processor state stored in the RFLAGS register.","","Program x86 enclaves.","Invokes an OS system-call handler at privilege level 0.","Helpers to program the task state segment. See Intel 3a, …","Virtualize processor hardware for multiple software …","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; if PS set indicates whether software has …","Accessed; if PS set indicates whether software has …","Accessed; indicates whether software has accessed the …","Log2 of base page size (12 bits).","Size of a base page (4 KiB)","Size of a cache-line","Dirty; if PS indicates whether software has written to the …","Dirty; if PS indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if CR4.PGE = 1, determines whether the translation …","Size of a huge page (1 GiB)","A type wrapping a huge page with a 1 GiB buffer.","A wrapper for an IO address (IOVA / DMA Address for …","Size of a large page (2 MiB)","A type wrapping a large page with a 2 MiB buffer.","MAXPHYADDR, which is at most 52; (use CPUID for finding …","Maximum virtual address.","Maximum supported bits for virtual addresses (with 5-level …","Present; must be 1 to reference a page-directory-pointer …","Present; must be 1 to reference a PML5 entry","Present; must be 1 to map a 1-GByte page or reference a …","Present; must be 1 to map a 2-MByte page or reference a …","Present; must be 1 to map a 4-KByte page.","Page tables have 512 = 4096 / 64 entries.","Indirectly determines the memory type used to access the …","Indirectly determines the memory type used to access the …","A wrapper for a physical address.","Page-level cache disable; indirectly determines the memory …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable.","Page-level cache disable.","Page-level cache disable.","A page directory.","A PD Entry consists of an address and a bunch of flags.","PD configuration bits description.","A page directory pointer table.","A PDPT Entry consists of an address and a bunch of flags.","PDPT configuration bit description.","A PML4 table.","A PML4 Entry consists of an address and a bunch of flags.","PML4 configuration bit description.","Size of a region covered by a PML4 Entry (512 GiB)","A PML5 table","A PML5 Entry consists of an address and a bunch of flags.","PML5 configuration bit description.","Page size; if set this entry maps a 1-GByte page; …","Page size; if set this entry maps a 2-MByte page; …","A page table.","A PT Entry consists of an address and a bunch of flags.","PT Entry bits description.","Page-level write-through; indirectly determines the memory …","Page-level write-through; indirectly determines the memory …","Page-level write-through.","Page-level write-through.","Page-level write-through.","A type wrapping a base page with a 4 KiB buffer.","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the 1-GByte …","Read/write; if 0, writes may not be allowed to the 2-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 9)","User defined flag – ignored by hardware (bit 9)","User defined flag – ignored by hardware (bit 9)","User defined flag – ignored by hardware (bit 9)","User defined flag – ignored by hardware (bit 9)","A wrapper for a virtual address.","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","","","","","","","","","","","","","","","","","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Convert to mutable pointer.","Convert to pointer.","Convert to <code>u64</code>","Convert to <code>u64</code>","Convert to <code>u64</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Offset within the 4 KiB page.","Offset within the 4 KiB page.","Offset within the 4 KiB page.","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","","","","","","","","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","Convert from <code>u64</code>","Convert from <code>usize</code>","","","","","","","","","Offset within the 1 GiB page.","Offset within the 1 GiB page.","Offset within the 1 GiB page.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; if PS set indicates whether software has …","Accessed; if PS set indicates whether software has …","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Dirty; if PS set indicates whether software has written to …","Dirty; if PD_PS set indicates whether software has written …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Is this address aligned to a 1 GiB page?","Is this address aligned to a 1 GiB page?","Is this address aligned to a 1 GiB page?","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","Is this address aligned to a 2 MiB page?","Is this address aligned to a 2 MiB page?","Is this address aligned to a 2 MiB page?","Page size; if set this entry maps a 1-GByte page; …","Page size; if set this entry maps a 2-MByte page; …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable.","Page-level cache disable.","Page-level cache disable.","Page-level write-through; indirectly determines the memory …","Page-level write-through; indirectly determines the memory …","Page-level write-through.","Page-level write-through.","Page-level write-through.","Indirectly determines the memory type used to access the …","Indirectly determines the memory type used to access the …","Is page present?","Is page present?","Is page present?","Present; must be 1 to map a 2-MByte page or reference a …","Present; must be 1 to map a 4-KByte page or reference a …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the 1-GByte …","Read/write; if 0, writes may not be allowed to the 2-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","Is zero?","Is zero?","Is zero?","Offset within the 2 MiB page.","Offset within the 2 MiB page.","Offset within the 2 MiB page.","Creates a new PML4Entry.","Creates a new PML5Entry.","Creates a new PDPTEntry.","Creates a new PDEntry.","Creates a new PTEntry.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","Given virtual address calculate corresponding entry in PD.","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in PT.","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","Split <code>PAddr</code> into lower and higher 32-bits.","Split <code>IOAddr</code> into lower and higher 32-bits.","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Physical Address zero.","IO Address zero.","Virtual Address zero.","Read the RBP register (base pointer register).","Read the RIP register (instruction pointer).","Read the RSP register (stack pointer register).","Bit 1 is always 1.","Alignment Check (AC)","Auxiliary Carry Flag (AF)","Carry Flag (CF)","Direction Flag (DF)","ID Flag (ID)","Interrupt Enable Flag (IF)","I/O Privilege Level (IOPL) 0","I/O Privilege Level (IOPL) 1","I/O Privilege Level (IOPL) 2","I/O Privilege Level (IOPL) 3","Nested Task (NT)","Overflow Flag (OF)","Parity Flag (PF)","Resume Flag (RF)","Sign Flag (SF)","Trap Flag (TF)","Virtual Interrupt Flag (VIF)","Virtual Interrupt Pending (VIP)","Virtual-8086 Mode (VM)","Zero Flag (ZF)","The RFLAGS register. This is duplicated code from bits32 …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates a new Flags with the given I/O privilege level.","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates a new Flags entry. Ensures bit 1 is set.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Entry for IDT, GDT or LDT.","","","","","","","Returns the argument unchanged.","“Dereferences” the fs register at <code>offset</code>.","“Dereferences” the gs register at <code>offset</code>.","Calls <code>U::from(self)</code>.","Reload code segment register.","Read FS Segment Base","Read GS Segment Base","Create a new segment, TSS or LDT descriptor by setting the …","Sets the interrupt stack table index. The 3-bit IST index …","Creates a new descriptor with selector and offset (for IDT …","Swap the GS register.","","","","Write FS Segment Base","Write GS Segment Base","Create an SECS page in the Enclave Page Cache","Add a Page to an Uninitialized Enclave.","Add a Page to an Initialized Enclave.","Mark a page in EPC as Blocked.","Read From a Debug Enclave.","Write to a Debug Enclave.","Extend Uninitialized Enclave Measurement by 256 Bytes","Initialize an Enclave for Execution","Loads and verifies an EPC page and marks the page as …","Loads, verifies an EPC page and marks the page as …","Restrict the Permissions of an EPC Page.","Change the Type of an EPC Page.","Add Version Array.","Remove a page from the EPC.","Activates EBLOCK Checks.","Invalidate an EPC Page and Write out to Main Memory.","Accept Changes to an EPC Page.","Initialize a Pending Page.","Enters an Enclave.","Exits an Enclave.","Retrieves a Cryptographic Key.","Extend an EPC Page Permissions.","Create a Cryptographic Report of the Enclave.","Re-Enters an Enclave.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Although hardware task-switching is not supported in …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The 16-bit offset to the I/O permission bit map from the …","The full 64-bit canonical forms of the interrupt stack …","Creates a new empty TSS.","","","","","The full 64-bit canonical forms of the stack pointers …","Sets the stack pointer (<code>stack_ptr</code>) to be used when an …","Sets the stack pointer (<code>stack_ptr</code>) to be used for when an …","","","","Clear VMCS.","Launch virtual machine.","Load current VMCS pointer.","Return current VMCS pointer.","Read a specified field from a VMCS.","Resume virtual machine.","Write to a specified field in a VMCS.","Disable VMX operation.","Enable VMX operation.","","","","","","","","","","","","If set, enables debug register based breaks on I/O space …","Enables the instructions RDFSBASE, RDGSBASE, WRFSBASE, and …","Enable shared (PDE or PTE) address translation between …","Enables 5-Level Paging.","Enable machine check interrupts.","Enable XSAVE and Processor Extended States.","Enable: Physical Address Extension (allows to address …","Enables process-context identifiers (PCIDs).","Enable Performance-Monitoring Counters","Enables use of Protection Keys (MPK).","Enable Page Size Extensions (allows for pages larger than …","Enable Supervisor Mode Access Prevention.","Enable Supervisor Mode Execution Protection.","Enables Safer Mode Extensions (Trusted Execution …","Enables Streaming SIMD Extensions (SSE) instructions and …","Enable User-Mode Instruction Prevention (the SGDT, SIDT, …","If set, enables support for the virtual interrupt flag …","Enables Virtual Machine Extensions.","If set, disables ability to take time-stamps.","Enables unmasked SSE exceptions.","If set, enables support for the virtual interrupt flag …","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Read cr0","Write cr0.","Contains page-fault linear address.","Write cr2, for instance to reset cr2","Contains page-table root pointer.","Switch page-table PML4 pointer.","Contains various flags to control operations in protected …","Write cr4.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Read Extended Control Register XCR0. Only supported if …","Write to Extended Control Register XCR0. Only supported if …","","Processor Power Management and RAS Capabilities …","Info about cache Associativity.","","","","","","This table is taken from Intel manual (Section CPUID …","","Describes any kind of cache (TLB, Data and Instruction …","Iterates over cache information (LEAF=0x02).","What type of cache are we dealing with?","Information about an individual cache in the hierarchy.","Iterator over caches (LEAF=0x04).","Info about a what a given cache caches (instructions, …","","The main type used to query information about the CPU we’…","Low-level data-structure to store result of cpuid …","","Deterministic Address Translation Structure","Deterministic Address Translation Structure Iterator …","Deterministic Address Translation cache type (EDX bits 04 …","Data cache","","","Direct cache access info (LEAF=0x09).","","","","EBX:EAX and EDX:ECX provide information on the Enclave …","Structured Extended Feature Identifiers (LEAF=0x07).","Extended Processor and Processor Feature Identifiers …","Where the extended register state is stored.","What kidn of extended register state this is.","ExtendedState subleaf structure for things that need to be …","Information for saving/restoring extended register state …","Yields ExtendedState structs.","Information about topology (LEAF=0x0B).","Gives information about the current level in the topology.","Processor and Processor Feature Identifiers (LEAF=0x01).","","","","","Identifies the different Hypervisor products.","Information about Hypervisor (LEAF=0x4000_0001)","","Instruction cache","","","","L1 Cache and TLB Information (LEAF=0x8000_0005).","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","L2 Cache Allocation Technology Enumeration Sub-leaf …","L3 Cache Allocation Technology Enumeration Sub-leaf …","Information about L3 cache monitoring.","","Memory Bandwidth Allocation Enumeration Sub-leaf …","Encrypted Memory Capabilities (LEAF=0x8000_001F).","","Information about how monitor/mwait works on this CPU …","","","","Null - No more caches","Null (indicates this sub-leaf is not valid).","Info about performance monitoring – how many counters …","Performance Optimization Identifier (LEAF=0x8000_001A).","","","Processor name (LEAF=0x8000_0002..=0x8000_0004).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Processor Serial Number (LEAF=0x3).","Processor Topology Information (LEAF=0x8000_001E).","Intel Processor Trace Information (LEAF=0x14).","","QEMU is the hypervisor identity when QEMU is used without …","","Quality of service enforcement information (LEAF=0x10).","Intel Resource Director Technology RDT (LEAF=0x0F).","4-31 = Reserved","Hyper-thread (Simultaneous multithreading)","","Intel SGX Capability Enumeration Leaf (LEAF=0x12).","Intel SGX EPC Enumeration Leaf","Iterator over the SGX sub-leafs (ECX &gt;= 2).","Iterator for SoC vendor attributes.","A vendor brand string as queried from the cpuid leaf.","SoC vendor specific information (LEAF=0x17).","","Information about the SVM features that the processory …","","Query information about thermal and power management …","","TLB 1-GiB Pages Information (LEAF=0x8000_0019).","What type of core we have at this level in the topology …","Time Stamp Counter/Core Crystal Clock Information …","Data and Instruction cache","Some unified TLBs will allow a single TLB entry to satisfy …","","","","","","Vendor Info String (LEAF=0x0)","","","","(Virtual) Bus (local apic timer) frequency in kHz.","APIC ID size.","Return the processor brand string as a rust string.","Return vendor identification as human readable string.","Return the SocVendorBrand as a string.","","","Ways of associativity (Bits 31-22)","Version Information: Family","Version Information: Model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns brand ID on AMD.","Brand Index","Bus (Reference) Frequency (in MHz).","C-bit location in page table entry","Translation cache level (starts at 1)","Translation cache type field.","Cache Type","Length of the capacity bit mask.","Length of the capacity bit mask.","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","","","","","","","","","","","","System Coherency Line Size (Bits 11-00)","Number of configurable Address Ranges for filtering (Bits …","Conversion factor from reported IA32_QM_CTR value to …","Core ID","Bit width of general-purpose, performance monitoring …","Specifies the ratio of the compute unit power accumulator …","Macro which queries cpuid directly.","L1 data cache associativity.","L1 data cache line size in bytes.","L1 data cache lines per tag.","L1 data cache size in KB","","An unsigned integer which is the denominator of the …","Description of the cache (from Intel Manual)","Data TLB associativity for 2-MB and 4-MB pages.","L2 Data TLB associativity for 2-MB and 4-MB pages.","Data TLB number of entries for 2-MB and 4-MB pages.","L2 Data TLB number of entries for 2-MB and 4-MB pages.","Data TLB associativity for 4K pages.","L2 Data TLB associativity for 4K pages.","Data TLB number of entries for 4K pages.","L2 Data TLB number of entries for 4K pages.","L1 Data TLB associativity for 1-GB pages.","L1 Data TLB number of entries for 1-GB pages.","L2 Data TLB associativity for 1-GB pages.","L2 Data TLB number of entries for 1-GB pages.","Number of Interrupt Thresholds in Digital Thermal Sensor","Return value EAX register","Return value EBX register","Length of EBX bit vector to enumerate architectural …","Return value ECX register","Return value EDX register","","","","","","","","","","","","","","","","","","","","","","","","","","","Version Information: Extended Family","Version Information: Extended Model","Extended Processor Signature.","Enumeration of Monitor-Mwait extensions (beyond EAX and …","","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Advanced Power Management Information (LEAF=0x8000_0007).","Query basic information about caches (LEAF=0x02).","Retrieve more elaborate information about caches …","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address …","Query deterministic address translation feature …","Direct cache access info (LEAF=0x09).","Find out about more features supported by this CPU …","Extended Processor and Processor Feature Identifiers …","Information for saving/restoring extended register state …","Information about topology (LEAF=0x0B).","Extended information about topology (LEAF=0x1F).","Query a set of features that are available on this CPU …","Returns information provided by the hypervisor, if running …","L1 Instruction Cache Information (LEAF=0x8000_0005)","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","Informations about memory encryption support …","Information about how monitor/mwait works on this CPU …","Info about performance monitoring (LEAF=0x0A).","Informations about performance optimization …","Retrieve processor brand string (LEAF=0x8000_000{2..4}).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Retrieve serial number of processor (LEAF=0x03).","Informations about processor topology (LEAF=0x8000_001E)","Intel Processor Trace Enumeration Information (LEAF=0x14).","","Quality of service enforcement information (LEAF=0x10).","Quality of service monitoring information (LEAF=0x0F).","Information about secure enclave support (LEAF=0x12).","","Contains SoC vendor specific information (LEAF=0x17).","","This function provides information about the SVM features …","Query information about thermal and power management …","TLB 1-GiB Pages Information (LEAF=0x8000_0019)","Time Stamp Counter/Core Crystal Clock Information …","","","Return information about the vendor (LEAF=0x00).","Guest Physical Address Bits","Has 100 MHz multiplier Control?","1GB page size entries supported by this structure","Is there support for 1GiB pages.","2MB page size entries supported by this structure","3DNow extensions.","4K page size entries supported by this structure","4MB page size entries supported by this structure","Check support for 64-bit mode.","SEV guest execution only allowed from a 64-bit host if set.","Thermal Monitor and Software Controlled Clock Facilities. …","Breakpoint Addressing masking extended to bit 31.","Supports ADX.","A value of 1 indicates that the processor supports the …","LOCK MOV CR0 means MOV CR8. See “MOV(CRn)” in APM3.","Alternate Injection supported if set.","3DNow AMD extensions.","AnyThread deprecation","APIC On-Chip. The processor contains an Advanced …","ARAT. APIC-Timer-always-running feature is supported if …","AVX512VBMI2","Support for the AMD advanced virtual interrupt controller …","A value of 1 indicates the processor supports the AVX …","AVX2","AVX512_IFMA","AVX512BITALG","AVX512BW","AVX512CD","Supports AVX512DQ.","AVX512ER","Supports AVX512F.","AVX512PF","AVX512VL","AVX512VNNI","AVX512VPOPCNTDQ","BMI1","BMI2","Supports CET shadow stack features. Processors that set …","CLZERO instruction supported if set.","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Supports CLFLUSHOPT.","CLWB","Conditional Move Instructions. The conditional move …","Check support legacy cmp.","CMPXCHG16B Available. A value of 1 indicates that the …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","L1 Context ID. A value of 1 indicates the L1 data cache …","Is Code and Data Prioritization Technology supported?","Complex Cache Indexing (Bit 2) False: Direct mapped cache. …","If true, Indicates support of Configurable PSB and …","Has Core performance boost?","CPL Qualified Debug Store. A value of 1 indicates the …","Data access breakpoint extension.","A value of 1 indicates the processor supports the ability …","Debugging Extensions. Support for I/O breakpoints, …","Full debug state swap supported for SEV-ES guests.","Indicates support for the decode assists if set.","Debug Store. The processor supports the ability to write …","64-bit DS Area. A value of 1 indicates the processor …","Digital temperature sensor is supported if set.","ECMD. Clock modulation duty cycle extension is supported …","Enhanced Intel SpeedStep® technology. A value of 1 …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC, …","Supports ENCLV instruction leaves EINCVIRTCHILD, …","The processor supports performance-energy bias preference …","Is there support for execute disable bit.","Extended APIC space.","A value of 1 indicates that processor supports 16-bit …","FXSAVE and FXRSTOR instruction optimizations.","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","Indicates support for processor feedback interface.","Flexible HWP is supported if set.","Indicates that TLB flush events, including CR3 writes and …","A value of 1 indicates the processor supports FMA …","Four-operand FMA instruction support.","The internal FP/SIMD execution datapath is 128 bits wide …","The internal FP/SIMD execution datapath is 256 bits wide …","Floating Point Unit On-Chip. The processor contains an x87 …","Deprecates FPU CS and FPU DS values if 1.","Frequency ID control.","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","GFNI","GIF – virtualized global interrupt flag if set.","Guest Mode Execution Trap supported if set.","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","HLE","When host <code>CR4.MCE=1</code> and guest <code>CR4.MCE=0</code>, machine check …","Max APIC IDs reserved field is Valid. A value of 0 for HTT …","Hardware Coordination Feedback Capability","Hardware cache coherency across encryption domains …","Has Hardware P-state control?","Has Hardware assert supported?","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Capabilities. Highest Performance change is supported …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","Fast access mode for the IA32_HWP_REQUEST MSR is supported …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HWP PECI override is supported if set.","A value of 1 indicates the indicates the presence of a …","Instruction based sampling.","Ignoring Idle Logical Processor HWP request is supported …","Instruction Retired Counter MSR available if set.","WBINVD/WBNOINVD are interruptible if set.","Is Invariant TSC available?","INVLPGB and TLBSYNC instruction supported if set.","INVLPGB support for invalidating guest nested translations …","INVPCID. If 1, supports INVPCID instruction for system …","If true, Indicates support of IP Filtering, TraceStop …","Supports L2 Cache Allocation.","Supports L3 Cache Allocation.","Supports L3 Cache Intel RDT Monitoring.","Supports 57-bit linear addresses and five-level paging if …","Is LAHF/SAHF available in 64-bit mode?","Indicates support for LBR Virtualization.","Reports whether the response of the delay values is linear.","If true, Generated packets which contain IP payloads have …","Supports local bandwidth monitoring.","Lightweight profiling support","Is LZCNT available?","Machine Check Architecture. A value of 1 indicates the …","Is MCA overflow recovery available?","Machine Check Exception. Exception 18 is defined for …","MCOMMIT instruction supported if set.","Supports Memory Bandwidth Allocation.","Misaligned SSE mode. See “Misaligned Access Support …","Intel MMX Technology. The processor supports the Intel MMX …","AMD extensions to MMX instructions.","MONITOR/MWAIT. A value of 1 indicates the processor …","Support for MWAITX and MONITORX instructions.","A value of 1 indicates that the processor supports MOVBE …","MOVU (Move Unaligned) SSE instructions are efficient more …","MPX. Supports Intel Memory Protection Extensions if 1.","Model Specific Registers RDMSR and WRMSR Instructions. The …","If true, Indicates support of MTC timing packet and …","Memory Type Range Registers. MTRRs are supported. The …","NB performance counter extensions support.","Nested paging supported if set.","Indicates support for NRIP save on #VMEXIT if set.","Supports occupancy monitoring.","OS has set CR4.PKE to enable protection keys (and the …","Indicates OS-visible workaround support","A value of 1 indicates that the OS has enabled …","Physical Address Extension. Physical addresses greater …","The Page Flush MSR is available if set.","Page Attribute Table. Page Attribute Table is supported. …","Indicates support for the pause intercept filter if set.","Indicates support for the PAUSE filter cycle count …","Pending Break Enable. The processor supports the use of …","Process-context identifiers. A value of 1 indicates that …","PCLMULQDQ. A value of 1 indicates the processor supports …","Perfmon and Debug Capability: A value of 1 indicates the …","Processor performance counter extensions support.","Support for L3 performance counter extension.","Performance time-stamp counter.","Page Global Bit. The global bit is supported in …","Supports protection keys for user-mode pages.","PLN. Power limit notification controls are supported if …","A value of 1 indicates that the processor supports the …","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","Has Processor power reporting interface?","Is PREFETCHW available?","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Disallowing IBS use by the host supported if set.","Supports Intel Processor Trace.","Page Size Extension. Large pages of size 4 MByte are …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the 96-bit …","PTM. Package thermal management is supported if set.","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","RDPID and IA32_TSC_AUX are available.","RDPRU instruction supported if set.","A value of 1 indicates that processor supports RDRAND …","Supports RDSEED.","Supports Intel Resource Director Technology (RDT) …","Supports Intel Resource Director Technology (RDT) …","Check support for rdtscp instruction.","Supports Enhanced REP MOVSB/STOSB if 1.","FP Error Pointers Restored by XRSTOR if set.","Restricted Injection supported if set.","Has Read-only effective frequency interface?","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set …","RTM","Secure Encrypted Virtualization is supported if set.","SEV Encrypted State is supported if set.","SEV Secure Nested Paging supported if set.","Supports Intel® Software Guard Extensions (Intel® SGX …","Has SGX1 support.","Has SGX2 support.","Supports SGX Launch Configuration.","Supports SHA Instructions.","If true, Indicates support of Single-Range Output scheme.","SKINIT and STGI are supported.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Secure Memory Encryption is supported if set.","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","Safer Mode Extensions. A value of 1 indicates that the …","SPEC_CTRL virtualization supported if set.","Self Snoop. The processor supports the management of …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","XTRQ, INSERTQ, MOVNTSS, and MOVNTSD instruction support.","SVM supervisor shadow stack restrictions if set.","A value of 1 indicates the presence of the Supplemental …","Has Software uncorrectable error containment and recovery …","Secure virtual machine supported.","Indicates support for SVM-Lock if set.","Are fast system calls available.","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Trailing bit manipulation instruction support.","Has THERMTRIP?","Support for INVLPGB/TLBSYNC hypervisor enable in VMCB and …","Thermal Monitor. The processor implements the thermal …","Hardware thermal control (HTC)?","Thermal Monitor 2. A value of 1 indicates whether the …","Indicates the following MSRs are supported: …","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","Topology extensions support.","Supports total bandwidth monitoring.","If true, Indicates support of output to Trace Transport …","Is Temperature Sensor available?","Time Stamp Counter. The RDTSC instruction is supported, …","IA32_TSC_ADJUST MSR is supported if 1.","A value of 1 indicates that the processors local APIC …","Indicates support for MSR TSC ratio (MSR <code>0xC000_0104</code>) if …","Intel Turbo Boost Technology Available (see description of …","Intel® Turbo Boost Max Technology 3.0 available.","Supports user-mode instruction prevention if 1.","EFER.LMSLE is unsupported if set.","VAES","Indicates support for VMCB clean bits if set.","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","VM Permission Levels supported if set.","VMSAVE and VMLOAD virtualization supported if set.","Virtual Machine Extensions. A value of 1 indicates that …","Voltage ID control.","VPCLMULQDQ","Virtual Transparent Encryption supported if set.","WAITPKG","WBNOINVD instruction supported if set.","Watchdog timer support.","A value of 1 indicates that the processor supports x2APIC …","Supports XGETBV with ECX = 1 if set.","Extended operation support.","A value of 1 indicates that the processor supports the …","Supports XSAVEC and the compacted form of XRSTOR if set.","CPU has xsaveopt feature.","Supports XSAVES/XRSTORS and IA32_XSS if set.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Support for HDC in IA32_XSS.","Support for PT in IA32_XSS.","L1 instruction cache associativity.","L1 instruction cache line size in bytes.","L1 instruction cache lines per tag.","L1 instruction cache size in KB","Returns the identity of the <code>Hypervisor</code>.","Initial APIC ID","Supports treating interrupts as break-event for MWAIT, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Maximum page count for INVLPGB instruction.","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Last-level cache reference event not available if 1.","Returns true when the compacted format of an XSAVE area is …","Core cycle event not available if 1.","Fully associative structure","Fully Associative cache","True if the bit n (corresponding to the sub-leaf index) is …","True if bit n is supported in XCR0.","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Instruction retired event not available if 1.","Last-level cache misses event not available if 1.","Reference cycles event not available if 1.","Self Initializing cache level (does not need SW …","Write-Back Invalidate/Invalidate (Bit 0) False: …","Bit-granular map of isolation/contention of allocation …","Bit-granular map of isolation/contention of allocation …","Iterator over extended state enumeration levels &gt;= 2.","Iterator over SGX sub-leafs.","Instruction TLB associativity for 2-MB and 4-MB pages.","L2 Instruction TLB associativity for 2-MB and 4-MB pages.","Instruction TLB number of entries for 2-MB and 4-MB pages.","L2 Instruction TLB number of entries for 2-MB and 4-MB …","Instruction TLB associativity for 4K pages.","L2 Instruction TLB associativity for 4K pages.","Instruction TLB number of entries for 4K pages.","L2 Instruction TLB number of entries for 4K pages.","L1 Instruction TLB associativity for 1-GB pages.","L1 Instruction TLB number of entries for 1-GB pages.","L2 Instruction TLB associativity for 1-GB pages.","L2 Instruction TLB number of entries for 1-GB pages.","L2 Cache Allocation Information.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Cache size in KB.","L3 Cache Allocation Information.","L3 Cache Monitoring.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Specifies the L3 cache size range","Largest monitor-line size in bytes (default is processor’…","Cache Level (starts at 1)","Level number.","","Linear Address Bits","","The value of MAWAU used by the BNDLDX and BNDSTX …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","The maximum supported enclave size in 64-bit mode is …","The maximum supported enclave size in non-64-bit mode is …","Number of encrypted guests supported simultaneouslys","Reports the maximum MBA throttling value supported for the …","Maximum number of addressable IDs for logical processors …","The maximum ECX value recognized by RDPRU.","The size of the <code>apic_id_size</code> field determines the maximum …","Maximum range (zero-based) of RMID of L3.","Memory Bandwidth Allocation Information.","Minimum ASID value for an SEV enabled, SEV-ES disabled …","Bit vector of supported extended SGX features.","","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","Return new CpuId struct.","Iterate over all cache information.","Iterate over all cache info subleafs for this CPU.","","","","Iterate over each sub-leaf with an address translation …","Iterate over all SoC vendor specific attributes.","Node ID","Nodes per processor","An unsigned integer which is the nominal frequency of the …","Number as retrieved from cpuid","Number of physical threads in the processor.","Number of general-purpose performance monitoring counter …","An unsigned integer which is the numerator of the …","The offset in bytes of this extended state components save …","Partitioning (0: Soft partitioning between the logical …","Performance time-stamp counter size (in bits).","Physical Address Bits","Physical Address bit reduction","The physical address of the base of the EPC section","Physical Line partitions (Bits 21-12)","Returns package type on AMD.","Processor Base Frequency (in MHz).","Maximum Frequency (in MHz).","Number of logical processors at this level type. The …","Returns which register this specific extended subleaf …","SVM revision number.","Maximum range (zero-based) of RMID within this physical …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","Combination of bits 00-31 and 32-63 of 96 bit processor …","96 bit processor serial number.","Bits 00-31 of 96 bit processor serial number.","Bits 32-63 of 96 bit processor serial number.","Bits 64-96 of 96 bit processor serial number.","Number of Sets.","Number of Sets (Bits 31-00)","Number of bits to shift right on x2APIC ID to get a unique …","The size in bytes (from the offset specified in EBX) of …","Size of the corresponding EPC section within the Processor …","Smallest monitor-line size in bytes (default is processor…","Version Information: Stepping ID","","Number of available address space identifiers (ASID).","Number of C0 sub C-states supported using MWAIT (Bits 03 - …","Number of C1 sub C-states supported using MWAIT (Bits 07 - …","Number of C2 sub C-states supported using MWAIT (Bits 11 - …","Number of C3 sub C-states supported using MWAIT (Bits 15 - …","Number of C4 sub C-states supported using MWAIT (Bits 19 - …","Number of C5 sub C-states supported using MWAIT (Bits 23 - …","Number of C6 sub C-states supported using MWAIT (Bits 27 - …","Number of C7 sub C-states supported using MWAIT (Bits 31 - …","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Configurable PSB frequency encodings …","Threads per core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“TSC frequency” = “core crystal clock frequency” * …","TSC frequency in kHz.","Cache type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version ID of architectural performance monitoring. (Bits …","Ways of associativity.","Return new CpuId struct with custom reader function.","x2APIC ID","x2APIC ID the current logical processor. (Bits 31-00)","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX 256-bit in XCR0.","Support for legacy x87 in XCR0.","Support for MPX BNDCSR in XCR0.","Support for MPX BNDREGS in XCR0.","Support for PKRU in XCR0.","Support for SSE 128-bit in XCR0.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","The size in bytes of the XSAVE area containing all states …","","B0 breakpoint condition detected","B1 breakpoint condition detected","B2 breakpoint condition detected","B3 breakpoint condition detected","BD debug register access detected","An array list of all available breakpoint registers.","BS single step","BT task switch","Specifies the  breakpoint condition for a corresponding …","Specify the size of the memory location at the address …","Specifies available hardware breakpoints.","00 — 1-byte length.","01 — 2-byte length.","11 — 4-byte length.","10 — 8 byte length (or undefined, on older processors).","11 — Break on data reads or writes but not instruction …","01 — Break on data writes only.","","","","","Debug register 6 (dr6) flags.","","Empty Dr7 has bit 10 always set.","Bit that controls debug-register protection.","Bit that controls global exact breakpoints.","00 — Break on instruction execution only.","10 — Break on I/O reads or writes.","Bit that controls local exact breakpoints.","Enables (when set) advanced debugging of RTM transactional …","Bit that controls debugging of RTM transactional regions.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Configures the breakpoint by writing <code>dr</code> registers.","Configures a breakpoint condition <code>bc</code> and size <code>bs</code> for the …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Disables the breakpoint condition for the associated …","Disable breakpoint in global mode.","Disable breakpoint in local mode.","Read dr{0-3} register based on enum variant.","Read dr0.","Write dr0.","Read dr1.","Write dr1.","Read dr2.","Write dr2.","Read dr3.","Write dr3.","Read dr6.","Write dr6.","Read dr7.","Write dr7.","Returns an empty set of flags.","Enables the breakpoint condition for the associated …","Global exact breakpoint enable.","Local exact breakpoint enable.","Enables debug-register protection, which causes a debug …","Enable the breakpoint in global mode.","Enable the breakpoint in local mode.","Enables advanced debugging of RTM transactional regions.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Write dr{0-3} register based on provided enum variant.","A struct describing a pointer to a descriptor table (GDT / …","Pointer to the memory region containing the DT.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the segment selector from the local descriptor …","Load the GDTR register with the specified base and limit.","Load the IDTR register with the specified base and limit.","Size of the DT.","Loads the segment selector into the selector field of the …","","","Retrieve base and limit from the GDTR register.","Retrieve base and limit from the IDTR register.","","","","lfence – Load Fence","mfence – Memory Fence","sfence – Store Fence","Read 8 bits from port","Read 32 bits from port","Read 16 bits from port","Write 8 bits to port","Write 32 bits to port","Write 16 bits to port","","","","","","","","","x86 External Interrupts (1-32).","","0: The fault was not caused by an instruction fetch. 1: …","","","x86 Exception description (see also Intel Vol. 3a Chapter …","","","","0: The fault was caused by a non-present page. 1: The …","","0: The fault was not by protection keys. 1: There was a …","","0: The fault was not caused by reserved bit violation. 1: …","","","","0: The access causing the fault originated when the …","","0: The access causing the fault was a read. 1: The access …","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Disable Interrupts.","Returns an empty set of flags.","Enable Interrupts.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Section 10.4.4, Local APIC Status and Location.","BIOS Update Trigger Register.","","Processor Hard Power-On Configuration  (R/W) Enables and …","Actual Performance Frequency Clock Count (RW)  See Table …","APIC Location and Status (R/W) See Table 35-2. See Section …","(If CPUID.0AH: EAX[15:8] &gt;  0) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  1) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  2) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  3) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  4) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  5) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  6) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  7) &amp; IA32_PERF_CAPABILITIES[ 13…","BIOS Update Signature ID (R/W) See Table 35-2.","BIOS Update Trigger Register (W)  See Table 35-2.","Clock Modulation (R/W)  See Table 35-2. …","","System Call Target Address the compatibility mode.","06_2EH","Debug Control (R/W)  Controls how several debug features …","DS Save Area (R/W) See Table 35-2. Points to the DS buffer …","If (  CPUID.80000001.EDX.[bit  20] or  CPUID.80000001.EDX.…","if CPUID.6H:ECX[3] = 1","Control Features in IA-32 Processor (R/W) See Table 35-2 …","Fixed-Function Performance Counter Register 0 (R/W)  See …","Fixed-Function Performance Counter Register 1 (R/W)  See …","Fixed-Function Performance Counter Register 2 (R/W)  See …","Fixed-Function-Counter Control Register (R/W)  See Table …","System Call Flag Mask (R/W)  See Table 35-2.","Map of BASE Address of FS (R/W)  See Table 35-2.","Map of BASE Address of GS (R/W)  See Table 35-2.","Swap Target of BASE Address of GS (R/W) See Table 35-2.","IA-32e Mode System Call Target Address (R/W)  See Table …","See Section 14.3.2.3., IA32_MCi_ADDR MSRs .  The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.   The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_0FH","06_0FH","See Table 35-2.","06_0FH","06_0FH","06_1DH","06_1DH","See Table 35-2.","Misc MAC information of Integrated I/O. (R/O) see Section …","06_1DH","06_1AH","06_1AH","See Table 35-2.","06_1AH","06_1AH","06_1AH","06_1AH","See Table 35-2.","06_1AH","06_1AH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","Machine Check Capabilities (R) See Table 35-2. See Section …","Machine Check Feature Enable (R/W) See Table 35-2. See …","Machine Check Status. (R) See Table 35-2. See Section …","","See Section 8.10.5, Monitor/Mwait Address  Range …","See Section 8.10.5, Monitor/Mwait Address Range …","Maximum Performance Frequency Clock Count (RW)  See Table …","MTRR Information See Section 11.11.1, MTRR Feature  …","Default Memory Types (R/W)  Sets the memory type for the …","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs .","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs .","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Variable Range Base MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","if IA32_MTRR_CAP[7:0] &gt;  8","if IA32_MTRR_CAP[7:0] &gt;  9","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","if IA32_MTRR_CAP[7:0] &gt;  8","if IA32_MTRR_CAP[7:0] &gt;  9","See Section 35.16, MSRs in Pentium Processors.","See Section 35.16, MSRs in Pentium Processors.","If CPUID.06H: EAX[6] = 1","If CPUID.06H: EAX[6] = 1","Page Attribute Table See Section 11.11.2.2, Fixed Range …","","Performance Event Select for Counter 0 (R/W) Supports all …","Performance Event Select for Counter 1 (R/W) Supports all …","Performance Event Select for Counter 2 (R/W) Supports all …","Performance Event Select for Counter 3 (R/W) Supports all …","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2. See Section 17.4.1, IA32_DEBUGCTL MSR.","See Table 35-2. See Section 14.1, Enhanced Intel  …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 14.1, Enhanced Intel  …","06_0FH","Platform ID (R)  See Table 35-2. The operating system can …","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If IA32_VMX_MISC[bit 15])","SMM Monitor Configuration (R/W) See Table 35-2.","See Table 35-2.","If IA32_MTRR_CAP[SMRR]  = 1","System Call Target Address (R/W)  See Table 35-2.","CS register target for CPL 0 code (R/W) See Table 35-2. …","CPL 0 code entry point (R/W) See Table 35-2. See Section …","Stack pointer for CPL 0 stack (R/W) See Table 35-2. See …","Thermal Interrupt Control (R/W) See Section 14.5.2, …","Thermal Monitor Status (R/W) See Section 14.5.2, Thermal …","See Section 17.13, Time-Stamp Counter,  and see Table 35-2.","Per-Logical-Processor TSC ADJUST (R/W) See Table 35-2.","AUXILIARY TSC Signature. (R/W) See Table 35-2 and Section  …","TSC Target of Local APIC s TSC Deadline Mode (R/W)  See …","Reporting Register of Basic VMX Capabilities (R/O) See …","Capability Reporting Register of CR0 Bits Fixed to 0 (R/O) …","Capability Reporting Register of CR0 Bits Fixed to 1 (R/O) …","Capability Reporting Register of CR4 Bits Fixed to 0 (R/O) …","Capability Reporting Register of CR4 Bits Fixed to 1 (R/O) …","If CPUID.01H:ECX.[bit 5] = 1","If CPUID.01H:ECX.[bit 5] = 1","Capability Reporting Register of VM-entry Controls (R/O) …","If ( CPUID.01H:ECX.[bit 5],  IA32_VMX_PROCBASED_C TLS[bit …","Capability Reporting Register of EPT and VPID (R/O)  See …","Capability Reporting Register of VM-exit Controls (R/O) …","Capability Reporting Register of VM-function Controls …","Reporting Register of Miscellaneous VMX Capabilities (R/O) …","Capability Reporting Register of Pin-based VM-execution  …","Capability Reporting Register of Primary Processor-based  …","Capability Reporting Register of Secondary Processor-based …","Capability Reporting Register of VM-entry Flex Controls …","Capability Reporting Register of VM-exit Flex Controls …","Capability Reporting Register of Pin-based VM-execution …","Capability Reporting Register of Primary Processor-based  …","Capability Reporting Register of VMCS Field Enumeration …","If( CPUID.01H:ECX.[bit 5] =  1 and IA32_VMX_BASIC[bit 55] )","x2APIC ID register (R/O) See x2APIC Specification.","x2APIC Current Count register (R/O)","x2APIC Divide Configuration register (R/W)","x2APIC End of Interrupt. If ( CPUID.01H:ECX.[bit 21]  = 1 )","Error Status Register. If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC Interrupt Command register (R/W)","x2APIC Initial Count register (R/W)","x2APIC Interrupt Request register bits [31:0] (R/O)","x2APIC Interrupt Request register bits [63:32] (R/O)","x2APIC Interrupt Request register bits [95:64] (R/O)","x2APIC Interrupt Request register bits [127:96] (R/O)","x2APIC Interrupt Request register bits [159:128] (R/O)","x2APIC Interrupt Request register bits [191:160] (R/O)","x2APIC Interrupt Request register bits [223:192] (R/O)","x2APIC Interrupt Request register bits [255:224] (R/O)","x2APIC In-Service register bits [31:0] (R/O)","x2APIC In-Service register bits [63:32] (R/O)","x2APIC In-Service register bits [95:64] (R/O)","x2APIC In-Service register bits [127:96] (R/O)","x2APIC In-Service register bits [159:128] (R/O)","x2APIC In-Service register bits [191:160] (R/O)","x2APIC In-Service register bits [223:192] (R/O)","x2APIC In-Service register bits [255:224] (R/O)","x2APIC Logical Destination register (R/O)","x2APIC LVT Corrected Machine Check Interrupt register (R/W)","If ( CPUID.01H:ECX.[bit 21]  = 1 )","If ( CPUID.01H:ECX.[bit 21]  = 1 )","If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC LVT Performance Monitor register (R/W)","x2APIC LVT Thermal Sensor Interrupt register (R/W)","x2APIC LVT Timer Interrupt register (R/W)","x2APIC Processor Priority register (R/O)","If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC Spurious Interrupt Vector register (R/W)","x2APIC Trigger Mode register bits [31:0] (R/O)","x2APIC Trigger Mode register bits [63:32] (R/O)","x2APIC Trigger Mode register bits [95:64] (R/O)","x2APIC Trigger Mode register bits [127:96] (R/O)","x2APIC Trigger Mode register bits [159:128] (R/O)","x2APIC Trigger Mode register bits [191:160] (R/O)","x2APIC Trigger Mode register bits [223:192] (R/O)","x2APIC Trigger Mode register bits [255:224] (R/O)","x2APIC Task Priority register (R/W)","x2APIC Version. If ( CPUID.01H:ECX.[bit 21]  = 1 )","","","","","","","Defined in MCA architecture but not implemented in the P6 …","","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","Defined in MCA architecture but not implemented in P6 …","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS, except bits 0, 4, 57, …","","","","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore B-box 0 perfmon local box control MSR.","Uncore B-box 0 perfmon local box overflow control MSR.","Uncore B-box 0 perfmon local box status MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon local box mask MSR.","Uncore B-box 0 perfmon local box match MSR.","Uncore B-box 1 perfmon local box control MSR.","Uncore B-box 1 perfmon local box overflow control MSR.","Uncore B-box 1 perfmon local box status MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1vperfmon event select MSR.","Uncore B-box 1 perfmon local box mask MSR.","Uncore B-box 1 perfmon local box match MSR.","","","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore C-box 0 perfmon local box control MSR.","Uncore C-box 0 perfmon local box overflow control MSR.","Uncore C-box 0 perfmon local box status MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 1 perfmon local box control MSR.","Uncore C-box 1 perfmon local box overflow control MSR.","Uncore C-box 1 perfmon local box status MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 2 perfmon local box control MSR.","Uncore C-box 2 perfmon local box overflow control MSR.","Uncore C-box 2 perfmon local box status MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 3 perfmon local box control MSR.","Uncore C-box 3 perfmon local box overflow control MSR.","Uncore C-box 3 perfmon local box status MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 4 perfmon local box control MSR.","Uncore C-box 4 perfmon local box overflow control MSR.","Uncore C-box 4 perfmon local box status MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 5 perfmon local box control MSR.","Uncore C-box 5 perfmon local box overflow control MSR.","Uncore C-box 5 perfmon local box status MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 6 perfmon local box control MSR.","Uncore C-box 6 perfmon local box overflow control MSR.","Uncore C-box 6 perfmon local box status MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 7 perfmon local box control MSR.","Uncore C-box 7 perfmon local box overflow control MSR.","Uncore C-box 7 perfmon local box status MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 8 perfmon local box control MSR.","Uncore C-box 8 perfmon local box overflow control MSR.","Uncore C-box 8 perfmon local box status MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 9 perfmon local box control MSR.","Uncore C-box 9 perfmon local box overflow control MSR.","Uncore C-box 9 perfmon local box status MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","ConfigTDP Control (R/W)","ConfigTDP Level 1 ratio and power level (R/O)","ConfigTDP Level 2 ratio and power level (R/O)","Nominal TDP Ratio (R/O)","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Debug Control (R/W)  Controls how several debug features …","Debug Control (R/W)  Controls how several debug features …","DRAM Energy Status (R/O)  See Section 14.7.5, DRAM RAPL …","DRAM Performance Throttling Status (R/O) See Section …","DRAM RAPL Parameters (R/W) See Section 14.7.5, DRAM RAPL …","DRAM RAPL Power Limit Control (R/W)  See Section 14.7.5, …","Processor Frequency Configuration The bit field layout of …","Processor Hard Power-On Configuration (R/W) Enables and …","Processor Soft Power-On Configuration (R/W)  Enables and …","Processor Hard Power-On Configuration (R/W) Enables and  …","EFSB DRDY Event Control and Counter Register (R/W)  See …","EFSB DRDY Event Control and Counter  Register (R/W)","GBUSQ Event Control and Counter  Register (R/W) See …","GBUSQ Event Control/Counter Register (R/W) Apply to Intel …","GSNPQ Event Control and Counter  Register (R/W)  See …","GSNPQ Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control and Counter Register (R/W)  See Section …","FSB Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control/Counter Register (R/W) Apply to Intel …","L3/FSB Common Control Register (R/W) Apply to Intel Xeon …","MC Bank Error Configuration (R/W)","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Scaleable Bus Speed(RO) This field indicates the intended …","","Trace End Address 0","Trace Start Address 0","Trace End Address 1","Trace Start Address 1","Trace End Address 3","Trace Start Address 3","Trace End Address 4","Trace Start Address 4","Trace Filter CR3 Match Register (R/W)","Trace Control Register (R/W)","Trace Output Base Register (R/W)","Trace Output Mask Pointers Register (R/W)","Tracing Status Register (R/W)","TSX Ctrl Register for TSX Async Abot (TAA) Migration. See …","IFSB BUSQ Event Control and Counter  Register (R/W) See …","IFSB BUSQ Event Control and Counter Register (R/W)","IFSB Latency Event Counter Register  (R/W)  See Section …","IFSB Latency Event Control Register  (R/W) See Section …","IFSB SNPQ Event Control and Counter  Register (R/W)  See …","IFSB SNPQ Event Control and Counter  Register (R/W)","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs. This MSR is not available …","See Section 18.12.1, ESCR MSRs. This MSR is not available …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Last Branch Record 0 (R/W)  One of four last branch record …","Last Branch Record 0 From IP (R/W) One of eight pairs of …","Last Branch Record 0 (R/W)  One of 16 pairs of last branch …","Last Branch Record 1 (R/W) See description of …","Last Branch Record 10 From IP (R/W) See description of …","Last Branch Record 10 To IP (R/W) See description of …","Last Branch Record 11 From IP (R/W) See description of …","Last Branch Record 11 To IP (R/W) See description of …","Last Branch Record 12 From IP (R/W) See description of …","Last Branch Record 12 To IP (R/W) See description of …","Last Branch Record 13 From IP (R/W) See description of …","Last Branch Record 13 To IP (R/W) See description of …","Last Branch Record 14 From IP (R/W) See description of …","Last Branch Record 14 To IP (R/W) See description of …","Last Branch Record 15 From IP (R/W) See description of …","Last Branch Record 15 To IP (R/W) See description of …","Last Branch Record 1 From IP (R/W) See description of …","Last Branch Record 1 To IP (R/W) See description of …","Last Branch Record 2 See description of the …","Last Branch Record 2 From IP (R/W) See description of …","Last Branch Record 2 To IP (R/W) See description of …","Last Branch Record 3 See description of the …","Last Branch Record 3 From IP (R/W) See description of …","Last Branch Record 3 To IP (R/W) See description of …","Last Branch Record 4 (R/W) See description of …","Last Branch Record 4 From IP (R/W) See description of …","Last Branch Record 4 To IP (R/W) See description of …","Last Branch Record 5 (R/W) See description of …","Last Branch Record 5 From IP (R/W) See description of …","Last Branch Record 5 To IP (R/W) See description of …","Last Branch Record 6 (R/W) See description of …","Last Branch Record 6 From IP (R/W) See description of …","Last Branch Record 6 To IP (R/W) See description of …","Last Branch Record 7 (R/W) See description of …","Last Branch Record 7 From IP (R/W) See description of …","Last Branch Record 7 To IP (R/W) See description of …","Last Branch Record 8 From IP (R/W) See description of …","Last Branch Record 8 To IP (R/W) See description of …","Last Branch Record 9 From IP (R/W) See description of …","Last Branch Record 9 To IP (R/W) See description of …","Last Branch Record Stack TOS (R/W)  Contains an index (0-3 …","Last Branch Record Filtering Select Register (R/W)  See …","Last Exception Record From Linear IP (R)  Contains a …","Last Exception Record To Linear IP (R)  This area contains …","Uncore M-box 0 perfmon local box address mask MSR.","Uncore M-box 0 perfmon local box address match MSR.","Uncore M-box 0 perfmon local box control MSR.","Uncore M-box 0 perfmon local box overflow control MSR.","Uncore M-box 0 perfmon local box status MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon DSP unit select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon ISS unit select MSR.","Uncore M-box 0 perfmon MAP unit select MSR.","Uncore M-box 0 perfmon local box address match/mask config …","Uncore M-box 0 perfmon MIC THR select MSR.","Uncore M-box 0 perfmon PGT unit select MSR.","Uncore M-box 0 perfmon PLD unit select MSR.","Uncore M-box 0 perfmon time stamp unit select MSR.","Uncore M-box 0 perfmon ZDP unit select MSR.","Uncore M-box 1 perfmon local box address mask MSR.","Uncore M-box 1 perfmon local box address match MSR.","Uncore M-box 1 perfmon local box control MSR.","Uncore M-box 1 perfmon local box overflow control MSR.","Uncore M-box 1 perfmon local box status MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon DSP unit select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon ISS unit select MSR.","Uncore M-box 1 perfmon MAP unit select MSR.","Uncore M-box 1 perfmon local box address match/mask config …","Uncore M-box 1 perfmon MIC THR select MSR.","Uncore M-box 1 perfmon PGT unit select MSR.","Uncore M-box 1 perfmon PLD unit select MSR.","Uncore M-box 1 perfmon time stamp unit select MSR.","Uncore M-box 1 perfmon ZDP unit select MSR.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC3_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC4_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","Always 0 (CMCI not supported).","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC4_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","Apply to Intel Xeon processor 7400 series (processor …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","Machine Check Miscellaneous See Section 15.3.2.6, IA32_MCG …","Machine Check R10 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R11 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R12 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R13 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R14 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R8 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R9D/R9 See Section 15.3.2.6, IA32_MCG …","Machine Check EAX/RAX Save State See Section 15.3.2.6, …","Machine Check EBP/RBP Save State See Section 15.3.2.6, …","Machine Check EBX/RBX Save State See Section 15.3.2.6, …","Machine Check ECX/RCX Save State See Section 15.3.2.6, …","Machine Check EDI/RDI Save State See Section 15.3.2.6, …","Machine Check EDX/RDX Save State See Section 15.3.2.6, …","Machine Check EFLAGS/RFLAG Save State See Section …","Machine Check EIP/RIP Save State See Section 15.3.2.6, …","Machine Check ESI/RSI Save State See Section 15.3.2.6, …","See http://biosbits.org.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Offcore Response Event Select Register (R/W)","Offcore Response Event Select Register (R/W)","Precise Event-Based Sampling (PEBS) (R/W)  Controls the …","see See Section 18.7.1.2, Load Latency Performance …","See Table 19-26.","","RO. This applies to processors that do not support …","Fixed-Function Performance Counter Register 0 (R/W)","Fixed-Function Performance Counter Register 1 (R/W)","Fixed-Function Performance Counter Register 2 (R/W)","Fixed-Function-Counter Control Register (R/W)","See Section 18.4.2, Global Counter Control Facilities.","See Section 18.4.2, Global Counter Control Facilities.","See Section 18.4.2, Global Counter Control Facilities.","","Package C3 Interrupt Response Limit (R/W)  Note: C-state …","Package C6 Interrupt Response Limit (R/W)  This MSR …","Package C7 Interrupt Response Limit (R/W)  This MSR …","Note: C-state values are processor specific C-state code …","Package C2 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Package C4 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Package C6 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","C-State Configuration Control (R/W)  Note: C-state values …","PKG Energy Status (R/O)  See Section 14.7.3, Package RAPL …","Package RAPL Perf Status (R/O)","PKG RAPL Parameters (R/W) See Section 14.7.3,  Package …","PKG RAPL Power Limit Control (R/W)  See Section 14.7.3, …","Platform Feature Requirements (R)","Model Specific Platform ID (R)","see http://biosbits.org.","Power Management IO Redirection in C-state (R/W)  See …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Power Control Register. See http://biosbits.org.","PP0 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …","PP0 Performance Throttling Status (R/O) See Section …","PP0 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 RAPL …","PP0 RAPL Power Limit Control (R/W)  See Section 14.7.4, …","PP1 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …","PP1 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 RAPL …","PP1 RAPL Power Limit Control (R/W)  See Section 14.7.4, …","Uncore R-box 0 perfmon local box control MSR.","Uncore R-box 0 perfmon local box overflow control MSR.","Uncore R-box 0 perfmon local box status MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 0 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 1 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 2 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 3 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 4 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 5 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 6 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 7 select MSR.","Uncore R-box 0 perfmon QLX unit Port 0 select MSR.","Uncore R-box 0 perfmon QLX unit Port 1 select MSR.","Uncore R-box 0 perfmon QLX unit Port 2 select MSR.","Uncore R-box 0 perfmon QLX unit Port 3 select MSR.","Uncore R-box 1 perfmon local box control MSR.","Uncore R-box 1 perfmon local box overflow control MSR.","Uncore R-box 1 perfmon local box status MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 10 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 11 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 12 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 13 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 14 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 15 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 8 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 9 select MSR.","Uncore R-box 1 perfmon QLX unit Port 4 select MSR.","Uncore R-box 1 perfmon QLX unit Port 5 select MSR.","Uncore R-box 1 perfmon QLX unit Port 6 select MSR.","Uncore R-box 1 perfmon QLX unit Port 7 select MSR.","Unit Multipliers used in RAPL Interfaces (R/O)  See …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore S-box 0 perfmon local box control MSR.","Uncore S-box 0 perfmon local box overflow control MSR.","Uncore S-box 0 perfmon local box status MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon local box mask MSR.","Uncore S-box 0 perfmon local box match MSR.","Uncore S-box 1 perfmon local box control MSR.","Uncore S-box 1 perfmon local box overflow control MSR.","Uncore S-box 1 perfmon local box status MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon local box mask MSR.","Uncore S-box 1 perfmon local box match MSR.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","SMI Counter (R/O)","SMM Blocked (SMM-RO) Reports the blocked state of all …","SMM Delayed (SMM-RO) Reports the interruptible state of …","Enhanced SMM Feature Control (SMM-RW) Reports SMM …","Enhanced SMM Capabilities (SMM-RO) Reports SMM capability …","System Management Mode Physical Address Mask register  (WO …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","","Thermal Monitor 2 Control.","ConfigTDP Control (R/W)","See http://biosbits.org.","Maximum Ratio Limit of Turbo Mode RO if MSR_PLATFORM_INFO.…","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.3, Uncore Address/Opcode Match MSR.","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","Uncore Arb unit, counter 0 event select MSR","Uncore Arb unit, counter 1 event select MSR","Uncore Arb unit, performance counter 0","Uncore Arb unit, performance counter 1","Uncore C-Box 0, counter 0 event select MSR","Uncore C-Box 0, counter 1 event select MSR","Uncore C-Box 0, performance counter 0","Uncore C-Box 0, performance counter 1","Uncore C-Box 1, counter 0 event select MSR","Uncore C-Box 1, counter 1 event select MSR","Uncore C-Box 1, performance counter 0","Uncore C-Box 1, performance counter 1","Uncore C-Box 2, counter 0 event select MSR","Uncore C-Box 2, counter 1 event select MSR","Uncore C-Box 2, performance counter 0","Uncore C-Box 2, performance counter 1","Uncore C-Box 3, counter 0 event select MSR","Uncore C-Box 3, counter 1 event select MSR.","Uncore C-Box 3, performance counter 0.","Uncore C-Box 3, performance counter 1.","Uncore C-Box configuration information (R/O)","Uncore fixed counter","Uncore fixed counter control (R/W)","Uncore PMU global control","Uncore PMU main status","Uncore U-box perfmon counter MSR.","Uncore U-box perfmon event select MSR.","Uncore U-box perfmon global control MSR.","Uncore U-box perfmon global overflow control MSR.","Uncore U-box perfmon global status MSR.","Uncore W-box perfmon local box control MSR.","Uncore W-box perfmon local box overflow control MSR.","Uncore W-box perfmon local box status MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon fixed counter","Uncore U-box perfmon fixed counter control MSR","See Section 35.16, MSRs in Pentium Processors,  and see  …","See Section 35.16, MSRs in Pentium Processors,  and see  …","","CS register target for CPL 0 code","CPL 0 code entry point","Stack pointer for CPL 0 stack","Test Control Register","See Section 17.13, Time-Stamp Counter.","Read 64 bits msr register.","Write 64 bits to msr register.","RdRand trait to implement the generic rdrand_slice …","RdSeed trait to implement the generic rdseed_slice …","Fills <code>self</code> with random bits. Returns true on success or …","Fills <code>self</code> with random bits. Returns true on success or …","Generates a 16-bit random value and stores it in <code>e</code>.","Generates a 32-bit random value and stores it in <code>e</code>.","Generates a 64-bit random value and stores it in <code>e</code>.","Fill a slice with random values.","Generates a 16-bit random value and stores it in <code>e</code>.","Generates a 32-bit random value and stores it in <code>e</code>.","Generates a 64-bit random value and stores it in <code>e</code>.","Fill a slice with random values.","","","","","Code Segment types for descriptors. See also Intel 3a, …","Data Segment types for descriptors. See also Intel 3a, …","Entry for IDT, GDT or LDT. Provides size and location of a …","Makes building descriptors easier (hopefully).","Code Execute-Only","Code Execute-Only, accessed","Code Execute-Only, conforming","Code Execute-Only, conforming, accessed","Code Execute/Read","Code Execute/Read, accessed","Code Execute/Read, conforming","Code Execute/Read, conforming, accessed","Trait that defines the architecture specific functions for …","","","","","","Trait to define functions that build an architecture …","","Requestor Privilege Level","","","","Data Read-Only, expand-down","Data Read-Only, expand-down, accessed","Data Read-Only","Data Read-Only, accessed","Data Read/Write","Data Read/Write, accessed","Data Read/Write, expand-down","Data Read/Write, expand-down, accessed","Trait to define functions that build architecture specific …","Specifies which element to load into a segment from …","System-Segment and Gate-Descriptor Types 32-bit mode. See …","System-Segment and Gate-Descriptor Types 64-bit mode See …","Table Indicator (TI) 0 means GDT is used.","Table Indicator (TI) 1 means LDT is used.","","","","Trait to implement for building a task-gate (this …","","","","","","","","Returns the set containing all flags.","","Toggle the AVL bit.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the current value of the code segment register.","","","Set default operation size (false for 16bit segment, true …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Specifies the privilege level of the segment.","Returns the current value of the data segment register.","Returns an empty set of flags.","","","","","","Returns the current value of the extra segment register.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Make a new segment selector from a untyped u16 value.","Returns the current value of the FS segment register.","Returns the current value of the GS segment register.","","Returns segment selector’s index in GDT or LDT.","Inserts the specified flags in-place.","","","","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Set a the interrupt stack table index (only if this ends …","Set L bit if this descriptor is a 64-bit code segment. In …","","","","The segment limit is interpreted in 4-KByte units if this …","","Reload data segment register.","Reload es segment register.","Reload fs segment register.","Reload gs segment register.","Reload stack segment register.","","Create a new SegmentSelector","Returns the complement of this set of flags.","","Indicates whether the segment is present in memory (set) …","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Set AVL bit. System software can use this bit to store …","Create a new segment, TSS or LDT descriptor by setting the …","Set D/B. Performs different functions depending on whether …","Specifies the privilege level of the segment. The DPL is …","Set G bit Determines the scaling of the segment limit …","Set L In IA-32e mode, bit 21 of the second doubleword of …","Set Present bit. Indicates whether the segment is present …","Specifies whether the segment descriptor is for a system …","Creates a new descriptor with selector and offset (for IDT …","Set the type of the descriptor (bits 8-11). Indicates the …","Returns the current value of the stack segment register.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Loads the task register.","","Returns the current value of the task register.","Read the time stamp counter.","Read the time stamp counter.","Invalidate the given address in the TLB using the <code>invlpg</code> …","Invalidate the TLB completely by reloading the CR3 …","Contains the error value","Contains the success value","A specialized <code>Result</code> type for VMX operations.","Possible outcomes of VMfail pseudo-function used to convey …","VMCS pointer is not valid.","VMCS pointer is valid, but some other error was …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Virtual-machine control structure fields.","VM-execution, VM-exit, and VM-entry control fields.","Fields used to access guest-state area.","Fields used to access host-state area.","VM-exit information fields.","Acknowledge interrupt on exit.","APIC-access address (full).","APIC-access address (high).","Clear IA32_BNDCFGS.","Clear IA32_RTIT_CTL.","Conceal VMX from PT.","Conceal VMX from PT.","Conceal VMX from PT.","CR0 guest/host mask.","CR0 read shadow.","CR3-load exiting.","CR3-store exiting.","CR3-target count.","CR3-target value 0.","CR3-target value 1.","CR3-target value 2.","CR3-target value 3.","CR4 guest/host mask.","CR4 read shadow.","CR8-load exiting.","CR8-store exiting.","Deactivate dual-monitor treatment.","Descriptor-table exiting.","Enable EPT.","Enable INVPCID.","Enable PML.","Enable RDTSCP.","Enable user wait and pause.","Enable VM functions.","Enable VPID.","Enable XSAVES/XRSTORS.","Enable ENCLS exiting.","ENCLS-exiting bitmap (full).","ENCLS-exiting bitmap (high).","Enable ENCLV exiting.","Entry to SMM.","EOI-exit bitmap 0 (full).","EOI-exit bitmap 0 (high).","EOI-exit bitmap 1 (full).","EOI-exit bitmap 1 (high).","EOI-exit bitmap 2 (full).","EOI-exit bitmap 2 (high).","EOI-exit bitmap 3 (full).","EOI-exit bitmap 3 (high).","EPT pointer (full).","EPT pointer (high).","EPTP index.","EPTP-list address (full).","EPTP-list address (high).","EPT-violation #VE.","Exception bitmap.","Executive-VMCS pointer (full).","Executive-VMCS pointer (high).","External-interrupt exiting.","VM-entry controls.","VM-exit controls.","HLT exiting.","Host address-space size.","IA-32e mode guest.","Intel PT uses guest physical addresses.","Interrupt-window exiting.","INVLPG exiting.","Address of I/O bitmap A (full).","Address of I/O bitmap A (high).","Address of I/O bitmap B (full).","Address of I/O bitmap B (high).","Load debug controls.","Load IA32_BNDCFGS.","Load IA32_EFER.","Load IA32_EFER.","Load IA32_PAT.","Load IA32_PAT.","Load IA32_PERF_GLOBAL_CTRL.","Load IA32_PERF_GLOBAL_CTRL.","Load IA32_RTIT_CTL.","Mode-based execute control for EPT.","MONITOR exiting.","Monitor trap flag.","MOV-DR exiting","Address of MSR bitmaps (full).","Address of MSR bitmaps (high).","MWAIT exiting.","NMI exiting.","NMI-window exiting.","Page-fault error-code mask.","Page-fault error-code match.","PAUSE exiting.","PAUSE-loop exiting.","Pin-based VM-execution controls.","PLE_Gap.","PLE_Window.","PML address (full).","PML address (high).","Process posted interrupts.","Posted-interrupt descriptor address (full).","Posted-interrupt descriptor address (high).","Posted-interrupt notification vector.","Primary processor-based VM-execution controls.","Pin-based VM-execution controls.","Primary processor-based VM-execution controls.","RDPMC exiting.","RDRAND exiting.","RDSEED exiting.","RDTSC exiting.","Save debug controls.","Save IA32_EFER.","Save IA32_PAT.","Save VMX-preemption timer.","Activate secondary controls.","Secondary processor-based VM-execution controls.","Sub-page-permission-table pointer (full).","Sub-page-permission-table pointer (high).","Sub-page write permissions for EPT.","Secondary processor-based VM-execution controls.","TPR threshold.","TSC multiplier (full).","TSC multiplier (high).","TSC offset (full).","TSC offset (high).","Unconditional I/O exiting.","Unrestricted guest.","Use I/O bitmaps.","Use MSR bitmaps.","Use TPR shadow.","Use TSC offsetting.","Use TSC scaling.","Virtualize APIC accesses.","APIC-register virtualization.","Virtualize x2APIC mode.","Virtual-interrupt delivery.","Virtual NMIs.","Virtual-APIC address (full).","Virtual-APIC address (high).","Virtualization-exception information address (full).","Virtualization-exception information address (high).","VMCS shadowing.","VM-entry controls.","VM-entry exception error code.","VM-entry instruction length.","VM-entry interruption-information field.","VM-entry MSR-load address (full).","VM-entry MSR-load address (high).","VM-entry MSR-load count.","VM-exit controls.","VM-exit MSR-load address (full).","VM-exit MSR-load address (high).","VM-exit MSR-load count.","VM-exit MSR-store address (full).","VM-exit MSR-store address (high).","VM-exit MSR-store count.","VMREAD-bitmap address (full).","VMREAD-bitmap address (high).","VMWRITE-bitmap address (full).","VMWRITE-bitmap address (high).","Activate VMX-preemption timer.","VM-function controls (full).","VM-function controls (high).","Virtual-processor identifier (VPID).","WBINVD exiting.","XSS-exiting bitmap (full).","XSS-exiting bitmap (high).","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Guest activity state.","Guest CR0.","Guest CR3.","Guest CR4.","Guest CS access rights.","Guest CS base.","Guest CS limit.","Guest CS selector.","Guest DR7.","Guest DS access rights.","Guest DS base.","Guest DS limit.","Guest DS selector.","Guest ES access rights.","Guest ES base.","Guest ES limit.","Guest ES selector.","Guest FS access rights.","Guest FS base.","Guest FS limit.","Guest FS selector.","Guest GDTR base.","Guest GDTR limit.","Guest GS access rights.","Guest GS base.","Guest GS limit.","Guest GS selector.","Guest IA32_BNDCFGS (full).","Guest IA32_BNDCFGS (high).","Guest IA32_DEBUGCTL (full).","Guest IA32_DEBUGCTL (high).","Guest IA32_EFER (full).","Guest IA32_EFER (high).","Guest IA32_PAT (full).","Guest IA32_PAT (high).","Guest IA32_PERF_GLOBAL_CTRL (full).","Guest IA32_PERF_GLOBAL_CTRL (high).","Guest IA32_RTIT_CTL (full).","Guest IA32_RTIT_CTL (high).","Guest IA32_SYSENTER_CS.","Guest IA32_SYSENTER_EIP.","Guest IA32_SYSENTER_ESP.","Guest IDTR base.","Guest IDTR limit.","Guest interruptibility state.","Guest interrupt status.","Guest LDTR access rights.","Guest LDTR base.","Guest LDTR limit.","Guest LDTR selector.","VMCS link pointer (full).","VMCS link pointer (high).","Guest PDPTE0 (full).","Guest PDPTE0 (high).","Guest PDPTE1 (full).","Guest PDPTE1 (high).","Guest PDPTE2 (full).","Guest PDPTE2 (high).","Guest PDPTE3 (full).","Guest PDPTE3 (high).","Guest pending debug exceptions.","PML index.","Guest RFLAGS.","Guest RIP.","Guest RSP.","Guest SMBASE.","Guest SS access rights.","Guest SS base.","Guest SS limit.","Guest SS selector.","Guest TR access rights.","Guest TR base.","Guest TR limit.","Guest TR selector.","VMX-preemption timer value.","Host CR0.","Host CR3.","Host CR4.","Host CS selector.","Host DS selector.","Host ES selector.","Host FS base.","Host FS selector.","Host GDTR base.","Host GS base.","Host GS selector.","Host IA32_EFER (full).","Host IA32_EFER (high).","Host IA32_PAT (full).","Host IA32_PAT (high).","Host IA32_PERF_GLOBAL_CTRL (full).","Host IA32_PERF_GLOBAL_CTRL (high).","Host IA32_SYSENTER_CS.","Host IA32_SYSENTER_EIP.","Host IA32_SYSENTER_ESP.","Host IDTR base.","Host RIP.","Host RSP.","Host SS selector.","Host TR base.","Host TR selector.","Exit qualification.","Exit reason.","Guest-linear address.","Guest-physical address (full).","Guest-physical address (high).","IDT-vectoring error code.","IDT-vectoring information field.","I/O RCX.","I/O RDI.","I/O RIP.","I/O RSI.","VM-exit instruction information.","VM-exit instruction length.","VM-exit interruption error code.","VM-exit interruption information.","VM-instruction error."],"i":[0,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,15,15,0,0,13,13,0,0,0,0,14,10,0,12,10,0,14,11,10,15,10,15,11,10,12,10,0,9,9,10,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,144,9,144,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,16,16,10,11,12,13,14,15,16,9,144,10,11,12,13,14,15,16,9,9,0,144,144,144,144,16,144,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,144,144,10,11,12,13,14,15,16,9,16,144,0,9,9,9,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,24,24,24,24,24,24,24,24,34,35,0,0,0,34,35,34,35,0,0,0,34,35,0,34,35,0,34,35,0,0,0,34,0,0,0,34,35,0,34,35,34,35,0,29,29,29,30,30,30,31,31,31,29,29,30,30,31,31,31,32,33,29,30,31,29,30,31,29,30,31,29,30,31,34,35,29,31,29,31,29,30,31,29,30,31,29,30,31,29,29,30,30,31,31,31,31,34,35,34,35,29,29,30,30,31,31,31,34,35,34,35,34,35,34,35,34,35,145,146,29,30,31,34,32,35,33,145,146,29,30,31,34,32,35,33,29,30,31,34,32,35,33,29,30,31,34,35,34,35,34,35,34,35,34,35,29,30,31,34,35,34,35,32,33,29,29,29,29,29,29,29,30,30,30,30,30,30,30,31,31,31,31,31,31,31,34,34,34,34,34,32,35,35,35,35,35,33,145,146,29,29,29,29,30,30,30,30,31,31,31,31,34,32,35,33,34,35,34,35,34,35,34,35,31,31,29,30,31,34,35,34,35,34,35,34,35,145,146,29,29,29,30,30,30,31,31,31,34,32,35,33,32,33,29,30,31,34,35,29,30,31,32,33,34,35,32,33,29,30,31,32,32,33,32,33,32,33,32,33,32,33,32,33,29,30,31,29,30,31,32,33,34,35,29,30,31,34,35,0,0,29,29,29,30,30,30,31,31,31,34,35,34,35,29,30,31,31,31,29,29,29,30,30,30,31,31,31,34,35,34,35,34,35,34,35,145,146,29,30,31,34,32,35,33,145,146,29,30,31,34,32,35,33,145,146,29,30,31,34,32,35,33,34,35,29,30,31,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,0,0,48,49,50,51,52,0,0,0,50,51,52,50,51,52,0,0,0,0,0,0,0,0,48,49,50,51,52,0,50,51,0,48,49,50,51,52,0,0,0,0,0,0,0,0,0,0,0,0,0,50,51,0,0,0,48,49,50,51,52,0,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,0,48,49,50,51,52,40,40,40,41,41,41,42,42,42,40,40,41,41,42,42,42,43,44,45,46,47,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,48,49,50,51,52,42,42,40,41,42,40,41,42,40,41,42,40,40,41,41,42,42,42,42,48,49,50,51,52,48,49,50,51,52,40,40,41,41,42,42,42,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,147,148,149,40,41,42,48,49,43,44,50,45,51,46,52,47,147,148,149,40,41,42,48,49,43,44,50,45,51,46,52,47,40,41,42,48,49,43,44,50,45,51,46,52,47,40,41,42,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,40,41,42,48,49,50,51,52,48,49,50,51,52,43,44,45,46,47,40,40,40,40,40,40,40,41,41,41,41,41,41,41,42,42,42,42,42,42,42,48,48,48,48,48,49,49,49,49,49,43,44,50,50,50,50,50,45,51,51,51,51,51,46,52,52,52,52,52,47,147,148,149,40,40,40,40,41,41,41,41,42,42,42,42,48,49,43,44,50,45,51,46,52,47,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,42,42,40,41,42,48,49,50,51,52,40,41,42,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,147,148,149,40,40,40,41,41,41,42,42,42,48,49,43,44,50,45,51,46,52,47,43,44,45,46,47,40,41,42,48,49,50,51,52,40,41,42,46,47,48,49,50,51,52,46,47,40,41,42,43,44,45,46,47,40,41,42,45,46,43,44,45,46,47,43,44,45,46,47,45,46,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,40,41,42,40,41,42,43,44,45,46,47,48,49,50,51,52,40,41,42,48,49,50,51,52,0,0,0,0,0,40,40,40,41,41,41,42,42,42,48,49,50,51,52,48,49,50,51,52,40,41,42,42,42,40,41,40,40,40,41,41,41,42,42,42,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,147,148,149,40,41,42,48,49,43,44,50,45,51,46,52,47,147,148,149,40,41,42,48,49,43,44,50,45,51,46,52,47,147,148,149,40,41,42,48,49,43,44,50,45,51,46,52,47,48,49,50,51,52,40,41,42,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,53,0,53,0,53,53,53,53,53,53,53,53,0,54,54,54,54,54,54,54,0,0,54,0,0,0,54,54,54,0,54,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,0,0,0,0,0,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,0,60,60,60,60,60,60,60,60,60,0,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,0,0,0,0,0,0,0,0,58,59,60,58,59,60,58,59,60,58,59,60,58,58,58,58,58,59,59,59,59,59,60,60,60,60,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,0,0,108,0,0,105,105,105,105,108,0,81,0,0,0,0,0,0,104,0,0,81,0,0,0,76,75,104,0,94,94,118,0,0,0,0,0,0,0,0,0,0,0,94,81,105,108,0,0,106,76,75,104,108,0,0,0,0,0,75,0,0,104,0,105,105,94,76,75,0,0,105,81,0,0,0,0,0,0,105,108,108,0,0,76,104,81,0,0,0,0,0,0,75,0,81,0,104,0,0,0,76,75,94,105,75,108,108,0,106,108,61,62,63,64,66,67,66,67,68,69,69,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,92,63,99,97,100,90,73,79,61,66,80,81,82,101,83,68,76,102,84,103,104,85,105,106,78,107,86,118,119,87,75,120,67,108,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,92,63,99,97,100,90,73,79,61,66,80,81,82,101,83,68,76,102,84,103,104,85,105,106,78,107,86,118,119,87,75,120,67,108,70,69,71,73,74,74,68,77,78,69,79,61,80,81,82,83,68,84,85,86,87,68,88,89,90,91,92,0,93,93,93,93,79,95,82,93,96,93,96,93,96,93,96,97,97,97,97,98,61,61,91,61,61,93,96,94,92,63,99,97,100,90,73,61,66,80,101,68,76,102,103,104,105,106,78,107,75,67,108,69,69,70,102,69,91,91,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,94,92,63,99,97,100,90,73,79,61,66,66,80,81,82,82,101,83,68,76,76,102,84,103,104,104,85,105,105,106,106,78,107,86,118,119,87,75,75,120,67,67,108,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,92,63,99,97,100,90,73,79,61,66,80,81,82,101,83,68,76,102,84,103,104,85,105,105,106,78,107,86,118,119,87,75,120,67,108,79,79,79,111,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,117,79,79,79,117,79,117,79,79,79,79,117,117,79,63,92,74,70,74,70,74,74,70,73,69,70,110,69,70,73,70,91,69,98,110,99,69,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,63,69,110,110,69,70,69,69,69,77,68,88,92,69,70,69,69,73,99,69,69,98,98,69,116,116,98,70,70,69,70,110,92,98,99,69,70,100,100,69,110,92,110,69,110,99,99,98,110,99,69,98,73,92,92,98,98,98,98,98,98,98,98,69,70,98,63,63,92,63,63,110,88,115,115,114,110,70,99,107,88,89,70,70,69,92,69,63,115,70,69,70,69,70,69,100,110,69,88,69,70,99,99,89,110,70,69,69,73,69,99,99,69,69,69,69,70,70,70,69,110,98,69,88,92,70,110,73,110,69,69,69,98,88,110,63,69,110,110,110,70,110,63,73,92,88,110,73,73,73,110,116,116,110,110,88,70,110,73,110,69,99,69,69,69,69,69,69,70,99,69,92,70,99,70,69,70,92,99,69,92,69,110,88,88,70,89,88,92,69,110,69,99,98,98,110,63,110,99,69,73,99,69,92,110,73,110,63,70,69,112,70,69,112,112,112,77,78,107,112,112,93,93,93,93,62,69,102,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,92,63,99,97,100,90,73,79,61,66,80,81,82,101,83,68,76,102,84,103,104,85,105,106,78,107,86,118,119,87,75,120,67,108,80,83,84,85,86,87,120,63,91,91,91,113,91,74,68,113,113,68,91,91,91,68,68,77,78,112,116,93,96,93,96,93,96,93,96,97,97,97,97,115,96,96,96,96,115,114,96,96,96,96,102,68,103,103,63,113,110,74,68,68,116,116,73,107,69,63,63,89,115,73,116,69,0,79,80,83,84,85,86,87,120,90,90,95,82,63,91,95,113,74,63,63,73,119,68,70,71,71,103,113,99,114,116,101,101,101,101,101,74,68,103,113,119,102,69,113,99,102,102,102,102,102,102,102,102,88,88,88,90,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,92,63,99,97,100,90,73,79,61,66,80,81,82,101,83,68,76,102,84,103,104,85,105,106,78,107,86,118,119,87,75,120,67,108,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,92,63,99,97,100,90,73,79,61,66,80,81,82,101,83,68,76,102,84,103,104,85,105,106,78,107,86,118,119,87,75,120,67,108,95,62,82,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,92,63,99,97,100,90,73,79,61,66,80,81,82,101,83,68,76,102,84,103,104,85,105,106,78,107,86,118,119,87,75,120,67,108,91,74,79,90,103,112,112,112,112,112,112,112,112,112,112,112,112,0,122,122,122,122,122,0,122,122,0,0,0,125,125,125,125,124,124,123,123,123,123,0,0,126,126,126,124,124,126,122,126,122,122,122,122,122,122,122,122,122,123,124,125,126,122,123,124,125,126,122,123,124,125,126,122,122,123,126,122,126,122,126,123,123,123,0,0,0,0,0,0,0,0,0,0,0,0,122,126,126,126,126,123,123,126,122,123,124,125,126,122,122,122,122,122,122,123,124,125,126,122,123,124,125,126,122,122,122,122,122,122,122,122,122,123,124,125,126,122,122,122,122,122,122,122,122,122,122,122,123,124,125,126,122,123,124,125,126,122,123,124,125,126,122,123,0,127,127,127,127,127,127,127,0,0,0,127,0,127,127,0,0,127,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,128,0,128,0,128,0,0,0,128,0,128,0,128,128,128,128,128,128,128,128,129,128,129,128,128,128,128,128,129,128,0,128,0,128,128,129,129,128,128,128,128,128,128,129,128,128,128,128,128,128,128,128,128,129,128,129,128,128,129,128,128,128,128,129,128,128,128,128,129,128,129,128,129,128,128,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,131,0,0,0,0,0,0,0,0,0,134,135,135,0,0,0,0,137,137,137,137,137,137,137,137,0,134,135,135,134,135,0,132,55,55,55,55,136,136,136,136,136,136,136,136,0,0,0,0,55,55,135,135,135,0,134,135,135,134,135,134,135,55,132,133,55,55,55,55,55,55,55,55,134,135,136,137,133,132,55,134,135,136,137,133,132,150,133,133,133,55,134,135,136,137,132,55,151,133,55,55,0,151,133,133,132,55,133,0,55,55,134,135,136,137,0,55,152,133,133,55,55,55,55,55,55,134,135,136,137,133,132,132,55,134,135,136,137,133,132,55,55,55,55,55,0,0,55,55,55,150,133,133,133,55,55,55,134,135,136,137,133,132,55,55,133,133,153,133,133,133,0,0,0,0,0,0,132,55,55,55,133,55,55,132,132,132,132,132,132,132,132,132,132,0,55,55,55,154,133,55,150,133,133,133,55,134,135,136,137,133,132,55,134,135,136,137,133,132,150,133,133,133,55,134,135,136,137,133,132,55,132,0,0,0,0,0,0,0,57,57,0,0,138,138,138,138,138,138,138,138,138,138,0,0,0,0,0,143,0,0,143,143,141,142,143,0,0,140,140,0,0,0,0,0,0,0,140,140,142,141,141,141,141,141,141,141,141,141,141,0,0,141,142,0,0,0,0,0,0,0,0,0,0,0,0,0,141,0,0,0,139,0,0,140,143,142,141,140,140,0,0,0,0,142,142,142,143,142,143,142,143,142,141,140,140,140,0,0,140,139,140,0,0,140,141,0,0,0,0,0,139,0,0,0,0,0,0,140,141,141,140,143,143,143,143,140,0,0,0,141,0,0,0,0,0,0,140,141,140,140,140,140,141,141,141,141,141,139,0,0,0,0,141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,139,0,0,0,141,0,0,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,139,139,139,139,140,140,140,140,140,141,141,141,141,141,142,142,142,142,142,143,143,143,143,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],0,0,0,0,0,[[1,1],2],0,[[1,3],4],[-1,-1,[]],0,0,[[],5],0,[-1,-2,[],[]],0,0,0,0,[[],6],0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[9,9],[-1,5,[]],[[10,10],2],[[11,11],2],[[12,12],2],[[13,13],2],[[14,14],2],[[15,15],2],[[16,16],2],[[9,9],2],[[10,3],4],[[11,3],4],[[12,3],4],[[13,3],4],[[14,3],4],[[15,3],4],[[16,3],4],[[9,3],4],[[17,9,15,10,11,12,13,14],16],[[17,9,15,10,11,12,13,14],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,19],0,[[-1,9],5,[]],[-1,5,[]],[[-1,9,17],5,[]],[-1,18,[]],[16,18],[[-1,16],5,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[-1,17],5,[]],[[-1,6],5,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[16,18],[-1,18,[]],0,[9,18],[9,18],[9,18],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[20,5],[[20,17,17],5],[-1,-1,[]],[20,17],[-1,-2,[],[]],[19,20],[20,17],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[20,17],0,[21,5],[-1,-2,[],[]],[-1,-2,[],[]],[21,2],[[],21],[21,5],[21,5],[[21,3],4],[-1,-1,[]],[21,18],[-1,-2,[],[]],[[21,9],5],[21,5],[[21,9,17],5],[21,18],[[],21],[[21,16],5],[[21,6],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[21,17],5],[[21,6],5],[-1,8,[]],[21,18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[22,5],[-1,-2,[],[]],[-1,-2,[],[]],[22,2],[22,5],[22,5],[[22,3],4],[-1,-1,[]],[22,18],[-1,-2,[],[]],[[22,9],5],[22,5],[[22,9,17],5],[22,18],[[[23,[18]]],22],[[22,16],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[22,17],5],[[22,6],5],[-1,8,[]],[22,18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],24],[[24,24],24],[[24,24],5],[[24,24],24],[[24,24],5],[24,18],[[24,24],24],[[24,24],5],[-1,-2,[],[]],[-1,-2,[],[]],[[],5],[24,24],[[24,24],25],[24,24],[[24,24],2],[[24,24],24],[[],24],[[24,24],2],[[24,-1],5,26],[[24,3],4],[[24,3],4],[[24,3],4],[[24,3],4],[[24,3],4],[-1,-1,[]],[18,[[27,[24]]]],[18,24],[18,24],[-1,24,26],[1,24],[[24,-1],5,28],[[24,24],5],[[24,24],24],[[24,24],2],[-1,-2,[],[]],[24,2],[24,2],[[],24],[24,24],[[24,24],[[27,[25]]]],[[24,24],5],[[24,24,2],5],[[],5],[[24,24],24],[[24,24],5],[[24,24],24],[[24,24],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[24,24],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[29,18]],[[29,19]],[[29,29]],[[30,30]],[[30,19]],[[30,18]],[[31,19]],[[31,18]],[[31,31]],[[29,29],5],[[29,18],5],[[30,18],5],[[30,30],5],[[31,31],5],[[31,18],5],[[31,19],5],[32,29],[33,29],[29,29],[30,30],[31,31],[29,29],[30,30],[31,31],[29,29],[30,30],[31,31],[29,29],[30,30],[31,31],[[],34],[[],35],[29],[31],[29],[31],[29,18],[30,18],[31,18],[29,19],[30,19],[31,19],[29,18],[30,18],[31,18],[[29,29],29],[[29,18]],[[30,30],30],[[30,18]],[[31,36]],[[31,18]],[[31,31]],[[31,19]],[[34,34],34],[[35,35],35],[[34,34],5],[[35,35],5],[[29,29]],[[29,18]],[[30,30]],[[30,18]],[[31,31],31],[[31,18]],[[31,19]],[[34,34],34],[[35,35],35],[[34,34],5],[[35,35],5],[34,18],[35,18],[[34,34],34],[[35,35],35],[[34,34],5],[[35,35],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,29],[30,30],[31,31],[34,34],[32,32],[35,35],[33,33],[[29,29],25],[[30,30],25],[[31,31],25],[[34,34],25],[[35,35],25],[34,34],[35,35],[[34,34],2],[[35,35],2],[[34,34],34],[[35,35],35],[[],34],[[],35],[[29,29],2],[[30,30],2],[[31,31],2],[[34,34],2],[[35,35],2],[[34,-1],5,26],[[35,-1],5,26],[32,34],[33,35],[[29,3],4],[[29,3],4],[[29,3],4],[[29,3],4],[[29,3],4],[[29,3],4],[[29,3],4],[[30,3],4],[[30,3],4],[[30,3],4],[[30,3],4],[[30,3],4],[[30,3],4],[[30,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[34,3],4],[[34,3],4],[[34,3],4],[[34,3],4],[[34,3],4],[[32,3],4],[[35,3],4],[[35,3],4],[[35,3],4],[[35,3],4],[[35,3],4],[[33,3],4],[-1,-1,[]],[-1,-1,[]],[36,29],[19,29],[18,29],[-1,-1,[]],[19,30],[-1,-1,[]],[18,30],[36,30],[-1,-1,[]],[36,31],[19,31],[18,31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,[[27,[34]]]],[18,[[27,[35]]]],[18,34],[18,35],[18,34],[18,35],[-1,34,26],[-1,35,26],[18,31],[19,31],[[29,-1],5,28],[[30,-1],5,28],[[31,-1],5,28],[[34,-1],5,28],[[35,-1],5,28],[[34,34],5],[[35,35],5],[[34,34],34],[[35,35],35],[[34,34],2],[[35,35],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,19],[29,18],[30,18],[-1,-2,[],[]],[30,19],[31,18],[-1,-2,[],[]],[31,19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,2],[33,2],[[29,-1],2,[[37,[18]],38]],[[30,-1],2,[[37,[18]],38]],[[31,-1],2,[[37,[18]],38]],[34,2],[35,2],[29,2],[30,2],[31,2],[32,2],[33,2],[34,2],[35,2],[32,2],[33,2],[29,2],[30,2],[31,2],[32,2],[32,2],[33,2],[32,2],[33,2],[32,2],[33,2],[32,2],[33,2],[32,2],[33,2],[32,2],[33,2],[29,2],[30,2],[31,2],[29,18],[30,18],[31,18],[[29,34],32],[[29,35],33],[34,34],[35,35],[[29,29],[[27,[25]]]],[[30,30],[[27,[25]]]],[[31,31],[[27,[25]]]],[[34,34],[[27,[25]]]],[[35,35],[[27,[25]]]],[31,19],[31,19],[[29,18]],[[29,19]],[[29,29]],[[30,30]],[[30,19]],[[30,18]],[31],[31],[[31,31]],[[34,34],5],[[35,35],5],[[34,34,2],5],[[35,35,2],5],[[29,18]],[[30,18]],[[31,18]],[[31,19]],[[31,36]],[[29,29]],[[29,19]],[[29,18]],[[30,30]],[[30,18]],[[30,19]],[[31,18]],[[31,31]],[[31,19]],[[34,34],34],[[35,35],35],[[34,34],5],[[35,35],5],[[34,34],34],[[35,35],35],[[34,34],5],[[35,35],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[34,34],34],[[35,35],35],[[],29],[[],30],[[],31],0,[-1,-2,[],[]],[-1,-2,[],[]],[39,39],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[39,3],4],[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,0,[[],39],0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[40,19]],[[40,40]],[[40,6]],[[41,19]],[[41,6]],[[41,41]],[[42,19]],[[42,6]],[[42,42]],[[40,40],5],[[40,6],5],[[41,41],5],[[41,6],5],[[42,42],5],[[42,6],5],[[42,19],5],[43,40],[44,40],[45,40],[46,40],[47,40],[40,40],[41,41],[42,42],[40,40],[41,41],[42,42],[40,40],[41,41],[42,42],[40,40],[41,41],[42,42],[40,40],[41,41],[42,42],[40,40],[41,41],[42,42],[[],48],[[],49],[[],50],[[],51],[[],52],[42],[42],[40,6],[41,6],[42,6],[40,19],[41,19],[42,19],[40,6],[41,6],[42,6],[[40,6]],[[40,40],40],[[41,41],41],[[41,6]],[[42,6]],[[42,19]],[[42,42]],[[42,36]],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[[40,6]],[[40,40]],[[41,6]],[[41,41]],[[42,42],42],[[42,19]],[[42,6]],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[48,6],[49,6],[50,6],[51,6],[52,6],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,40],[41,41],[42,42],[48,48],[49,49],[43,43],[44,44],[50,50],[45,45],[51,51],[46,46],[52,52],[47,47],[[40,40],25],[[41,41],25],[[42,42],25],[[48,48],25],[[49,49],25],[[50,50],25],[[51,51],25],[[52,52],25],[48,48],[49,49],[50,50],[51,51],[52,52],[[48,48],2],[[49,49],2],[[50,50],2],[[51,51],2],[[52,52],2],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[],48],[[],49],[[],50],[[],51],[[],52],[[40,40],2],[[41,41],2],[[42,42],2],[[48,48],2],[[49,49],2],[[50,50],2],[[51,51],2],[[52,52],2],[[48,-1],5,26],[[49,-1],5,26],[[50,-1],5,26],[[51,-1],5,26],[[52,-1],5,26],[43,48],[44,49],[45,50],[46,51],[47,52],[[40,3],4],[[40,3],4],[[40,3],4],[[40,3],4],[[40,3],4],[[40,3],4],[[40,3],4],[[41,3],4],[[41,3],4],[[41,3],4],[[41,3],4],[[41,3],4],[[41,3],4],[[41,3],4],[[42,3],4],[[42,3],4],[[42,3],4],[[42,3],4],[[42,3],4],[[42,3],4],[[42,3],4],[[48,3],4],[[48,3],4],[[48,3],4],[[48,3],4],[[48,3],4],[[49,3],4],[[49,3],4],[[49,3],4],[[49,3],4],[[49,3],4],[[43,3],4],[[44,3],4],[[50,3],4],[[50,3],4],[[50,3],4],[[50,3],4],[[50,3],4],[[45,3],4],[[51,3],4],[[51,3],4],[[51,3],4],[[51,3],4],[[51,3],4],[[46,3],4],[[52,3],4],[[52,3],4],[[52,3],4],[[52,3],4],[[52,3],4],[[47,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,40],[-1,-1,[]],[36,40],[6,40],[19,41],[6,41],[36,41],[-1,-1,[]],[36,42],[19,42],[6,42],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,[[27,[48]]]],[6,[[27,[49]]]],[6,[[27,[50]]]],[6,[[27,[51]]]],[6,[[27,[52]]]],[6,48],[6,49],[6,50],[6,51],[6,52],[6,48],[6,49],[6,50],[6,51],[6,52],[-1,48,26],[-1,49,26],[-1,50,26],[-1,51,26],[-1,52,26],[6,42],[19,42],[[40,-1],5,28],[[41,-1],5,28],[[42,-1],5,28],[[48,-1],5,28],[[49,-1],5,28],[[50,-1],5,28],[[51,-1],5,28],[[52,-1],5,28],[40,6],[41,6],[42,6],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[48,48],2],[[49,49],2],[[50,50],2],[[51,51],2],[[52,52],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,19],[40,6],[41,19],[-1,-2,[],[]],[41,6],[-1,-2,[],[]],[42,19],[42,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,2],[44,2],[45,2],[46,2],[47,2],[[40,-1],2,[[37,[6]],38]],[[41,-1],2,[[37,[6]],38]],[[42,-1],2,[[37,[6]],38]],[48,2],[49,2],[50,2],[51,2],[52,2],[40,2],[41,2],[42,2],[46,2],[47,2],[48,2],[49,2],[50,2],[51,2],[52,2],[46,2],[47,2],[40,2],[41,2],[42,2],[43,2],[44,2],[45,2],[46,2],[47,2],[40,2],[41,2],[42,2],[45,2],[46,2],[43,2],[44,2],[45,2],[46,2],[47,2],[43,2],[44,2],[45,2],[46,2],[47,2],[45,2],[46,2],[43,2],[44,2],[45,2],[46,2],[47,2],[43,2],[44,2],[45,2],[46,2],[47,2],[43,2],[44,2],[45,2],[46,2],[47,2],[40,2],[41,2],[42,2],[40,6],[41,6],[42,6],[[40,48],43],[[40,49],44],[[40,50],45],[[40,51],46],[[40,52],47],[48,48],[49,49],[50,50],[51,51],[52,52],[[40,40],[[27,[25]]]],[[41,41],[[27,[25]]]],[[42,42],[[27,[25]]]],[[48,48],[[27,[25]]]],[[49,49],[[27,[25]]]],[[50,50],[[27,[25]]]],[[51,51],[[27,[25]]]],[[52,52],[[27,[25]]]],[42,19],[42,19],[42,19],[42,19],[42,19],[[40,40]],[[40,19]],[[40,6]],[[41,6]],[[41,41]],[[41,19]],[42],[42],[[42,42]],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[[48,48,2],5],[[49,49,2],5],[[50,50,2],5],[[51,51,2],5],[[52,52,2],5],[[40,6]],[[41,6]],[[42,6]],[[42,36]],[[42,19]],[40,[[5,[18,18]]]],[41,[[5,[18,18]]]],[[40,40]],[[40,6]],[[40,19]],[[41,41]],[[41,19]],[[41,6]],[[42,19]],[[42,42]],[[42,6]],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[],40],[[],41],[[],42],[[],6],[[],6],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],53],[[53,53],53],[[53,53],5],[[53,53],53],[[53,53],5],[53,6],[[53,53],53],[[53,53],5],[-1,-2,[],[]],[-1,-2,[],[]],0,[53,53],[[53,53],25],[53,53],[[53,53],2],[[53,53],53],[[],53],[[53,53],2],[[53,-1],5,26],[[53,3],4],[[53,3],4],[[53,3],4],[[53,3],4],[[53,3],4],[-1,-1,[]],[6,[[27,[53]]]],[6,53],[6,53],[-1,53,26],[1,53],[6,53],[[53,-1],5,28],[[53,53],5],[[53,53],53],[[53,53],2],[-1,-2,[],[]],[53,2],[53,2],[[],53],[53,53],[[53,53],[[27,[25]]]],[[],53],[[53,53],5],[53,5],[[53,53,2],5],0,[[53,53],53],[[53,53],5],[[53,53],53],[[53,53],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[53,53],53],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[54,54],[[],54],[[54,3],4],[-1,-1,[]],0,0,[-1,-2,[],[]],[55,5],[[],6],[[],6],[[54,6,6],5],[[54,17],5],[[54,55,6],5],[[],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[6,5],[6,5],[[6,6],5],[[6,6],5],[[6,6],5],[6,18],[6,6],[[6,6],5],[[6,6],5],[[6,6,6],18],[[6,6,6],18],[[6,6,6],18],[[6,6],18],[[6,6],18],[[6,6],5],[6,5],[6,18],[[6,6,6],18],[[6,6],18],[[6,6,6],18],[[6,6],[[5,[18,6]]]],[[6,6],5],[[6,6],5],[[6,6],5],[[6,6,6],5],[[6,6],5],[6,6],[[6,6],6],[[6,6,6],6],[[6,6,6,6],6],[[6,6,6,6,6],6],[[6,6,6,6,6,6],6],[[6,6,6,6,6,6,6],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[56,56],[[],56],[[56,3],4],[-1,-1,[]],[-1,-2,[],[]],0,0,[[],56],0,0,0,0,0,[[56,19,6],5],[[56,1,6],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[6,[[57,[5]]]],[[],[[57,[5]]]],[6,[[57,[5]]]],[[],[[57,[6]]]],[18,[[57,[6]]]],[[],[[57,[5]]]],[[18,6],[[57,[5]]]],[[],[[57,[5]]]],[6,[[57,[5]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],58],[[],59],[[],60],[[58,58],58],[[59,59],59],[[60,60],60],[[58,58],5],[[59,59],5],[[60,60],5],[[58,58],58],[[59,59],59],[[60,60],60],[[58,58],5],[[59,59],5],[[60,60],5],[58,19],[59,19],[60,6],[[58,58],58],[[59,59],59],[[60,60],60],[[58,58],5],[[59,59],5],[[60,60],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,58],[59,59],[60,60],[[58,58],25],[[59,59],25],[[60,60],25],[58,58],[59,59],[60,60],[[58,58],2],[[59,59],2],[[60,60],2],[[],58],[58,5],[[],19],[6,5],[[],6],[6,5],[[],59],[59,5],[[58,58],58],[[59,59],59],[[60,60],60],[[],58],[[],59],[[],60],[[58,58],2],[[59,59],2],[[60,60],2],[[58,-1],5,26],[[59,-1],5,26],[[60,-1],5,26],[[58,3],4],[[58,3],4],[[58,3],4],[[58,3],4],[[58,3],4],[[59,3],4],[[59,3],4],[[59,3],4],[[59,3],4],[[59,3],4],[[60,3],4],[[60,3],4],[[60,3],4],[[60,3],4],[[60,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,[[27,[58]]]],[19,[[27,[59]]]],[6,[[27,[60]]]],[19,58],[19,59],[6,60],[19,58],[19,59],[6,60],[-1,58,26],[-1,59,26],[-1,60,26],[[58,-1],5,28],[[59,-1],5,28],[[60,-1],5,28],[[58,58],5],[[59,59],5],[[60,60],5],[[58,58],58],[[59,59],59],[[60,60],60],[[58,58],2],[[59,59],2],[[60,60],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,2],[59,2],[60,2],[58,2],[59,2],[60,2],[58,58],[59,59],[60,60],[[58,58],[[27,[25]]]],[[59,59],[[27,[25]]]],[[60,60],[[27,[25]]]],[[58,58],5],[[59,59],5],[[60,60],5],[[58,58,2],5],[[59,59,2],5],[[60,60,2],5],[[58,58],58],[[59,59],59],[[60,60],60],[[58,58],5],[[59,59],5],[[60,60],5],[[58,58],58],[[59,59],59],[[60,60],60],[[58,58],5],[[59,59],5],[[60,60],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[58,58],58],[[59,59],59],[[60,60],60],[[],60],[60,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,2],[62,[[27,[18]]]],[63,17],[64,65],[66,65],[67,65],[66,65],[67,65],[68,19],[69,17],[69,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[70,18],[69,17],[71,72],[73,17],[74,17],[74,75],[68,76],[77,17],[78,17],[69,17],[79,79],[61,61],[80,80],[81,81],[82,82],[83,83],[68,68],[84,84],[85,85],[86,86],[87,87],[68,19],[88,17],[89,18],[90,17],[91,17],[92,18],0,[93,94],[93,17],[93,17],[93,17],[[],79],[95,18],[82,65],[93,94],[96,94],[93,17],[96,72],[93,94],[96,94],[93,17],[96,72],[97,94],[97,17],[97,94],[97,17],[98,17],0,0,[91,17],0,0,[[93,93],2],[[96,96],2],[[94,94],2],[[92,92],2],[[63,63],2],[[99,99],2],[[97,97],2],[[100,100],2],[[90,90],2],[[73,73],2],[[61,61],2],[[66,66],2],[[80,80],2],[[101,101],2],[[68,68],2],[[76,76],2],[[102,102],2],[[103,103],2],[[104,104],2],[[105,105],2],[[106,106],2],[[78,78],2],[[107,107],2],[[75,75],2],[[67,67],2],[[108,108],2],[69,17],[69,17],[70,18],[102,2],[69,17],[91,17],[91,17],[[70,3],[[7,[5,109]]]],[[64,3],[[7,[5,109]]]],[[69,3],[[7,[5,109]]]],[[98,3],[[7,[5,109]]]],[[110,3],[[7,[5,109]]]],[[111,3],[[7,[5,109]]]],[[91,3],[[7,[5,109]]]],[[112,3],[[7,[5,109]]]],[[113,3],[[7,[5,109]]]],[[114,3],[[7,[5,109]]]],[[89,3],[[7,[5,109]]]],[[115,3],[[7,[5,109]]]],[[77,3],[[7,[5,109]]]],[[116,3],[[7,[5,109]]]],[[88,3],[[7,[5,109]]]],[[95,3],[[7,[5,109]]]],[[71,3],[[7,[5,109]]]],[[74,3],[[7,[5,109]]]],[[117,3],[[7,[5,109]]]],[[62,3],[[7,[5,109]]]],[[93,3],[[7,[5,109]]]],[[96,3],[[7,[5,109]]]],[[94,3],[[7,[5,109]]]],[[94,3],[[7,[5,109]]]],[[92,3],[[7,[5,109]]]],[[63,3],[[7,[5,109]]]],[[99,3],[[7,[5,109]]]],[[97,3],[[7,[5,109]]]],[[100,3],[[7,[5,109]]]],[[90,3],[[7,[5,109]]]],[[73,3],[[7,[5,109]]]],[[79,3],[[7,[5,109]]]],[[61,3],[[7,[5,109]]]],[[66,3],[[7,[5,109]]]],[[66,3],[[7,[5,109]]]],[[80,3],[[7,[5,109]]]],[[81,3],[[7,[5,109]]]],[[82,3],[[7,[5,109]]]],[[82,3],[[7,[5,109]]]],[[101,3],[[7,[5,109]]]],[[83,3],[[7,[5,109]]]],[[68,3],[[7,[5,109]]]],[[76,3],[[7,[5,109]]]],[[76,3],[[7,[5,109]]]],[[102,3],[[7,[5,109]]]],[[84,3],[[7,[5,109]]]],[[103,3],[[7,[5,109]]]],[[104,3],[[7,[5,109]]]],[[104,3],[[7,[5,109]]]],[[85,3],[[7,[5,109]]]],[[105,3],[[7,[5,109]]]],[[105,3],[[7,[5,109]]]],[[106,3],[[7,[5,109]]]],[[106,3],[[7,[5,109]]]],[[78,3],[[7,[5,109]]]],[[107,3],[[7,[5,109]]]],[[86,3],[[7,[5,109]]]],[[118,3],[[7,[5,109]]]],[[119,3],[[7,[5,109]]]],[[87,3],[[7,[5,109]]]],[[75,3],[[7,[5,109]]]],[[75,3],[[7,[5,109]]]],[[120,3],[[7,[5,109]]]],[[67,3],[[7,[5,109]]]],[[67,3],[[7,[5,109]]]],[[108,3],[[7,[5,109]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,105],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[79,[[27,[92]]]],[79,[[27,[80]]]],[79,[[27,[83]]]],[111,18],[79,[[27,[87]]]],[79,[[27,[111]]]],[79,[[27,[110]]]],[79,[[27,[70]]]],[79,[[27,[112]]]],[79,[[27,[84]]]],[79,[[27,[84]]]],[79,[[27,[69]]]],[79,[[27,[62]]]],[79,[[27,[93]]]],[79,[[27,[96]]]],[79,[[27,[73]]]],[79,[[27,[102]]]],[79,[[27,[91]]]],[79,[[27,[100]]]],[79,[[27,[64]]]],[79,[[27,[63]]]],[79,[[27,[71]]]],[79,[[27,[101]]]],[79,[[27,[90]]]],[79,[[27,[88]]]],[117,18],[79,[[27,[115]]]],[79,[[27,[114]]]],[79,[[27,[116]]]],[117,72],[79,[[27,[117]]]],[117,18],[79,[[27,[99]]]],[79,[[27,[98]]]],[79,[[27,[97]]]],[79,[[27,[95]]]],[117,[[27,[120]]]],[117,[[27,[67]]]],[79,[[27,[66]]]],[63,17],[92,2],[74,2],[70,2],[74,2],[70,2],[74,2],[74,2],[70,2],[73,2],[69,2],[70,2],[110,2],[69,2],[70,2],[73,2],[70,2],[91,2],[69,2],[98,2],[110,2],[99,2],[69,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[63,2],[69,2],[110,2],[110,2],[69,2],[70,2],[69,2],[69,2],[69,2],[77,2],[68,2],[88,2],[92,2],[69,2],[70,2],[69,2],[69,2],[73,2],[99,2],[69,2],[69,2],[98,2],[98,2],[69,2],[116,2],[116,2],[98,2],[70,2],[70,2],[69,2],[70,2],[110,2],[92,2],[98,2],[99,2],[69,2],[70,2],[100,2],[100,2],[69,2],[110,2],[92,2],[110,2],[69,2],[110,2],[99,2],[99,2],[98,2],[110,2],[99,2],[69,2],[98,2],[73,2],[92,2],[92,2],[98,2],[98,2],[98,2],[98,2],[98,2],[98,2],[98,2],[98,2],[69,2],[70,2],[98,2],[63,2],[63,2],[92,2],[63,2],[63,2],[110,2],[88,2],[115,2],[115,2],[114,2],[110,2],[70,2],[99,2],[107,2],[88,2],[89,2],[70,2],[70,2],[69,2],[92,2],[69,2],[63,2],[115,2],[70,2],[69,2],[70,2],[69,2],[70,2],[69,2],[100,2],[110,2],[69,2],[88,2],[69,2],[70,2],[99,2],[99,2],[89,2],[110,2],[70,2],[69,2],[69,2],[73,2],[69,2],[99,2],[99,2],[69,2],[69,2],[69,2],[69,2],[70,2],[70,2],[70,2],[69,2],[110,2],[98,2],[69,2],[88,2],[92,2],[70,2],[110,2],[73,2],[110,2],[69,2],[69,2],[69,2],[98,2],[88,2],[110,2],[63,2],[69,2],[110,2],[110,2],[110,2],[70,2],[110,2],[63,2],[73,2],[92,2],[88,2],[110,2],[73,2],[73,2],[73,2],[110,2],[116,2],[116,2],[110,2],[110,2],[88,2],[70,2],[110,2],[73,2],[110,2],[69,2],[99,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[70,2],[99,2],[69,2],[92,2],[70,2],[99,2],[70,2],[69,2],[70,2],[92,2],[99,2],[69,2],[92,2],[69,2],[110,2],[88,2],[88,2],[70,2],[89,2],[88,2],[92,2],[69,2],[110,2],[69,2],[99,2],[98,2],[98,2],[110,2],[63,2],[110,2],[99,2],[69,2],[73,2],[99,2],[69,2],[92,2],[110,2],[73,2],[110,2],[63,2],[70,2],[69,2],[112,2],[70,2],[69,2],[112,2],[112,2],[112,2],[77,72],[78,72],[107,72],[112,2],[112,2],[93,94],[93,17],[93,17],[93,17],[62,108],[69,17],[102,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[63,72],[91,2],[91,2],[91,2],[113,2],[91,2],[74,2],[68,2],[113,2],[113,2],[68,2],[91,2],[91,2],[91,2],[68,2],[68,2],[77,18],[78,18],[112,85],[116,86],[93,94],[96,94],[93,17],[96,72],[93,94],[96,94],[93,17],[96,72],[97,94],[97,17],[97,94],[97,17],[115,[[27,[78]]]],[96,94],[96,17],[96,17],[96,72],[115,[[27,[77]]]],[114,[[27,[89]]]],[96,94],[96,17],[96,17],[96,72],[102,72],[68,17],[103,17],[103,104],[63,17],[113,106],[110,17],[74,72],[68,19],[68,19],[116,17],[116,17],[73,18],[107,72],[69,17],[63,72],[63,19],[89,18],[115,[[27,[107]]]],[73,18],[116,18],[69,17],0,[[],79],[80,[[27,[82]]]],[83,[[27,[68]]]],[84,[[27,[103]]]],[85,[[27,[113]]]],[86,[[27,[118]]]],[87,[[27,[74]]]],[120,[[27,[61]]]],[90,17],[90,17],[95,18],0,[63,19],[91,17],[95,18],[113,18],[74,17],[63,19],[63,17],[73,17],[119,6],[68,19],[70,18],[71,72],[71,72],[103,72],[113,105],[99,17],[114,18],[116,[[5,[6,6]]]],[101,6],[101,121],[101,18],[101,18],[101,18],[74,18],[68,19],[103,18],[113,18],[119,6],[102,72],[69,17],0,[99,18],[102,72],[102,72],[102,72],[102,72],[102,72],[102,72],[102,72],[102,72],[88,72],[88,72],[88,72],[90,17],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[95,[[27,[6]]]],[62,[[27,[18]]]],0,[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[91,17],[74,72],[[],79],[90,18],[103,18],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,18],[112,18],[112,18],[[18,18],61],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],122],[[122,122],122],[[122,122],5],[[122,122],122],[[122,122],5],[122,19],[[122,122],122],[[122,122],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[122,122],[123,123],[124,124],[125,125],[126,126],[[122,122],25],[122,122],[[123,19,124,125],5],[[126,123,124,125],5],[[122,122],2],[[],126],[[122,122],122],[[126,123,2],5],[123,5],[123,5],[123,19],[[],19],[19,5],[[],19],[19,5],[[],19],[19,5],[[],19],[19,5],[[],122],[122,5],[[],126],[126,5],[[],122],[[126,123,2],5],[126,5],[126,5],[126,5],[123,5],[123,5],[126,5],[[122,122],2],[[123,123],2],[[124,124],2],[[125,125],2],[[126,126],2],[[122,-1],5,26],[[122,3],4],[[122,3],4],[[122,3],4],[[122,3],4],[[122,3],4],[[123,3],4],[[124,3],4],[[125,3],4],[[126,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,[[27,[122]]]],[19,122],[19,122],[-1,122,26],[[122,-1],5,28],[[122,122],5],[[122,122],122],[[122,122],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[122,2],[122,2],[122,122],[[122,122],[[27,[25]]]],[[122,122],5],[[122,122,2],5],[[122,122],122],[[122,122],5],[[122,122],122],[[122,122],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[122,122],122],[[123,19],5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],[[127,[-1]]],[]],[[[127,[-1]],3],4,[]],[-1,-1,[]],[-1,-2,[],[]],[[],55],[[[127,[-1]]],5,[]],[[[127,[-1]]],5,[]],0,[55,5],[-1,[[127,[-1]]],[]],[[[23,[-1]]],[[127,[-1]]],[]],[[[127,[-1]]],5,[]],[[[127,[-1]]],5,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[],5],[[],5],[[],5],[72,17],[72,18],[72,72],[[72,17],5],[[72,18],5],[[72,72],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],128],[[128,128],128],[[128,128],5],[[128,128],128],[[128,128],5],[128,18],[[128,128],128],[[128,128],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[128,128],[[128,128],25],[128,128],[[128,128],2],0,[[128,128],128],[[],5],[[],128],[[],5],[[128,128],2],[[128,-1],5,26],[[129,3],4],[[129,3],4],[[128,3],4],[[128,3],4],[[128,3],4],[[128,3],4],[[128,3],4],[[128,3],4],[-1,-1,[]],[-1,-1,[]],[18,[[27,[128]]]],[18,128],[18,128],[-1,128,26],[[128,-1],5,28],[[128,128],5],[[128,128],128],[[128,128],2],[-1,-2,[],[]],[-1,-2,[],[]],0,[128,2],[128,2],0,[128,128],[[128,128],[[27,[25]]]],[[128,128],5],[[128,128,2],5],0,[[128,128],128],[[128,128],5],[[128,128],128],[[128,128],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[[128,128],128],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18,6],[[18,6],5],0,0,[-1,2,[]],[-1,2,[]],[72,2],[18,2],[6,2],[[[23,[-1]]],2,130],[72,2],[18,2],[6,2],[[[23,[-1]]],2,131],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],55],[132,6],[133,133],[[55,55],55],[[55,55],5],[[55,55],55],[[55,55],5],[55,72],[[55,55],55],[[55,55],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[55,-1],-2,[],[]],[[55,18],133],[[55,72],133],[[55,6],133],[55,55],[134,134],[135,135],[136,136],[137,137],[132,132],[[55,55],25],[[-1,-1,137],-2,[],[]],[[18,18,137],133],[55,55],[[55,55],2],[[],55],[[-1,-1,136],-2,[],[]],[[18,18,136],133],[133,133],[[],132],[[55,55],55],[[133,1],133],[[],55],[[],55],[[55,55],2],[[134,134],2],[[135,135],2],[[136,136],2],[[137,137],2],[[],55],[[55,-1],5,26],[-1,-2,[],[]],[133,132],[133,54],[[55,3],4],[[55,3],4],[[55,3],4],[[55,3],4],[[55,3],4],[[55,3],4],[[134,3],4],[[135,3],4],[[136,3],4],[[137,3],4],[[133,3],4],[[132,3],4],[[132,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[72,[[27,[55]]]],[72,55],[72,55],[-1,55,26],[72,55],[[],55],[[],55],[[55,-1],5,28],[55,72],[[55,55],5],[[55,-1],-2,[],[]],[[55,18],133],[[55,72],133],[[55,6],133],[[55,55],55],[[55,55],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[55,2],[55,2],[[133,17],133],[133,133],[[-1,-1],-2,[],[]],[[6,6],133],[[18,18],133],[133,133],0,[55,5],[55,5],[55,5],[55,5],[55,5],0,[[72,1],55],[55,55],[[55,55],[[27,[25]]]],[133,133],[[55,55],5],[[55,55,2],5],[132,5],[[132,18,18],5],[132,5],[[132,1],5],[132,5],[132,5],[132,5],[132,5],[[132,55,18],5],[[132,17],5],[[],55],[[55,55],55],[[55,55],5],[[55,55],55],[55,-1,[]],[55,133],[[55,55],5],[[55,-1],-2,[],[]],[[55,6],133],[[55,72],133],[[55,18],133],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[6,6,2],-1,[]],[[6,6,2],133],[[6,6,2],133],[[6,6,2],133],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[55,55],55],0,[55,5],0,[[],55],[[],6],[[],[[5,[6,18]]]],[19,5],[[],5],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[138,3],4],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],139],[[],140],[[],141],[[],142],[[],143],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],[[139,139],5],[[140,140],5],[[141,141],5],[[142,142],5],[[143,143],5],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],[[139,139],5],[[140,140],5],[[141,141],5],[[142,142],5],[[143,143],5],[139,18],[140,18],[141,18],[142,18],[143,18],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],[[139,139],5],[[140,140],5],[[141,141],5],[[142,142],5],[[143,143],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[139,139],[140,140],[141,141],[142,142],[143,143],[[139,139],25],[[140,140],25],[[141,141],25],[[142,142],25],[[143,143],25],[139,139],[140,140],[141,141],[142,142],[143,143],[[139,139],2],[[140,140],2],[[141,141],2],[[142,142],2],[[143,143],2],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],[[],139],[[],140],[[],141],[[],142],[[],143],[[139,139],2],[[140,140],2],[[141,141],2],[[142,142],2],[[143,143],2],[[139,-1],5,26],[[140,-1],5,26],[[141,-1],5,26],[[142,-1],5,26],[[143,-1],5,26],[[139,3],4],[[139,3],4],[[139,3],4],[[139,3],4],[[139,3],4],[[140,3],4],[[140,3],4],[[140,3],4],[[140,3],4],[[140,3],4],[[141,3],4],[[141,3],4],[[141,3],4],[[141,3],4],[[141,3],4],[[142,3],4],[[142,3],4],[[142,3],4],[[142,3],4],[[142,3],4],[[143,3],4],[[143,3],4],[[143,3],4],[[143,3],4],[[143,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,[[27,[139]]]],[18,[[27,[140]]]],[18,[[27,[141]]]],[18,[[27,[142]]]],[18,[[27,[143]]]],[18,139],[18,140],[18,141],[18,142],[18,143],[18,139],[18,140],[18,141],[18,142],[18,143],[-1,139,26],[-1,140,26],[-1,141,26],[-1,142,26],[-1,143,26],[[139,-1],5,28],[[140,-1],5,28],[[141,-1],5,28],[[142,-1],5,28],[[143,-1],5,28],[[139,139],5],[[140,140],5],[[141,141],5],[[142,142],5],[[143,143],5],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],[[139,139],2],[[140,140],2],[[141,141],2],[[142,142],2],[[143,143],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[139,2],[140,2],[141,2],[142,2],[143,2],[139,2],[140,2],[141,2],[142,2],[143,2],[139,139],[140,140],[141,141],[142,142],[143,143],[[139,139],[[27,[25]]]],[[140,140],[[27,[25]]]],[[141,141],[[27,[25]]]],[[142,142],[[27,[25]]]],[[143,143],[[27,[25]]]],[[139,139],5],[[140,140],5],[[141,141],5],[[142,142],5],[[143,143],5],[[139,139,2],5],[[140,140,2],5],[[141,141,2],5],[[142,142,2],5],[[143,143,2],5],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],[[139,139],5],[[140,140],5],[[141,141],5],[[142,142],5],[[143,143],5],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],[[139,139],5],[[140,140],5],[[141,141],5],[[142,142],5],[[143,143],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[1864,1865],"p":[[4,"Ring",0],[15,"bool"],[3,"Formatter",4985],[6,"Result",4985],[15,"tuple"],[15,"u64"],[4,"Result",4986],[3,"TypeId",4987],[4,"ApicId",40],[4,"DeliveryMode",40],[4,"DestinationMode",40],[4,"DeliveryStatus",40],[4,"Level",40],[4,"TriggerMode",40],[4,"DestinationShorthand",40],[3,"Icr",40],[15,"u8"],[15,"u32"],[15,"usize"],[3,"IoApic",165],[3,"X2APIC",179],[3,"XAPIC",204],[15,"slice"],[3,"EFlags",276],[4,"Ordering",4988],[8,"IntoIterator",4989],[4,"Option",4990],[8,"Hasher",4991],[3,"PAddr",349],[3,"IOAddr",349],[3,"VAddr",349],[3,"PDEntry",349],[3,"PTEntry",349],[3,"PDFlags",349],[3,"PTFlags",349],[15,"i32"],[8,"Into",4992],[8,"Copy",4993],[3,"TaskStateSegment",708],[3,"PAddr",753],[3,"IOAddr",753],[3,"VAddr",753],[3,"PML4Entry",753],[3,"PML5Entry",753],[3,"PDPTEntry",753],[3,"PDEntry",753],[3,"PTEntry",753],[3,"PML4Flags",753],[3,"PML5Flags",753],[3,"PDPTFlags",753],[3,"PDFlags",753],[3,"PTFlags",753],[3,"RFlags",1394],[3,"Descriptor64",1470],[3,"SegmentSelector",4223],[3,"TaskStateSegment",1524],[6,"Result",4453],[3,"Cr0",1554],[3,"Cr4",1554],[3,"Xcr0",1554],[3,"CpuIdResult",1749],[3,"HypervisorInfo",1749],[3,"ProcessorCapacityAndFeatureInfo",1749],[3,"ProcessorBrandString",1749],[15,"str"],[3,"VendorInfo",1749],[3,"SoCVendorBrand",1749],[3,"CacheParameter",1749],[3,"FeatureInfo",1749],[3,"ExtendedProcessorFeatureIdentifiers",1749],[3,"ProcessorFrequencyInfo",1749],[15,"u16"],[3,"MemoryEncryptionInfo",1749],[3,"DatInfo",1749],[4,"DatType",1749],[4,"CacheType",1749],[3,"L3CatInfo",1749],[3,"L2CatInfo",1749],[3,"CpuId",1749],[3,"CacheInfoIter",1749],[4,"CacheInfoType",1749],[3,"CacheInfo",1749],[3,"CacheParametersIter",1749],[3,"ExtendedTopologyIter",1749],[3,"ExtendedStateIter",1749],[3,"SgxSectionIter",1749],[3,"DatIter",1749],[3,"ProcessorTraceInfo",1749],[3,"L3MonitoringInfo",1749],[3,"ProcessorTopologyInfo",1749],[3,"PerformanceMonitoringInfo",1749],[3,"ApmInfo",1749],[3,"L1CacheTlbInfo",1749],[4,"Associativity",1749],[3,"TscInfo",1749],[3,"L2And3CacheTlbInfo",1749],[3,"Tlb1gbPageInfo",1749],[3,"ThermalPowerInfo",1749],[3,"SvmFeatures",1749],[3,"PerformanceOptimizationInfo",1749],[3,"ProcessorSerial",1749],[3,"MonitorMwaitInfo",1749],[3,"ExtendedTopologyLevel",1749],[4,"TopologyType",1749],[4,"ExtendedRegisterType",1749],[4,"ExtendedRegisterStateLocation",1749],[3,"MemBwAllocationInfo",1749],[4,"Hypervisor",1749],[3,"Error",4985],[3,"ExtendedFeatures",1749],[3,"DirectCacheAccessInfo",1749],[3,"ExtendedStateInfo",1749],[3,"ExtendedState",1749],[3,"RdtMonitoringInfo",1749],[3,"RdtAllocationInfo",1749],[3,"SgxInfo",1749],[3,"SoCVendorInfo",1749],[4,"SgxSectionInfo",1749],[3,"EpcSection",1749],[3,"SoCVendorAttributesIter",1749],[15,"u128"],[3,"Dr6",2876],[4,"Breakpoint",2876],[4,"BreakCondition",2876],[4,"BreakSize",2876],[3,"Dr7",2876],[3,"DescriptorTablePointer",3021],[3,"PageFaultError",3050],[3,"InterruptDescription",3050],[8,"RdRand",4211],[8,"RdSeed",4211],[3,"Descriptor",4223],[3,"DescriptorBuilder",4223],[4,"SystemDescriptorTypes64",4223],[4,"SystemDescriptorTypes32",4223],[4,"DataSegmentType",4223],[4,"CodeSegmentType",4223],[4,"VmFail",4453],[3,"PinbasedControls",4472],[3,"PrimaryControls",4472],[3,"SecondaryControls",4472],[3,"EntryControls",4472],[3,"ExitControls",4472],[8,"ApicControl",40],[3,"Page",349],[3,"LargePage",349],[3,"Page",753],[3,"LargePage",753],[3,"HugePage",753],[8,"GateDescriptorBuilder",4223],[8,"SegmentDescriptorBuilder",4223],[8,"BuildDescriptor",4223],[8,"LdtDescriptorBuilder",4223],[8,"TaskGateDescriptorBuilder",4223]],"b":[[317,"impl-Octal-for-EFlags"],[318,"impl-LowerHex-for-EFlags"],[319,"impl-UpperHex-for-EFlags"],[320,"impl-Debug-for-EFlags"],[321,"impl-Binary-for-EFlags"],[384,"impl-Add%3Cu32%3E-for-PAddr"],[385,"impl-Add%3Cusize%3E-for-PAddr"],[386,"impl-Add-for-PAddr"],[387,"impl-Add-for-IOAddr"],[388,"impl-Add%3Cusize%3E-for-IOAddr"],[389,"impl-Add%3Cu32%3E-for-IOAddr"],[390,"impl-Add%3Cusize%3E-for-VAddr"],[391,"impl-Add%3Cu32%3E-for-VAddr"],[392,"impl-Add-for-VAddr"],[393,"impl-AddAssign-for-PAddr"],[394,"impl-AddAssign%3Cu32%3E-for-PAddr"],[395,"impl-AddAssign%3Cu32%3E-for-IOAddr"],[396,"impl-AddAssign-for-IOAddr"],[397,"impl-AddAssign-for-VAddr"],[398,"impl-AddAssign%3Cu32%3E-for-VAddr"],[399,"impl-AddAssign%3Cusize%3E-for-VAddr"],[429,"impl-BitAnd-for-PAddr"],[430,"impl-BitAnd%3Cu32%3E-for-PAddr"],[431,"impl-BitAnd-for-IOAddr"],[432,"impl-BitAnd%3Cu32%3E-for-IOAddr"],[433,"impl-BitAnd%3Ci32%3E-for-VAddr"],[434,"impl-BitAnd%3Cu32%3E-for-VAddr"],[435,"impl-BitAnd-for-VAddr"],[436,"impl-BitAnd%3Cusize%3E-for-VAddr"],[441,"impl-BitOr-for-PAddr"],[442,"impl-BitOr%3Cu32%3E-for-PAddr"],[443,"impl-BitOr-for-IOAddr"],[444,"impl-BitOr%3Cu32%3E-for-IOAddr"],[445,"impl-BitOr-for-VAddr"],[446,"impl-BitOr%3Cu32%3E-for-VAddr"],[447,"impl-BitOr%3Cusize%3E-for-VAddr"],[505,"impl-UpperHex-for-PAddr"],[506,"impl-Pointer-for-PAddr"],[507,"impl-Debug-for-PAddr"],[508,"impl-Binary-for-PAddr"],[509,"impl-LowerHex-for-PAddr"],[510,"impl-Octal-for-PAddr"],[511,"impl-Display-for-PAddr"],[512,"impl-Debug-for-IOAddr"],[513,"impl-Display-for-IOAddr"],[514,"impl-Octal-for-IOAddr"],[515,"impl-UpperHex-for-IOAddr"],[516,"impl-LowerHex-for-IOAddr"],[517,"impl-Binary-for-IOAddr"],[518,"impl-Pointer-for-IOAddr"],[519,"impl-Octal-for-VAddr"],[520,"impl-Debug-for-VAddr"],[521,"impl-Binary-for-VAddr"],[522,"impl-UpperHex-for-VAddr"],[523,"impl-Display-for-VAddr"],[524,"impl-Pointer-for-VAddr"],[525,"impl-LowerHex-for-VAddr"],[526,"impl-Binary-for-PDFlags"],[527,"impl-Octal-for-PDFlags"],[528,"impl-UpperHex-for-PDFlags"],[529,"impl-LowerHex-for-PDFlags"],[530,"impl-Debug-for-PDFlags"],[532,"impl-Debug-for-PTFlags"],[533,"impl-UpperHex-for-PTFlags"],[534,"impl-LowerHex-for-PTFlags"],[535,"impl-Octal-for-PTFlags"],[536,"impl-Binary-for-PTFlags"],[540,"impl-From%3Ci32%3E-for-PAddr"],[541,"impl-From%3Cusize%3E-for-PAddr"],[542,"impl-From%3Cu32%3E-for-PAddr"],[544,"impl-From%3Cusize%3E-for-IOAddr"],[546,"impl-From%3Cu32%3E-for-IOAddr"],[547,"impl-From%3Ci32%3E-for-IOAddr"],[549,"impl-From%3Ci32%3E-for-VAddr"],[550,"impl-From%3Cusize%3E-for-VAddr"],[551,"impl-From%3Cu32%3E-for-VAddr"],[580,"impl-Into%3Cusize%3E-for-PAddr"],[581,"impl-Into%3Cu32%3E-for-PAddr"],[582,"impl-Into%3Cu32%3E-for-IOAddr"],[584,"impl-Into%3Cusize%3E-for-IOAddr"],[585,"impl-Into%3Cu32%3E-for-VAddr"],[587,"impl-Into%3Cusize%3E-for-VAddr"],[641,"impl-Rem%3Cu32%3E-for-PAddr"],[642,"impl-Rem%3Cusize%3E-for-PAddr"],[643,"impl-Rem-for-PAddr"],[644,"impl-Rem-for-IOAddr"],[645,"impl-Rem%3Cusize%3E-for-IOAddr"],[646,"impl-Rem%3Cu32%3E-for-IOAddr"],[647,"impl-Rem%3Cu32%3E-for-VAddr"],[648,"impl-Rem%3Cusize%3E-for-VAddr"],[649,"impl-Rem-for-VAddr"],[656,"impl-Shr%3Cu32%3E-for-VAddr"],[657,"impl-Shr%3Cusize%3E-for-VAddr"],[658,"impl-Shr%3Ci32%3E-for-VAddr"],[659,"impl-Sub-for-PAddr"],[660,"impl-Sub%3Cusize%3E-for-PAddr"],[661,"impl-Sub%3Cu32%3E-for-PAddr"],[662,"impl-Sub-for-IOAddr"],[663,"impl-Sub%3Cu32%3E-for-IOAddr"],[664,"impl-Sub%3Cusize%3E-for-IOAddr"],[665,"impl-Sub%3Cu32%3E-for-VAddr"],[666,"impl-Sub-for-VAddr"],[667,"impl-Sub%3Cusize%3E-for-VAddr"],[844,"impl-Add%3Cusize%3E-for-PAddr"],[845,"impl-Add-for-PAddr"],[846,"impl-Add%3Cu64%3E-for-PAddr"],[847,"impl-Add%3Cusize%3E-for-IOAddr"],[848,"impl-Add%3Cu64%3E-for-IOAddr"],[849,"impl-Add-for-IOAddr"],[850,"impl-Add%3Cusize%3E-for-VAddr"],[851,"impl-Add%3Cu64%3E-for-VAddr"],[852,"impl-Add-for-VAddr"],[853,"impl-AddAssign-for-PAddr"],[854,"impl-AddAssign%3Cu64%3E-for-PAddr"],[855,"impl-AddAssign-for-IOAddr"],[856,"impl-AddAssign%3Cu64%3E-for-IOAddr"],[857,"impl-AddAssign-for-VAddr"],[858,"impl-AddAssign%3Cu64%3E-for-VAddr"],[859,"impl-AddAssign%3Cusize%3E-for-VAddr"],[899,"impl-BitAnd%3Cu64%3E-for-PAddr"],[900,"impl-BitAnd-for-PAddr"],[901,"impl-BitAnd-for-IOAddr"],[902,"impl-BitAnd%3Cu64%3E-for-IOAddr"],[903,"impl-BitAnd%3Cu64%3E-for-VAddr"],[904,"impl-BitAnd%3Cusize%3E-for-VAddr"],[905,"impl-BitAnd-for-VAddr"],[906,"impl-BitAnd%3Ci32%3E-for-VAddr"],[917,"impl-BitOr%3Cu64%3E-for-PAddr"],[918,"impl-BitOr-for-PAddr"],[919,"impl-BitOr%3Cu64%3E-for-IOAddr"],[920,"impl-BitOr-for-IOAddr"],[921,"impl-BitOr-for-VAddr"],[922,"impl-BitOr%3Cusize%3E-for-VAddr"],[923,"impl-BitOr%3Cu64%3E-for-VAddr"],[1040,"impl-Octal-for-PAddr"],[1041,"impl-Debug-for-PAddr"],[1042,"impl-Binary-for-PAddr"],[1043,"impl-Display-for-PAddr"],[1044,"impl-UpperHex-for-PAddr"],[1045,"impl-LowerHex-for-PAddr"],[1046,"impl-Pointer-for-PAddr"],[1047,"impl-Binary-for-IOAddr"],[1048,"impl-UpperHex-for-IOAddr"],[1049,"impl-Debug-for-IOAddr"],[1050,"impl-Octal-for-IOAddr"],[1051,"impl-Pointer-for-IOAddr"],[1052,"impl-LowerHex-for-IOAddr"],[1053,"impl-Display-for-IOAddr"],[1054,"impl-Binary-for-VAddr"],[1055,"impl-Pointer-for-VAddr"],[1056,"impl-UpperHex-for-VAddr"],[1057,"impl-Debug-for-VAddr"],[1058,"impl-LowerHex-for-VAddr"],[1059,"impl-Display-for-VAddr"],[1060,"impl-Octal-for-VAddr"],[1061,"impl-LowerHex-for-PML4Flags"],[1062,"impl-UpperHex-for-PML4Flags"],[1063,"impl-Debug-for-PML4Flags"],[1064,"impl-Binary-for-PML4Flags"],[1065,"impl-Octal-for-PML4Flags"],[1066,"impl-Octal-for-PML5Flags"],[1067,"impl-LowerHex-for-PML5Flags"],[1068,"impl-Binary-for-PML5Flags"],[1069,"impl-UpperHex-for-PML5Flags"],[1070,"impl-Debug-for-PML5Flags"],[1073,"impl-Octal-for-PDPTFlags"],[1074,"impl-Debug-for-PDPTFlags"],[1075,"impl-UpperHex-for-PDPTFlags"],[1076,"impl-LowerHex-for-PDPTFlags"],[1077,"impl-Binary-for-PDPTFlags"],[1079,"impl-Octal-for-PDFlags"],[1080,"impl-Debug-for-PDFlags"],[1081,"impl-UpperHex-for-PDFlags"],[1082,"impl-Binary-for-PDFlags"],[1083,"impl-LowerHex-for-PDFlags"],[1085,"impl-LowerHex-for-PTFlags"],[1086,"impl-Octal-for-PTFlags"],[1087,"impl-UpperHex-for-PTFlags"],[1088,"impl-Debug-for-PTFlags"],[1089,"impl-Binary-for-PTFlags"],[1094,"impl-From%3Cusize%3E-for-PAddr"],[1096,"impl-From%3Ci32%3E-for-PAddr"],[1097,"impl-From%3Cu64%3E-for-PAddr"],[1098,"impl-From%3Cusize%3E-for-IOAddr"],[1099,"impl-From%3Cu64%3E-for-IOAddr"],[1100,"impl-From%3Ci32%3E-for-IOAddr"],[1102,"impl-From%3Ci32%3E-for-VAddr"],[1103,"impl-From%3Cusize%3E-for-VAddr"],[1104,"impl-From%3Cu64%3E-for-VAddr"],[1168,"impl-Into%3Cusize%3E-for-PAddr"],[1169,"impl-Into%3Cu64%3E-for-PAddr"],[1170,"impl-Into%3Cusize%3E-for-IOAddr"],[1172,"impl-Into%3Cu64%3E-for-IOAddr"],[1174,"impl-Into%3Cusize%3E-for-VAddr"],[1175,"impl-Into%3Cu64%3E-for-VAddr"],[1280,"impl-Rem-for-PAddr"],[1281,"impl-Rem%3Cusize%3E-for-PAddr"],[1282,"impl-Rem%3Cu64%3E-for-PAddr"],[1283,"impl-Rem%3Cu64%3E-for-IOAddr"],[1284,"impl-Rem-for-IOAddr"],[1285,"impl-Rem%3Cusize%3E-for-IOAddr"],[1286,"impl-Rem%3Cu64%3E-for-VAddr"],[1287,"impl-Rem%3Cusize%3E-for-VAddr"],[1288,"impl-Rem-for-VAddr"],[1301,"impl-Shr%3Cu64%3E-for-VAddr"],[1302,"impl-Shr%3Ci32%3E-for-VAddr"],[1303,"impl-Shr%3Cusize%3E-for-VAddr"],[1306,"impl-Sub-for-PAddr"],[1307,"impl-Sub%3Cu64%3E-for-PAddr"],[1308,"impl-Sub%3Cusize%3E-for-PAddr"],[1309,"impl-Sub-for-IOAddr"],[1310,"impl-Sub%3Cusize%3E-for-IOAddr"],[1311,"impl-Sub%3Cu64%3E-for-IOAddr"],[1312,"impl-Sub%3Cusize%3E-for-VAddr"],[1313,"impl-Sub-for-VAddr"],[1314,"impl-Sub%3Cu64%3E-for-VAddr"],[1435,"impl-LowerHex-for-RFlags"],[1436,"impl-Debug-for-RFlags"],[1437,"impl-UpperHex-for-RFlags"],[1438,"impl-Binary-for-RFlags"],[1439,"impl-Octal-for-RFlags"],[1660,"impl-Debug-for-Cr0"],[1661,"impl-Octal-for-Cr0"],[1662,"impl-UpperHex-for-Cr0"],[1663,"impl-LowerHex-for-Cr0"],[1664,"impl-Binary-for-Cr0"],[1665,"impl-Debug-for-Cr4"],[1666,"impl-UpperHex-for-Cr4"],[1667,"impl-LowerHex-for-Cr4"],[1668,"impl-Octal-for-Cr4"],[1669,"impl-Binary-for-Cr4"],[1670,"impl-LowerHex-for-Xcr0"],[1671,"impl-UpperHex-for-Xcr0"],[1672,"impl-Octal-for-Xcr0"],[1673,"impl-Debug-for-Xcr0"],[1674,"impl-Binary-for-Xcr0"],[2091,"impl-Display-for-Associativity"],[2092,"impl-Debug-for-Associativity"],[2102,"impl-Debug-for-VendorInfo"],[2103,"impl-Display-for-VendorInfo"],[2106,"impl-Display-for-CacheInfo"],[2107,"impl-Debug-for-CacheInfo"],[2111,"impl-Debug-for-CacheType"],[2112,"impl-Display-for-CacheType"],[2116,"impl-Debug-for-TopologyType"],[2117,"impl-Display-for-TopologyType"],[2119,"impl-Display-for-ExtendedRegisterType"],[2120,"impl-Debug-for-ExtendedRegisterType"],[2121,"impl-Debug-for-ExtendedRegisterStateLocation"],[2122,"impl-Display-for-ExtendedRegisterStateLocation"],[2129,"impl-Debug-for-DatType"],[2130,"impl-Display-for-DatType"],[2132,"impl-Display-for-SoCVendorBrand"],[2133,"impl-Debug-for-SoCVendorBrand"],[2967,"impl-Debug-for-Dr6"],[2968,"impl-LowerHex-for-Dr6"],[2969,"impl-Octal-for-Dr6"],[2970,"impl-Binary-for-Dr6"],[2971,"impl-UpperHex-for-Dr6"],[3102,"impl-Debug-for-InterruptDescription"],[3103,"impl-Display-for-InterruptDescription"],[3104,"impl-LowerHex-for-PageFaultError"],[3105,"impl-UpperHex-for-PageFaultError"],[3106,"impl-Octal-for-PageFaultError"],[3107,"impl-Binary-for-PageFaultError"],[3108,"impl-Display-for-PageFaultError"],[3109,"impl-Debug-for-PageFaultError"],[4301,"impl-GateDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4302,"impl-GateDescriptorBuilder%3Cu16%3E-for-DescriptorBuilder"],[4303,"impl-GateDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4332,"impl-BuildDescriptor%3CDescriptor%3E-for-DescriptorBuilder"],[4333,"impl-BuildDescriptor%3CDescriptor64%3E-for-DescriptorBuilder"],[4334,"impl-Binary-for-SegmentSelector"],[4335,"impl-Debug-for-SegmentSelector"],[4336,"impl-Octal-for-SegmentSelector"],[4337,"impl-Display-for-SegmentSelector"],[4338,"impl-UpperHex-for-SegmentSelector"],[4339,"impl-LowerHex-for-SegmentSelector"],[4345,"impl-Debug-for-Descriptor"],[4346,"impl-Display-for-Descriptor"],[4365,"impl-GateDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4366,"impl-GateDescriptorBuilder%3Cu16%3E-for-DescriptorBuilder"],[4367,"impl-GateDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4382,"impl-LdtDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4383,"impl-LdtDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4416,"impl-GateDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4417,"impl-GateDescriptorBuilder%3Cu16%3E-for-DescriptorBuilder"],[4418,"impl-GateDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4434,"impl-GateDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4435,"impl-GateDescriptorBuilder%3Cu16%3E-for-DescriptorBuilder"],[4436,"impl-GateDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4723,"impl-Binary-for-PinbasedControls"],[4724,"impl-LowerHex-for-PinbasedControls"],[4725,"impl-Debug-for-PinbasedControls"],[4726,"impl-UpperHex-for-PinbasedControls"],[4727,"impl-Octal-for-PinbasedControls"],[4728,"impl-LowerHex-for-PrimaryControls"],[4729,"impl-UpperHex-for-PrimaryControls"],[4730,"impl-Binary-for-PrimaryControls"],[4731,"impl-Octal-for-PrimaryControls"],[4732,"impl-Debug-for-PrimaryControls"],[4733,"impl-Octal-for-SecondaryControls"],[4734,"impl-Binary-for-SecondaryControls"],[4735,"impl-UpperHex-for-SecondaryControls"],[4736,"impl-Debug-for-SecondaryControls"],[4737,"impl-LowerHex-for-SecondaryControls"],[4738,"impl-Octal-for-EntryControls"],[4739,"impl-Debug-for-EntryControls"],[4740,"impl-Binary-for-EntryControls"],[4741,"impl-UpperHex-for-EntryControls"],[4742,"impl-LowerHex-for-EntryControls"],[4743,"impl-LowerHex-for-ExitControls"],[4744,"impl-Debug-for-ExitControls"],[4745,"impl-Octal-for-ExitControls"],[4746,"impl-UpperHex-for-ExitControls"],[4747,"impl-Binary-for-ExitControls"]]},\
"x86_64":{"doc":"This crate provides x86_64 specific functions and data …","t":"CENNNNCACCLLLLLLLLALAOOALLLDDDDLLLLLLLLFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFAFAAFAAAFFFFFFGDCIGCIGDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLCCCCCCCCFFFFFFFFFFFFCFFFFFNNNEDNLLLLLLLFFFLLLLLLLLLLLLLLLLAAAACCCAACCASSSDDDDDDDSSSCCSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSEENNIEDNDNDNDNDDDDDSSSSSSNNSSSSSNNNNSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLDDDSDDSSSSSSDSSSDSSSSSSSSSDSDSDSSSDSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSDSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLFSSSSSSSSSSSSDSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLFFSDDDDDSDIIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLSSSSSSSSSDDSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDMLLLLLAALMAALLALSSSSSSSEDSSDSSSSSSSCNSSSSNSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNSNNENGGNNDDENGNGGNSNDDDNNNSNNNSSNDGSSSNNDNNSNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMLLMMLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLMMLLLLLMLLLLMLMMLLLMMLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMIICCCCCCCCCCCCCCCKKAAAADDDLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLIENNNNEENEDIIDDNNNDNNNNINNNNDNNNIEEELLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLKLLLLLLLLLKLLLLLLLLLKLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLKLLLLLLLLLMMMDIDDDISSSEEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSSSSSSSNENSSNSSNSDDDDDENNSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIKKDLLLLLMLMLMLLL","n":["PhysAddr","PrivilegeLevel","Ring0","Ring1","Ring2","Ring3","VirtAddr","addr","align_down","align_up","borrow","borrow_mut","clone","eq","fmt","from","from_u16","hash","instructions","into","registers","set_general_handler","software_interrupt","structures","try_from","try_into","type_id","PhysAddr","PhysAddrNotValid","VirtAddr","VirtAddrNotValid","add","add","add","add","add_assign","add_assign","add_assign","add_assign","align_down","align_down","align_down","align_up","align_up","align_up","as_mut_ptr","as_ptr","as_u64","as_u64","backward_checked","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","cmp","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","from","from","from","from","from_ptr","hash","hash","into","into","into","into","is_aligned","is_aligned","is_null","is_null","new","new","new_truncate","new_truncate","new_unsafe","new_unsafe","p1_index","p2_index","p3_index","p4_index","page_offset","page_table_index","partial_cmp","partial_cmp","steps_between","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_new","try_new","type_id","type_id","type_id","type_id","zero","zero","bochs_breakpoint","hlt","interrupts","nop","port","random","read_rip","segmentation","tables","tlb","are_enabled","disable","enable","enable_and_hlt","int3","without_interrupts","Port","PortGeneric","PortRead","PortReadAccess","PortReadOnly","PortWrite","PortWriteAccess","PortWriteOnly","ReadOnlyAccess","ReadWriteAccess","WriteOnlyAccess","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","new","read","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","RdRand","borrow","borrow_mut","clone","fmt","from","get_u16","get_u32","get_u64","into","new","try_from","try_into","type_id","CS","DS","ES","FS","GS","SS","Segment","Segment64","cs","load_ds","load_es","load_fs","load_gs","load_ss","rdfsbase","rdgsbase","set_cs","swap_gs","wrfsbase","wrgsbase","DescriptorTablePointer","lgdt","lidt","load_tss","sgdt","sidt","Address","All","AllExceptGlobal","InvPicdCommand","Pcid","Single","borrow","borrow","borrow_mut","borrow_mut","clone","cmp","eq","flush","flush_all","flush_pcid","fmt","fmt","from","from","hash","into","into","new","partial_cmp","try_from","try_from","try_into","try_into","type_id","type_id","value","control","debug","model_specific","mxcsr","rdfsbase","rdgsbase","read_rip","rflags","segmentation","wrfsbase","wrgsbase","xcontrol","ALIGNMENT_MASK","CACHE_DISABLE","CONTROL_FLOW_ENFORCEMENT","Cr0","Cr0Flags","Cr2","Cr3","Cr3Flags","Cr4","Cr4Flags","DEBUGGING_EXTENSIONS","EMULATE_COPROCESSOR","EXTENSION_TYPE","Efer","EferFlags","FSGSBASE","KEY_LOCKER","L5_PAGING","MACHINE_CHECK_EXCEPTION","MONITOR_COPROCESSOR","NOT_WRITE_THROUGH","NUMERIC_ERROR","OSFXSR","OSXMMEXCPT_ENABLE","OSXSAVE","PAGE_GLOBAL","PAGE_LEVEL_CACHE_DISABLE","PAGE_LEVEL_WRITETHROUGH","PAGE_SIZE_EXTENSION","PAGING","PCID","PERFORMANCE_MONITOR_COUNTER","PHYSICAL_ADDRESS_EXTENSION","PROTECTED_MODE_ENABLE","PROTECTED_MODE_VIRTUAL_INTERRUPTS","PROTECTION_KEY","PROTECTION_KEY_SUPERVISOR","PROTECTION_KEY_USER","SAFER_MODE_EXTENSIONS","SUPERVISOR_MODE_ACCESS_PREVENTION","SUPERVISOR_MODE_EXECUTION_PROTECTION","TASK_SWITCHED","TIMESTAMP_DISABLE","USER_MODE_INSTRUCTION_PREVENTION","VIRTUAL_8086_MODE_EXTENSIONS","VIRTUAL_MACHINE_EXTENSIONS","WRITE_PROTECT","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","difference","difference","difference","empty","empty","empty","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","not","not","not","partial_cmp","partial_cmp","partial_cmp","read","read","read","read","read_pcid","read_raw","read_raw","read_raw","read_raw","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","update","update","write","write","write","write_pcid","write_raw","write_raw","ACCESS_DETECTED","BreakpointCondition","BreakpointSize","DataReadsWrites","DataWrites","DebugAddressRegister","DebugAddressRegisterNumber","Dr0","Dr0","Dr1","Dr1","Dr2","Dr2","Dr3","Dr3","Dr6","Dr6Flags","Dr7","Dr7Flags","Dr7Value","GENERAL_DETECT_ENABLE","GLOBAL_BREAKPOINT_0_ENABLE","GLOBAL_BREAKPOINT_1_ENABLE","GLOBAL_BREAKPOINT_2_ENABLE","GLOBAL_BREAKPOINT_3_ENABLE","GLOBAL_EXACT_BREAKPOINT_ENABLE","InstructionExecution","IoReadsWrites","LOCAL_BREAKPOINT_0_ENABLE","LOCAL_BREAKPOINT_1_ENABLE","LOCAL_BREAKPOINT_2_ENABLE","LOCAL_BREAKPOINT_3_ENABLE","LOCAL_EXACT_BREAKPOINT_ENABLE","Length1B","Length2B","Length4B","Length8B","NUM","RESTRICTED_TRANSACTIONAL_MEMORY","RTM","STEP","SWITCH","TRAP","TRAP0","TRAP1","TRAP2","TRAP3","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","cmp","cmp","complement","complement","condition","contains","contains","difference","difference","empty","empty","eq","eq","eq","eq","eq","eq","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","get","global_breakpoint_enable","hash","hash","insert","insert","insert_flags","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","local_breakpoint_enable","new","new","not","not","partial_cmp","partial_cmp","read","read","read","read","read","read","read","read_raw","read_raw","remove","remove","remove_flags","set","set","set_condition","set_flags","set_size","size","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","toggle_flags","trap","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","write","write","write","write","write","write","write_raw","CetFlags","Efer","EferFlags","FAST_FXSAVE_FXRSTOR","FsBase","GsBase","IBT_ENABLE","IBT_LEGACY_ENABLE","IBT_LEGACY_SUPPRESS_ENABLE","IBT_NO_TRACK_ENABLE","IBT_SUPPRESS_ENABLE","IBT_TRACKED","KernelGsBase","LONG_MODE_ACTIVE","LONG_MODE_ENABLE","LONG_MODE_SEGMENT_LIMIT_ENABLE","LStar","MSR","MSR","MSR","MSR","MSR","MSR","MSR","MSR","MSR","Msr","NO_EXECUTE_ENABLE","SCet","SECURE_VIRTUAL_MACHINE_ENABLE","SFMask","SS_ENABLE","SS_WRITE_ENABLE","SYSTEM_CALL_EXTENSIONS","Star","TRANSLATION_CACHE_EXTENSION","UCet","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","new","not","not","partial_cmp","partial_cmp","read","read","read","read","read","read","read","read","read","read","read_raw","read_raw","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","update","write","write","write","write","write","write","write","write","write","write","write_raw","write_raw","DENORMAL","DENORMALS_ARE_ZEROS","DENORMAL_MASK","DIVIDE_BY_ZERO","DIVIDE_BY_ZERO_MASK","FLUSH_TO_ZERO","INVALID_OPERATION","INVALID_OPERATION_MASK","MxCsr","OVERFLOW","OVERFLOW_MASK","PRECISION","PRECISION_MASK","ROUNDING_CONTROL_NEGATIVE","ROUNDING_CONTROL_POSITIVE","ROUNDING_CONTROL_ZERO","UNDERFLOW","UNDERFLOW_MASK","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","cmp","complement","contains","default","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","read","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","write","ALIGNMENT_CHECK","AUXILIARY_CARRY_FLAG","CARRY_FLAG","DIRECTION_FLAG","ID","INTERRUPT_FLAG","IOPL_HIGH","IOPL_LOW","NESTED_TASK","OVERFLOW_FLAG","PARITY_FLAG","RESUME_FLAG","RFlags","SIGN_FLAG","TRAP_FLAG","VIRTUAL_8086_MODE","VIRTUAL_INTERRUPT","VIRTUAL_INTERRUPT_PENDING","ZERO_FLAG","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","read","read_raw","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","write","write_raw","BASE","CS","DS","ES","FS","GS","NULL","SS","Segment","Segment64","SegmentSelector","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","cmp","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_reg","get_reg","get_reg","get_reg","get_reg","get_reg","get_reg","hash","index","into","into","into","into","into","into","into","new","partial_cmp","read_base","read_base","read_base","rpl","set_reg","set_reg","set_reg","set_reg","set_reg","set_reg","set_reg","set_rpl","swap","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write_base","write_base","write_base","AVX","BNDCSR","BNDREG","HI16_ZMM","LWP","MPK","OPMASK","SSE","X87","XCr0","XCr0Flags","YMM","ZMM_HI256","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","is_all","is_empty","not","partial_cmp","read","read_raw","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","write","write_raw","DescriptorTablePointer","base","borrow","borrow_mut","clone","fmt","from","gdt","idt","into","limit","paging","port","try_from","try_into","tss","type_id","ACCESSED","AVAILABLE","BASE_0_23","BASE_24_31","CONFORMING","DEFAULT_SIZE","DPL_RING_3","Descriptor","DescriptorFlags","EXECUTABLE","GRANULARITY","GlobalDescriptorTable","KERNEL_CODE32","KERNEL_CODE64","KERNEL_DATA","LIMIT_0_15","LIMIT_16_19","LONG_MODE","PRESENT","SegmentSelector","SystemSegment","USER_CODE32","USER_CODE64","USER_DATA","USER_SEGMENT","UserSegment","WRITABLE","add_entry","all","as_raw_slice","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw_slice","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","kernel_code_segment","kernel_data_segment","load","load_unsafe","new","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_into","try_into","try_into","tss_segment","type_id","type_id","type_id","union","user_code_segment","user_data_segment","AlignmentCheck","BoundRange","Breakpoint","CAUSED_BY_WRITE","ControlProtection","Debug","DescriptorTable","DeviceNotAvailable","DivergingHandlerFunc","DivergingHandlerFuncWithErrCode","Division","Double","Entry","EntryOptions","ExceptionVector","Gdt","GeneralHandlerFunc","GeneralProtection","HandlerFunc","HandlerFuncWithErrCode","HypervisorInjection","INSTRUCTION_FETCH","Idt","InterruptDescriptorTable","InterruptStackFrame","InterruptStackFrameValue","InvalidOpcode","InvalidTss","Ldt","MALFORMED_TABLE","MachineCheck","NonMaskableInterrupt","Overflow","PROTECTION_KEY","PROTECTION_VIOLATION","Page","PageFaultErrorCode","PageFaultHandlerFunc","RMP","SGX","SHADOW_STACK","Security","SegmentNotPresent","SelectorErrorCode","SimdFloatingPoint","Stack","USER_MODE","Virtualization","VmmCommunication","X87FloatingPoint","alignment_check","all","as_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_range_exceeded","breakpoint","clone","clone","clone","clone","clone","clone","clone","clone","cmp","code_segment","complement","contains","cpu_flags","debug","deref","descriptor_table","device_not_available","difference","disable_interrupts","divide_error","double_fault","empty","eq","eq","eq","eq","eq","eq","extend","external","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","general_protection_fault","handler_addr","hash","hash","hash","index","index","index_mut","insert","instruction_pointer","intersection","intersects","into","into","into","into","into","into","into","into","into","invalid_opcode","invalid_tss","is_all","is_empty","is_null","load","load_unsafe","machine_check","missing","new","new","new_truncate","non_maskable_interrupt","not","overflow","page_fault","partial_cmp","remove","reset","security_exception","segment_not_present","set","set_handler_addr","set_handler_fn","set_handler_fn","set_handler_fn","set_handler_fn","set_handler_fn","set_present","set_privilege_level","set_stack_index","simd_floating_point","slice","slice_mut","stack_pointer","stack_segment","stack_segment_fault","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","virtualization","vmm_communication_exception","x87_floating_point","FrameAllocator","FrameDeallocator","MappedPageTable","Mapper","OffsetPageTable","Page","PageOffset","PageSize","PageTable","PageTableFlags","PageTableIndex","PhysFrame","RecursivePageTable","Size1GiB","Size2MiB","Size4KiB","Translate","allocate_frame","deallocate_frame","frame","mapper","page","page_table","PhysFrame","PhysFrameRange","PhysFrameRangeInclusive","add","add_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","containing_address","end","end","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_start_address","from_start_address_unchecked","hash","hash","hash","into","into","into","into_iter","into_iter","is_empty","is_empty","next","next","partial_cmp","range","range_inclusive","size","start","start","start_address","sub","sub","sub_assign","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","CleanUp","FlagUpdateError","FrameAllocationFailed","InvalidFrameAddress","InvalidFrameAddress","InvalidFrameAddress","InvalidPageTable","MapToError","Mapped","MappedFrame","MappedPageTable","Mapper","MapperAllSizes","MapperFlush","MapperFlushAll","NotActive","NotMapped","NotRecursive","OffsetPageTable","PageAlreadyMapped","PageNotMapped","PageNotMapped","PageNotMapped","PageTableFrameMapping","ParentEntryHugePage","ParentEntryHugePage","ParentEntryHugePage","ParentEntryHugePage","RecursivePageTable","Size1GiB","Size2MiB","Size4KiB","Translate","TranslateError","TranslateResult","UnmapError","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clean_up","clean_up","clean_up","clean_up","clean_up_addr_range","clean_up_addr_range","clean_up_addr_range","clean_up_addr_range","default","flush","flush_all","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_to_pointer","from","from","from","from","from","from","from","from","from","from","from","from","identity_map","ignore","ignore","into","into","into","into","into","into","into","into","into","into","into","into","level_4_table","level_4_table","level_4_table","map_to","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","new","new","new","new","new","new_unchecked","page_table_frame_mapping","phys_offset","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","size","start_address","translate","translate","translate","translate","translate_addr","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unmap","unmap","unmap","unmap","unmap","unmap","unmap","unmap","unmap","unmap","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","flags","frame","offset","AddressNotAligned","NotGiantPageSize","Page","PageRange","PageRangeInclusive","PageSize","SIZE","SIZE","SIZE_AS_DEBUG_STR","Size1GiB","Size2MiB","Size4KiB","add","add_assign","as_4kib_page_range","backward_checked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","containing_address","end","end","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","from","from","from","from","from","from","from","from_page_table_indices","from_page_table_indices_1gib","from_page_table_indices_2mib","from_start_address","from_start_address_unchecked","hash","hash","hash","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_empty","next","next","p1_index","p2_index","p3_index","p4_index","page_table_index","partial_cmp","partial_cmp","partial_cmp","partial_cmp","range","range_inclusive","size","start","start","start_address","steps_between","sub","sub","sub_assign","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ACCESSED","BIT_10","BIT_11","BIT_52","BIT_53","BIT_54","BIT_55","BIT_56","BIT_57","BIT_58","BIT_59","BIT_60","BIT_61","BIT_62","BIT_9","DIRTY","Four","FrameError","FrameNotPresent","GLOBAL","HUGE_PAGE","HugeFrame","NO_CACHE","NO_EXECUTE","One","PRESENT","PageOffset","PageTable","PageTableEntry","PageTableFlags","PageTableIndex","PageTableLevel","Three","Two","USER_ACCESSIBLE","WRITABLE","WRITE_THROUGH","addr","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","complement","contains","default","difference","empty","entry_address_space_alignment","eq","eq","eq","eq","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","hash","hash","index","index","index_mut","index_mut","insert","intersection","intersects","into","into","into","into","into","into","into","is_all","is_empty","is_unused","iter","iter_mut","new","new","new","new","new_truncate","new_truncate","next_lower_level","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","set","set_addr","set_flags","set_frame","set_unused","sub","sub_assign","symmetric_difference","table_address_space_alignment","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","zero","PortRead","PortWrite","read_from_port","write_to_port","TaskStateSegment","borrow","borrow_mut","clone","fmt","from","interrupt_stack_table","into","iomap_base","new","privilege_stack_table","try_from","try_into","type_id"],"q":[[0,"x86_64"],[27,"x86_64::addr"],[135,"x86_64::instructions"],[145,"x86_64::instructions::interrupts"],[151,"x86_64::instructions::port"],[199,"x86_64::instructions::random"],[213,"x86_64::instructions::segmentation"],[233,"x86_64::instructions::tables"],[239,"x86_64::instructions::tlb"],[271,"x86_64::registers"],[283,"x86_64::registers::control"],[520,"x86_64::registers::debug"],[787,"x86_64::registers::model_specific"],[1024,"x86_64::registers::mxcsr"],[1092,"x86_64::registers::rflags"],[1162,"x86_64::registers::segmentation"],[1259,"x86_64::registers::xcontrol"],[1331,"x86_64::structures"],[1348,"x86_64::structures::gdt"],[1451,"x86_64::structures::idt"],[1680,"x86_64::structures::paging"],[1703,"x86_64::structures::paging::frame"],[1763,"x86_64::structures::paging::mapper"],[2000,"x86_64::structures::paging::mapper::TranslateResult"],[2003,"x86_64::structures::paging::page"],[2129,"x86_64::structures::paging::page_table"],[2305,"x86_64::structures::port"],[2309,"x86_64::structures::tss"],[2323,"core::fmt"],[2324,"core::fmt"],[2325,"core::result"],[2326,"core::any"],[2327,"core::convert"],[2328,"core::option"],[2329,"core::cmp"],[2330,"core::ops::function"],[2331,"core::iter::traits::collect"],[2332,"volatile"],[2333,"core::clone"],[2334,"core::ops::range"],[2335,"core::cmp"],[2336,"core::iter::traits::iterator"]],"d":["","Represents a protection ring level.","Privilege-level 0 (most privilege): This level is used by …","Privilege-level 1 (moderate privilege): This level is used …","Privilege-level 2 (moderate privilege): Like level 1, this …","Privilege-level 3 (least privilege): This level is used by …","","Physical and virtual addresses manipulation","","","","","","","","Returns the argument unchanged.","Creates a <code>PrivilegeLevel</code> from a numeric value. The value …","","Special x86_64 instructions.","Calls <code>U::from(self)</code>.","Access to various system and model specific registers.","Set a general handler in an <code>InterruptDescriptorTable</code>.","Generate a software interrupt by invoking the <code>int</code> …","Representations of various x86 specific structures and …","","","","A 64-bit physical memory address.","A passed <code>u64</code> was not a valid physical address.","A canonical 64-bit virtual memory address.","A passed <code>u64</code> was not a valid virtual address.","","","","","","","","","Align address downwards.","Aligns the virtual address downwards to the given …","Aligns the physical address downwards to the given …","Align address upwards.","Aligns the virtual address upwards to the given alignment.","Aligns the physical address upwards to the given alignment.","Converts the address to a mutable raw pointer.","Converts the address to a raw pointer.","Converts the address to an <code>u64</code>.","Converts the address to an <code>u64</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a virtual address from the given pointer","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks whether the virtual address has the demanded …","Checks whether the physical address has the demanded …","Convenience method for checking if a virtual address is …","Convenience method for checking if a physical address is …","Creates a new canonical virtual address.","Creates a new physical address.","Creates a new canonical virtual address, throwing out bits …","Creates a new physical address, throwing bits 52..64 away.","Creates a new virtual address, without any checks.","Creates a new physical address, without any checks.","Returns the 9-bit level 1 page table index.","Returns the 9-bit level 2 page table index.","Returns the 9-bit level 3 page table index.","Returns the 9-bit level 4 page table index.","Returns the 12-bit page offset of this virtual address.","Returns the 9-bit level page table index.","","","","","","","","","","","","","","","","","","","","","","Tries to create a new canonical virtual address.","Tries to create a new physical address.","","","","","Creates a virtual address that points to <code>0</code>.","Creates a physical address that points to <code>0</code>.","Emits a ‘magic breakpoint’ instruction for the Bochs …","Halts the CPU until the next interrupt arrives.","Enabling and disabling interrupts","Executes the <code>nop</code> instructions, which performs no operation …","Access to I/O ports","Support for build-in RNGs","Gets the current instruction pointer. Note that this is …","Provides functions to read and write segment registers.","Functions to load GDT, IDT, and TSS structures.","Functions to flush the translation lookaside buffer (TLB).","Returns whether interrupts are enabled.","Disable interrupts.","Enable interrupts.","Atomically enable interrupts and put the CPU to sleep","Cause a breakpoint exception by invoking the <code>int3</code> …","Run a closure with disabled interrupts.","A read-write I/O port.","An I/O port.","","A marker trait for access types which allow reading port …","A read-only I/O port.","","A marker trait for access types which allow writing port …","A write-only I/O port.","An access marker type indicating that a port is only …","An access marker type indicating that a port is allowed to …","An access marker type indicating that a port is only …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates an I/O port with the given port number.","Reads from the port.","","","","","","","","","","","","","Writes to the port.","Used to obtain random numbers using x86_64’s RDRAND …","","","","","Returns the argument unchanged.","Uniformly sampled u16. May fail in rare circumstances or …","Uniformly sampled u32. May fail in rare circumstances or …","Uniformly sampled u64. May fail in rare circumstances or …","Calls <code>U::from(self)</code>.","Creates Some(RdRand) if RDRAND is supported, None otherwise","","","","","","","","","","","","Alias for <code>CS::get_reg()</code>","Alias for <code>DS::set_reg()</code>","Alias for <code>ES::set_reg()</code>","Alias for <code>FS::set_reg()</code>","Alias for <code>GS::set_reg()</code>","Alias for <code>SS::set_reg()</code>","Alias for <code>FS::read_base()</code>","Alias for <code>GS::read_base()</code>","Alias for <code>CS::set_reg()</code>","Alias for <code>GS::swap()</code>","Alias for <code>FS::write_base()</code>.","Alias for <code>GS::write_base()</code>.","","Load a GDT.","Load an IDT.","Load the task state register using the <code>ltr</code> instruction.","Get the address of the current GDT.","Get the address of the current IDT.","The logical processor invalidates mappings—except global …","The logical processor invalidates all mappings—including …","The logical processor invalidates all mappings—except …","The Invalidate PCID Command to execute.","Structure of a PCID. A PCID has to be &lt;= 4096 for x86_64.","The logical processor invalidates all mappings—except …","","","","","","","","Invalidate the given address in the TLB using the <code>invlpg</code> …","Invalidate the TLB completely by reloading the CR3 …","Invalidate the given address in the TLB using the <code>invpcid</code> …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new PCID. Will result in a failure if the value of","","","","","","","","Get the value of the current PCID.","Functions to read and write control registers.","Functions to read and write debug registers.","Functions to read and write model specific registers.","Functions to read and write MXCSR register.","","","","Processor state stored in the RFLAGS register.","Abstractions for segment registers.","","","Access to various extended system registers","Enables automatic usermode alignment checking if […","Disables some processor caches, specifics are …","Enables Control-flow Enforcement Technology (CET)","Various control flags modifying the basic operation of the …","Configuration flags of the <code>Cr0</code> register.","Contains the Page Fault Linear Address (PFLA).","Contains the physical address of the highest-level page …","Controls cache settings for the highest-level page table.","Contains various control flags that enable architectural …","Configuration flags of the <code>Cr4</code> register.","Enables I/O breakpoint capability and enforces treatment …","Force all x87 and MMX instructions to cause an <code>#NE</code> …","Indicates support of 387DX math coprocessor instructions.","","","Enables software running in 64-bit mode at any privilege …","Enables the Key Locker feature (Intel Only).","Enables 5-level paging on supported CPUs (Intel Only).","Enables the machine-check exception mechanism.","Enables monitoring of the coprocessor, typical for x87 …","Ignored, should always be unset.","Enables the native (internal) error reporting mechanism …","Enables the use of legacy SSE instructions; allows using …","Enables the SIMD floating-point exception (<code>#XF</code>) for …","Enables extended processor state management instructions, …","Enables the global page feature, allowing some page …","Disable caching for the table.","Use a writethrough cache policy for the table (otherwise a …","Enables the use of 4MB physical frames; ignored if …","Enables paging.","Enables process-context identifiers (PCIDs).","Allows software running at any privilege level to use the …","Enables physical address extensions and 2MB physical …","Enables protected mode.","Enables support for protected-mode virtual interrupts.","Alias for <code>PROTECTION_KEY_USER</code>","Enables protection keys for supervisor-mode pages (Intel …","Enables protection keys for user-mode pages.","Enables SMX instructions (Intel Only).","Enables restrictions for supervisor-mode software when …","Prevents the execution of instructions that reside in …","Automatically set to 1 on <em>hardware</em> task switch.","When set, only privilege-level 0 can execute the <code>RDTSC</code> or …","Prevents the execution of the <code>SGDT</code>, <code>SIDT</code>, <code>SLDT</code>, <code>SMSW</code>, and …","Enables hardware-supported performance enhancements for …","Enables VMX instructions (Intel Only).","Controls whether supervisor-level writes to read-only …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Read the current set of CR0 flags.","Read the current page fault linear address from the CR2 …","Read the current P4 table address from the CR3 register.","Read the current set of CR4 flags.","Read the current P4 table address from the CR3 register …","Read the current raw CR0 value.","Read the current page fault linear address from the CR2 …","Read the current P4 table address from the CR3 register","Read the current raw CR4 value.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Updates CR0 flags.","Updates CR4 flags.","Write CR0 flags.","Write a new P4 table address into the CR3 register.","Write CR4 flags.","Write a new P4 table address into the CR3 register.","Write raw CR0 flags.","Write raw CR4 flags.","Next instruction accesses one of the debug registers.","The condition for a hardware breakpoint.","The size of a hardware breakpoint.","Data reads or writes but not instruction fetches","Data writes","Debug Address Register","A valid debug address register number.","Debug Address Register","The debug address register number of <code>Dr0</code> (0).","Debug Address Register","The debug address register number of <code>Dr1</code> (1).","Debug Address Register","The debug address register number of <code>Dr2</code> (2).","Debug Address Register","The debug address register number of <code>Dr3</code> (3).","Debug Status Register (DR6).","Debug condition flags of the <code>Dr6</code> register.","Debug Control Register (DR7).","Debug control flags of the <code>Dr7</code> register.","A valid value of the <code>Dr7</code> debug register.","Enables debug register protection.","Breakpoint 0 is enabled for all tasks.","Breakpoint 1 is enabled for all tasks.","Breakpoint 2 is enabled for all tasks.","Breakpoint 3 is enabled for all tasks.","Enable detection of exact instruction causing a data …","Instruction execution","I/O reads or writes","Breakpoint 0 is enabled for the current task.","Breakpoint 1 is enabled for the current task.","Breakpoint 2 is enabled for the current task.","Breakpoint 3 is enabled for the current task.","Enable detection of exact instruction causing a data …","1 byte length","2 byte length","4 byte length","8 byte length","The corresponding <code>DebugAddressRegisterNumber</code>.","Enables advanced debugging of RTM transactional regions.","When <em>clear</em>, indicates a debug or breakpoint exception …","CPU is in single-step execution mode.","Task switch.","Breakpoint condition was detected.","Breakpoint condition 0 was detected.","Breakpoint condition 1 was detected.","Breakpoint condition 2 was detected.","Breakpoint condition 3 was detected.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the fields currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the condition field of a debug address register.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","Returns the <code>Dr7Flags</code> in this value.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Creates a new hardware breakpoint condition if <code>bits</code> is …","Creates a new hardware breakpoint size if <code>bits</code> is valid.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Returns the number as a primitive type.","Returns the global breakpoint enable flag of the provided …","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified <code>Dr7Flags</code> in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the local breakpoint enable flag of the provided …","Creates a debug address register number if it is valid.","Creates a new hardware breakpoint size if <code>size</code> is valid.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Reads the current breakpoint address.","","","","","Read the current set of DR6 flags.","Read the current set of DR7 flags.","Read the current raw DR6 value.","Read the current raw DR7 value.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified <code>Dr7Flags</code> in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Sets the condition field of a debug address register.","Inserts or removes the specified <code>Dr7Flags</code> depending on the …","Sets the size field of a debug address register.","Returns the size field of a debug address register.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified <code>Dr7Flags</code> in-place.","Returns the trap flag of the provided debug address …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Writes the provided breakpoint address.","","","","","Write DR7 value.","Write raw DR7 value.","Flags stored in IA32_U_CET and IA32_S_CET (Table-2-2 in …","The Extended Feature Enable Register.","Flags of the Extended Feature Enable Register.","Enable the <code>fxsave</code> and <code>fxrstor</code> instructions to execute …","FS.Base Model Specific Register.","GS.Base Model Specific Register.","Enable indirect branch tracking (ENDBR_EN)","Enable legacy treatment for indirect branch tracking …","Disable suppression of CET on legacy compatibility …","Enable no-track opcode prefix for indirect branch tracking …","Enable suppression of indirect branch tracking (SUPPRESS)","Is IBT waiting for a branch to return? (read-only, TRACKER)","KernelGsBase Model Specific Register.","Indicates that long mode is active.","Activates long mode, requires activating paging.","Enable certain limit checks in 64-bit mode.","Syscall Register: LSTAR","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","A model specific register.","Enables the no-execute page-protection feature.","IA32_S_CET: supervisor mode CET configuration","Enables SVM extensions.","Syscall Register: SFMASK","Enable shadow stack (SH_STK_EN)","Enable WRSS{D,Q}W instructions (WR_SHTK_EN)","Enables the <code>syscall</code> and <code>sysret</code> instructions.","Syscall Register: STAR","Changes how the <code>invlpg</code> instruction operates on TLB entries …","IA32_U_CET: user mode CET configuration","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Create an instance from a register.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Read 64 bits msr register.","Read the current EFER flags.","Read the current FsBase register.","Read the current GsBase register.","Read the current KernelGsBase register.","Read the Ring 0 and Ring 3 segment bases. Returns","Read the current LStar register. This holds the target RIP …","Read to the SFMask register. The SFMASK register is used …","Read IA32_U_CET. Returns a tuple of the flags and the …","Read IA32_S_CET. Returns a tuple of the flags and the …","Read the current raw EFER flags.","Read the Ring 0 and Ring 3 segment bases. The remaining …","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Update EFER flags.","Write 64 bits to msr register.","Write the EFER flags, preserving reserved values.","Write a given virtual address to the FS.Base register.","Write a given virtual address to the GS.Base register.","Write a given virtual address to the KernelGsBase register.","Write the Ring 0 and Ring 3 segment bases. The remaining …","Write a given virtual address to the LStar register. This …","Write to the SFMask register. The SFMASK register is used …","Write IA32_U_CET.","Write IA32_S_CET.","Write the EFER flags.","Write the Ring 0 and Ring 3 segment bases. The remaining …","Denormal","Denormals are zeros","Denormal mask","Divide-by-zero","Divide-by-zero mask","Flush to zero","Invalid operation","Invalid operation mask","MXCSR register.","Overflow","Overflow mask","Precision","Precision mask","Toward negative infinity","Toward positive infinity","Toward zero (positive + negative)","Underflow","Underflow mask","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Return the default MXCSR value at reset, as documented in …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Read the value of MXCSR.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Write MXCSR.","Enable automatic alignment checking if CR0.AM is set. Only …","Set by hardware if last arithmetic operation generated a …","Set by hardware if last arithmetic operation generated a …","Determines the order in which strings are processed.","Processor feature identification flag.","Enable interrupts.","The high bit of the I/O Privilege Level field.","The low bit of the I/O Privilege Level field.","Used by <code>iret</code> in hardware task switch mode to determine if …","Set by hardware to indicate that the sign bit of the …","Set by hardware if last result has an even number of 1 …","Allows to restart an instruction following an instrucion …","The RFLAGS register.","Set by hardware if last arithmetic operation resulted in a …","Enable single-step mode for debugging.","Enable the virtual-8086 mode.","Virtual image of the INTERRUPT_FLAG bit.","Indicates that an external, maskable interrupt is pending.","Set by hardware if last arithmetic operation resulted in a …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Returns the current value of the RFLAGS register.","Returns the raw current value of the RFLAGS register.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Writes the RFLAGS register, preserves reserved bits.","Writes the RFLAGS register.","MSR containing the segment base. This MSR can be used to …","Code Segment","Data Segment","ES Segment","FS Segment","GS Segment","Can be used as a selector into a non-existent segment and …","Stack Segment","An x86 segment","An x86 segment which is actually used in 64-bit mode","Specifies which element to load into a segment from …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the current value of the segment register.","","","","","","","","Returns the GDT index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new SegmentSelector","","Reads the segment base address","","","Returns the requested privilege level.","Reload the segment register. Depending on the segment, …","Note this is special since we cannot directly move to <code>CS</code>; …","","","","","","Set the privilege level for this Segment selector.","Swap <code>KernelGsBase</code> MSR and <code>GsBase</code> MSR.","","","","","","","","","","","","","","","","","","","","","","Writes the segment base address","","","Enables AVX instructions and using the upper halves of the …","Enables MPX instructions and using the BNDCFGU and …","Enables MPX instructions and using the BND0-BND3 bound …","Enables AVX-512 instructions and using the upper ZMM …","Enables Lightweight Profiling extensions and managing LWP …","Enables using the PKRU register with <code>XSAVE</code>/<code>XRSTOR</code>.","Enables AVX-512 instructions and using the K0-K7 mask …","Enables using MXCSR and the XMM registers with <code>XSAVE</code>/<code>XRSTOR</code>…","Enables using the x87 FPU state with <code>XSAVE</code>/<code>XRSTOR</code>.","Extended feature enable mask register","Configuration flags of the XCr0 register.","Alias for <code>AVX</code>","Enables AVX-512 instructions and using the upper halves of …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Read the current set of XCR0 flags.","Read the current raw XCR0 value.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Write XCR0 flags.","Write raw XCR0 flags.","A struct describing a pointer to a descriptor table (GDT / …","Pointer to the memory region containing the DT.","","","","","Returns the argument unchanged.","Types for the Global Descriptor Table and segment …","Provides types for the Interrupt Descriptor Table and its …","Calls <code>U::from(self)</code>.","Size of the DT.","Abstractions for page tables and other paging related …","Traits for accessing I/O ports.","","","Provides a type for the task state segment structure.","","Set by the processor if this segment has been accessed. …","Available for use by the Operating System","Bits <code>0..=23</code> of the base field (ignored in 64-bit mode, …","Bits <code>24..=31</code> of the base field (ignored in 64-bit mode, …","For code segments, sets the segment as “conforming”, …","Use 32-bit (as opposed to 16-bit) operands. If <code>LONG_MODE</code> …","The DPL for this descriptor is Ring 3. In 64-bit mode, …","A 64-bit mode segment descriptor.","Flags for a GDT descriptor. Not all flags are valid for …","This flag must be set for code segments and unset for data …","Limit field is scaled by 4096 bytes. In 64-bit mode, …","A 64-bit mode global descriptor table (GDT).","A flat 32-bit kernel code segment","A 64-bit kernel code segment","A kernel data segment (64-bit or flat 32-bit)","Bits <code>0..=15</code> of the limit field (ignored in 64-bit mode)","Bits <code>16..=19</code> of the limit field (ignored in 64-bit mode)","Must be set for 64-bit code segments, unset otherwise.","Must be set for any segment, causes a segment not present …","","A system segment descriptor such as a LDT or TSS …","A flat 32-bit user code segment","A 64-bit user code segment","A user data segment (64-bit or flat 32-bit)","This flag must be set for user segments (in contrast to …","Descriptor for a code or data segment.","For 32-bit data segments, sets the segment as writable. …","Adds the given segment descriptor to the GDT, returning …","Returns the set containing all flags.","Get a reference to the internal table.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Forms a GDT from a slice of <code>u64</code>.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates a segment descriptor for a 64-bit kernel code …","Creates a segment descriptor for a kernel data segment …","Loads the GDT in the CPU using the <code>lgdt</code> instruction. This …","Loads the GDT in the CPU using the <code>lgdt</code> instruction. This …","Creates an empty GDT.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","Creates a TSS system descriptor for the given TSS.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Creates a segment descriptor for a 64-bit ring 3 code …","Creates a segment descriptor for a ring 3 data segment …","Alignment Check","Bound Range Exceeded","Breakpoint","If this flag is set, the memory access that caused the …","Control Protection Exception","Debug","The possible descriptor table values.","Device Not Available","A handler function that must not return, e.g. for a …","A handler function with an error code that must not …","Error during Division","Double Fault","An Interrupt Descriptor Table entry.","Represents the options field of an IDT entry.","This structure defines the CPU-internal exception vector …","Global Descriptor Table.","A general handler function for an interrupt or an …","General Protection Fault","A handler function for an interrupt or an exception …","A handler function for an exception that pushes an error …","Hypervisor Injection (AMD-only)","If this flag is set, it indicates that the access that …","Interrupt Descriptor Table.","An Interrupt Descriptor Table with 256 entries.","Wrapper type for the interrupt stack frame pushed by the …","Represents the interrupt stack frame pushed by the CPU on …","Invalid Opcode","Invalid TSS","Logical Descriptor Table.","If this flag is set, the page fault is a result of the …","Machine Check","Non-Maskable Interrupt","Overflow","If this flag is set, it indicates that the page fault was …","If this flag is set, the page fault was caused by a …","Page Fault","Describes an page fault error code.","A page fault handler function that pushes a page fault …","If this flag is set, it indicates that the page fault is a …","If this flag is set, it indicates that the page fault was …","If this flag is set, it indicates that the page fault was …","Security Exception","Segment Not Present","Describes an error code referencing a segment selector.","SIMD Floating-Point Exception","Stack Fault","If this flag is set, an access in user mode (CPL=3) caused …","Virtualization Exception (Intel-only)","VMM Communication (AMD-only)","x87 Floating-Point Exception","An alignment check exception (<code>#AC</code>) occurs when an …","Returns the set containing all flags.","Gives mutable access to the contents of the interrupt …","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","A bound-range exception (<code>#BR</code>) exception can occur as a …","A breakpoint (<code>#BP</code>) exception occurs when an <code>INT3</code> …","","","","","","","","","","The code segment selector, padded with zeros.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","The flags register before the interrupt handler was …","When the debug-exception mechanism is enabled, a <code>#DB</code> …","","The descriptor table this error code refers to.","A device not available exception (<code>#NM</code>) occurs under any of …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Let the CPU disable hardware interrupts when the handler …","A divide error (<code>#DE</code>) occurs when the denominator of a DIV …","A double fault (<code>#DF</code>) exception can occur when a second …","Returns an empty set of flags.","","","","","","","","If true, indicates that the exception occurred during …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","A general protection fault (<code>#GP</code>) can occur in various …","Returns the virtual address of this IDT entry’s handler …","","","","Returns the IDT entry with the specified index.","The index of the selector which caused the error.","Returns a mutable reference to the IDT entry with the …","Inserts the specified flags in-place.","This value points to the instruction that should be …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","An invalid opcode exception (<code>#UD</code>) occurs when an attempt …","An invalid TSS exception (<code>#TS</code>) occurs only as a result of …","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","If true, the #SS or #GP has returned zero as opposed to a …","Loads the IDT in the CPU using the <code>lidt</code> command.","Loads the IDT in the CPU using the <code>lidt</code> command.","The machine check exception (<code>#MC</code>) is model specific. …","Creates a non-present IDT entry (but sets the must-be-one …","Creates a new IDT filled with non-present entries.","Create a SelectorErrorCode. Returns None is any of the …","Create a new SelectorErrorCode dropping any reserved bits …","An non maskable interrupt exception (NMI) occurs as a …","Returns the complement of this set of flags.","An overflow exception (<code>#OF</code>) occurs as a result of …","A page fault (<code>#PF</code>) can occur during a memory access in any …","","Removes the specified flags in-place.","Resets all entries of this IDT in place.","The Security Exception (<code>#SX</code>) signals security-sensitive …","An segment-not-present exception (<code>#NP</code>) occurs when an …","Inserts or removes the specified flags depending on the …","Set the handler address for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set or reset the preset bit.","Set the required privilege level (DPL) for invoking the …","Assigns a Interrupt Stack Table (IST) stack to this …","The SIMD Floating-Point Exception (<code>#XF</code>) is used to handle …","Returns slice of IDT entries with the specified range.","Returns a mutable slice of IDT entries with the specified …","The stack pointer at the time of the interrupt.","The stack segment descriptor at the time of the interrupt …","An stack segment exception (<code>#SS</code>) can occur in the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","vector nr. 20","The VMM Communication Exception (<code>#VC</code>) is always generated …","The x87 Floating-Point Exception-Pending exception (<code>#MF</code>) …","A trait for types that can allocate a frame of memory.","A trait for types that can deallocate a frame of memory.","","","","","","","","","","","","","","","","Allocate a frame of the appropriate size and return it if …","Deallocate the given unused frame.","Abstractions for default-sized and huge physical memory …","Abstractions for reading and modifying the mapping of …","Abstractions for default-sized and huge virtual memory …","Abstractions for page tables and page table entries.","A physical memory frame.","An range of physical memory frames, exclusive the upper …","An range of physical memory frames, inclusive the upper …","","","","","","","","","","","","","Returns the frame that contains the given physical address.","The end of the range, exclusive.","The start of the range, inclusive.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the frame that starts at the given virtual address.","Returns the frame that starts at the given virtual address.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether the range contains no frames.","Returns whether the range contains no frames.","","","","Returns a range of frames, exclusive <code>end</code>.","Returns a range of frames, inclusive <code>end</code>.","Returns the size the frame (4KB, 2MB or 1GB).","The start of the range, inclusive.","The start of the range, inclusive.","Returns the start address of the frame.","","","","","","","","","","","","","Provides methods for cleaning up unused entries.","An error indicating that an <code>update_flags</code> call failed.","An additional frame was needed for the mapping process, …","The page table entry for the given virtual address points …","The page table entry for the given page points to an …","The page table entry for the given page points to an …","The given page table was not suitable to create a …","This error is returned from <code>map_to</code> and similar methods.","The virtual address is mapped to a physical frame.","Represents a physical frame mapped in a page table.","A Mapper implementation that relies on a PhysAddr to …","A trait for common page table operations on pages of size <code>S</code>…","An empty convencience trait that requires the <code>Mapper</code> trait …","This type represents a page whose mapping has changed in …","This type represents a change of a page table requiring a …","The given page table was not active on the CPU.","The given virtual address is not mapped to a physical …","The given page table was not at an recursive address.","A Mapper implementation that requires that the complete …","The given page is already mapped to a physical frame.","The given page is not mapped to a physical frame.","The given page is not mapped to a physical frame.","The given page is not mapped to a physical frame.","Provides a virtual address mapping for physical page table …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","A recursive page table is a last level page table with an …","The virtual address is mapped to a “huge” 1GiB frame.","The virtual address is mapped to a “large” 2MiB frame.","The virtual address is mapped to a 4KiB frame.","Provides methods for translating virtual addresses.","An error indicating that an <code>translate</code> call failed.","The return value of the <code>Translate::translate</code> function.","An error indicating that an <code>unmap</code> call failed.","","","","","","","","","","","","","","","","","","","","","","","","","Remove all empty P1-P3 tables","","","","Remove all empty P1-P3 tables in a certain range","","","","","Flush the page from the TLB to ensure that the newest …","Flush all pages from the TLB to ensure that the newest …","","","","","","","","","","","","","","Translate the given physical frame to a virtual page table …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Maps the given frame to the virtual page with the same …","Don’t flush the TLB and silence the “must be used” …","Don’t flush the TLB and silence the “must be used” …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a mutable reference to the wrapped level 4 …","Returns a mutable reference to the wrapped level 4 …","Returns a mutable reference to the wrapped level 4 …","Creates a new mapping in the page table.","Creates a new mapping in the page table.","","","","","","","","","","Creates a new <code>MappedPageTable</code> that uses the passed …","Creates a new <code>OffsetPageTable</code> that uses the given offset …","Creates a new RecursivePageTable from the passed level 4 …","Create a new flush promise","Create a new flush promise","Creates a new RecursivePageTable without performing any …","Returns the <code>PageTableFrameMapping</code> used for converting …","Returns the offset used for converting virtual to physical …","Set the flags of an existing page table level 2 entry","","","","","","","","","","Set the flags of an existing page table level 3 entry","","","","","","","","","","Set the flags of an existing page level 4 table entry","","","","","","","","","","Returns the size the frame (4KB, 2MB or 1GB).","Returns the start address of the frame.","Return the frame that the given virtual address is mapped …","","","","Translates the given virtual address to the physical …","Return the frame that the specified page is mapped to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes a mapping from the page table and returns the …","","","","","","","","","","Updates the flags of an existing mapping.","","","","","","","","","","The entry flags in the lowest-level page table.","The mapped frame.","The offset whithin the mapped frame.","The given address was not sufficiently aligned.","This trait is implemented for 4KiB and 2MiB pages, but not …","A virtual memory page.","A range of pages with exclusive upper bound.","A range of pages with inclusive upper bound.","Trait for abstracting over the three possible page sizes …","The page size in bytes.","The page size in bytes.","A string representation of the page size for debug output.","A “giant” 1GiB page.","A “huge” 2MiB page.","A standard 4KiB page.","","","Converts the range of 2MiB pages to a range of 4KiB pages.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the page that contains the given virtual address.","The end of the range, exclusive.","The end of the range, inclusive.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the 4KiB memory page with the specified page table …","Returns the 1GiB memory page with the specified page table …","Returns the 2MiB memory page with the specified page table …","Returns the page that starts at the given virtual address.","Returns the page that starts at the given virtual address.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns wether this range contains no pages.","Returns wether this range contains no pages.","","","Returns the level 1 page table index of this page.","Returns the level 2 page table index of this page.","Returns the level 3 page table index of this page.","Returns the level 4 page table index of this page.","Returns the table index of this page at the specified …","","","","","Returns a range of pages, exclusive <code>end</code>.","Returns a range of pages, inclusive <code>end</code>.","Returns the size the page (4KB, 2MB or 1GB).","The start of the range, inclusive.","The start of the range, inclusive.","Returns the start address of the page.","","","","","","","","","","","","","","","","","","","","","","","","","","Set by the CPU when the mapped frame or page table is …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Set by the CPU on a write to the mapped frame.","Represents the level for a page-map level-4.","The error returned by the <code>PageTableEntry::frame</code> method.","The entry does not have the <code>PRESENT</code> flag set, so it isn’…","Indicates that the mapping is present in all address …","Specifies that the entry maps a huge frame instead of a …","The entry does have the <code>HUGE_PAGE</code> flag set. The <code>frame</code> …","Disables caching for the pointed entry is cacheable.","Forbid code execution from the mapped frames.","Represents the level for a page table.","Specifies whether the mapped frame or page table is loaded …","A 12-bit offset into a 4KiB Page.","Represents a page table.","A 64-bit page table entry.","Possible flags for a page table entry.","A 9-bit index into a page table.","A value between 1 and 4.","Represents the level for a page-directory pointer.","Represents the level for a page directory.","Controls whether accesses from userspace (i.e. ring 3) are …","Controls whether writes to the mapped frames are allowed.","If this bit is set, a “write-through” policy is used …","Returns the physical address mapped by this entry, might …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns the alignment for the address space described by …","","","","","","","Returns the flags of this entry.","","","","","","","","","","","","Returns the physical frame mapped by this entry.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns whether this entry is zero.","Returns an iterator over the entries of the page table.","Returns an iterator that allows modifying the entries of …","Creates an unused page table entry.","Creates an empty page table.","Creates a new index from the given <code>u16</code>. Panics if the …","Creates a new offset from the given <code>u16</code>. Panics if the …","Creates a new index from the given <code>u16</code>. Throws away bits …","Creates a new offset from the given <code>u16</code>. Throws away bits …","Returns the next lower level or <code>None</code> for level 1","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Map the entry to the specified physical address with the …","Sets the flags of this entry.","Map the entry to the specified physical frame with the …","Sets this entry to zero.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the alignment for the address space described by a …","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Clears all entries.","A helper trait that implements the read port operation.","A helper trait that implements the write port operation.","Reads a <code>Self</code> value from the given port.","Writes a <code>Self</code> value to the given port.","In 64-bit mode the TSS holds information that is not …","","","","","Returns the argument unchanged.","The full 64-bit canonical forms of the interrupt stack …","Calls <code>U::from(self)</code>.","The 16-bit offset to the I/O permission bit map from the …","Creates a new TSS with zeroed privilege and interrupt …","The full 64-bit canonical forms of the stack pointers …","","",""],"i":[0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,1,1,1,0,0,0,0,10,10,13,13,10,10,13,13,0,10,13,0,10,13,10,10,10,13,10,17,18,10,13,17,18,10,13,10,13,10,13,10,13,17,18,10,10,10,10,10,10,13,13,13,13,13,13,10,17,18,10,13,10,10,13,17,18,10,13,10,13,10,13,10,13,10,13,10,13,10,10,10,10,10,10,10,13,10,10,10,10,13,13,13,10,10,13,13,17,18,10,13,17,18,10,13,10,13,17,18,10,13,10,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,24,25,26,23,24,25,26,23,23,23,24,25,26,23,24,25,26,23,24,25,26,23,23,23,24,25,26,23,24,25,26,23,24,25,26,23,0,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,36,36,0,0,36,36,35,36,35,35,35,35,0,0,0,36,35,36,35,35,36,35,35,35,36,35,36,35,36,35,35,0,0,0,0,0,0,0,0,0,0,0,0,38,38,40,0,0,0,0,0,0,0,40,38,38,0,0,40,40,40,40,38,38,38,40,40,40,40,39,39,40,38,40,40,40,38,40,40,40,40,40,40,40,38,40,40,40,40,38,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,42,38,43,44,39,45,40,42,38,43,44,39,45,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,42,38,38,38,38,38,43,44,39,39,39,39,39,45,40,40,40,40,40,42,38,43,44,39,45,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,42,38,43,44,39,45,40,38,39,40,38,39,40,38,39,40,38,39,40,42,43,44,45,44,42,43,44,45,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,42,38,43,44,39,45,40,42,38,43,44,39,45,40,42,38,43,44,39,45,40,38,39,40,42,45,42,44,45,44,42,45,47,0,0,51,51,0,0,0,50,0,50,0,50,0,50,0,0,0,0,0,48,48,48,48,48,48,51,51,48,48,48,48,48,52,52,52,52,142,48,47,47,47,47,47,47,47,47,47,48,47,48,47,48,47,48,47,48,47,48,49,47,48,47,48,53,54,55,56,50,57,47,48,51,52,49,58,53,54,55,56,50,57,47,48,51,52,49,58,50,47,48,51,52,49,47,48,47,48,49,47,48,47,48,47,48,50,47,48,51,52,49,47,48,49,53,54,55,56,50,57,47,47,47,47,47,48,48,48,48,48,51,52,49,58,53,54,55,56,50,57,47,48,51,52,49,49,58,47,48,51,52,49,47,48,49,47,48,49,47,48,50,48,47,48,47,48,49,47,48,47,48,53,54,55,56,50,57,47,48,51,52,49,58,47,48,47,48,48,50,52,47,48,47,48,142,53,54,55,56,57,58,57,58,47,48,49,47,48,49,49,49,49,47,48,47,48,47,48,47,48,49,47,53,54,55,56,50,57,47,48,51,52,49,58,53,54,55,56,50,57,47,48,51,52,49,58,53,54,55,56,50,57,47,48,51,52,49,58,47,48,142,53,54,55,56,58,58,0,0,0,60,0,0,61,61,61,61,61,61,0,60,60,60,0,63,64,65,66,67,68,69,70,71,0,60,0,60,0,61,61,60,0,60,0,60,61,60,61,60,61,60,61,60,61,60,61,60,61,60,61,62,63,64,65,66,67,68,69,70,71,60,61,62,63,64,65,66,67,68,69,70,71,60,61,60,61,60,61,60,61,60,61,60,61,60,61,60,61,60,61,62,63,64,65,66,67,68,69,70,71,60,60,60,60,60,61,61,61,61,61,62,63,64,65,66,67,68,69,70,71,60,61,60,61,60,61,60,61,60,61,60,61,60,61,60,61,60,61,62,63,64,65,66,67,68,69,70,71,60,61,60,61,60,61,62,60,61,60,61,62,63,64,65,66,67,68,69,70,71,63,67,60,61,60,61,60,61,60,61,60,61,60,61,62,63,64,65,66,67,68,69,70,71,60,61,62,63,64,65,66,67,68,69,70,71,60,61,62,63,64,65,66,67,68,69,70,71,60,61,60,61,63,62,63,64,65,66,67,68,69,70,71,63,67,74,74,74,74,74,74,74,74,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,74,74,74,74,74,74,74,74,74,74,0,72,72,72,72,72,72,72,72,72,72,72,72,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,0,72,72,72,72,72,72,72,72,72,72,0,0,143,0,0,0,0,0,33,0,0,0,0,33,75,76,77,78,79,80,33,75,76,77,78,79,80,33,33,33,33,75,76,77,78,79,80,33,75,76,77,78,79,80,144,75,76,77,78,79,80,33,33,33,75,76,77,78,79,80,33,33,143,79,80,33,144,75,76,77,78,79,80,33,80,33,75,76,77,78,79,80,33,75,76,77,78,79,80,33,75,76,77,78,79,80,143,79,80,81,81,81,81,81,81,81,81,81,0,0,81,81,81,81,81,81,81,81,81,81,82,81,82,81,81,81,81,81,81,81,81,81,82,81,81,81,81,81,82,81,81,81,81,81,81,81,81,81,82,81,81,81,81,81,82,82,81,81,81,81,81,81,82,81,82,81,82,81,81,82,82,0,34,34,34,34,34,34,0,0,34,34,0,0,34,34,0,34,85,85,85,85,85,85,85,0,0,85,85,0,85,85,85,85,85,85,85,0,84,85,85,85,85,84,85,83,85,83,85,85,85,85,85,85,85,83,84,85,83,84,85,83,84,85,85,85,85,85,85,85,85,83,84,85,85,85,85,85,83,84,85,85,85,85,85,83,85,85,85,85,83,84,85,85,85,84,84,83,83,83,85,85,85,85,85,85,85,85,83,84,85,83,84,85,84,83,84,85,85,84,84,98,98,98,88,98,98,0,98,0,0,98,98,0,0,0,97,0,98,0,0,98,88,97,0,0,0,98,98,97,88,98,98,98,88,88,98,0,0,88,88,88,98,98,0,98,98,88,98,98,98,92,88,89,88,88,88,88,88,88,88,89,92,93,95,90,88,96,97,98,89,92,93,95,90,88,96,97,98,92,92,92,93,95,90,88,96,97,98,88,90,88,88,90,92,89,96,92,88,95,92,92,88,93,95,88,96,97,98,88,96,89,92,93,95,90,88,88,88,88,88,96,97,98,89,92,93,95,90,88,96,97,98,88,88,88,88,92,93,88,96,97,92,96,92,88,90,88,88,89,92,93,95,90,88,96,97,98,92,92,88,88,96,92,92,92,93,92,96,96,92,88,92,92,88,88,92,92,92,88,93,93,93,93,93,93,95,95,95,92,92,92,90,90,92,88,88,88,88,89,92,93,95,90,88,96,97,98,89,92,93,95,90,88,96,97,98,89,92,93,95,90,88,96,97,98,88,92,92,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,134,114,0,0,0,0,0,0,0,46,46,46,106,107,46,106,107,46,106,107,46,46,106,107,46,106,107,46,106,107,46,106,107,46,46,46,106,107,46,106,107,106,107,106,107,106,107,46,46,46,46,106,107,46,46,46,46,46,106,107,46,106,107,46,106,107,0,0,126,124,127,129,0,0,124,0,0,0,0,0,0,123,124,123,0,126,127,128,129,0,126,127,128,129,0,125,125,125,0,0,0,0,115,117,118,123,124,125,121,120,126,127,128,129,115,117,118,123,124,125,121,120,126,127,128,129,145,115,117,118,145,115,117,118,120,121,120,115,117,118,123,123,124,125,121,120,126,127,128,129,116,115,117,118,123,124,125,121,120,126,127,128,129,133,121,120,115,117,118,123,124,125,121,120,126,127,128,129,115,117,118,133,133,115,115,115,117,117,117,118,118,118,115,117,118,121,120,118,115,117,133,115,115,115,117,117,117,118,118,118,133,115,115,115,117,117,117,118,118,118,133,115,115,115,117,117,117,118,118,118,125,125,146,115,117,118,146,133,115,115,115,117,117,117,118,118,118,115,117,118,123,124,125,121,120,126,127,128,129,115,117,118,123,124,125,121,120,126,127,128,129,115,117,118,123,124,125,121,120,126,127,128,129,133,115,115,115,117,117,117,118,118,118,133,115,115,115,117,117,117,118,118,118,147,147,147,0,0,0,0,0,0,105,73,105,0,0,0,73,73,137,73,113,136,135,73,137,119,110,113,136,135,73,137,119,110,113,136,135,73,137,119,113,136,135,73,73,137,119,113,136,135,73,137,119,113,136,135,73,137,119,110,110,73,113,136,135,73,137,119,110,73,73,73,73,73,73,137,119,113,136,135,73,137,119,110,137,119,137,119,137,119,73,73,73,73,73,113,136,135,73,73,73,73,137,119,73,73,73,73,73,113,136,135,73,137,119,110,113,136,135,73,137,119,110,113,136,135,73,137,119,110,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,21,0,140,131,131,140,131,131,21,131,0,0,0,0,0,0,21,21,131,131,131,139,131,131,131,131,131,131,131,131,140,139,131,130,19,20,21,140,139,131,130,19,20,21,140,139,131,130,19,20,21,131,19,20,21,131,131,130,131,131,21,140,131,19,20,21,131,139,140,139,131,131,131,131,131,130,19,20,21,139,140,139,131,130,19,20,21,131,131,131,131,131,19,20,21,130,130,130,130,131,131,131,140,139,131,130,19,20,21,131,131,139,130,130,139,130,19,20,19,20,21,131,131,19,20,21,131,131,139,139,139,139,131,131,131,21,131,140,139,131,130,19,20,21,140,139,131,130,19,20,21,140,139,131,130,19,20,21,131,130,0,0,27,29,0,87,87,87,87,87,87,87,87,87,87,87,87,87],"f":[0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[1,1],2],[[1,3],4],[-1,-1,[]],[5,1],[[1,-1],6,7],0,[-1,-2,[],[]],0,0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,[[10,11]],[[10,12]],[[13,11]],[[13,12]],[[10,11],6],[[10,12],6],[[13,12],6],[[13,11],6],[[11,11],11],[[10,-1],10,[[14,[11]]]],[[13,-1],13,[[14,[11]]]],[[11,11],11],[[10,-1],10,[[14,[11]]]],[[13,-1],13,[[14,[11]]]],[10],[10],[10,11],[13,11],[[10,12],[[15,[10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,10],[13,13],[[10,10],16],[[13,13],16],[[10,10],2],[[13,13],2],[[17,3],4],[[18,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[13,3],4],[[13,3],4],[[13,3],4],[[13,3],4],[[13,3],4],[[13,3],4],[[10,12],[[15,[10]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],10],[[10,-1],6,7],[[13,-1],6,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[10,-1],2,[[14,[11]]]],[[13,-1],2,[[14,[11]]]],[10,2],[13,2],[11,10],[11,13],[11,10],[11,13],[11,10],[11,13],[10,19],[10,19],[10,19],[10,19],[10,20],[[10,21],19],[[10,10],[[15,[16]]]],[[13,13],[[15,[16]]]],[[10,10],[[15,[12]]]],[[10,12]],[[10,10]],[[10,11]],[[13,11]],[[13,12]],[[13,13]],[[10,11],6],[[10,12],6],[[13,12],6],[[13,11],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[11,[[8,[10,17]]]],[11,[[8,[13,18]]]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[],10],[[],13],[[],6],[[],6],0,[[],6],0,0,[[],10],0,0,0,[[],2],[[],6],[[],6],[[],6],[[],6],[-1,-2,22,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[23,[-1,-2]]],[[23,[-1,-2]]],[],[]],[[[23,[-1,-2]],[23,[-1,-2]]],2,[],[]],[[[23,[-1,-2]],3],4,[],0],[[24,3],4],[[25,3],4],[[26,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,[[23,[-1,-2]]],[],[]],[[[23,[-1,-2]]],-1,27,28],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[[23,[-1,-2]],-1],6,29,30],0,[-1,-2,[],[]],[-1,-2,[],[]],[31,31],[[31,3],4],[-1,-1,[]],[31,[[15,[5]]]],[31,[[15,[32]]]],[31,[[15,[11]]]],[-1,-2,[],[]],[[],[[15,[31]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,0,0,[[],33],[33,6],[33,6],[33,6],[33,6],[33,6],[[],11],[[],11],[33,6],[[],6],[11,6],[11,6],0,[34,6],[34,6],[33,6],[[],34],[[],34],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,35],[[35,35],16],[[35,35],2],[10,6],[[],6],[36,6],[[36,3],4],[[35,3],4],[-1,-1,[]],[-1,-1,[]],[[35,-1],6,7],[-1,-2,[],[]],[-1,-2,[],[]],[5,[[8,[35,37]]]],[[35,35],[[15,[16]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[35,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],38],[[],39],[[],40],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],6],[[39,39],6],[[40,40],6],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],6],[[39,39],6],[[40,40],6],[38,11],[39,11],[40,11],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],6],[[39,39],6],[[40,40],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,38],[39,39],[40,40],[[38,38],16],[[39,39],16],[[40,40],16],[38,38],[39,39],[40,40],[[38,38],2],[[39,39],2],[[40,40],2],[[38,38],38],[[39,39],39],[[40,40],40],[[],38],[[],39],[[],40],[[38,38],2],[[39,39],2],[[40,40],2],[[38,-1],6,41],[[39,-1],6,41],[[40,-1],6,41],[[42,3],4],[[38,3],4],[[38,3],4],[[38,3],4],[[38,3],4],[[38,3],4],[[43,3],4],[[44,3],4],[[39,3],4],[[39,3],4],[[39,3],4],[[39,3],4],[[39,3],4],[[45,3],4],[[40,3],4],[[40,3],4],[[40,3],4],[[40,3],4],[[40,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,[[15,[38]]]],[11,[[15,[39]]]],[11,[[15,[40]]]],[11,38],[11,39],[11,40],[11,38],[11,39],[11,40],[-1,38,41],[-1,39,41],[-1,40,41],[[38,-1],6,7],[[39,-1],6,7],[[40,-1],6,7],[[38,38],6],[[39,39],6],[[40,40],6],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],2],[[39,39],2],[[40,40],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,2],[39,2],[40,2],[38,2],[39,2],[40,2],[38,38],[39,39],[40,40],[[38,38],[[15,[16]]]],[[39,39],[[15,[16]]]],[[40,40],[[15,[16]]]],[[],38],[[],10],[[],[[6,[46,39]]]],[[],40],[[],[[6,[46,35]]]],[[],11],[[],11],[[],[[6,[46,5]]]],[[],11],[[38,38],6],[[39,39],6],[[40,40],6],[[38,38,2],6],[[39,39,2],6],[[40,40,2],6],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],6],[[39,39],6],[[40,40],6],[[38,38],38],[[39,39],39],[[40,40],40],[[38,38],6],[[39,39],6],[[40,40],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[38,38],38],[[39,39],39],[[40,40],40],[-1,6,22],[-1,6,22],[38,6],[[46,39],6],[40,6],[[46,35],6],[11,6],[11,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],47],[[],48],[[47,47],47],[[48,48],48],[[47,47],6],[[48,48],6],[[47,47],47],[[48,48],48],[[47,47],6],[[48,48],6],[47,11],[48,11],[49,11],[[47,47],47],[[48,48],48],[[47,47],6],[[48,48],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[50,50],[47,47],[48,48],[51,51],[52,52],[49,49],[[47,47],16],[[48,48],16],[47,47],[48,48],[[49,50],51],[[47,47],2],[[48,48],2],[[47,47],47],[[48,48],48],[[],47],[[],48],[[50,50],2],[[47,47],2],[[48,48],2],[[51,51],2],[[52,52],2],[[49,49],2],[[47,-1],6,41],[[48,-1],6,41],[49,48],[[53,3],4],[[54,3],4],[[55,3],4],[[56,3],4],[[50,3],4],[[57,3],4],[[47,3],4],[[47,3],4],[[47,3],4],[[47,3],4],[[47,3],4],[[48,3],4],[[48,3],4],[[48,3],4],[[48,3],4],[[48,3],4],[[51,3],4],[[52,3],4],[[49,3],4],[[58,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[48,49],[-1,-1,[]],[11,[[15,[47]]]],[11,[[15,[48]]]],[11,[[15,[51]]]],[11,[[15,[52]]]],[11,[[15,[49]]]],[11,47],[11,48],[11,49],[11,47],[11,48],[11,49],[-1,47,41],[-1,48,41],[50,59],[50,48],[[47,-1],6,7],[[48,-1],6,7],[[47,47],6],[[48,48],6],[[49,48],6],[[47,47],47],[[48,48],48],[[47,47],2],[[48,48],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,2],[48,2],[47,2],[48,2],[50,48],[59,[[15,[50]]]],[12,[[15,[52]]]],[47,47],[48,48],[[47,47],[[15,[16]]]],[[48,48],[[15,[16]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],47],[[],49],[[],11],[[],11],[[47,47],6],[[48,48],6],[[49,48],6],[[47,47,2],6],[[48,48,2],6],[[49,50,51],6],[[49,48,2],6],[[49,50,52],6],[[49,50],52],[[47,47],47],[[48,48],48],[[47,47],6],[[48,48],6],[[47,47],47],[[48,48],48],[[47,47],6],[[48,48],6],[[49,48],6],[50,47],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[47,47],47],[[48,48],48],[11,6],[11,6],[11,6],[11,6],[11,6],[49,6],[11,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],60],[[],61],[[60,60],60],[[61,61],61],[[60,60],6],[[61,61],6],[[60,60],60],[[61,61],61],[[60,60],6],[[61,61],6],[60,11],[61,11],[[60,60],60],[[61,61],61],[[60,60],6],[[61,61],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,60],[61,61],[[60,60],16],[[61,61],16],[60,60],[61,61],[[60,60],2],[[61,61],2],[[60,60],60],[[61,61],61],[[],60],[[],61],[[60,60],2],[[61,61],2],[[60,-1],6,41],[[61,-1],6,41],[[62,3],4],[[63,3],4],[[64,3],4],[[65,3],4],[[66,3],4],[[67,3],4],[[68,3],4],[[69,3],4],[[70,3],4],[[71,3],4],[[60,3],4],[[60,3],4],[[60,3],4],[[60,3],4],[[60,3],4],[[61,3],4],[[61,3],4],[[61,3],4],[[61,3],4],[[61,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,[[15,[60]]]],[11,[[15,[61]]]],[11,60],[11,61],[11,60],[11,61],[-1,60,41],[-1,61,41],[[60,-1],6,7],[[61,-1],6,7],[[60,60],6],[[61,61],6],[[60,60],60],[[61,61],61],[[60,60],2],[[61,61],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,2],[61,2],[60,2],[61,2],[32,62],[60,60],[61,61],[[60,60],[[15,[16]]]],[[61,61],[[15,[16]]]],[62,11],[[],60],[[],10],[[],10],[[],10],[[],[[6,[33,33,33,33]]]],[[],10],[[],72],[[],[[6,[61,73]]]],[[],[[6,[61,73]]]],[[],11],[[],[[6,[5,5]]]],[[60,60],6],[[61,61],6],[[60,60,2],6],[[61,61,2],6],[[60,60],60],[[61,61],61],[[60,60],6],[[61,61],6],[[60,60],60],[[61,61],61],[[60,60],6],[[61,61],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[60,60],60],[[61,61],61],[-1,6,22],[[62,11],6],[60,6],[10,6],[10,6],[10,6],[[33,33,33,33],[[8,[6,37]]]],[10,6],[72,6],[[61,73],6],[[61,73],6],[11,6],[[5,5],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],74],[[74,74],74],[[74,74],6],[[74,74],74],[[74,74],6],[74,32],[[74,74],74],[[74,74],6],[-1,-2,[],[]],[-1,-2,[],[]],[74,74],[[74,74],16],[74,74],[[74,74],2],[[],74],[[74,74],74],[[],74],[[74,74],2],[[74,-1],6,41],[[74,3],4],[[74,3],4],[[74,3],4],[[74,3],4],[[74,3],4],[-1,-1,[]],[32,[[15,[74]]]],[32,74],[32,74],[-1,74,41],[[74,-1],6,7],[[74,74],6],[[74,74],74],[[74,74],2],[-1,-2,[],[]],[74,2],[74,2],[74,74],[[74,74],[[15,[16]]]],[[],74],[[74,74],6],[[74,74,2],6],[[74,74],74],[[74,74],6],[[74,74],74],[[74,74],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[74,74],74],[74,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],72],[[72,72],72],[[72,72],6],[[72,72],72],[[72,72],6],[72,11],[[72,72],72],[[72,72],6],[-1,-2,[],[]],[-1,-2,[],[]],[72,72],[[72,72],16],[72,72],[[72,72],2],[[72,72],72],[[],72],[[72,72],2],[[72,-1],6,41],[[72,3],4],[[72,3],4],[[72,3],4],[[72,3],4],[[72,3],4],[-1,-1,[]],[11,[[15,[72]]]],[11,72],[11,72],[-1,72,41],[[72,-1],6,7],[[72,72],6],[[72,72],72],[[72,72],2],[-1,-2,[],[]],[72,2],[72,2],[72,72],[[72,72],[[15,[16]]]],[[],72],[[],11],[[72,72],6],[[72,72,2],6],[[72,72],72],[[72,72],6],[[72,72],72],[[72,72],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[72,72],72],[72,6],[11,6],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,33],[[33,33],16],[[33,33],2],[[33,3],4],[[75,3],4],[[76,3],4],[[77,3],4],[[78,3],4],[[79,3],4],[[80,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[33,-1],6,7],[33,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[5,1],33],[[33,33],[[15,[16]]]],[[],10],[[],10],[[],10],[33,1],[33,6],[33,6],[33,6],[33,6],[33,6],[33,6],[33,6],[[33,1],6],[[],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[10,6],[10,6],[10,6],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],81],[[81,81],81],[[81,81],6],[[81,81],81],[[81,81],6],[81,11],[[81,81],81],[[81,81],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[81,81],[[81,81],16],[81,81],[[81,81],2],[[81,81],81],[[],81],[[81,81],2],[[81,-1],6,41],[[82,3],4],[[81,3],4],[[81,3],4],[[81,3],4],[[81,3],4],[[81,3],4],[-1,-1,[]],[-1,-1,[]],[11,[[15,[81]]]],[11,81],[11,81],[-1,81,41],[[81,-1],6,7],[[81,81],6],[[81,81],81],[[81,81],2],[-1,-2,[],[]],[-1,-2,[],[]],[81,2],[81,2],[81,81],[[81,81],[[15,[16]]]],[[],81],[[],11],[[81,81],6],[[81,81,2],6],[[81,81],81],[[81,81],6],[[81,81],81],[[81,81],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[[81,81],81],[81,6],[11,6],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[34,34],[[34,3],4],[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[83,84],33],[[],85],[83,[[86,[11]]]],[[85,85],85],[[85,85],6],[[85,85],85],[[85,85],6],[85,11],[[85,85],85],[[85,85],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[83,83],[84,84],[85,85],[[85,85],16],[85,85],[[85,85],2],[[85,85],85],[[],85],[[85,85],2],[[85,-1],6,41],[[83,3],4],[[84,3],4],[[85,3],4],[[85,3],4],[[85,3],4],[[85,3],4],[[85,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,[[15,[85]]]],[11,85],[11,85],[-1,85,41],[[[86,[11]]],83],[[85,-1],6,7],[[85,85],6],[[85,85],85],[[85,85],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[85,2],[85,2],[[],84],[[],84],[83,6],[83,6],[[],83],[85,85],[[85,85],[[15,[16]]]],[[85,85],6],[[85,85,2],6],[[85,85],85],[[85,85],6],[[85,85],85],[[85,85],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[87,84],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[85,85],85],[[],84],[[],84],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],88],[89,[[91,[90]]]],[[88,88],88],[[88,88],6],[[88,88],88],[[88,88],6],[88,11],[[88,88],88],[[88,88],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[92,92],[[[93,[-1]]],[[93,[-1]]],94],[95,95],[90,90],[88,88],[96,96],[97,97],[98,98],[[88,88],16],0,[88,88],[[88,88],2],0,0,[89],[96,97],0,[[88,88],88],[[95,2],95],0,0,[[],88],[[[93,[-1]],[93,[-1]]],2,[]],[[95,95],2],[[88,88],2],[[96,96],2],[[97,97],2],[[98,98],2],[[88,-1],6,41],[96,2],[[89,3],4],[[92,3],4],[[[93,[-1]],3],4,[]],[[95,3],4],[[90,3],4],[[88,3],4],[[88,3],4],[[88,3],4],[[88,3],4],[[88,3],4],[[96,3],4],[[97,3],4],[[98,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,[[15,[88]]]],[11,88],[11,88],[-1,88,41],0,[[[93,[-1]]],10,[]],[[88,-1],6,7],[[96,-1],6,7],[[97,-1],6,7],[[92,12]],[96,11],[[92,12]],[[88,88],6],0,[[88,88],88],[[88,88],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[88,2],[88,2],[96,2],[92,6],[92,6],0,[[],[[93,[-1]]],[]],[[],92],[11,[[15,[96]]]],[11,96],0,[88,88],0,0,[[88,88],[[15,[16]]]],[[88,88],6],[92,6],0,0,[[88,88,2],6],[[[93,[-1]],10],95,[]],[[[93,[99]],99],95],[[[93,[100]],100],95],[[[93,[101]],101],95],[[[93,[102]],102],95],[[[93,[103]],103],95],[[95,2],95],[[95,1],95],[[95,5],95],0,[[92,-1],[[86,[[93,[101]]]]],[[104,[12]]]],[[92,-1],[[86,[[93,[101]]]]],[[104,[12]]]],0,0,0,[[88,88],88],[[88,88],6],[[88,88],88],[[88,88],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[88,88],88],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[15,[[46,[-2]]]]],[],[]],[[-1,[46,[-2]]],6,[],[]],0,0,0,0,0,0,0,[[[46,[-1]],11],[],105],[[[46,[-1]],11],6,105],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1]]],[[46,[-1]]],[94,105]],[[[106,[-1]]],[[106,[-1]]],[94,105]],[[[107,[-1]]],[[107,[-1]]],[94,105]],[[[46,[-1]],[46,[-1]]],16,[108,105]],[13,[[46,[-1]]],105],0,0,[[[46,[-1]],[46,[-1]]],2,[109,105]],[[[106,[-1]],[106,[-1]]],2,[109,105]],[[[107,[-1]],[107,[-1]]],2,[109,105]],[[[46,[-1]],3],4,105],[[[106,[-1]],3],4,105],[[[107,[-1]],3],4,105],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[13,[[8,[[46,[-1]],110]]],105],[13,[[46,[-1]]],105],[[[46,[-1]],-2],6,[111,105],7],[[[106,[-1]],-2],6,[111,105],7],[[[107,[-1]],-2],6,[111,105],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[106,[-1]]],2,105],[[[107,[-1]]],2,105],[[[106,[-1]]],15,105],[[[107,[-1]]],15,105],[[[46,[-1]],[46,[-1]]],[[15,[16]]],[112,105]],[[[46,[-1]],[46,[-1]]],[[106,[-1]]],105],[[[46,[-1]],[46,[-1]]],[[107,[-1]]],105],[[[46,[-1]]],11,105],0,0,[[[46,[-1]]],13,105],[[[46,[-1]],[46,[-1]]],[],105],[[[46,[-1]],11],[],105],[[[46,[-1]],11],6,105],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],6,[],[[114,[113]]]],[[[115,[-1]],-2],6,116,[[114,[113]]]],[[117,-1],6,[[114,[113]]]],[[118,-1],6,[[114,[113]]]],[[-1,119,-2],6,[],[[114,[113]]]],[[[115,[-1]],119,-2],6,116,[[114,[113]]]],[[117,119,-1],6,[[114,[113]]]],[[118,119,-1],6,[[114,[113]]]],[[],120],[[[121,[-1]]],6,105],[120,6],[[[115,[-1]],3],4,[122,116]],[[117,3],4],[[118,3],4],[[123,3],4],[[123,3],4],[[124,3],4],[[125,3],4],[[[121,[-1]],3],4,[122,105]],[[120,3],4],[[[126,[-1]],3],4,[122,105]],[[127,3],4],[[128,3],4],[[129,3],4],[[-1,46],130,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-2,[46,[-1]],131,-3],[[8,[[121,[-1]],[126,[-1]]]]],105,[132,[133,[-1]]],[[134,[113]],132]],[[[121,[-1]]],6,105],[120,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[115,[-1]]],130,116],[117,130],[118,130],[[-1,[73,[-2]],[46,[-2]],131,-3],[[8,[[121,[-2]],[126,[-2]]]]],132,[],[[134,[113]],132]],[[-1,[73,[-2]],[46,[-2]],131,131,-3],[[8,[[121,[-2]],[126,[-2]]]]],132,[],[[134,[113]],132]],[[[115,[-1]],[73,[113]],[46,[113]],131,131,-2],[[8,[[121,[113]],[126,[113]]]]],116,[[134,[113]],132]],[[[115,[-1]],[73,[135]],[46,[135]],131,131,-2],[[8,[[121,[135]],[126,[135]]]]],116,[[134,[113]],132]],[[[115,[-1]],[73,[136]],[46,[136]],131,131,-2],[[8,[[121,[136]],[126,[136]]]]],116,[[134,[113]],132]],[[117,[73,[135]],[46,[135]],131,131,-1],[[8,[[121,[135]],[126,[135]]]]],[[134,[113]],132]],[[117,[73,[113]],[46,[113]],131,131,-1],[[8,[[121,[113]],[126,[113]]]]],[[134,[113]],132]],[[117,[73,[136]],[46,[136]],131,131,-1],[[8,[[121,[136]],[126,[136]]]]],[[134,[113]],132]],[[118,[73,[136]],[46,[136]],131,131,-1],[[8,[[121,[136]],[126,[136]]]]],[[134,[113]],132]],[[118,[73,[113]],[46,[113]],131,131,-1],[[8,[[121,[113]],[126,[113]]]]],[[134,[113]],132]],[[118,[73,[135]],[46,[135]],131,131,-1],[[8,[[121,[135]],[126,[135]]]]],[[134,[113]],132]],[[130,-1],[[115,[-1]]],116],[[130,10],117],[130,[[8,[118,123]]]],[[[73,[-1]]],[[121,[-1]]],105],[[],120],[[130,19],118],[[[115,[-1]]],-1,116],[117,10],[[-1,[73,[-2]],131],[[8,[120,128]]],[],[]],[[[115,[-1]],[73,[136]],131],[[8,[120,128]]],116],[[[115,[-1]],[73,[113]],131],[[8,[120,128]]],116],[[[115,[-1]],[73,[135]],131],[[8,[120,128]]],116],[[117,[73,[113]],131],[[8,[120,128]]]],[[117,[73,[136]],131],[[8,[120,128]]]],[[117,[73,[135]],131],[[8,[120,128]]]],[[118,[73,[113]],131],[[8,[120,128]]]],[[118,[73,[136]],131],[[8,[120,128]]]],[[118,[73,[135]],131],[[8,[120,128]]]],[[-1,[73,[-2]],131],[[8,[120,128]]],[],[]],[[[115,[-1]],[73,[136]],131],[[8,[120,128]]],116],[[[115,[-1]],[73,[113]],131],[[8,[120,128]]],116],[[[115,[-1]],[73,[135]],131],[[8,[120,128]]],116],[[117,[73,[113]],131],[[8,[120,128]]]],[[117,[73,[135]],131],[[8,[120,128]]]],[[117,[73,[136]],131],[[8,[120,128]]]],[[118,[73,[113]],131],[[8,[120,128]]]],[[118,[73,[135]],131],[[8,[120,128]]]],[[118,[73,[136]],131],[[8,[120,128]]]],[[-1,[73,[-2]],131],[[8,[120,128]]],[],[]],[[[115,[-1]],[73,[135]],131],[[8,[120,128]]],116],[[[115,[-1]],[73,[113]],131],[[8,[120,128]]],116],[[[115,[-1]],[73,[136]],131],[[8,[120,128]]],116],[[117,[73,[135]],131],[[8,[120,128]]]],[[117,[73,[113]],131],[[8,[120,128]]]],[[117,[73,[136]],131],[[8,[120,128]]]],[[118,[73,[136]],131],[[8,[120,128]]]],[[118,[73,[113]],131],[[8,[120,128]]]],[[118,[73,[135]],131],[[8,[120,128]]]],[125,11],[125,13],[[-1,10],124,[]],[[[115,[-1]],10],124,116],[[117,10],124],[[118,10],124],[[-1,10],[[15,[13]]],[]],[[-1,[73,[-2]]],[[8,[[46,[-2]],129]]],[],[]],[[[115,[-1]],[73,[136]]],[[8,[[46,[136]],129]]],116],[[[115,[-1]],[73,[135]]],[[8,[[46,[135]],129]]],116],[[[115,[-1]],[73,[113]]],[[8,[[46,[113]],129]]],116],[[117,[73,[136]]],[[8,[[46,[136]],129]]]],[[117,[73,[113]]],[[8,[[46,[113]],129]]]],[[117,[73,[135]]],[[8,[[46,[135]],129]]]],[[118,[73,[135]]],[[8,[[46,[135]],129]]]],[[118,[73,[136]]],[[8,[[46,[136]],129]]]],[[118,[73,[113]]],[[8,[[46,[113]],129]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[-1,[73,[-2]]],[[8,[[6,[[46,[-2]],[121,[-2]]]],127]]],[],[]],[[[115,[-1]],[73,[135]]],[[8,[[6,[[46,[135]],[121,[135]]]],127]]],116],[[[115,[-1]],[73,[113]]],[[8,[[6,[[46,[113]],[121,[113]]]],127]]],116],[[[115,[-1]],[73,[136]]],[[8,[[6,[[46,[136]],[121,[136]]]],127]]],116],[[117,[73,[113]]],[[8,[[6,[[46,[113]],[121,[113]]]],127]]]],[[117,[73,[136]]],[[8,[[6,[[46,[136]],[121,[136]]]],127]]]],[[117,[73,[135]]],[[8,[[6,[[46,[135]],[121,[135]]]],127]]]],[[118,[73,[135]]],[[8,[[6,[[46,[135]],[121,[135]]]],127]]]],[[118,[73,[113]]],[[8,[[6,[[46,[113]],[121,[113]]]],127]]]],[[118,[73,[136]]],[[8,[[6,[[46,[136]],[121,[136]]]],127]]]],[[-1,[73,[-2]],131],[[8,[[121,[-2]],128]]],[],[]],[[[115,[-1]],[73,[136]],131],[[8,[[121,[136]],128]]],116],[[[115,[-1]],[73,[113]],131],[[8,[[121,[113]],128]]],116],[[[115,[-1]],[73,[135]],131],[[8,[[121,[135]],128]]],116],[[117,[73,[135]],131],[[8,[[121,[135]],128]]]],[[117,[73,[136]],131],[[8,[[121,[136]],128]]]],[[117,[73,[113]],131],[[8,[[121,[113]],128]]]],[[118,[73,[136]],131],[[8,[[121,[136]],128]]]],[[118,[73,[135]],131],[[8,[[121,[135]],128]]]],[[118,[73,[113]],131],[[8,[[121,[113]],128]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[73,[-1]],11],[],105],[[[73,[-1]],11],6,105],[[[137,[136]]],[[137,[113]]]],[[[73,[-1]],12],[[15,[[73,[-1]]]]],105],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[113,113],[136,136],[135,135],[[[73,[-1]]],[[73,[-1]]],[94,105]],[[[137,[-1]]],[[137,[-1]]],[94,105]],[[[119,[-1]]],[[119,[-1]]],[94,105]],[[113,113],16],[[136,136],16],[[135,135],16],[[[73,[-1]],[73,[-1]]],16,[108,105]],[10,[[73,[-1]]],105],0,0,[[113,113],2],[[136,136],2],[[135,135],2],[[[73,[-1]],[73,[-1]]],2,[109,105]],[[[137,[-1]],[137,[-1]]],2,[109,105]],[[[119,[-1]],[119,[-1]]],2,[109,105]],[[113,3],4],[[136,3],4],[[135,3],4],[[[73,[-1]],3],4,105],[[[137,[-1]],3],4,105],[[[119,[-1]],3],4,105],[[110,3],4],[[110,3],4],[[[73,[-1]],12],[[15,[[73,[-1]]]]],105],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[19,19,19,19],[[73,[113]]]],[[19,19],[[73,[135]]]],[[19,19,19],[[73,[136]]]],[10,[[8,[[73,[-1]],110]]],105],[10,[[73,[-1]]],105],[[[73,[-1]],-2],6,[111,105],7],[[[137,[-1]],-2],6,[111,105],7],[[[119,[-1]],-2],6,[111,105],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[137,[-1]]],2,105],[[[119,[-1]]],2,105],[[[137,[-1]]],15,105],[[[119,[-1]]],15,105],[[[73,[113]]],19],[[[73,[-1]]],19,138],[[[73,[-1]]],19,105],[[[73,[-1]]],19,105],[[[73,[-1]],21],19,105],[[113,113],[[15,[16]]]],[[136,136],[[15,[16]]]],[[135,135],[[15,[16]]]],[[[73,[-1]],[73,[-1]]],[[15,[16]]],[112,105]],[[[73,[-1]],[73,[-1]]],[[137,[-1]]],105],[[[73,[-1]],[73,[-1]]],[[119,[-1]]],105],[[[73,[-1]]],11,105],0,0,[[[73,[-1]]],10,105],[[[73,[-1]],[73,[-1]]],[[15,[12]]],105],[[[73,[-1]],[73,[-1]]],[],105],[[[73,[-1]],11],[],105],[[[73,[-1]],11],6,105],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[139,13],[[],131],[[131,131],131],[[131,131],6],[[131,131],131],[[131,131],6],[131,11],[[131,131],131],[[131,131],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[140,140],[139,139],[131,131],[130,130],[19,19],[20,20],[21,21],[[131,131],16],[[19,19],16],[[20,20],16],[[21,21],16],[131,131],[[131,131],2],[[],130],[[131,131],131],[[],131],[21,11],[[140,140],2],[[131,131],2],[[19,19],2],[[20,20],2],[[21,21],2],[[131,-1],6,41],[139,131],[[140,3],4],[[139,3],4],[[131,3],4],[[131,3],4],[[131,3],4],[[131,3],4],[[131,3],4],[[130,3],4],[[19,3],4],[[20,3],4],[[21,3],4],[139,[[8,[46,140]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,[[15,[131]]]],[11,131],[11,131],[-1,131,41],[[131,-1],6,7],[[19,-1],6,7],[[20,-1],6,7],[[21,-1],6,7],[[130,12]],[[130,19]],[[130,19]],[[130,12]],[[131,131],6],[[131,131],131],[[131,131],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[131,2],[131,2],[139,2],[130,[[0,[141]]]],[130,[[0,[141]]]],[[],139],[[],130],[5,19],[5,20],[5,19],[5,20],[21,[[15,[21]]]],[131,131],[[131,131],[[15,[16]]]],[[19,19],[[15,[16]]]],[[20,20],[[15,[16]]]],[[21,21],[[15,[16]]]],[[131,131],6],[[131,131,2],6],[[139,13,131],6],[[139,131],6],[[139,46,131],6],[139,6],[[131,131],131],[[131,131],6],[[131,131],131],[21,11],[[131,131],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[131,131],131],[130,6],0,0,[5,-1,[]],[[5,-1],6,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[87,87],[[87,3],4],[-1,-1,[]],0,[-1,-2,[],[]],0,[[],87],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]]],"c":[221,222,223,224,225,226,227,228,229,230,231,232,318,1270],"p":[[4,"PrivilegeLevel",0],[15,"bool"],[3,"Formatter",2323],[6,"Result",2323],[15,"u16"],[15,"tuple"],[8,"Hasher",2324],[4,"Result",2325],[3,"TypeId",2326],[3,"VirtAddr",27],[15,"u64"],[15,"usize"],[3,"PhysAddr",27],[8,"Into",2327],[4,"Option",2328],[4,"Ordering",2329],[3,"VirtAddrNotValid",27],[3,"PhysAddrNotValid",27],[3,"PageTableIndex",2129],[3,"PageOffset",2129],[4,"PageTableLevel",2129],[8,"FnOnce",2330],[3,"PortGeneric",151],[3,"ReadOnlyAccess",151],[3,"WriteOnlyAccess",151],[3,"ReadWriteAccess",151],[8,"PortRead",2305],[8,"PortReadAccess",151],[8,"PortWrite",2305],[8,"PortWriteAccess",151],[3,"RdRand",199],[15,"u32"],[3,"SegmentSelector",1162],[3,"DescriptorTablePointer",1331],[3,"Pcid",239],[4,"InvPicdCommand",239],[15,"str"],[3,"Cr0Flags",283],[3,"Cr3Flags",283],[3,"Cr4Flags",283],[8,"IntoIterator",2331],[3,"Cr0",283],[3,"Cr2",283],[3,"Cr3",283],[3,"Cr4",283],[3,"PhysFrame",1703],[3,"Dr6Flags",520],[3,"Dr7Flags",520],[3,"Dr7Value",520],[4,"DebugAddressRegisterNumber",520],[4,"BreakpointCondition",520],[4,"BreakpointSize",520],[3,"Dr0",520],[3,"Dr1",520],[3,"Dr2",520],[3,"Dr3",520],[3,"Dr6",520],[3,"Dr7",520],[15,"u8"],[3,"EferFlags",787],[3,"CetFlags",787],[3,"Msr",787],[3,"Efer",787],[3,"FsBase",787],[3,"GsBase",787],[3,"KernelGsBase",787],[3,"Star",787],[3,"LStar",787],[3,"SFMask",787],[3,"UCet",787],[3,"SCet",787],[3,"RFlags",1092],[3,"Page",2003],[3,"MxCsr",1024],[3,"CS",1162],[3,"SS",1162],[3,"DS",1162],[3,"ES",1162],[3,"FS",1162],[3,"GS",1162],[3,"XCr0Flags",1259],[3,"XCr0",1259],[3,"GlobalDescriptorTable",1348],[4,"Descriptor",1348],[3,"DescriptorFlags",1348],[15,"slice"],[3,"TaskStateSegment",2309],[3,"PageFaultErrorCode",1451],[3,"InterruptStackFrame",1451],[3,"InterruptStackFrameValue",1451],[3,"Volatile",2332],[3,"InterruptDescriptorTable",1451],[3,"Entry",1451],[8,"Clone",2333],[3,"EntryOptions",1451],[3,"SelectorErrorCode",1451],[4,"DescriptorTable",1451],[4,"ExceptionVector",1451],[6,"PageFaultHandlerFunc",1451],[6,"DivergingHandlerFunc",1451],[6,"HandlerFunc",1451],[6,"HandlerFuncWithErrCode",1451],[6,"DivergingHandlerFuncWithErrCode",1451],[8,"RangeBounds",2334],[8,"PageSize",2003],[3,"PhysFrameRange",1703],[3,"PhysFrameRangeInclusive",1703],[8,"Ord",2329],[8,"PartialEq",2329],[3,"AddressNotAligned",2003],[8,"Hash",2324],[8,"PartialOrd",2329],[4,"Size4KiB",2003],[8,"FrameDeallocator",1680],[3,"MappedPageTable",1763],[8,"PageTableFrameMapping",1763],[3,"OffsetPageTable",1763],[3,"RecursivePageTable",1763],[3,"PageRangeInclusive",2003],[3,"MapperFlushAll",1763],[3,"MapperFlush",1763],[8,"Debug",2323],[4,"InvalidPageTable",1763],[4,"TranslateResult",1763],[4,"MappedFrame",1763],[4,"MapToError",1763],[4,"UnmapError",1763],[4,"FlagUpdateError",1763],[4,"TranslateError",1763],[3,"PageTable",2129],[3,"PageTableFlags",2129],[8,"Sized",2335],[8,"Mapper",1763],[8,"FrameAllocator",1680],[4,"Size1GiB",2003],[4,"Size2MiB",2003],[3,"PageRange",2003],[8,"NotGiantPageSize",2003],[3,"PageTableEntry",2129],[4,"FrameError",2129],[8,"Iterator",2336],[8,"DebugAddressRegister",520],[8,"Segment64",1162],[8,"Segment",1162],[8,"CleanUp",1763],[8,"Translate",1763],[13,"Mapped",2000]],"b":[[31,"impl-Add%3Cu64%3E-for-VirtAddr"],[32,"impl-Add%3Cusize%3E-for-VirtAddr"],[33,"impl-Add%3Cu64%3E-for-PhysAddr"],[34,"impl-Add%3Cusize%3E-for-PhysAddr"],[35,"impl-AddAssign%3Cu64%3E-for-VirtAddr"],[36,"impl-AddAssign%3Cusize%3E-for-VirtAddr"],[37,"impl-AddAssign%3Cusize%3E-for-PhysAddr"],[38,"impl-AddAssign%3Cu64%3E-for-PhysAddr"],[66,"impl-Octal-for-VirtAddr"],[67,"impl-Debug-for-VirtAddr"],[68,"impl-Pointer-for-VirtAddr"],[69,"impl-LowerHex-for-VirtAddr"],[70,"impl-Binary-for-VirtAddr"],[71,"impl-UpperHex-for-VirtAddr"],[72,"impl-LowerHex-for-PhysAddr"],[73,"impl-Octal-for-PhysAddr"],[74,"impl-UpperHex-for-PhysAddr"],[75,"impl-Binary-for-PhysAddr"],[76,"impl-Pointer-for-PhysAddr"],[77,"impl-Debug-for-PhysAddr"],[109,"impl-Sub%3Cusize%3E-for-VirtAddr"],[110,"impl-Sub-for-VirtAddr"],[111,"impl-Sub%3Cu64%3E-for-VirtAddr"],[112,"impl-Sub%3Cu64%3E-for-PhysAddr"],[113,"impl-Sub%3Cusize%3E-for-PhysAddr"],[114,"impl-Sub-for-PhysAddr"],[115,"impl-SubAssign%3Cu64%3E-for-VirtAddr"],[116,"impl-SubAssign%3Cusize%3E-for-VirtAddr"],[117,"impl-SubAssign%3Cusize%3E-for-PhysAddr"],[118,"impl-SubAssign%3Cu64%3E-for-PhysAddr"],[393,"impl-LowerHex-for-Cr0Flags"],[394,"impl-UpperHex-for-Cr0Flags"],[395,"impl-Debug-for-Cr0Flags"],[396,"impl-Octal-for-Cr0Flags"],[397,"impl-Binary-for-Cr0Flags"],[400,"impl-Binary-for-Cr3Flags"],[401,"impl-LowerHex-for-Cr3Flags"],[402,"impl-Octal-for-Cr3Flags"],[403,"impl-Debug-for-Cr3Flags"],[404,"impl-UpperHex-for-Cr3Flags"],[406,"impl-LowerHex-for-Cr4Flags"],[407,"impl-Debug-for-Cr4Flags"],[408,"impl-Binary-for-Cr4Flags"],[409,"impl-Octal-for-Cr4Flags"],[410,"impl-UpperHex-for-Cr4Flags"],[640,"impl-Debug-for-Dr6Flags"],[641,"impl-Octal-for-Dr6Flags"],[642,"impl-UpperHex-for-Dr6Flags"],[643,"impl-LowerHex-for-Dr6Flags"],[644,"impl-Binary-for-Dr6Flags"],[645,"impl-Debug-for-Dr7Flags"],[646,"impl-UpperHex-for-Dr7Flags"],[647,"impl-LowerHex-for-Dr7Flags"],[648,"impl-Binary-for-Dr7Flags"],[649,"impl-Octal-for-Dr7Flags"],[890,"impl-Binary-for-EferFlags"],[891,"impl-LowerHex-for-EferFlags"],[892,"impl-Debug-for-EferFlags"],[893,"impl-UpperHex-for-EferFlags"],[894,"impl-Octal-for-EferFlags"],[895,"impl-Binary-for-CetFlags"],[896,"impl-LowerHex-for-CetFlags"],[897,"impl-UpperHex-for-CetFlags"],[898,"impl-Octal-for-CetFlags"],[899,"impl-Debug-for-CetFlags"],[1061,"impl-Octal-for-MxCsr"],[1062,"impl-Debug-for-MxCsr"],[1063,"impl-Binary-for-MxCsr"],[1064,"impl-LowerHex-for-MxCsr"],[1065,"impl-UpperHex-for-MxCsr"],[1129,"impl-Binary-for-RFlags"],[1130,"impl-LowerHex-for-RFlags"],[1131,"impl-Debug-for-RFlags"],[1132,"impl-Octal-for-RFlags"],[1133,"impl-UpperHex-for-RFlags"],[1293,"impl-UpperHex-for-XCr0Flags"],[1294,"impl-LowerHex-for-XCr0Flags"],[1295,"impl-Binary-for-XCr0Flags"],[1296,"impl-Octal-for-XCr0Flags"],[1297,"impl-Debug-for-XCr0Flags"],[1403,"impl-Octal-for-DescriptorFlags"],[1404,"impl-Debug-for-DescriptorFlags"],[1405,"impl-Binary-for-DescriptorFlags"],[1406,"impl-LowerHex-for-DescriptorFlags"],[1407,"impl-UpperHex-for-DescriptorFlags"],[1566,"impl-Binary-for-PageFaultErrorCode"],[1567,"impl-Debug-for-PageFaultErrorCode"],[1568,"impl-LowerHex-for-PageFaultErrorCode"],[1569,"impl-UpperHex-for-PageFaultErrorCode"],[1570,"impl-Octal-for-PageFaultErrorCode"],[1631,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame,+PageFaultErrorCode)%3E"],[1632,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame)+-%3E+!%3E"],[1633,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame)%3E"],[1634,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame,+u64)%3E"],[1635,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame,+u64)+-%3E+!%3E"],[1751,"impl-Sub-for-PhysFrame%3CS%3E"],[1752,"impl-Sub%3Cu64%3E-for-PhysFrame%3CS%3E"],[1837,"impl-Debug-for-InvalidPageTable"],[1838,"impl-Display-for-InvalidPageTable"],[1880,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1881,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1882,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1883,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[1884,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[1885,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[1886,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[1887,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[1888,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[1898,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1899,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1900,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1901,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[1902,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[1903,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[1904,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[1905,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[1906,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[1908,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1909,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1910,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1911,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[1912,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[1913,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[1914,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[1915,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[1916,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[1918,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1919,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1920,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1921,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[1922,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[1923,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[1924,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[1925,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[1926,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[1935,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1936,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1937,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1938,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[1939,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[1940,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[1941,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[1942,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[1943,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[1981,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1982,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1983,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1984,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[1985,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[1986,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[1987,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[1988,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[1989,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[1991,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1992,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1993,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[1994,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[1995,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[1996,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[1997,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[1998,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[1999,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2058,"impl-Display-for-AddressNotAligned"],[2059,"impl-Debug-for-AddressNotAligned"],[2105,"impl-Sub-for-Page%3CS%3E"],[2106,"impl-Sub%3Cu64%3E-for-Page%3CS%3E"],[2215,"impl-UpperHex-for-PageTableFlags"],[2216,"impl-Octal-for-PageTableFlags"],[2217,"impl-LowerHex-for-PageTableFlags"],[2218,"impl-Binary-for-PageTableFlags"],[2219,"impl-Debug-for-PageTableFlags"],[2240,"impl-Index%3Cusize%3E-for-PageTable"],[2241,"impl-Index%3CPageTableIndex%3E-for-PageTable"],[2242,"impl-IndexMut%3CPageTableIndex%3E-for-PageTable"],[2243,"impl-IndexMut%3Cusize%3E-for-PageTable"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
